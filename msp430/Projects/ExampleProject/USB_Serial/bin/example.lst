
../bin/example.elf:     file format elf32-msp430

SYMBOL TABLE:
0000ffe6 l    d  __interrupt_vector_52	00000000 __interrupt_vector_52
0000fffa l    d  __interrupt_vector_62	00000000 __interrupt_vector_62
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008220 l    d  .text	00000000 .text
00002400 l    d  .data	00000000 .data
00002404 l    d  .bss	00000000 .bss
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line.text.udivmodhi4	00000000 .debug_line.text.udivmodhi4
00000000 l    d  .debug_line.text.__divhi3	00000000 .debug_line.text.__divhi3
00000000 l    d  .debug_line.text.__udivhi3	00000000 .debug_line.text.__udivhi3
00000000 l    d  .debug_line.text.udivmodsi4	00000000 .debug_line.text.udivmodsi4
00000000 l    d  .debug_line.text.__divsi3	00000000 .debug_line.text.__divsi3
00000000 l    d  .debug_line.text.__udivsi3	00000000 .debug_line.text.__udivsi3
00000000 l    d  .debug_line.text.memset	00000000 .debug_line.text.memset
00000000 l    d  .debug_line.text.memmove	00000000 .debug_line.text.memmove
00000000 l    df *ABS*	00000000 UsbIsr.c
00000000 l    df *ABS*	00000000 usbserial.c
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00008276 l       .text	00000000 _msp430_run_array
00008284 l       .text	00000000 _msp430_run_done
00000000 l       .debug_line	00000000 L0
00008224 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2cc l       .text	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2c8 l       .text	00000000 L0
0000b2cc l       .text	00000000 L0
00000000 l       .debug_aranges	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2c8 l       .text	00000000 L0
0000b2cc l       .text	00000000 L0
00000000 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 descriptors.c
00000000 l    df *ABS*	00000000 usb.c
0000241b l     O .bss	00000001 bRemoteWakeup
00002425 l     O .bss	00000001 bConfigurationNumber
00002424 l     O .bss	00000001 bInterfaceNumber
0000241e l     O .bss	00000001 bHostAskMoreDataThanAvailable
00002422 l     O .bss	00000002 pbIEP0Buffer
00002420 l     O .bss	00000002 pbOEP0Buffer
00000000 l    df *ABS*	00000000 gpio.c
000081f2 l     O .rodata	0000001c GPIO_PORT_TO_BASE
00000000 l    df *ABS*	00000000 crtstuff.c
00008218 l     O .rodata	00000000 __CTOR_LIST__
0000821c l     O .rodata	00000000 __DTOR_LIST__
00008210 l     O .rodata	00000000 __EH_FRAME_BEGIN__
00002400 l     O .data	00000000 __JCR_LIST__
0000b2d2 l     O .text	00000000 __TMC_LIST__
00008286 l       .text	00000000 deregister_tm_clones
000082a4 l       .text	00000000 register_tm_clones
000082ce l       .text	00000000 __do_global_dtors_aux
00002404 l     O .bss	00000001 completed.2761
00002406 l     O .bss	00000002 dtor_idx.2763
0000831a l       .text	00000000 call___do_global_dtors_aux
0000831c l       .text	00000000 frame_dummy
00002408 l     O .bss	0000000e object.2776
0000834a l       .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 crtstuff.c
0000821a l     O .rodata	00000000 __CTOR_END__
00008210 l     O .rodata	00000000 __FRAME_END__
00002400 l     O .data	00000000 __JCR_END__
0000b296 l       .text	00000000 __do_global_ctors_aux
0000b2b4 l       .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000312 l       .debug_line	00000000 L0
00008232 l       .text	00000000 L0
000000d0 l       .debug_aranges	00000000 L0
00008224 l       .text	00000000 L0
00008232 l       .text	00000000 L0
00000653 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_movedata.o
00000396 l       .debug_line	00000000 L0
00008246 l       .text	00000000 L0
000000f0 l       .debug_aranges	00000000 L0
00008232 l       .text	00000000 L0
00008246 l       .text	00000000 L0
00000725 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_main.o
00000426 l       .debug_line	00000000 L0
00008250 l       .text	00000000 L0
00000110 l       .debug_aranges	00000000 L0
00008246 l       .text	00000000 L0
00008250 l       .text	00000000 L0
000007f7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 hal.c
00002416 l     O .bss	00000004 CLOCKFREQ
00000000 l    df *ABS*	00000000 usbConstructs.c
00000000 l    df *ABS*	00000000 usbEventHandling.c
00000000 l    df *ABS*	00000000 usbdma.c
00000000 l    df *ABS*	00000000 UsbCdc.c
00002436 l     O .bss	0000000a CdcWriteCtrl
00002426 l     O .bss	00000010 CdcReadCtrl
00002440 l     O .bss	00000008 CdcControl
00000000 l    df *ABS*	00000000 tlv.c
00000000 l    df *ABS*	00000000 wdt_a.c
00000000 l    df *ABS*	00000000 dma.c
00000000 l    df *ABS*	00000000 sfr.c
00000000 l    df *ABS*	00000000 ucs.c
0000a400 l       .text	0000011a privateUCSSourceClockFromDCO
0000244c l     O .bss	00000004 privateXT1ClockFrequency
00002448 l     O .bss	00000004 privateXT2ClockFrequency
0000a50e l       .text	000000f4 privateUCSComputeCLKFrequency
00000000 l    df *ABS*	00000000 pmm.c
00000000 l    df *ABS*	00000000 lib2divHI.c
0000af9c l       .text	00000000 L0
0000afe4 l       .text	00000000 L0
0000afe6 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 lib2divSI.c
0000b068 l       .text	00000000 L0
0000b0de l       .text	00000000 L0
0000b0e6 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib2hw_mul.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memset.c
0000b258 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 memmove.c
0000b29a l       .text	00000000 L0
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crtn.o
000005bc l       .debug_line	00000000 L0
0000b2c8 l       .text	00000000 L0
0000b2d2 l       .text	00000000 L0
0000b2be l       .text	00000000 L0
0000b2c8 l       .text	00000000 L0
0000b2d0 l       .text	00000000 L0
0000b2d2 l       .text	00000000 L0
00000150 l       .debug_aranges	00000000 L0
0000b2be l       .text	00000000 L0
0000b2c8 l       .text	00000000 L0
0000b2d0 l       .text	00000000 L0
0000b2d2 l       .text	00000000 L0
000009c7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 system_pre_init.c
00000000 l    df *ABS*	00000000 
00002180 l       *ABS*	00000000 pbXBufferAddressEp86
00001ec0 l       *ABS*	00000000 pbYBufferAddressEp83
00002000 l       *ABS*	00000000 pbXBufferAddressEp5
00002080 l       *ABS*	00000000 pbXBufferAddressEp85
00001c40 l       *ABS*	00000000 pbYBufferAddressEp1
00001d00 l       *ABS*	00000000 pbXBufferAddressEp2
000021c0 l       *ABS*	00000000 pbYBufferAddressEp86
00001d80 l       *ABS*	00000000 pbXBufferAddressEp82
000022c0 l       *ABS*	00000000 pbYBufferAddressEp87
00002040 l       *ABS*	00000000 pbYBufferAddressEp5
00002280 l       *ABS*	00000000 pbXBufferAddressEp87
00001dc0 l       *ABS*	00000000 pbYBufferAddressEp82
00002140 l       *ABS*	00000000 pbYBufferAddressEp6
00001d40 l       *ABS*	00000000 pbYBufferAddressEp2
00008220 l       .text	00000000 _start
00002200 l       *ABS*	00000000 pbXBufferAddressEp7
00001c00 l       *ABS*	00000000 pbXBufferAddressEp1
00002100 l       *ABS*	00000000 pbXBufferAddressEp6
000020c0 l       *ABS*	00000000 pbYBufferAddressEp85
00001fc0 l       *ABS*	00000000 pbYBufferAddressEp84
00002240 l       *ABS*	00000000 pbYBufferAddressEp7
00001c80 l       *ABS*	00000000 pbXBufferAddressEp81
00001f40 l       *ABS*	00000000 pbYBufferAddressEp4
00001f80 l       *ABS*	00000000 pbXBufferAddressEp84
00001cc0 l       *ABS*	00000000 pbYBufferAddressEp81
00001f00 l       *ABS*	00000000 pbXBufferAddressEp4
00001e00 l       *ABS*	00000000 pbXBufferAddressEp3
00001e40 l       *ABS*	00000000 pbYBufferAddressEp3
00001e80 l       *ABS*	00000000 pbXBufferAddressEp83
00009082 g       .text	0000004c usbSetEndpointFeature
00008452 g       .text	00000038 TILEAF_BoardInit
0000ac52 g       .text	00000016 PMM_enableSvmHInterrupt
00002378 g       *ABS*	00000000 abIEP0Buffer
0000b128 g       .text	00000000 .hidden __mspabi_slll_9
0000a336 g       .text	0000000c DMA_enableTransfers
0000b118 g       .text	00000000 .hidden __mspabi_slll_13
0000a838 g       .text	00000006 UCS_turnOffXT1
0000aba6 g       .text	00000016 PMM_enableSvsHSvmH
00008d12 g       .text	00000030 USB_suspend
0000ab90 g       .text	00000016 PMM_disableSvsLSvmL
0000b172 g       .text	00000000 .hidden __mspabi_srli_9
0000a3e4 g       .text	0000000e SFR_setNMIEdge
00002388 g       *ABS*	00000000 tOutputEndPointDescriptorBlock
0000a382 g       .text	0000000c DMA_getNMIAbortStatus
0000b1c2 g       .text	00000000 .hidden __mspabi_srll_10
00008d56 g       .text	0000000a usbStallOEP0
0000adaa g       .text	000000d0 PMM_setVCoreUp
0000906a g       .text	0000001a usbSetDeviceFeature
0000a16a g       .text	0000002a GPIO_setAsInputPinWithPullUpResistor
00008c7c g       .text	000000a2 USB_getConnectionState
0000a1b8 g       .text	0000001a GPIO_enableInterrupt
00008c02 g       .text	00000022 USB_disconnect
0000a306 g       .text	00000030 DMA_setDstAddress
00002450 g     O .bss	00000008 abUsbRequestIncomingData
0000a3c8 g       .text	00000006 SFR_getInterruptStatus
0000b16e g       .text	00000000 .hidden __mspabi_srli_10
0000a794 g       .text	00000050 UCS_turnOnHFXT1WithTimeout
0000b0f2 g       .text	00000000 .hidden __mspabi_slli_9
00008f92 g       .text	0000007a usbGetEndpointStatus
0000b15a g       .text	00000000 .hidden __mspabi_srli_15
00008858 g       .text	00000036 OEP0InterruptHandler
00008414 g       .text	0000003e USBHAL_initClocks
0000b256 g       .text	00000044 memmove
0000a060 g       .text	00000014 WDT_A_initIntervalTimer
0000a1d2 g       .text	0000001a GPIO_disableInterrupt
0000a3f2 g       .text	0000000e SFR_setResetNMIPinFunction
000086f4 g       .text	00000004 USB_handleResetEvent
0000a222 g       .text	0000002c GPIO_selectInterruptEdge
0000aa4e g       .text	00000006 UCS_turnOnSMCLK
00008e5a g       .text	00000046 usbClearEndpointFeature
0000942a g       .text	00000024 memcpyV
0000b186 g       .text	00000000 .hidden __mspabi_srli_4
0000b0ec g       .text	00000000 .hidden __mspabi_slli_12
0000a906 g       .text	00000108 UCS_initFLL
0000a2c6 g       .text	0000000a DMA_setTransferSize
0000af5c g       .text	00000040 .hidden udivmodhi4
00008dea g       .text	00000052 usbReceiveNextPacketOnOEP0
00008386 g       .text	0000008e USBHAL_initPorts
00009e8a g       .text	00000064 TLV_getInfo
0000a0f2 g       .text	0000001a GPIO_setOutputHighOnPin
000094f6 g       .text	00000030 CdcResetData
00008704 g       .text	00000008 USBCDC_handleDataReceived
0000b17a g       .text	00000000 .hidden __mspabi_srli_7
0000b1d4 g       .text	00000000 .hidden __mspabi_srll_7
0000b1ec g       .text	00000000 .hidden __mspabi_srll_3
00008684 g       .text	00000052 USBCDC_receiveDataInBuffer
000089d0 g       .text	00000006 USB_getVersion
0000a8fe g       .text	00000008 UCS_turnOffXT2
0000ab64 g       .text	00000016 PMM_disableSvmH
0000a036 g       .text	00000016 WDT_A_resetTimer
0000b2d2 g     O .text	00000000 .hidden __TMC_END__
0000b1b0 g       .text	00000000 .hidden __mspabi_srll_13
00002458 g     O .bss	00000008 abUsbRequestReturnData
0000821e g     O .rodata	00000000 .hidden __DTOR_END__
0000241a g     O .bss	00000001 bCDCDataReceived_event
0000a074 g       .text	0000001e GPIO_setAsOutputPin
00008214 g       .rodata	00000000 __fini_array_end
0000aaca g       .text	00000016 PMM_enableSvsL
0000b166 g       .text	00000000 .hidden __mspabi_srli_12
0000a378 g       .text	0000000a DMA_clearInterrupt
00009a24 g       .text	00000132 CdcToBufferFromHost
00008220 g     F .text	00000004 __crt0_start
0000a3bc g       .text	00000006 SFR_enableInterrupt
00002370 g       *ABS*	00000000 abOEP0Buffer
0000b120 g       .text	00000000 .hidden __mspabi_slll_11
0000b110 g       .text	00000000 .hidden __mspabi_slll_15
00009028 g       .text	0000002c usbSetConfiguration
0000b0e8 g       .text	00000000 .hidden __mspabi_slli_14
0000ac26 g       .text	00000016 PMM_enableSvsHReset
0000ac7e g       .text	00000014 PMM_clearPMMIFGS
0000b0fc g       .text	00000000 .hidden __mspabi_slli_4
00008224 g     F .text	0000000e __crt0_init_bss
000093da g       .text	00000038 USB_setup
0000008a g       *ABS*	00000000 __bsssize
0000b144 g       .text	00000000 .hidden __mspabi_slll_2
000086d8 g       .text	00000014 USB_handleVbusOnEvent
0000b210 g     F .text	00000014 .hidden __mulhi2_f5
00008710 g       .text	00000004 USBCDC_handleReceiveCompleted
0000ab38 g       .text	00000016 PMM_disableSvsH
00009006 g       .text	00000024 usbSetAddress
00008f2c g       .text	0000001e usbGetInterface
00008d60 g       .text	00000072 usbSendNextPacketOnIEP0
00008246 g     F .text	0000000a __crt0_call_init_then_main
0000918a g       .text	0000001a usbDisableOutEndpointInterrupt
00009bbc g       .text	00000082 USBCDC_rejectData
0000b10a g       .text	00000000 .hidden __mspabi_slli
0000ab7a g       .text	00000016 PMM_enableSvsLSvmL
0000a342 g       .text	0000000c DMA_disableTransfers
0000abd2 g       .text	00000016 PMM_enableSvsLReset
00008eae g       .text	00000016 usbGetDeviceDescriptor
0000883c g       .text	0000001e IEP0InterruptHandler
000091aa g       .text	000000dc USB_determineFreq
0000b1e0 g       .text	00000000 .hidden __mspabi_srll_5
0000aa72 g       .text	0000001e UCS_getSMCLK
0000af56 g       .text	00000006 PMM_getInterruptStatus
0000b19e g       .text	00000000 .hidden __mspabi_srli
0000acd2 g       .text	00000020 PMM_disableSvsLInLPMFastWake
0000a5f4 g       .text	00000012 UCS_setExternalClockSource
00002402 g     O .data	00000002 VERSION
000094b0 g       .text	00000046 USB_initMemcpy
0000a34e g       .text	0000000a DMA_startTransfer
0000ab4e g       .text	00000016 PMM_enableSvmH
00009748 g       .text	00000044 USBCDC_abortSend
0000a712 g       .text	0000003e UCS_bypassXT1
0000a126 g       .text	0000001a GPIO_toggleOutputOnPin
0000b1bc g       .text	00000000 .hidden __mspabi_srll_11
0000a8d4 g       .text	0000002c UCS_bypassXT2WithTimeout
000090e8 g       .text	00000086 usbDecodeAndProcessUsbRequest
0000b138 g       .text	00000000 .hidden __mspabi_slll_5
00009c3c g       .text	000000b2 USBCDC_getInterfaceStatus
0000a606 g       .text	000000a8 UCS_initClockSignal
0000b0ee g       .text	00000000 .hidden __mspabi_slli_11
0000871c g       .text	00000048 SetupPacketInterruptHandler
0000ad48 g       .text	00000016 PMM_disableSvsHInLPMNormPerf
0000b0fe g       .text	00000000 .hidden __mspabi_slli_3
00002460 g     O .bss	00000022 abramSerialStringDescriptor
0000b224 g     F .text	00000020 .hidden __mulsi2_f5
0000b182 g       .text	00000000 .hidden __mspabi_srli_5
00009eec g       .text	0000004c TLV_getMemory
00008c44 g       .text	0000003a USB_getConnectionInformation
00002482 g     O .bss	00000002 wUsbEventMask
0000a38e g       .text	0000000a DMA_clearNMIAbort
00000000  w      *UND*	00000000 __deregister_frame_info
0000a74c g       .text	0000004c UCS_turnOnLFXT1WithTimeout
0000248e g       .MP430.attributes	00000000 end
00008f74 g       .text	0000001e usbGetInterfaceStatus
00008ab0 g       .text	00000138 USB_reset
00008eda g       .text	0000005a usbGetStringDescriptor
0000817e g     O .rodata	00000043 abromConfigurationDescriptorGroup
0000a24c g       .text	0000002a GPIO_setDriveStrength
0000a0b6 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionOutputPin
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000a7e2 g       .text	0000005a UCS_bypassXT1WithTimeout
0000b100 g       .text	00000000 .hidden __mspabi_slli_2
00009faa g       .text	00000066 TLV_getInterrupt
0000a6a2 g       .text	0000003a UCS_turnOnLFXT1
00009052 g       .text	0000001a usbClearDeviceFeature
0000a362 g       .text	0000000a DMA_disableInterrupt
0000b1da g       .text	00000000 .hidden __mspabi_srll_6
0000aa30 g       .text	00000006 UCS_enableClockRequest
000081c1 g     O .rodata	00000012 abromDeviceDescriptor
00008d42 g       .text	0000000e usbStallEndpoint0
0000afe6 g       .text	00000082 .hidden udivmodsi4
0000a00c g       .text	00000018 WDT_A_hold
0000a3b6 g       .text	00000006 DMA_disableNMIAbort
00002484 g     O .bss	00000002 wBytesRemainingOnIEP0
0000abfe g       .text	00000014 PMM_enableSvmLInterrupt
0000a39e g       .text	00000006 DMA_enableTransferDuringReadModifyWrite
0000a83e g       .text	00000036 UCS_turnOnXT2
0000b134 g       .text	00000000 .hidden __mspabi_slll_6
0000ad94 g       .text	00000016 PMM_optimizeSvsHInLPMFullPerf
00008000 g     O .rodata	000000e4 tUsbRequestList
0000aa48 g       .text	00000006 UCS_turnOffSMCLK
0000aae0 g       .text	00000016 PMM_disableSvsL
0000b13c g       .text	00000000 .hidden __mspabi_slll_4
000095b2 g       .text	0000019c CdcToHostFromBuffer
0000b12c g       .text	00000000 .hidden __mspabi_slll_8
00008268 g     F .text	00000000 _msp430_run_fini_array
00002486 g     O .bss	00000002 wBytesRemainingOnOEP0
0000b192 g       .text	00000000 .hidden __mspabi_srli_1
000086fc g       .text	00000004 USB_handleResumeEvent
0000b1aa g       .text	00000000 .hidden __mspabi_srll_14
0000b0f8 g       .text	00000000 .hidden __mspabi_slli_6
00009278 g       .text	00000084 USB_init
00008d50 g       .text	00000006 usbClearOEP0ByteCount
000087d6 g       .text	0000006a PWRVBUSonHandler
0000a3a4 g       .text	00000006 DMA_enableRoundRobinPriority
000090da g       .text	0000000e usbInvalidRequest
0000b15e g       .text	00000000 .hidden __mspabi_srli_14
0000ab0c g       .text	00000016 PMM_disableSvmL
00000004 g       *ABS*	00000000 __romdatacopysize
0000aa42 g       .text	00000006 UCS_clearFaultFlag
00009b6a g       .text	00000052 USBCDC_abortReceive
0000848a g       .text	0000004e UNMI_ISR
0000a3ce g       .text	00000006 SFR_clearInterrupt
000023c8 g       *ABS*	00000000 tInputEndPointDescriptorBlock
00000920 g       *ABS*	00000000 tEndPoint0DescriptorBlock
0000a3aa g       .text	00000006 DMA_disableRoundRobinPriority
0000870c g       .text	00000004 USBCDC_handleSendCompleted
0000b114 g       .text	00000000 .hidden __mspabi_slll_14
00009f34 g       .text	0000007c TLV_getPeripheral
00009b4e g       .text	0000001c CdcIsReceiveInProgress
0000b16a g       .text	00000000 .hidden __mspabi_srli_11
0000b130 g       .text	00000000 .hidden __mspabi_slll_7
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008214 g       .rodata	00000000 __fini_array_start
0000a1ec g       .text	0000001c GPIO_getInterruptStatus
0000944c g       .text	00000064 memcpyDMA
000085f6 g       .text	00000094 USBCDC_sendDataInBackground
0000a3d4 g       .text	00000010 SFR_setResetPinPullResistor
0000888c g       .text	00000162 iUsbInterruptHandler
0000af98 g       .text	0000004c .hidden __mspabi_divi
000097fc g       .text	0000023a USBCDC_receiveData
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000a2da g       .text	0000002c DMA_setSrcAddress
000080f4 g     O .rodata	0000008a abromStringDescriptor
0000b2b6 g       .text	00000000 __msp430_init
0000ad7e g       .text	00000016 PMM_optimizeSvsLInLPMFastWake
0000b244 g       .text	00000014 memset
0000b11c g       .text	00000000 .hidden __mspabi_slll_12
0000834c g       .text	0000003c main
0000a6da g       .text	0000003a UCS_turnOnHFXT1
0000a04c g       .text	00000014 WDT_A_initWatchdogTimer
0000a0d4 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionInputPin
0000b064 g       .text	0000007a .hidden __mspabi_divli
000090c8 g       .text	00000012 usbSetInterface
0000b1e6 g       .text	00000000 .hidden __mspabi_srll_4
00008214 g       .rodata	00000000 __init_array_end
0000b18e g       .text	00000000 .hidden __mspabi_srli_2
0000aa90 g       .text	00000016 UCS_getMCLK
0000b102 g       .text	00000000 .hidden __mspabi_slli_1
0000a9f6 g       .text	0000003c UCS_initFLLSettle
00009e08 g       .text	00000082 Handler_SetLineCoding
0000afde g       .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
00008ec4 g       .text	00000016 usbGetConfigurationDescriptor
0000a36c g       .text	0000000c DMA_getInterruptStatus
0000a208 g       .text	0000001a GPIO_clearInterrupt
0000b140 g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000b2d2 g       .text	00000000 __msp430_fini_end
000091a4 g       .text	00000006 usbRestoreOutEndpointInterrupt
00002488 g     O .bss	00000001 bStatusAction
000086ec g       .text	00000008 USB_handleVbusOffEvent
0000b1b6 g       .text	00000000 .hidden __mspabi_srll_12
00008be8 g       .text	0000001a USB_connect
0000b0fa g       .text	00000000 .hidden __mspabi_slli_5
00008f4a g       .text	0000002a usbGetDeviceStatus
0000b2d2 g       *ABS*	00000000 __romdatastart
00008dc8 g       .text	00000024 usbSendDataPacketOnEP0
0000248a g     O .bss	00000002 USB_RX_memcpy
0000b0ea g       .text	00000000 .hidden __mspabi_slli_13
00009ee6 g       .text	00000006 TLV_getDeviceType
0000a274 g       .text	00000054 DMA_init
0000241c g     O .bss	00000001 bEnumerationStatus
00008510 g       .text	0000002e SendBuffer
00008250 g     F .text	00000000 _msp430_run_init_array
0000853e g       .text	0000002e ReceiveBuffer
0000b17e g       .text	00000000 .hidden __mspabi_srli_6
0000aaf6 g       .text	00000016 PMM_enableSvmL
0000a3b0 g       .text	00000006 DMA_enableNMIAbort
00008214 g       .rodata	00000000 __preinit_array_end
00008e38 g       .text	00000014 usbReceiveDataPacketOnEP0
0000b0f0 g       .text	00000000 .hidden __mspabi_slli_10
00008aa2 g       .text	00000008 USB_setEnabledEvents
0000ac68 g       .text	00000016 PMM_disableSvmHInterrupt
0000af0c g       .text	0000004e PMM_setVCore
0000b18a g       .text	00000000 .hidden __mspabi_srli_3
000092f8 g       .text	000000ec USB_enable
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
0000ae78 g       .text	00000094 PMM_setVCoreDown
00002404 g       .bss	00000000 __bssstart
00002380 g       *ABS*	00000000 tSetupPacket
0000ab22 g       .text	00000016 PMM_enableSvsH
0000aa54 g       .text	0000001e UCS_getACLK
0000241d g     O .bss	00000001 bFunctionSuspended
0000b154 g       .text	00000000 .hidden __mspabi_slll
0000acf2 g       .text	00000016 PMM_disableSvsLInLPMSlowWake
0000acb2 g       .text	00000020 PMM_enableSvsLInLPMSlowWake
00008e9a g       .text	00000014 usbGetConfiguration
00003400 g       .MP430.attributes	00000000 __stack
0000b1c8 g       .text	00000000 .hidden __mspabi_srll_9
0000a88a g       .text	0000004c UCS_turnOnXT2WithTimeout
0000a140 g       .text	0000002a GPIO_setAsInputPinWithPullDownResistor
00008718 g       .text	00000004 USBCDC_handleSetControlLineState
00009526 g       .text	00000092 USBCDC_sendData
00002404 g       .data	00000000 _edata
0000ac3c g       .text	00000016 PMM_disableSvsHReset
0000b2c8 g       .text	00000000 __msp430_init_end
00008760 g       .text	0000007a PWRVBUSoffHandler
0000b208 g       .text	00000000 .hidden __mspabi_srll
0000ad5e g       .text	00000020 PMM_disableSvsHInLPMFullPerf
00008714 g       .text	00000004 USBCDC_handleSetLineCoding
000084d2 g       .text	0000003e checkUSB
0000abbc g       .text	00000016 PMM_disableSvsHSvmH
00009cec g       .text	00000082 USBCDC_getBytesInUSBBuffer
00000000  w      *ABS*	00000000 __high_bssstart
0000b0f4 g       .text	00000000 .hidden __mspabi_slli_8
0000b1a4 g       .text	00000000 .hidden __mspabi_srll_15
00009412 g       .text	00000018 USB_resume
0000a358 g       .text	0000000a DMA_enableInterrupt
0000a194 g       .text	00000024 GPIO_getInputPinValue
0000ad28 g       .text	00000020 PMM_enableSvsHInLPMFullPerf
0000ac12 g       .text	00000014 PMM_disableSvmLInterrupt
00009de4 g       .text	0000000c usbSetLineCoding
0000aa36 g       .text	00000006 UCS_disableClockRequest
0000b124 g       .text	00000000 .hidden __mspabi_slll_10
00008aaa g       .text	00000006 USB_getEnabledEvents
0000b0e6 g       .text	00000000 .hidden __mspabi_slli_15
0000ad08 g       .text	00000020 PMM_enableSvsHInLPMNormPerf
0000a024 g       .text	00000012 WDT_A_start
00008214 g       .rodata	00000000 __init_array_start
000080e4 g     O .rodata	00000010 stUsbHandle
00008c24 g       .text	00000024 USB_forceRemoteWakeup
0000978c g       .text	00000072 CopyUsbToBuff
0000a3c2 g       .text	00000006 SFR_disableInterrupt
0000a872 g       .text	0000001a UCS_bypassXT2
00008700 g       .text	00000004 USB_handleEnumerationCompleteEvent
0000abe8 g       .text	00000016 PMM_disableSvsLReset
0000ac92 g       .text	00000020 PMM_enableSvsLInLPMFastWake
0000916a g       .text	0000001a usbDisableInEndpointInterrupt
0000b0d8 g       .text	0000000e .hidden __mspabi_divlu
0000a092 g       .text	00000024 GPIO_setAsInputPin
0000b162 g       .text	00000000 .hidden __mspabi_srli_13
00009184 g       .text	00000006 usbRestoreInEndpointInterrupt
00002400 g       .data	00000000 __datastart
0000b148 g       .text	00000000 .hidden __mspabi_slll_1
0000aaa6 g       .text	00000024 UCS_clearAllOscFlagsWithTimeout
0000b1ce g       .text	00000000 .hidden __mspabi_srll_8
00009d6a g       .text	0000007a usbGetLineCoding
0000b1f8 g       .text	00000000 .hidden __mspabi_srll_1
0000aa3c g       .text	00000006 UCS_getFaultFlagStatus
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0000a10c g       .text	0000001a GPIO_setOutputLowOnPin
0000b0f6 g       .text	00000000 .hidden __mspabi_slli_7
00008214 g       .rodata	00000000 __preinit_array_start
00008232 g     F .text	00000014 __crt0_movedata
0000a2d0 g       .text	0000000a DMA_getTransferSize
00000000  w      *UND*	00000000 __register_frame_info
000089d6 g       .text	000000b6 USB_InitSerialStringDescriptor
0000825c g     F .text	00000000 _msp430_run_preinit_array
00008a80 g       .text	00000022 USB_disable
000086f8 g       .text	00000004 USB_handleSuspendEvent
0000b1f2 g       .text	00000000 .hidden __mspabi_srll_2
0000248c g     O .bss	00000002 USB_TX_memcpy
000086d4 g       .text	00000004 USB_handleClockEvent
00009df0 g       .text	00000018 usbSetControlLineState
0000b2c8 g       .text	00000000 __msp430_fini
0000b176 g       .text	00000000 .hidden __mspabi_srli_8
0000856c g       .text	00000092 USBCDC_sendDataAndWaitTillDone
00008e4c g       .text	0000000e usbSendZeroLengthPacketOnIEP0
0000a398 g       .text	00000006 DMA_disableTransferDuringReadModifyWrite



Disassembly of section __interrupt_vector_52:

0000ffe6 <__interrupt_vector_52>:
    ffe6:	8c 88       	interrupt service routine at 0x888c

Disassembly of section __interrupt_vector_62:

0000fffa <__interrupt_vector_62>:
    fffa:	8a 84       	interrupt service routine at 0x848a

Disassembly of section .text:

00008220 <__crt0_start>:
    8220:	31 40 00 34 	mov	#13312,	r1	;#0x3400

00008224 <__crt0_init_bss>:
    8224:	3c 40 04 24 	mov	#9220,	r12	;#0x2404
    8228:	0d 43       	clr	r13		;
    822a:	3e 40 8a 00 	mov	#138,	r14	;#0x008a
    822e:	b0 12 44 b2 	call	#45636		;#0xb244

00008232 <__crt0_movedata>:
    8232:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8236:	3d 40 d2 b2 	mov	#45778,	r13	;#0xb2d2
    823a:	0d 9c       	cmp	r12,	r13	;
    823c:	04 24       	jz	$+10     	;abs 0x8246
    823e:	3e 40 04 00 	mov	#4,	r14	;
    8242:	b0 12 56 b2 	call	#45654		;#0xb256

00008246 <__crt0_call_init_then_main>:
    8246:	b0 12 b6 b2 	call	#45750		;#0xb2b6
    824a:	0c 43       	clr	r12		;
    824c:	b0 12 4c 83 	call	#33612		;#0x834c

00008250 <_msp430_run_init_array>:
    8250:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8254:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8258:	26 43       	mov	#2,	r6	;r3 As==10
    825a:	0d 3c       	jmp	$+28     	;abs 0x8276

0000825c <_msp430_run_preinit_array>:
    825c:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8260:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8264:	26 43       	mov	#2,	r6	;r3 As==10
    8266:	07 3c       	jmp	$+16     	;abs 0x8276

00008268 <_msp430_run_fini_array>:
    8268:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    826c:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8270:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    8274:	00 3c       	jmp	$+2      	;abs 0x8276

00008276 <_msp430_run_array>:
    8276:	05 94       	cmp	r4,	r5	;
    8278:	05 24       	jz	$+12     	;abs 0x8284
    827a:	27 44       	mov	@r4,	r7	;
    827c:	04 56       	add	r6,	r4	;
    827e:	a7 12       	call	@r7		;
    8280:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x8276

00008284 <_msp430_run_done>:
    8284:	30 41       	ret			

00008286 <deregister_tm_clones>:
    8286:	3c 40 d2 b2 	mov	#45778,	r12	;#0xb2d2
    828a:	3c 80 d1 b2 	sub	#45777,	r12	;#0xb2d1
    828e:	2d 43       	mov	#2,	r13	;r3 As==10
    8290:	0d 9c       	cmp	r12,	r13	;
    8292:	07 2c       	jc	$+16     	;abs 0x82a2
    8294:	3d 40 00 00 	mov	#0,	r13	;
    8298:	0d 93       	cmp	#0,	r13	;r3 As==00
    829a:	03 24       	jz	$+8      	;abs 0x82a2
    829c:	3c 40 d2 b2 	mov	#45778,	r12	;#0xb2d2
    82a0:	8d 12       	call	r13		;
    82a2:	30 41       	ret			

000082a4 <register_tm_clones>:
    82a4:	3d 40 d2 b2 	mov	#45778,	r13	;#0xb2d2
    82a8:	3d 80 d2 b2 	sub	#45778,	r13	;#0xb2d2
    82ac:	0d 11       	rra	r13		;
    82ae:	0c 4d       	mov	r13,	r12	;
    82b0:	5c 03       	rrum	#1,	r12	;
    82b2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    82b6:	0d 5c       	add	r12,	r13	;
    82b8:	0d 11       	rra	r13		;
    82ba:	0d 93       	cmp	#0,	r13	;r3 As==00
    82bc:	07 24       	jz	$+16     	;abs 0x82cc
    82be:	3e 40 00 00 	mov	#0,	r14	;
    82c2:	0e 93       	cmp	#0,	r14	;r3 As==00
    82c4:	03 24       	jz	$+8      	;abs 0x82cc
    82c6:	3c 40 d2 b2 	mov	#45778,	r12	;#0xb2d2
    82ca:	8e 12       	call	r14		;
    82cc:	30 41       	ret			

000082ce <__do_global_dtors_aux>:
    82ce:	0a 15       	pushm	#1,	r10	;16-bit words
    82d0:	c2 93 04 24 	cmp.b	#0,	&0x2404	;r3 As==00
    82d4:	20 20       	jnz	$+66     	;abs 0x8316
    82d6:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82da:	3a 40 1e 82 	mov	#33310,	r10	;#0x821e
    82de:	3a 80 1c 82 	sub	#33308,	r10	;#0x821c
    82e2:	0a 11       	rra	r10		;
    82e4:	3a 53       	add	#-1,	r10	;r3 As==11
    82e6:	0c 9a       	cmp	r10,	r12	;
    82e8:	0b 2c       	jc	$+24     	;abs 0x8300
    82ea:	1c 53       	inc	r12		;
    82ec:	82 4c 06 24 	mov	r12,	&0x2406	;
    82f0:	0c 5c       	rla	r12		;
    82f2:	1c 4c 1c 82 	mov	-32228(r12),r12	;0xffff821c
    82f6:	8c 12       	call	r12		;
    82f8:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82fc:	0c 9a       	cmp	r10,	r12	;
    82fe:	f5 2b       	jnc	$-20     	;abs 0x82ea
    8300:	b0 12 86 82 	call	#33414		;#0x8286
    8304:	3d 40 00 00 	mov	#0,	r13	;
    8308:	0d 93       	cmp	#0,	r13	;r3 As==00
    830a:	03 24       	jz	$+8      	;abs 0x8312
    830c:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8310:	8d 12       	call	r13		;
    8312:	d2 43 04 24 	mov.b	#1,	&0x2404	;r3 As==01
    8316:	0a 17       	popm	#1,	r10	;16-bit words
    8318:	30 41       	ret			

0000831a <call___do_global_dtors_aux>:
    831a:	30 41       	ret			

0000831c <frame_dummy>:
    831c:	3e 40 00 00 	mov	#0,	r14	;
    8320:	0e 93       	cmp	#0,	r14	;r3 As==00
    8322:	05 24       	jz	$+12     	;abs 0x832e
    8324:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8328:	3d 40 08 24 	mov	#9224,	r13	;#0x2408
    832c:	8e 12       	call	r14		;
    832e:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8332:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    8336:	03 20       	jnz	$+8      	;abs 0x833e
    8338:	b0 12 a4 82 	call	#33444		;#0x82a4
    833c:	30 41       	ret			
    833e:	3d 40 00 00 	mov	#0,	r13	;
    8342:	0d 93       	cmp	#0,	r13	;r3 As==00
    8344:	f9 27       	jz	$-12     	;abs 0x8338
    8346:	8d 12       	call	r13		;
    8348:	f7 3f       	jmp	$-16     	;abs 0x8338

0000834a <call_frame_dummy>:
    834a:	30 41       	ret			

0000834c <main>:
    834c:	0a 15       	pushm	#1,	r10	;16-bit words
    834e:	31 80 00 01 	sub	#256,	r1	;#0x0100
    8352:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8356:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    835a:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    835e:	81 43 06 00 	mov	#0,	6(r1)	;r3 As==00
    8362:	0c 41       	mov	r1,	r12	;
    8364:	3c 52       	add	#8,	r12	;r2 As==11
    8366:	0d 43       	clr	r13		;
    8368:	3e 40 f8 00 	mov	#248,	r14	;#0x00f8
    836c:	b0 12 44 b2 	call	#45636		;#0xb244
    8370:	3c 40 00 36 	mov	#13824,	r12	;#0x3600
    8374:	3d 40 6e 01 	mov	#366,	r13	;#0x016e
    8378:	b0 12 52 84 	call	#33874		;#0x8452
    837c:	3a 40 d2 84 	mov	#34002,	r10	;#0x84d2
    8380:	0c 41       	mov	r1,	r12	;
    8382:	8a 12       	call	r10		;
    8384:	fd 3f       	jmp	$-4      	;abs 0x8380

00008386 <USBHAL_initPorts>:
    8386:	1a 15       	pushm	#2,	r10	;16-bit words
    8388:	39 40 0c a1 	mov	#41228,	r9	;#0xa10c
    838c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    838e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8392:	89 12       	call	r9		;
    8394:	3a 40 74 a0 	mov	#41076,	r10	;#0xa074
    8398:	5c 43       	mov.b	#1,	r12	;r3 As==01
    839a:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    839e:	8a 12       	call	r10		;
    83a0:	6c 43       	mov.b	#2,	r12	;r3 As==10
    83a2:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83a6:	89 12       	call	r9		;
    83a8:	6c 43       	mov.b	#2,	r12	;r3 As==10
    83aa:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83ae:	8a 12       	call	r10		;
    83b0:	7c 40 03 00 	mov.b	#3,	r12	;
    83b4:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83b8:	89 12       	call	r9		;
    83ba:	7c 40 03 00 	mov.b	#3,	r12	;
    83be:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83c2:	8a 12       	call	r10		;
    83c4:	6c 42       	mov.b	#4,	r12	;r2 As==10
    83c6:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83ca:	89 12       	call	r9		;
    83cc:	6c 42       	mov.b	#4,	r12	;r2 As==10
    83ce:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83d2:	8a 12       	call	r10		;
    83d4:	7c 40 05 00 	mov.b	#5,	r12	;
    83d8:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83dc:	89 12       	call	r9		;
    83de:	7c 40 05 00 	mov.b	#5,	r12	;
    83e2:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83e6:	8a 12       	call	r10		;
    83e8:	7c 40 06 00 	mov.b	#6,	r12	;
    83ec:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83f0:	89 12       	call	r9		;
    83f2:	7c 40 06 00 	mov.b	#6,	r12	;
    83f6:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83fa:	8a 12       	call	r10		;
    83fc:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    8400:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8404:	89 12       	call	r9		;
    8406:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    840a:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    840e:	8a 12       	call	r10		;
    8410:	19 17       	popm	#2,	r10	;16-bit words
    8412:	30 41       	ret			

00008414 <USBHAL_initClocks>:
    8414:	2a 15       	pushm	#3,	r10	;16-bit words
    8416:	08 4c       	mov	r12,	r8	;
    8418:	09 4d       	mov	r13,	r9	;
    841a:	3a 40 06 a6 	mov	#42502,	r10	;#0xa606
    841e:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8420:	2d 43       	mov	#2,	r13	;r3 As==10
    8422:	0e 43       	clr	r14		;
    8424:	8a 12       	call	r10		;
    8426:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8428:	2d 43       	mov	#2,	r13	;r3 As==10
    842a:	0e 43       	clr	r14		;
    842c:	8a 12       	call	r10		;
    842e:	0c 48       	mov	r8,	r12	;
    8430:	0d 49       	mov	r9,	r13	;
    8432:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    8436:	0f 43       	clr	r15		;
    8438:	b0 12 d8 b0 	call	#45272		;#0xb0d8
    843c:	0a 4c       	mov	r12,	r10	;
    843e:	0c 48       	mov	r8,	r12	;
    8440:	0d 49       	mov	r9,	r13	;
    8442:	b0 12 a4 b1 	call	#45476		;#0xb1a4
    8446:	0d 4c       	mov	r12,	r13	;
    8448:	0c 4a       	mov	r10,	r12	;
    844a:	b0 12 f6 a9 	call	#43510		;#0xa9f6
    844e:	28 17       	popm	#3,	r10	;16-bit words
    8450:	30 41       	ret			

00008452 <TILEAF_BoardInit>:
    8452:	19 15       	pushm	#2,	r9	;16-bit words
    8454:	08 4c       	mov	r12,	r8	;
    8456:	09 4d       	mov	r13,	r9	;
    8458:	82 4c 16 24 	mov	r12,	&0x2416	;
    845c:	82 4d 18 24 	mov	r13,	&0x2418	;
    8460:	3c 40 50 01 	mov	#336,	r12	;#0x0150
    8464:	b0 12 0c a0 	call	#40972		;#0xa00c
    8468:	6c 43       	mov.b	#2,	r12	;r3 As==10
    846a:	b0 12 0c af 	call	#44812		;#0xaf0c
    846e:	b0 12 86 83 	call	#33670		;#0x8386
    8472:	0c 48       	mov	r8,	r12	;
    8474:	0d 49       	mov	r9,	r13	;
    8476:	b0 12 14 84 	call	#33812		;#0x8414
    847a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    847c:	4d 4c       	mov.b	r12,	r13	;
    847e:	b0 12 da 93 	call	#37850		;#0x93da
    8482:	32 d2       	eint			
    8484:	03 43       	nop			
    8486:	18 17       	popm	#2,	r9	;16-bit words
    8488:	30 41       	ret			

0000848a <UNMI_ISR>:
    848a:	bf 15       	pushm	#12,	r15	;16-bit words
    848c:	1c 42 9a 01 	mov	&0x019a,r12	;0x019a
    8490:	2c 92       	cmp	#4,	r12	;r2 As==10
    8492:	12 24       	jz	$+38     	;abs 0x84b8
    8494:	2d 42       	mov	#4,	r13	;r2 As==10
    8496:	0d 9c       	cmp	r12,	r13	;
    8498:	05 28       	jnc	$+12     	;abs 0x84a4
    849a:	0c 93       	cmp	#0,	r12	;r3 As==00
    849c:	17 24       	jz	$+48     	;abs 0x84cc
    849e:	2c 93       	cmp	#2,	r12	;r3 As==10
    84a0:	15 24       	jz	$+44     	;abs 0x84cc
    84a2:	15 3c       	jmp	$+44     	;abs 0x84ce
    84a4:	3c 90 06 00 	cmp	#6,	r12	;
    84a8:	11 24       	jz	$+36     	;abs 0x84cc
    84aa:	3c 92       	cmp	#8,	r12	;r2 As==11
    84ac:	10 20       	jnz	$+34     	;abs 0x84ce
    84ae:	82 43 98 01 	mov	#0,	&0x0198	;r3 As==00
    84b2:	b0 12 80 8a 	call	#35456		;#0x8a80
    84b6:	0b 3c       	jmp	$+24     	;abs 0x84ce
    84b8:	3a 40 42 aa 	mov	#43586,	r10	;#0xaa42
    84bc:	7c 42       	mov.b	#8,	r12	;r2 As==11
    84be:	8a 12       	call	r10		;
    84c0:	5c 43       	mov.b	#1,	r12	;r3 As==01
    84c2:	8a 12       	call	r10		;
    84c4:	6c 43       	mov.b	#2,	r12	;r3 As==10
    84c6:	b0 12 ce a3 	call	#41934		;#0xa3ce
    84ca:	01 3c       	jmp	$+4      	;abs 0x84ce
    84cc:	03 43       	nop			
    84ce:	b4 17       	popm	#12,	r15	;16-bit words
    84d0:	00 13       	reti			

000084d2 <checkUSB>:
    84d2:	0a 15       	pushm	#1,	r10	;16-bit words
    84d4:	21 83       	decd	r1		;
    84d6:	0a 4c       	mov	r12,	r10	;
    84d8:	b0 12 7c 8c 	call	#35964		;#0x8c7c
    84dc:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    84e0:	14 20       	jnz	$+42     	;abs 0x850a
    84e2:	5c 42 1a 24 	mov.b	&0x241a,r12	;0x241a
    84e6:	0c 93       	cmp	#0,	r12	;r3 As==00
    84e8:	10 24       	jz	$+34     	;abs 0x850a
    84ea:	c2 43 1a 24 	mov.b	#0,	&0x241a	;r3 As==00
    84ee:	0c 4a       	mov	r10,	r12	;
    84f0:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    84f4:	4e 43       	clr.b	r14		;
    84f6:	b0 12 84 86 	call	#34436		;#0x8684
    84fa:	0d 4c       	mov	r12,	r13	;
    84fc:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8500:	1f 43       	mov	#1,	r15	;r3 As==01
    8502:	0c 4a       	mov	r10,	r12	;
    8504:	4e 43       	clr.b	r14		;
    8506:	b0 12 f6 85 	call	#34294		;#0x85f6
    850a:	21 53       	incd	r1		;
    850c:	0a 17       	popm	#1,	r10	;16-bit words
    850e:	30 41       	ret			

00008510 <SendBuffer>:
    8510:	0a 15       	pushm	#1,	r10	;16-bit words
    8512:	21 82       	sub	#4,	r1	;r2 As==10
    8514:	0a 4c       	mov	r12,	r10	;
    8516:	81 4d 02 00 	mov	r13,	2(r1)	;
    851a:	b0 12 7c 8c 	call	#35964		;#0x8c7c
    851e:	1d 41 02 00 	mov	2(r1),	r13	;
    8522:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    8526:	07 20       	jnz	$+16     	;abs 0x8536
    8528:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    852c:	1f 43       	mov	#1,	r15	;r3 As==01
    852e:	0c 4a       	mov	r10,	r12	;
    8530:	4e 43       	clr.b	r14		;
    8532:	b0 12 f6 85 	call	#34294		;#0x85f6
    8536:	0c 43       	clr	r12		;
    8538:	21 52       	add	#4,	r1	;r2 As==10
    853a:	0a 17       	popm	#1,	r10	;16-bit words
    853c:	30 41       	ret			

0000853e <ReceiveBuffer>:
    853e:	1a 15       	pushm	#2,	r10	;16-bit words
    8540:	09 4c       	mov	r12,	r9	;
    8542:	b0 12 7c 8c 	call	#35964		;#0x8c7c
    8546:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    854a:	0d 20       	jnz	$+28     	;abs 0x8566
    854c:	5c 42 1a 24 	mov.b	&0x241a,r12	;0x241a
    8550:	0c 93       	cmp	#0,	r12	;r3 As==00
    8552:	09 24       	jz	$+20     	;abs 0x8566
    8554:	c2 43 1a 24 	mov.b	#0,	&0x241a	;r3 As==00
    8558:	0c 49       	mov	r9,	r12	;
    855a:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    855e:	4e 43       	clr.b	r14		;
    8560:	b0 12 84 86 	call	#34436		;#0x8684
    8564:	0a 4c       	mov	r12,	r10	;
    8566:	0c 4a       	mov	r10,	r12	;
    8568:	19 17       	popm	#2,	r10	;16-bit words
    856a:	30 41       	ret			

0000856c <USBCDC_sendDataAndWaitTillDone>:
    856c:	21 83       	decd	r1		;
    856e:	91 41 02 00 	mov	2(r1),	0(r1)	;
    8572:	00 00 
    8574:	5a 15       	pushm	#6,	r10	;16-bit words
    8576:	21 82       	sub	#4,	r1	;r2 As==10
    8578:	47 4e       	mov.b	r14,	r7	;
    857a:	81 4f 12 00 	mov	r15,	18(r1)	; 0x0012
    857e:	08 4f       	mov	r15,	r8	;
    8580:	19 41 14 00 	mov	20(r1),	r9	;0x00014
    8584:	4e 47       	mov.b	r7,	r14	;
    8586:	b0 12 26 95 	call	#38182		;#0x9526
    858a:	4d 4c       	mov.b	r12,	r13	;
    858c:	7c 90 07 00 	cmp.b	#7,	r12	;
    8590:	0a 24       	jz	$+22     	;abs 0x85a6
    8592:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    8594:	28 24       	jz	$+82     	;abs 0x85e6
    8596:	7c 90 03 00 	cmp.b	#3,	r12	;
    859a:	26 24       	jz	$+78     	;abs 0x85e8
    859c:	0a 43       	clr	r10		;
    859e:	05 4a       	mov	r10,	r5	;
    85a0:	36 40 3c 9c 	mov	#39996,	r6	;#0x9c3c
    85a4:	12 3c       	jmp	$+38     	;abs 0x85ca
    85a6:	2d 42       	mov	#4,	r13	;r2 As==10
    85a8:	1f 3c       	jmp	$+64     	;abs 0x85e8
    85aa:	0d 4c       	mov	r12,	r13	;
    85ac:	1d f3       	and	#1,	r13	;r3 As==01
    85ae:	0d 93       	cmp	#0,	r13	;r3 As==00
    85b0:	1b 24       	jz	$+56     	;abs 0x85e8
    85b2:	0c 48       	mov	r8,	r12	;
    85b4:	0c d9       	bis	r9,	r12	;
    85b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    85b8:	08 24       	jz	$+18     	;abs 0x85ca
    85ba:	0c 4a       	mov	r10,	r12	;
    85bc:	1c 53       	inc	r12		;
    85be:	0d 45       	mov	r5,	r13	;
    85c0:	0d 63       	adc	r13		;
    85c2:	05 99       	cmp	r9,	r5	;
    85c4:	0a 2c       	jc	$+22     	;abs 0x85da
    85c6:	0a 4c       	mov	r12,	r10	;
    85c8:	05 4d       	mov	r13,	r5	;
    85ca:	4c 47       	mov.b	r7,	r12	;
    85cc:	0d 41       	mov	r1,	r13	;
    85ce:	0e 41       	mov	r1,	r14	;
    85d0:	2e 53       	incd	r14		;
    85d2:	86 12       	call	r6		;
    85d4:	3c b2       	bit	#8,	r12	;r2 As==11
    85d6:	e9 27       	jz	$-44     	;abs 0x85aa
    85d8:	06 3c       	jmp	$+14     	;abs 0x85e6
    85da:	09 95       	cmp	r5,	r9	;
    85dc:	02 20       	jnz	$+6      	;abs 0x85e2
    85de:	0a 98       	cmp	r8,	r10	;
    85e0:	f2 2b       	jnc	$-26     	;abs 0x85c6
    85e2:	1d 43       	mov	#1,	r13	;r3 As==01
    85e4:	01 3c       	jmp	$+4      	;abs 0x85e8
    85e6:	2d 43       	mov	#2,	r13	;r3 As==10
    85e8:	4c 4d       	mov.b	r13,	r12	;
    85ea:	21 52       	add	#4,	r1	;r2 As==10
    85ec:	55 17       	popm	#6,	r10	;16-bit words
    85ee:	a1 41 02 00 	mov	@r1,	2(r1)	;
    85f2:	21 53       	incd	r1		;
    85f4:	30 41       	ret			

000085f6 <USBCDC_sendDataInBackground>:
    85f6:	21 83       	decd	r1		;
    85f8:	91 41 02 00 	mov	2(r1),	0(r1)	;
    85fc:	00 00 
    85fe:	6a 15       	pushm	#7,	r10	;16-bit words
    8600:	31 82       	sub	#8,	r1	;r2 As==11
    8602:	05 4c       	mov	r12,	r5	;
    8604:	81 4d 02 00 	mov	r13,	2(r1)	;
    8608:	46 4e       	mov.b	r14,	r6	;
    860a:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018
    860e:	17 41 1a 00 	mov	26(r1),	r7	;0x0001a
    8612:	08 43       	clr	r8		;
    8614:	0a 48       	mov	r8,	r10	;
    8616:	34 40 3c 9c 	mov	#39996,	r4	;#0x9c3c
    861a:	4c 46       	mov.b	r6,	r12	;
    861c:	0d 41       	mov	r1,	r13	;
    861e:	2d 52       	add	#4,	r13	;r2 As==10
    8620:	0e 41       	mov	r1,	r14	;
    8622:	3e 50 06 00 	add	#6,	r14	;
    8626:	81 4f 00 00 	mov	r15,	0(r1)	;
    862a:	84 12       	call	r4		;
    862c:	09 4c       	mov	r12,	r9	;
    862e:	19 f3       	and	#1,	r9	;r3 As==01
    8630:	2f 41       	mov	@r1,	r15	;
    8632:	09 93       	cmp	#0,	r9	;r3 As==00
    8634:	11 24       	jz	$+36     	;abs 0x8658
    8636:	0c 4f       	mov	r15,	r12	;
    8638:	0c d7       	bis	r7,	r12	;
    863a:	0c 93       	cmp	#0,	r12	;r3 As==00
    863c:	ee 27       	jz	$-34     	;abs 0x861a
    863e:	0d 48       	mov	r8,	r13	;
    8640:	1d 53       	inc	r13		;
    8642:	0c 4a       	mov	r10,	r12	;
    8644:	0c 63       	adc	r12		;
    8646:	07 9a       	cmp	r10,	r7	;
    8648:	15 28       	jnc	$+44     	;abs 0x8674
    864a:	0a 97       	cmp	r7,	r10	;
    864c:	02 20       	jnz	$+6      	;abs 0x8652
    864e:	0f 98       	cmp	r8,	r15	;
    8650:	11 28       	jnc	$+36     	;abs 0x8674
    8652:	08 4d       	mov	r13,	r8	;
    8654:	0a 4c       	mov	r12,	r10	;
    8656:	e1 3f       	jmp	$-60     	;abs 0x861a
    8658:	0c 45       	mov	r5,	r12	;
    865a:	1d 41 02 00 	mov	2(r1),	r13	;
    865e:	4e 46       	mov.b	r6,	r14	;
    8660:	b0 12 26 95 	call	#38182		;#0x9526
    8664:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    8666:	07 24       	jz	$+16     	;abs 0x8676
    8668:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    866a:	02 20       	jnz	$+6      	;abs 0x8670
    866c:	29 43       	mov	#2,	r9	;r3 As==10
    866e:	03 3c       	jmp	$+8      	;abs 0x8676
    8670:	29 42       	mov	#4,	r9	;r2 As==10
    8672:	01 3c       	jmp	$+4      	;abs 0x8676
    8674:	19 43       	mov	#1,	r9	;r3 As==01
    8676:	4c 49       	mov.b	r9,	r12	;
    8678:	31 52       	add	#8,	r1	;r2 As==11
    867a:	64 17       	popm	#7,	r10	;16-bit words
    867c:	a1 41 02 00 	mov	@r1,	2(r1)	;
    8680:	21 53       	incd	r1		;
    8682:	30 41       	ret			

00008684 <USBCDC_receiveDataInBuffer>:
    8684:	6a 15       	pushm	#7,	r10	;16-bit words
    8686:	08 4c       	mov	r12,	r8	;
    8688:	06 4d       	mov	r13,	r6	;
    868a:	47 4e       	mov.b	r14,	r7	;
    868c:	09 4c       	mov	r12,	r9	;
    868e:	35 40 ec 9c 	mov	#40172,	r5	;#0x9cec
    8692:	34 40 fc 97 	mov	#38908,	r4	;#0x97fc
    8696:	4c 47       	mov.b	r7,	r12	;
    8698:	85 12       	call	r5		;
    869a:	4a 4c       	mov.b	r12,	r10	;
    869c:	0f 49       	mov	r9,	r15	;
    869e:	0f 88       	sub	r8,	r15	;
    86a0:	0c 4f       	mov	r15,	r12	;
    86a2:	0a 93       	cmp	#0,	r10	;r3 As==00
    86a4:	15 24       	jz	$+44     	;abs 0x86d0
    86a6:	0c 5a       	add	r10,	r12	;
    86a8:	06 9c       	cmp	r12,	r6	;
    86aa:	06 28       	jnc	$+14     	;abs 0x86b8
    86ac:	0c 49       	mov	r9,	r12	;
    86ae:	0d 4a       	mov	r10,	r13	;
    86b0:	4e 47       	mov.b	r7,	r14	;
    86b2:	84 12       	call	r4		;
    86b4:	09 5a       	add	r10,	r9	;
    86b6:	ef 3f       	jmp	$-32     	;abs 0x8696
    86b8:	0f 48       	mov	r8,	r15	;
    86ba:	0f 89       	sub	r9,	r15	;
    86bc:	0a 4f       	mov	r15,	r10	;
    86be:	0a 56       	add	r6,	r10	;
    86c0:	0c 49       	mov	r9,	r12	;
    86c2:	0d 4a       	mov	r10,	r13	;
    86c4:	4e 47       	mov.b	r7,	r14	;
    86c6:	b0 12 fc 97 	call	#38908		;#0x97fc
    86ca:	0a 59       	add	r9,	r10	;
    86cc:	0c 4a       	mov	r10,	r12	;
    86ce:	0c 88       	sub	r8,	r12	;
    86d0:	64 17       	popm	#7,	r10	;16-bit words
    86d2:	30 41       	ret			

000086d4 <USB_handleClockEvent>:
    86d4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86d6:	30 41       	ret			

000086d8 <USB_handleVbusOnEvent>:
    86d8:	b0 12 f8 92 	call	#37624		;#0x92f8
    86dc:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    86de:	04 20       	jnz	$+10     	;abs 0x86e8
    86e0:	b0 12 b0 8a 	call	#35504		;#0x8ab0
    86e4:	b0 12 e8 8b 	call	#35816		;#0x8be8
    86e8:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86ea:	30 41       	ret			

000086ec <USB_handleVbusOffEvent>:
    86ec:	b0 12 fe a8 	call	#43262		;#0xa8fe
    86f0:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86f2:	30 41       	ret			

000086f4 <USB_handleResetEvent>:
    86f4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86f6:	30 41       	ret			

000086f8 <USB_handleSuspendEvent>:
    86f8:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86fa:	30 41       	ret			

000086fc <USB_handleResumeEvent>:
    86fc:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86fe:	30 41       	ret			

00008700 <USB_handleEnumerationCompleteEvent>:
    8700:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8702:	30 41       	ret			

00008704 <USBCDC_handleDataReceived>:
    8704:	d2 43 1a 24 	mov.b	#1,	&0x241a	;r3 As==01
    8708:	5c 43       	mov.b	#1,	r12	;r3 As==01
    870a:	30 41       	ret			

0000870c <USBCDC_handleSendCompleted>:
    870c:	4c 43       	clr.b	r12		;
    870e:	30 41       	ret			

00008710 <USBCDC_handleReceiveCompleted>:
    8710:	4c 43       	clr.b	r12		;
    8712:	30 41       	ret			

00008714 <USBCDC_handleSetLineCoding>:
    8714:	4c 43       	clr.b	r12		;
    8716:	30 41       	ret			

00008718 <USBCDC_handleSetControlLineState>:
    8718:	4c 43       	clr.b	r12		;
    871a:	30 41       	ret			

0000871c <SetupPacketInterruptHandler>:
    871c:	0a 15       	pushm	#1,	r10	;16-bit words
    871e:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8722:	3c 09 
    8724:	3a 40 e8 90 	mov	#37096,	r10	;#0x90e8
    8728:	c2 93 80 23 	cmp.b	#0,	&0x2380	;r3 As==00
    872c:	03 34       	jge	$+8      	;abs 0x8734
    872e:	d2 d3 3c 09 	bis.b	#1,	&0x093c	;r3 As==01
    8732:	02 3c       	jmp	$+6      	;abs 0x8738
    8734:	d2 c3 3c 09 	bic.b	#1,	&0x093c	;r3 As==01
    8738:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    873c:	0c 43       	clr	r12		;
    873e:	cc 43 58 24 	mov.b	#0,	9304(r12);r3 As==00, 0x2458
    8742:	1c 53       	inc	r12		;
    8744:	3c 92       	cmp	#8,	r12	;r2 As==11
    8746:	fb 23       	jnz	$-8      	;abs 0x873e
    8748:	8a 12       	call	r10		;
    874a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    874e:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    8752:	04 24       	jz	$+10     	;abs 0x875c
    8754:	f2 f0 fa ff 	and.b	#65530,	&0x093e	;#0xfffa
    8758:	3e 09 
    875a:	e6 3f       	jmp	$-50     	;abs 0x8728
    875c:	0a 17       	popm	#1,	r10	;16-bit words
    875e:	30 41       	ret			

00008760 <PWRVBUSoffHandler>:
    8760:	21 82       	sub	#4,	r1	;r2 As==10
    8762:	b0 12 aa 91 	call	#37290		;#0x91aa
    8766:	0e 4c       	mov	r12,	r14	;
    8768:	5e 0f       	rrum	#4,	r14	;
    876a:	5e 0b       	rrum	#3,	r14	;
    876c:	0d 4c       	mov	r12,	r13	;
    876e:	5d 0f       	rrum	#4,	r13	;
    8770:	5d 07       	rrum	#2,	r13	;
    8772:	0d 5e       	add	r14,	r13	;
    8774:	5c 03       	rrum	#1,	r12	;
    8776:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    877a:	0c 5d       	add	r13,	r12	;
    877c:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8780:	1d 41 02 00 	mov	2(r1),	r13	;
    8784:	3e 40 03 00 	mov	#3,	r14	;
    8788:	0e 9d       	cmp	r13,	r14	;
    878a:	0c 28       	jnc	$+26     	;abs 0x87a4
    878c:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8790:	2d 41       	mov	@r1,	r13	;
    8792:	0d 9c       	cmp	r12,	r13	;
    8794:	04 2c       	jc	$+10     	;abs 0x879e
    8796:	03 43       	nop			
    8798:	91 53 00 00 	inc	0(r1)		;
    879c:	f9 3f       	jmp	$-12     	;abs 0x8790
    879e:	91 53 02 00 	inc	2(r1)		;
    87a2:	ee 3f       	jmp	$-34     	;abs 0x8780
    87a4:	1c 42 08 09 	mov	&0x0908,r12	;0x0908
    87a8:	3c f2       	and	#8,	r12	;r2 As==11
    87aa:	0c 93       	cmp	#0,	r12	;r3 As==00
    87ac:	12 20       	jnz	$+38     	;abs 0x87d2
    87ae:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    87b2:	00 09 
    87b4:	c2 4c 1c 24 	mov.b	r12,	&0x241c	;
    87b8:	c2 4c 1d 24 	mov.b	r12,	&0x241d	;
    87bc:	82 4c 02 09 	mov	r12,	&0x0902	;
    87c0:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    87c4:	10 09 
    87c6:	b2 f0 fb eb 	and	#60411,	&0x0908	;#0xebfb
    87ca:	08 09 
    87cc:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    87d0:	00 09 
    87d2:	21 52       	add	#4,	r1	;r2 As==10
    87d4:	30 41       	ret			

000087d6 <PWRVBUSonHandler>:
    87d6:	21 82       	sub	#4,	r1	;r2 As==10
    87d8:	b0 12 aa 91 	call	#37290		;#0x91aa
    87dc:	0e 4c       	mov	r12,	r14	;
    87de:	5e 0f       	rrum	#4,	r14	;
    87e0:	5e 0b       	rrum	#3,	r14	;
    87e2:	0d 4c       	mov	r12,	r13	;
    87e4:	5d 0f       	rrum	#4,	r13	;
    87e6:	5d 07       	rrum	#2,	r13	;
    87e8:	0d 5e       	add	r14,	r13	;
    87ea:	5c 03       	rrum	#1,	r12	;
    87ec:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    87f0:	0c 5d       	add	r13,	r12	;
    87f2:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    87f6:	1d 41 02 00 	mov	2(r1),	r13	;
    87fa:	3e 40 03 00 	mov	#3,	r14	;
    87fe:	0e 9d       	cmp	r13,	r14	;
    8800:	0c 28       	jnc	$+26     	;abs 0x881a
    8802:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8806:	2d 41       	mov	@r1,	r13	;
    8808:	0d 9c       	cmp	r12,	r13	;
    880a:	04 2c       	jc	$+10     	;abs 0x8814
    880c:	03 43       	nop			
    880e:	91 53 00 00 	inc	0(r1)		;
    8812:	f9 3f       	jmp	$-12     	;abs 0x8806
    8814:	91 53 02 00 	inc	2(r1)		;
    8818:	ee 3f       	jmp	$-34     	;abs 0x87f6
    881a:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    881e:	0c 24       	jz	$+26     	;abs 0x8838
    8820:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8824:	00 09 
    8826:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    882a:	08 09 
    882c:	b2 f0 f9 ff 	and	#65529,	&0x0908	;#0xfff9
    8830:	08 09 
    8832:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8836:	00 09 
    8838:	21 52       	add	#4,	r1	;r2 As==10
    883a:	30 41       	ret			

0000883c <IEP0InterruptHandler>:
    883c:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8840:	3c 09 
    8842:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8846:	d2 93 88 24 	cmp.b	#1,	&0x2488	;r3 As==01
    884a:	03 20       	jnz	$+8      	;abs 0x8852
    884c:	b0 12 60 8d 	call	#36192		;#0x8d60
    8850:	02 3c       	jmp	$+6      	;abs 0x8856
    8852:	f2 d2 20 09 	bis.b	#8,	&0x0920	;r2 As==11
    8856:	30 41       	ret			

00008858 <OEP0InterruptHandler>:
    8858:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    885c:	3c 09 
    885e:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8862:	e2 93 88 24 	cmp.b	#2,	&0x2488	;r3 As==10
    8866:	0e 20       	jnz	$+30     	;abs 0x8884
    8868:	b0 12 ea 8d 	call	#36330		;#0x8dea
    886c:	c2 93 88 24 	cmp.b	#0,	&0x2488	;r3 As==00
    8870:	0b 20       	jnz	$+24     	;abs 0x8888
    8872:	f2 90 20 00 	cmp.b	#32,	&0x2381	;#0x0020
    8876:	81 23 
    8878:	07 20       	jnz	$+16     	;abs 0x8888
    887a:	b0 12 08 9e 	call	#40456		;#0x9e08
    887e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8882:	03 3c       	jmp	$+8      	;abs 0x888a
    8884:	f2 d2 22 09 	bis.b	#8,	&0x0922	;r2 As==11
    8888:	0c 43       	clr	r12		;
    888a:	30 41       	ret			

0000888c <iUsbInterruptHandler>:
    888c:	bf 15       	pushm	#12,	r15	;16-bit words
    888e:	e2 b2 3e 09 	bit.b	#4,	&0x093e	;r2 As==10
    8892:	06 24       	jz	$+14     	;abs 0x88a0
    8894:	b0 12 1c 87 	call	#34588		;#0x871c
    8898:	4a 4c       	mov.b	r12,	r10	;
    889a:	e2 c2 3e 09 	bic.b	#4,	&0x093e	;r2 As==10
    889e:	01 3c       	jmp	$+4      	;abs 0x88a2
    88a0:	0a 43       	clr	r10		;
    88a2:	1d 42 32 09 	mov	&0x0932,r13	;0x0932
    88a6:	3d f0 3f 00 	and	#63,	r13	;#0x003f
    88aa:	3d 90 14 00 	cmp	#20,	r13	;#0x0014
    88ae:	51 24       	jz	$+164    	;abs 0x8952
    88b0:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    88b4:	0c 9d       	cmp	r13,	r12	;
    88b6:	15 28       	jnc	$+44     	;abs 0x88e2
    88b8:	3d 90 0a 00 	cmp	#10,	r13	;#0x000a
    88bc:	3a 24       	jz	$+118    	;abs 0x8932
    88be:	3c 40 0a 00 	mov	#10,	r12	;#0x000a
    88c2:	0c 9d       	cmp	r13,	r12	;
    88c4:	05 28       	jnc	$+12     	;abs 0x88d0
    88c6:	2d 93       	cmp	#2,	r13	;r3 As==10
    88c8:	2c 24       	jz	$+90     	;abs 0x8922
    88ca:	3d 92       	cmp	#8,	r13	;r2 As==11
    88cc:	2c 24       	jz	$+90     	;abs 0x8926
    88ce:	78 3c       	jmp	$+242    	;abs 0x89c0
    88d0:	3d 90 0c 00 	cmp	#12,	r13	;#0x000c
    88d4:	36 24       	jz	$+110    	;abs 0x8942
    88d6:	3d 90 12 00 	cmp	#18,	r13	;#0x0012
    88da:	72 20       	jnz	$+230    	;abs 0x89c0
    88dc:	b0 12 3c 88 	call	#34876		;#0x883c
    88e0:	6f 3c       	jmp	$+224    	;abs 0x89c0
    88e2:	3d 90 1a 00 	cmp	#26,	r13	;#0x001a
    88e6:	49 24       	jz	$+148    	;abs 0x897a
    88e8:	3c 40 1a 00 	mov	#26,	r12	;#0x001a
    88ec:	0c 9d       	cmp	r13,	r12	;
    88ee:	07 28       	jnc	$+16     	;abs 0x88fe
    88f0:	3d 90 16 00 	cmp	#22,	r13	;#0x0016
    88f4:	31 24       	jz	$+100    	;abs 0x8958
    88f6:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    88fa:	36 24       	jz	$+110    	;abs 0x8968
    88fc:	61 3c       	jmp	$+196    	;abs 0x89c0
    88fe:	3d 90 26 00 	cmp	#38,	r13	;#0x0026
    8902:	44 24       	jz	$+138    	;abs 0x898c
    8904:	3d 90 34 00 	cmp	#52,	r13	;#0x0034
    8908:	45 24       	jz	$+140    	;abs 0x8994
    890a:	3d 90 20 00 	cmp	#32,	r13	;#0x0020
    890e:	58 20       	jnz	$+178    	;abs 0x89c0
    8910:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8914:	21 09 
    8916:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    891a:	23 09 
    891c:	b0 12 1c 87 	call	#34588		;#0x871c
    8920:	4f 3c       	jmp	$+160    	;abs 0x89c0
    8922:	03 43       	nop			
    8924:	4d 3c       	jmp	$+156    	;abs 0x89c0
    8926:	d2 b3 82 24 	bit.b	#1,	&0x2482	;r3 As==01
    892a:	4a 24       	jz	$+150    	;abs 0x89c0
    892c:	b0 12 d4 86 	call	#34516		;#0x86d4
    8930:	46 3c       	jmp	$+142    	;abs 0x89be
    8932:	b0 12 d6 87 	call	#34774		;#0x87d6
    8936:	e2 b3 82 24 	bit.b	#2,	&0x2482	;r3 As==10
    893a:	42 24       	jz	$+134    	;abs 0x89c0
    893c:	b0 12 d8 86 	call	#34520		;#0x86d8
    8940:	3e 3c       	jmp	$+126    	;abs 0x89be
    8942:	b0 12 60 87 	call	#34656		;#0x8760
    8946:	e2 b2 82 24 	bit.b	#4,	&0x2482	;r2 As==10
    894a:	3a 24       	jz	$+118    	;abs 0x89c0
    894c:	b0 12 ec 86 	call	#34540		;#0x86ec
    8950:	36 3c       	jmp	$+110    	;abs 0x89be
    8952:	b0 12 58 88 	call	#34904		;#0x8858
    8956:	34 3c       	jmp	$+106    	;abs 0x89c0
    8958:	b0 12 b0 8a 	call	#35504		;#0x8ab0
    895c:	f2 b2 82 24 	bit.b	#8,	&0x2482	;r2 As==11
    8960:	2f 24       	jz	$+96     	;abs 0x89c0
    8962:	b0 12 f4 86 	call	#34548		;#0x86f4
    8966:	2b 3c       	jmp	$+88     	;abs 0x89be
    8968:	b0 12 12 8d 	call	#36114		;#0x8d12
    896c:	f2 b0 10 00 	bit.b	#16,	&0x2482	;#0x0010
    8970:	82 24 
    8972:	26 24       	jz	$+78     	;abs 0x89c0
    8974:	b0 12 f8 86 	call	#34552		;#0x86f8
    8978:	22 3c       	jmp	$+70     	;abs 0x89be
    897a:	b0 12 12 94 	call	#37906		;#0x9412
    897e:	f2 b0 20 00 	bit.b	#32,	&0x2482	;#0x0020
    8982:	82 24 
    8984:	1f 24       	jz	$+64     	;abs 0x89c4
    8986:	b0 12 fc 86 	call	#34556		;#0x86fc
    898a:	1c 3c       	jmp	$+58     	;abs 0x89c4
    898c:	4c 43       	clr.b	r12		;
    898e:	b0 12 b2 95 	call	#38322		;#0x95b2
    8992:	15 3c       	jmp	$+44     	;abs 0x89be
    8994:	4c 43       	clr.b	r12		;
    8996:	b0 12 4e 9b 	call	#39758		;#0x9b4e
    899a:	09 4c       	mov	r12,	r9	;
    899c:	0c 93       	cmp	#0,	r12	;r3 As==00
    899e:	0c 20       	jnz	$+26     	;abs 0x89b8
    89a0:	b0 12 ec 9c 	call	#40172		;#0x9cec
    89a4:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    89a6:	08 24       	jz	$+18     	;abs 0x89b8
    89a8:	f2 b0 40 00 	bit.b	#64,	&0x2482	;#0x0040
    89ac:	82 24 
    89ae:	08 24       	jz	$+18     	;abs 0x89c0
    89b0:	4c 49       	mov.b	r9,	r12	;
    89b2:	b0 12 04 87 	call	#34564		;#0x8704
    89b6:	03 3c       	jmp	$+8      	;abs 0x89be
    89b8:	4c 43       	clr.b	r12		;
    89ba:	b0 12 24 9a 	call	#39460		;#0x9a24
    89be:	4a 4c       	mov.b	r12,	r10	;
    89c0:	0a 93       	cmp	#0,	r10	;r3 As==00
    89c2:	04 24       	jz	$+10     	;abs 0x89cc
    89c4:	b1 c0 d0 00 	bic	#208,	24(r1)	;#0x00d0, 0x0018
    89c8:	18 00 
    89ca:	03 43       	nop			
    89cc:	b4 17       	popm	#12,	r15	;16-bit words
    89ce:	00 13       	reti			

000089d0 <USB_getVersion>:
    89d0:	3c 40 02 24 	mov	#9218,	r12	;#0x2402
    89d4:	30 41       	ret			

000089d6 <USB_InitSerialStringDescriptor>:
    89d6:	0a 15       	pushm	#1,	r10	;16-bit words
    89d8:	21 82       	sub	#4,	r1	;r2 As==10
    89da:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    89de:	f2 40 03 00 	mov.b	#3,	&0x2461	;
    89e2:	61 24 
    89e4:	7c 42       	mov.b	#8,	r12	;r2 As==11
    89e6:	4d 43       	clr.b	r13		;
    89e8:	0e 41       	mov	r1,	r14	;
    89ea:	1e 53       	inc	r14		;
    89ec:	0f 41       	mov	r1,	r15	;
    89ee:	2f 53       	incd	r15		;
    89f0:	b0 12 8a 9e 	call	#40586		;#0x9e8a
    89f4:	5c 41 01 00 	mov.b	1(r1),	r12	;
    89f8:	0c 93       	cmp	#0,	r12	;r3 As==00
    89fa:	04 24       	jz	$+10     	;abs 0x8a04
    89fc:	3d 40 64 24 	mov	#9316,	r13	;#0x2464
    8a00:	0f 43       	clr	r15		;
    8a02:	07 3c       	jmp	$+16     	;abs 0x8a12
    8a04:	e2 42 60 24 	mov.b	#4,	&0x2460	;r2 As==10
    8a08:	c2 4c 62 24 	mov.b	r12,	&0x2462	;
    8a0c:	c2 4c 63 24 	mov.b	r12,	&0x2463	;
    8a10:	34 3c       	jmp	$+106    	;abs 0x8a7a
    8a12:	1b 41 02 00 	mov	2(r1),	r11	;
    8a16:	6e 4b       	mov.b	@r11,	r14	;
    8a18:	5e 0f       	rrum	#4,	r14	;
    8a1a:	7a 40 09 00 	mov.b	#9,	r10	;
    8a1e:	4a 9e       	cmp.b	r14,	r10	;
    8a20:	03 28       	jnc	$+8      	;abs 0x8a28
    8a22:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8a26:	02 3c       	jmp	$+6      	;abs 0x8a2c
    8a28:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8a2c:	cd 4e fe ff 	mov.b	r14,	-2(r13)	; 0xfffe
    8a30:	cd 43 ff ff 	mov.b	#0,	-1(r13)	;r3 As==00, 0xffff
    8a34:	6e 4b       	mov.b	@r11,	r14	;
    8a36:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    8a3a:	7a 40 09 00 	mov.b	#9,	r10	;
    8a3e:	4a 9e       	cmp.b	r14,	r10	;
    8a40:	03 28       	jnc	$+8      	;abs 0x8a48
    8a42:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8a46:	02 3c       	jmp	$+6      	;abs 0x8a4c
    8a48:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8a4c:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    8a50:	cd 43 01 00 	mov.b	#0,	1(r13)	;r3 As==00
    8a54:	4e 4f       	mov.b	r15,	r14	;
    8a56:	5e 53       	inc.b	r14		;
    8a58:	4f 4e       	mov.b	r14,	r15	;
    8a5a:	1b 53       	inc	r11		;
    8a5c:	81 4b 02 00 	mov	r11,	2(r1)	;
    8a60:	2d 52       	add	#4,	r13	;r2 As==10
    8a62:	4e 9c       	cmp.b	r12,	r14	;
    8a64:	06 20       	jnz	$+14     	;abs 0x8a72
    8a66:	41 18 0c 5c 	rpt #2 { rlax.w	r12		;
    8a6a:	6c 53       	incd.b	r12		;
    8a6c:	c2 4c 60 24 	mov.b	r12,	&0x2460	;
    8a70:	04 3c       	jmp	$+10     	;abs 0x8a7a
    8a72:	7e 92       	cmp.b	#8,	r14	;r2 As==11
    8a74:	ce 23       	jnz	$-98     	;abs 0x8a12
    8a76:	0c 4f       	mov	r15,	r12	;
    8a78:	f6 3f       	jmp	$-18     	;abs 0x8a66
    8a7a:	21 52       	add	#4,	r1	;r2 As==10
    8a7c:	0a 17       	popm	#1,	r10	;16-bit words
    8a7e:	30 41       	ret			

00008a80 <USB_disable>:
    8a80:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8a84:	00 09 
    8a86:	82 43 02 09 	mov	#0,	&0x0902	;r3 As==00
    8a8a:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8a8e:	10 09 
    8a90:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8a94:	00 09 
    8a96:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8a9a:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8a9e:	4c 43       	clr.b	r12		;
    8aa0:	30 41       	ret			

00008aa2 <USB_setEnabledEvents>:
    8aa2:	82 4c 82 24 	mov	r12,	&0x2482	;
    8aa6:	4c 43       	clr.b	r12		;
    8aa8:	30 41       	ret			

00008aaa <USB_getEnabledEvents>:
    8aaa:	1c 42 82 24 	mov	&0x2482,r12	;0x2482
    8aae:	30 41       	ret			

00008ab0 <USB_reset>:
    8ab0:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8ab4:	00 09 
    8ab6:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8aba:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8abe:	c2 43 1b 24 	mov.b	#0,	&0x241b	;r3 As==00
    8ac2:	c2 43 25 24 	mov.b	#0,	&0x2425	;r3 As==00
    8ac6:	c2 43 24 24 	mov.b	#0,	&0x2424	;r3 As==00
    8aca:	c2 43 3c 09 	mov.b	#0,	&0x093c	;r3 As==00
    8ace:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8ad2:	b2 43 86 24 	mov	#-1,	&0x2486	;r3 As==11
    8ad6:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8ada:	c2 43 3f 09 	mov.b	#0,	&0x093f	;r3 As==00
    8ade:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8ae2:	21 09 
    8ae4:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    8ae8:	23 09 
    8aea:	f2 40 8c ff 	mov.b	#65420,	&0x0920	;#0xff8c
    8aee:	20 09 
    8af0:	f2 40 8c ff 	mov.b	#65420,	&0x0922	;#0xff8c
    8af4:	22 09 
    8af6:	f2 40 05 00 	mov.b	#5,	&0x092f	;
    8afa:	2f 09 
    8afc:	f2 40 07 00 	mov.b	#7,	&0x092e	;
    8b00:	2e 09 
    8b02:	5c 42 e6 80 	mov.b	&0x80e6,r12	;0x80e6
    8b06:	0d 4c       	mov	r12,	r13	;
    8b08:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    8b0c:	0e 4d       	mov	r13,	r14	;
    8b0e:	3e 50 c8 23 	add	#9160,	r14	;#0x23c8
    8b12:	fe 40 94 ff 	mov.b	#65428,	0(r14)	;#0xff94
    8b16:	00 00 
    8b18:	1f 42 f0 80 	mov	&0x80f0,r15	;0x80f0
    8b1c:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8b20:	5f 0b       	rrum	#3,	r15	;
    8b22:	ce 4f 01 00 	mov.b	r15,	1(r14)	;
    8b26:	1f 42 f2 80 	mov	&0x80f2,r15	;0x80f2
    8b2a:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8b2e:	5f 0b       	rrum	#3,	r15	;
    8b30:	ce 4f 05 00 	mov.b	r15,	5(r14)	;
    8b34:	fe 40 80 ff 	mov.b	#65408,	2(r14)	;#0xff80
    8b38:	02 00 
    8b3a:	3e 50 06 00 	add	#6,	r14	;
    8b3e:	fe 40 80 ff 	mov.b	#65408,	0(r14)	;#0xff80
    8b42:	00 00 
    8b44:	fe 40 40 00 	mov.b	#64,	1(r14)	;#0x0040
    8b48:	01 00 
    8b4a:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    8b4e:	fd 40 94 ff 	mov.b	#65428,	0(r13)	;#0xff94
    8b52:	00 00 
    8b54:	1e 42 ec 80 	mov	&0x80ec,r14	;0x80ec
    8b58:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8b5c:	5e 0b       	rrum	#3,	r14	;
    8b5e:	cd 4e 01 00 	mov.b	r14,	1(r13)	;
    8b62:	1e 42 ee 80 	mov	&0x80ee,r14	;0x80ee
    8b66:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8b6a:	5e 0b       	rrum	#3,	r14	;
    8b6c:	cd 4e 05 00 	mov.b	r14,	5(r13)	;
    8b70:	cd 43 02 00 	mov.b	#0,	2(r13)	;r3 As==00
    8b74:	3d 50 06 00 	add	#6,	r13	;
    8b78:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    8b7c:	fd 40 40 00 	mov.b	#64,	1(r13)	;#0x0040
    8b80:	01 00 
    8b82:	e2 93 e7 80 	cmp.b	#2,	&0x80e7	;r3 As==10
    8b86:	21 20       	jnz	$+68     	;abs 0x8bca
    8b88:	3c 53       	add	#-1,	r12	;r3 As==11
    8b8a:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8b8e:	3c 50 c8 23 	add	#9160,	r12	;#0x23c8
    8b92:	fc 40 94 ff 	mov.b	#65428,	0(r12)	;#0xff94
    8b96:	00 00 
    8b98:	1d 42 e8 80 	mov	&0x80e8,r13	;0x80e8
    8b9c:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8ba0:	5d 0b       	rrum	#3,	r13	;
    8ba2:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    8ba6:	1d 42 ea 80 	mov	&0x80ea,r13	;0x80ea
    8baa:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8bae:	5d 0b       	rrum	#3,	r13	;
    8bb0:	cc 4d 05 00 	mov.b	r13,	5(r12)	;
    8bb4:	fc 40 80 ff 	mov.b	#65408,	2(r12)	;#0xff80
    8bb8:	02 00 
    8bba:	3c 50 06 00 	add	#6,	r12	;
    8bbe:	fc 40 80 ff 	mov.b	#65408,	0(r12)	;#0xff80
    8bc2:	00 00 
    8bc4:	fc 40 40 00 	mov.b	#64,	1(r12)	;#0x0040
    8bc8:	01 00 
    8bca:	b0 12 f6 94 	call	#38134		;#0x94f6
    8bce:	f2 40 40 00 	mov.b	#64,	&0x093c	;#0x0040
    8bd2:	3c 09 
    8bd4:	c2 43 3e 09 	mov.b	#0,	&0x093e	;r3 As==00
    8bd8:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    8bdc:	3d 09 
    8bde:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8be2:	00 09 
    8be4:	4c 43       	clr.b	r12		;
    8be6:	30 41       	ret			

00008be8 <USB_connect>:
    8be8:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8bec:	00 09 
    8bee:	a2 d3 02 09 	bis	#2,	&0x0902	;r3 As==10
    8bf2:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    8bf6:	08 09 
    8bf8:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8bfc:	00 09 
    8bfe:	4c 43       	clr.b	r12		;
    8c00:	30 41       	ret			

00008c02 <USB_disconnect>:
    8c02:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8c06:	00 09 
    8c08:	a2 c3 02 09 	bic	#2,	&0x0902	;r3 As==10
    8c0c:	b2 f0 ff fb 	and	#64511,	&0x0908	;#0xfbff
    8c10:	08 09 
    8c12:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8c16:	00 09 
    8c18:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8c1c:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8c20:	4c 43       	clr.b	r12		;
    8c22:	30 41       	ret			

00008c24 <USB_forceRemoteWakeup>:
    8c24:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    8c28:	08 24       	jz	$+18     	;abs 0x8c3a
    8c2a:	d2 93 1b 24 	cmp.b	#1,	&0x241b	;r3 As==01
    8c2e:	08 20       	jnz	$+18     	;abs 0x8c40
    8c30:	f2 d0 20 00 	bis.b	#32,	&0x093c	;#0x0020
    8c34:	3c 09 
    8c36:	0c 43       	clr	r12		;
    8c38:	04 3c       	jmp	$+10     	;abs 0x8c42
    8c3a:	3c 40 10 00 	mov	#16,	r12	;#0x0010
    8c3e:	01 3c       	jmp	$+4      	;abs 0x8c42
    8c40:	1c 43       	mov	#1,	r12	;r3 As==01
    8c42:	30 41       	ret			

00008c44 <USB_getConnectionInformation>:
    8c44:	1d 42 08 09 	mov	&0x0908,r13	;0x0908
    8c48:	5d 0b       	rrum	#3,	r13	;
    8c4a:	5d f3       	and.b	#1,	r13	;r3 As==01
    8c4c:	4c 4d       	mov.b	r13,	r12	;
    8c4e:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8c52:	03 20       	jnz	$+8      	;abs 0x8c5a
    8c54:	7d d0 20 00 	bis.b	#32,	r13	;#0x0020
    8c58:	4c 4d       	mov.b	r13,	r12	;
    8c5a:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c5e:	04 24       	jz	$+10     	;abs 0x8c68
    8c60:	7c d0 40 00 	bis.b	#64,	r12	;#0x0040
    8c64:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c68:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8c6c:	02 20       	jnz	$+6      	;abs 0x8c72
    8c6e:	7c d2       	bis.b	#8,	r12	;r2 As==11
    8c70:	02 3c       	jmp	$+6      	;abs 0x8c76
    8c72:	7c d0 10 00 	bis.b	#16,	r12	;#0x0010
    8c76:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c7a:	30 41       	ret			

00008c7c <USB_getConnectionState>:
    8c7c:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c80:	36 24       	jz	$+110    	;abs 0x8cee
    8c82:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c86:	03 24       	jz	$+8      	;abs 0x8c8e
    8c88:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c8c:	33 24       	jz	$+104    	;abs 0x8cf4
    8c8e:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c92:	09 24       	jz	$+20     	;abs 0x8ca6
    8c94:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c98:	06 24       	jz	$+14     	;abs 0x8ca6
    8c9a:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8c9e:	03 20       	jnz	$+8      	;abs 0x8ca6
    8ca0:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8ca4:	2a 20       	jnz	$+86     	;abs 0x8cfa
    8ca6:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8caa:	09 24       	jz	$+20     	;abs 0x8cbe
    8cac:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cb0:	06 24       	jz	$+14     	;abs 0x8cbe
    8cb2:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8cb6:	03 24       	jz	$+8      	;abs 0x8cbe
    8cb8:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8cbc:	21 24       	jz	$+68     	;abs 0x8d00
    8cbe:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8cc2:	09 24       	jz	$+20     	;abs 0x8cd6
    8cc4:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cc8:	06 24       	jz	$+14     	;abs 0x8cd6
    8cca:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8cce:	03 20       	jnz	$+8      	;abs 0x8cd6
    8cd0:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8cd4:	18 24       	jz	$+50     	;abs 0x8d06
    8cd6:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8cda:	18 24       	jz	$+50     	;abs 0x8d0c
    8cdc:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8ce0:	15 24       	jz	$+44     	;abs 0x8d0c
    8ce2:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8ce6:	12 24       	jz	$+38     	;abs 0x8d0c
    8ce8:	3c 40 82 00 	mov	#130,	r12	;#0x0082
    8cec:	11 3c       	jmp	$+36     	;abs 0x8d10
    8cee:	3c 40 80 00 	mov	#128,	r12	;#0x0080
    8cf2:	0e 3c       	jmp	$+30     	;abs 0x8d10
    8cf4:	3c 40 81 00 	mov	#129,	r12	;#0x0081
    8cf8:	0b 3c       	jmp	$+24     	;abs 0x8d10
    8cfa:	3c 40 83 00 	mov	#131,	r12	;#0x0083
    8cfe:	08 3c       	jmp	$+18     	;abs 0x8d10
    8d00:	3c 40 87 00 	mov	#135,	r12	;#0x0087
    8d04:	05 3c       	jmp	$+12     	;abs 0x8d10
    8d06:	3c 40 84 00 	mov	#132,	r12	;#0x0084
    8d0a:	02 3c       	jmp	$+6      	;abs 0x8d10
    8d0c:	3c 40 86 00 	mov	#134,	r12	;#0x0086
    8d10:	30 41       	ret			

00008d12 <USB_suspend>:
    8d12:	d2 43 1d 24 	mov.b	#1,	&0x241d	;r3 As==01
    8d16:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8d1a:	00 09 
    8d1c:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8d20:	3c 09 
    8d22:	f2 f0 bf ff 	and.b	#65471,	&0x093e	;#0xffbf
    8d26:	3e 09 
    8d28:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8d2c:	10 09 
    8d2e:	b0 12 fe a8 	call	#43262		;#0xa8fe
    8d32:	f2 40 20 00 	mov.b	#32,	&0x093d	;#0x0020
    8d36:	3d 09 
    8d38:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8d3c:	00 09 
    8d3e:	4c 43       	clr.b	r12		;
    8d40:	30 41       	ret			

00008d42 <usbStallEndpoint0>:
    8d42:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8d46:	fc d2 00 00 	bis.b	#8,	0(r12)	;r2 As==11
    8d4a:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8d4e:	30 41       	ret			

00008d50 <usbClearOEP0ByteCount>:
    8d50:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8d54:	30 41       	ret			

00008d56 <usbStallOEP0>:
    8d56:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8d5a:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8d5e:	30 41       	ret			

00008d60 <usbSendNextPacketOnIEP0>:
    8d60:	1c 42 84 24 	mov	&0x2484,r12	;0x2484
    8d64:	3c 93       	cmp	#-1,	r12	;r3 As==11
    8d66:	2d 24       	jz	$+92     	;abs 0x8dc2
    8d68:	3d 42       	mov	#8,	r13	;r2 As==11
    8d6a:	0d 9c       	cmp	r12,	r13	;
    8d6c:	08 2c       	jc	$+18     	;abs 0x8d7e
    8d6e:	3c 50 f8 ff 	add	#65528,	r12	;#0xfff8
    8d72:	82 4c 84 24 	mov	r12,	&0x2484	;
    8d76:	d2 43 88 24 	mov.b	#1,	&0x2488	;r3 As==01
    8d7a:	0c 4d       	mov	r13,	r12	;
    8d7c:	11 3c       	jmp	$+36     	;abs 0x8da0
    8d7e:	3c 92       	cmp	#8,	r12	;r2 As==11
    8d80:	03 24       	jz	$+8      	;abs 0x8d88
    8d82:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8d86:	08 3c       	jmp	$+18     	;abs 0x8d98
    8d88:	d2 93 1e 24 	cmp.b	#1,	&0x241e	;r3 As==01
    8d8c:	05 20       	jnz	$+12     	;abs 0x8d98
    8d8e:	82 43 84 24 	mov	#0,	&0x2484	;r3 As==00
    8d92:	d2 43 88 24 	mov.b	#1,	&0x2488	;r3 As==01
    8d96:	04 3c       	jmp	$+10     	;abs 0x8da0
    8d98:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8d9c:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8da0:	1e 42 22 24 	mov	&0x2422,r14	;0x2422
    8da4:	0d 43       	clr	r13		;
    8da6:	4d 9c       	cmp.b	r12,	r13	;
    8da8:	06 2c       	jc	$+14     	;abs 0x8db6
    8daa:	0f 4e       	mov	r14,	r15	;
    8dac:	0f 5d       	add	r13,	r15	;
    8dae:	ed 4f 78 23 	mov.b	@r15,	9080(r13); 0x2378
    8db2:	1d 53       	inc	r13		;
    8db4:	f8 3f       	jmp	$-14     	;abs 0x8da6
    8db6:	0e 5c       	add	r12,	r14	;
    8db8:	82 4e 22 24 	mov	r14,	&0x2422	;
    8dbc:	c2 4c 21 09 	mov.b	r12,	&0x0921	;
    8dc0:	02 3c       	jmp	$+6      	;abs 0x8dc6
    8dc2:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8dc6:	30 41       	ret			

00008dc8 <usbSendDataPacketOnEP0>:
    8dc8:	82 4c 22 24 	mov	r12,	&0x2422	;
    8dcc:	1c 42 86 23 	mov	&0x2386,r12	;0x2386
    8dd0:	82 9c 84 24 	cmp	r12,	&0x2484	;
    8dd4:	05 28       	jnc	$+12     	;abs 0x8de0
    8dd6:	82 4c 84 24 	mov	r12,	&0x2484	;
    8dda:	c2 43 1e 24 	mov.b	#0,	&0x241e	;r3 As==00
    8dde:	02 3c       	jmp	$+6      	;abs 0x8de4
    8de0:	d2 43 1e 24 	mov.b	#1,	&0x241e	;r3 As==01
    8de4:	b0 12 60 8d 	call	#36192		;#0x8d60
    8de8:	30 41       	ret			

00008dea <usbReceiveNextPacketOnOEP0>:
    8dea:	5d 42 23 09 	mov.b	&0x0923,r13	;0x0923
    8dee:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    8df2:	82 9d 86 24 	cmp	r13,	&0x2486	;
    8df6:	1b 28       	jnc	$+56     	;abs 0x8e2e
    8df8:	1e 42 20 24 	mov	&0x2420,r14	;0x2420
    8dfc:	0c 43       	clr	r12		;
    8dfe:	4c 9d       	cmp.b	r13,	r12	;
    8e00:	07 2c       	jc	$+16     	;abs 0x8e10
    8e02:	0f 4e       	mov	r14,	r15	;
    8e04:	0f 5c       	add	r12,	r15	;
    8e06:	df 4c 70 23 	mov.b	9072(r12),0(r15)	;0x02370
    8e0a:	00 00 
    8e0c:	1c 53       	inc	r12		;
    8e0e:	f7 3f       	jmp	$-16     	;abs 0x8dfe
    8e10:	0e 5d       	add	r13,	r14	;
    8e12:	82 4e 20 24 	mov	r14,	&0x2420	;
    8e16:	1c 42 86 24 	mov	&0x2486,r12	;0x2486
    8e1a:	0c 8d       	sub	r13,	r12	;
    8e1c:	82 4c 86 24 	mov	r12,	&0x2486	;
    8e20:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e22:	05 24       	jz	$+12     	;abs 0x8e2e
    8e24:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e28:	e2 43 88 24 	mov.b	#2,	&0x2488	;r3 As==10
    8e2c:	04 3c       	jmp	$+10     	;abs 0x8e36
    8e2e:	b0 12 56 8d 	call	#36182		;#0x8d56
    8e32:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8e36:	30 41       	ret			

00008e38 <usbReceiveDataPacketOnEP0>:
    8e38:	82 4c 20 24 	mov	r12,	&0x2420	;
    8e3c:	92 42 86 23 	mov	&0x2386,&0x2486	;0x2386
    8e40:	86 24 
    8e42:	e2 43 88 24 	mov.b	#2,	&0x2488	;r3 As==10
    8e46:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e4a:	30 41       	ret			

00008e4c <usbSendZeroLengthPacketOnIEP0>:
    8e4c:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8e50:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8e54:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8e58:	30 41       	ret			

00008e5a <usbClearEndpointFeature>:
    8e5a:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8e5e:	4d 4e       	mov.b	r14,	r13	;
    8e60:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    8e64:	4c 4d       	mov.b	r13,	r12	;
    8e66:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e68:	03 20       	jnz	$+8      	;abs 0x8e70
    8e6a:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    8e6e:	13 3c       	jmp	$+40     	;abs 0x8e96
    8e70:	7d 53       	add.b	#-1,	r13	;r3 As==11
    8e72:	4c 4d       	mov.b	r13,	r12	;
    8e74:	7f 40 06 00 	mov.b	#6,	r15	;
    8e78:	4f 9d       	cmp.b	r13,	r15	;
    8e7a:	0d 28       	jnc	$+28     	;abs 0x8e96
    8e7c:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8e80:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8e84:	04 24       	jz	$+10     	;abs 0x8e8e
    8e86:	fc f0 d7 ff 	and.b	#65495,	9160(r12);#0xffd7, 0x23c8
    8e8a:	c8 23 
    8e8c:	ee 3f       	jmp	$-34     	;abs 0x8e6a
    8e8e:	fc f0 d7 ff 	and.b	#65495,	9096(r12);#0xffd7, 0x2388
    8e92:	88 23 
    8e94:	ea 3f       	jmp	$-42     	;abs 0x8e6a
    8e96:	4c 43       	clr.b	r12		;
    8e98:	30 41       	ret			

00008e9a <usbGetConfiguration>:
    8e9a:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e9e:	92 43 84 24 	mov	#1,	&0x2484	;r3 As==01
    8ea2:	3c 40 25 24 	mov	#9253,	r12	;#0x2425
    8ea6:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8eaa:	4c 43       	clr.b	r12		;
    8eac:	30 41       	ret			

00008eae <usbGetDeviceDescriptor>:
    8eae:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8eb2:	b2 40 12 00 	mov	#18,	&0x2484	;#0x0012
    8eb6:	84 24 
    8eb8:	3c 40 c1 81 	mov	#33217,	r12	;#0x81c1
    8ebc:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8ec0:	4c 43       	clr.b	r12		;
    8ec2:	30 41       	ret			

00008ec4 <usbGetConfigurationDescriptor>:
    8ec4:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ec8:	b2 40 43 00 	mov	#67,	&0x2484	;#0x0043
    8ecc:	84 24 
    8ece:	3c 40 7e 81 	mov	#33150,	r12	;#0x817e
    8ed2:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8ed6:	4c 43       	clr.b	r12		;
    8ed8:	30 41       	ret			

00008eda <usbGetStringDescriptor>:
    8eda:	5d 42 82 23 	mov.b	&0x2382,r13	;0x2382
    8ede:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ee2:	7c 40 05 00 	mov.b	#5,	r12	;
    8ee6:	4c 9d       	cmp.b	r13,	r12	;
    8ee8:	1d 28       	jnc	$+60     	;abs 0x8f24
    8eea:	3d 90 03 00 	cmp	#3,	r13	;
    8eee:	02 24       	jz	$+6      	;abs 0x8ef4
    8ef0:	0e 43       	clr	r14		;
    8ef2:	07 3c       	jmp	$+16     	;abs 0x8f02
    8ef4:	5d 42 60 24 	mov.b	&0x2460,r13	;0x2460
    8ef8:	82 4d 84 24 	mov	r13,	&0x2484	;
    8efc:	3c 40 60 24 	mov	#9312,	r12	;#0x2460
    8f00:	0e 3c       	jmp	$+30     	;abs 0x8f1e
    8f02:	4f 4d       	mov.b	r13,	r15	;
    8f04:	7f 53       	add.b	#-1,	r15	;r3 As==11
    8f06:	4d 4f       	mov.b	r15,	r13	;
    8f08:	0c 4e       	mov	r14,	r12	;
    8f0a:	3c 50 f4 80 	add	#33012,	r12	;#0x80f4
    8f0e:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    8f10:	03 24       	jz	$+8      	;abs 0x8f18
    8f12:	6c 4c       	mov.b	@r12,	r12	;
    8f14:	0e 5c       	add	r12,	r14	;
    8f16:	f5 3f       	jmp	$-20     	;abs 0x8f02
    8f18:	6d 4c       	mov.b	@r12,	r13	;
    8f1a:	82 4d 84 24 	mov	r13,	&0x2484	;
    8f1e:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8f22:	02 3c       	jmp	$+6      	;abs 0x8f28
    8f24:	b0 12 42 8d 	call	#36162		;#0x8d42
    8f28:	4c 43       	clr.b	r12		;
    8f2a:	30 41       	ret			

00008f2c <usbGetInterface>:
    8f2c:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f30:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f34:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8f38:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f3c:	dc 42 24 24 	mov.b	&0x2424,1(r12)	;0x2424
    8f40:	01 00 
    8f42:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8f46:	4c 43       	clr.b	r12		;
    8f48:	30 41       	ret			

00008f4a <usbGetDeviceStatus>:
    8f4a:	f2 b0 40 00 	bit.b	#64,	&0x8185	;#0x0040
    8f4e:	85 81 
    8f50:	02 24       	jz	$+6      	;abs 0x8f56
    8f52:	d2 43 58 24 	mov.b	#1,	&0x2458	;r3 As==01
    8f56:	d2 93 1b 24 	cmp.b	#1,	&0x241b	;r3 As==01
    8f5a:	02 20       	jnz	$+6      	;abs 0x8f60
    8f5c:	e2 d3 58 24 	bis.b	#2,	&0x2458	;r3 As==10
    8f60:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f64:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f68:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8f6c:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8f70:	4c 43       	clr.b	r12		;
    8f72:	30 41       	ret			

00008f74 <usbGetInterfaceStatus>:
    8f74:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f78:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f7c:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8f80:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f84:	dc 42 24 24 	mov.b	&0x2424,1(r12)	;0x2424
    8f88:	01 00 
    8f8a:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    8f8e:	4c 43       	clr.b	r12		;
    8f90:	30 41       	ret			

00008f92 <usbGetEndpointStatus>:
    8f92:	0a 15       	pushm	#1,	r10	;16-bit words
    8f94:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8f98:	4c 4e       	mov.b	r14,	r12	;
    8f9a:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    8f9e:	4d 4c       	mov.b	r12,	r13	;
    8fa0:	3f 40 c8 8d 	mov	#36296,	r15	;#0x8dc8
    8fa4:	0d 93       	cmp	#0,	r13	;r3 As==00
    8fa6:	0c 20       	jnz	$+26     	;abs 0x8fc0
    8fa8:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8fac:	06 24       	jz	$+14     	;abs 0x8fba
    8fae:	5a 42 20 09 	mov.b	&0x0920,r10	;0x0920
    8fb2:	7a f2       	and.b	#8,	r10	;r2 As==11
    8fb4:	c2 4a 58 24 	mov.b	r10,	&0x2458	;
    8fb8:	17 3c       	jmp	$+48     	;abs 0x8fe8
    8fba:	5c 42 22 09 	mov.b	&0x0922,r12	;0x0922
    8fbe:	11 3c       	jmp	$+36     	;abs 0x8fe2
    8fc0:	7c 53       	add.b	#-1,	r12	;r3 As==11
    8fc2:	4d 4c       	mov.b	r12,	r13	;
    8fc4:	7a 40 06 00 	mov.b	#6,	r10	;
    8fc8:	4a 9c       	cmp.b	r12,	r10	;
    8fca:	0e 28       	jnc	$+30     	;abs 0x8fe8
    8fcc:	0c 4d       	mov	r13,	r12	;
    8fce:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8fd2:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8fd6:	03 24       	jz	$+8      	;abs 0x8fde
    8fd8:	5c 4c c8 23 	mov.b	9160(r12),r12	;0x023c8
    8fdc:	02 3c       	jmp	$+6      	;abs 0x8fe2
    8fde:	5c 4c 88 23 	mov.b	9096(r12),r12	;0x02388
    8fe2:	7c f2       	and.b	#8,	r12	;r2 As==11
    8fe4:	c2 4c 58 24 	mov.b	r12,	&0x2458	;
    8fe8:	5c 42 58 24 	mov.b	&0x2458,r12	;0x2458
    8fec:	5c 0b       	rrum	#3,	r12	;
    8fee:	c2 4c 58 24 	mov.b	r12,	&0x2458	;
    8ff2:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ff6:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8ffa:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8ffe:	8f 12       	call	r15		;
    9000:	4c 43       	clr.b	r12		;
    9002:	0a 17       	popm	#1,	r10	;16-bit words
    9004:	30 41       	ret			

00009006 <usbSetAddress>:
    9006:	b0 12 56 8d 	call	#36182		;#0x8d56
    900a:	1c 42 82 23 	mov	&0x2382,r12	;0x2382
    900e:	3d 40 7f 00 	mov	#127,	r13	;#0x007f
    9012:	0d 9c       	cmp	r12,	r13	;
    9014:	05 28       	jnc	$+12     	;abs 0x9020
    9016:	c2 4c 3f 09 	mov.b	r12,	&0x093f	;
    901a:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    901e:	02 3c       	jmp	$+6      	;abs 0x9024
    9020:	b0 12 42 8d 	call	#36162		;#0x8d42
    9024:	4c 43       	clr.b	r12		;
    9026:	30 41       	ret			

00009028 <usbSetConfiguration>:
    9028:	b0 12 56 8d 	call	#36182		;#0x8d56
    902c:	d2 42 82 23 	mov.b	&0x2382,&0x2425	;0x2382
    9030:	25 24 
    9032:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    9036:	d2 93 25 24 	cmp.b	#1,	&0x2425	;r3 As==01
    903a:	07 20       	jnz	$+16     	;abs 0x904a
    903c:	d2 43 1c 24 	mov.b	#1,	&0x241c	;r3 As==01
    9040:	b0 12 00 87 	call	#34560		;#0x8700
    9044:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9048:	03 3c       	jmp	$+8      	;abs 0x9050
    904a:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    904e:	0c 43       	clr	r12		;
    9050:	30 41       	ret			

00009052 <usbClearDeviceFeature>:
    9052:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9056:	05 20       	jnz	$+12     	;abs 0x9062
    9058:	c2 43 1b 24 	mov.b	#0,	&0x241b	;r3 As==00
    905c:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    9060:	02 3c       	jmp	$+6      	;abs 0x9066
    9062:	b0 12 42 8d 	call	#36162		;#0x8d42
    9066:	4c 43       	clr.b	r12		;
    9068:	30 41       	ret			

0000906a <usbSetDeviceFeature>:
    906a:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    906e:	05 20       	jnz	$+12     	;abs 0x907a
    9070:	d2 43 1b 24 	mov.b	#1,	&0x241b	;r3 As==01
    9074:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    9078:	02 3c       	jmp	$+6      	;abs 0x907e
    907a:	b0 12 42 8d 	call	#36162		;#0x8d42
    907e:	4c 43       	clr.b	r12		;
    9080:	30 41       	ret			

00009082 <usbSetEndpointFeature>:
    9082:	82 93 82 23 	cmp	#0,	&0x2382	;r3 As==00
    9086:	1c 20       	jnz	$+58     	;abs 0x90c0
    9088:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    908c:	4d 4e       	mov.b	r14,	r13	;
    908e:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    9092:	4c 4d       	mov.b	r13,	r12	;
    9094:	0c 93       	cmp	#0,	r12	;r3 As==00
    9096:	03 20       	jnz	$+8      	;abs 0x909e
    9098:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    909c:	13 3c       	jmp	$+40     	;abs 0x90c4
    909e:	7d 53       	add.b	#-1,	r13	;r3 As==11
    90a0:	4c 4d       	mov.b	r13,	r12	;
    90a2:	7f 40 06 00 	mov.b	#6,	r15	;
    90a6:	4f 9d       	cmp.b	r13,	r15	;
    90a8:	0d 28       	jnc	$+28     	;abs 0x90c4
    90aa:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    90ae:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    90b2:	03 24       	jz	$+8      	;abs 0x90ba
    90b4:	fc d2 c8 23 	bis.b	#8,	9160(r12);r2 As==11, 0x23c8
    90b8:	ef 3f       	jmp	$-32     	;abs 0x9098
    90ba:	fc d2 88 23 	bis.b	#8,	9096(r12);r2 As==11, 0x2388
    90be:	ec 3f       	jmp	$-38     	;abs 0x9098
    90c0:	b0 12 42 8d 	call	#36162		;#0x8d42
    90c4:	4c 43       	clr.b	r12		;
    90c6:	30 41       	ret			

000090c8 <usbSetInterface>:
    90c8:	b0 12 56 8d 	call	#36182		;#0x8d56
    90cc:	d2 42 84 23 	mov.b	&0x2384,&0x2424	;0x2384
    90d0:	24 24 
    90d2:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    90d6:	4c 43       	clr.b	r12		;
    90d8:	30 41       	ret			

000090da <usbInvalidRequest>:
    90da:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    90de:	02 20       	jnz	$+6      	;abs 0x90e4
    90e0:	b0 12 42 8d 	call	#36162		;#0x8d42
    90e4:	4c 43       	clr.b	r12		;
    90e6:	30 41       	ret			

000090e8 <usbDecodeAndProcessUsbRequest>:
    90e8:	3a 15       	pushm	#4,	r10	;16-bit words
    90ea:	5b 42 80 23 	mov.b	&0x2380,r11	;0x2380
    90ee:	5a 42 81 23 	mov.b	&0x2381,r10	;0x2381
    90f2:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    90f6:	49 4b       	mov.b	r11,	r9	;
    90f8:	79 f0 7f 00 	and.b	#127,	r9	;#0x007f
    90fc:	6e 4c       	mov.b	@r12,	r14	;
    90fe:	5d 4c 01 00 	mov.b	1(r12),	r13	;
    9102:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    9104:	02 20       	jnz	$+6      	;abs 0x910a
    9106:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    9108:	24 24       	jz	$+74     	;abs 0x9152
    910a:	79 90 40 00 	cmp.b	#64,	r9	;#0x0040
    910e:	21 24       	jz	$+68     	;abs 0x9152
    9110:	0e 9b       	cmp	r11,	r14	;
    9112:	1c 20       	jnz	$+58     	;abs 0x914c
    9114:	0d 9a       	cmp	r10,	r13	;
    9116:	1a 20       	jnz	$+54     	;abs 0x914c
    9118:	08 4c       	mov	r12,	r8	;
    911a:	28 53       	incd	r8		;
    911c:	0e 43       	clr	r14		;
    911e:	3d 40 c0 00 	mov	#192,	r13	;#0x00c0
    9122:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9126:	07 48       	mov	r8,	r7	;
    9128:	07 5e       	add	r14,	r7	;
    912a:	ee 97 82 23 	cmp.b	@r7,	9090(r14); 0x2382
    912e:	03 20       	jnz	$+8      	;abs 0x9136
    9130:	4d df       	bis.b	r15,	r13	;
    9132:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9136:	12 c3       	clrc			
    9138:	0f 10       	rrc	r15		;
    913a:	1e 53       	inc	r14		;
    913c:	3e 90 06 00 	cmp	#6,	r14	;
    9140:	f2 23       	jnz	$-26     	;abs 0x9126
    9142:	5d fc 08 00 	and.b	8(r12),	r13	;
    9146:	5d 9c 08 00 	cmp.b	8(r12),	r13	;
    914a:	03 24       	jz	$+8      	;abs 0x9152
    914c:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    9150:	d5 3f       	jmp	$-84     	;abs 0x90fc
    9152:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9156:	06 20       	jnz	$+14     	;abs 0x9164
    9158:	1c 4c 0a 00 	mov	10(r12),r12	;0x0000a
    915c:	8c 12       	call	r12		;
    915e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9162:	01 3c       	jmp	$+4      	;abs 0x9166
    9164:	0c 43       	clr	r12		;
    9166:	37 17       	popm	#4,	r10	;16-bit words
    9168:	30 41       	ret			

0000916a <usbDisableInEndpointInterrupt>:
    916a:	0a 15       	pushm	#1,	r10	;16-bit words
    916c:	4d 4c       	mov.b	r12,	r13	;
    916e:	5a 42 2e 09 	mov.b	&0x092e,r10	;0x092e
    9172:	1c 43       	mov	#1,	r12	;r3 As==01
    9174:	0d 5c       	add	r12,	r13	;
    9176:	b0 12 0a b1 	call	#45322		;#0xb10a
    917a:	c2 cc 2e 09 	bic.b	r12,	&0x092e	;
    917e:	0c fa       	and	r10,	r12	;
    9180:	0a 17       	popm	#1,	r10	;16-bit words
    9182:	30 41       	ret			

00009184 <usbRestoreInEndpointInterrupt>:
    9184:	c2 dc 2e 09 	bis.b	r12,	&0x092e	;
    9188:	30 41       	ret			

0000918a <usbDisableOutEndpointInterrupt>:
    918a:	0a 15       	pushm	#1,	r10	;16-bit words
    918c:	4d 4c       	mov.b	r12,	r13	;
    918e:	5a 42 2f 09 	mov.b	&0x092f,r10	;0x092f
    9192:	1c 43       	mov	#1,	r12	;r3 As==01
    9194:	0d 5c       	add	r12,	r13	;
    9196:	b0 12 0a b1 	call	#45322		;#0xb10a
    919a:	c2 cc 2f 09 	bic.b	r12,	&0x092f	;
    919e:	0c fa       	and	r10,	r12	;
    91a0:	0a 17       	popm	#1,	r10	;16-bit words
    91a2:	30 41       	ret			

000091a4 <usbRestoreOutEndpointInterrupt>:
    91a4:	c2 dc 2f 09 	bis.b	r12,	&0x092f	;
    91a8:	30 41       	ret			

000091aa <USB_determineFreq>:
    91aa:	2a 15       	pushm	#3,	r10	;16-bit words
    91ac:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    91b0:	7c f0 07 00 	and.b	#7,	r12	;
    91b4:	6d 42       	mov.b	#4,	r13	;r2 As==10
    91b6:	4d 9c       	cmp.b	r12,	r13	;
    91b8:	52 28       	jnc	$+166    	;abs 0x925e
    91ba:	5d 42 66 01 	mov.b	&0x0166,r13	;0x0166
    91be:	7d f0 70 00 	and.b	#112,	r13	;#0x0070
    91c2:	7e 40 4f 00 	mov.b	#79,	r14	;#0x004f
    91c6:	4e 9d       	cmp.b	r13,	r14	;
    91c8:	03 2c       	jc	$+8      	;abs 0x91d0
    91ca:	38 40 c0 5d 	mov	#24000,	r8	;#0x5dc0
    91ce:	02 3c       	jmp	$+6      	;abs 0x91d4
    91d0:	38 40 21 00 	mov	#33,	r8	;#0x0021
    91d4:	1a 42 64 01 	mov	&0x0164,r10	;0x0164
    91d8:	3a f0 ff 03 	and	#1023,	r10	;#0x03ff
    91dc:	1a 53       	inc	r10		;
    91de:	7c 90 03 00 	cmp.b	#3,	r12	;
    91e2:	0b 20       	jnz	$+24     	;abs 0x91fa
    91e4:	1d 42 64 01 	mov	&0x0164,r13	;0x0164
    91e8:	3d f0 00 70 	and	#28672,	r13	;#0x7000
    91ec:	0c 4a       	mov	r10,	r12	;
    91ee:	5d 03       	rrum	#1,	r13	;
    91f0:	4a 18 0d 11 	rpt #11 { rrax.w	r13		;
    91f4:	b0 12 0a b1 	call	#45322		;#0xb10a
    91f8:	0a 4c       	mov	r12,	r10	;
    91fa:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    91fe:	7c f0 07 00 	and.b	#7,	r12	;
    9202:	4d 4c       	mov.b	r12,	r13	;
    9204:	0d 93       	cmp	#0,	r13	;r3 As==00
    9206:	03 20       	jnz	$+8      	;abs 0x920e
    9208:	0c 4a       	mov	r10,	r12	;
    920a:	0d 48       	mov	r8,	r13	;
    920c:	1d 3c       	jmp	$+60     	;abs 0x9248
    920e:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    9210:	05 20       	jnz	$+12     	;abs 0x921c
    9212:	0c 4a       	mov	r10,	r12	;
    9214:	0d 48       	mov	r8,	r13	;
    9216:	12 c3       	clrc			
    9218:	0d 10       	rrc	r13		;
    921a:	16 3c       	jmp	$+46     	;abs 0x9248
    921c:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    921e:	04 20       	jnz	$+10     	;abs 0x9228
    9220:	0c 4a       	mov	r10,	r12	;
    9222:	0d 48       	mov	r8,	r13	;
    9224:	5d 07       	rrum	#2,	r13	;
    9226:	10 3c       	jmp	$+34     	;abs 0x9248
    9228:	7c 90 03 00 	cmp.b	#3,	r12	;
    922c:	04 20       	jnz	$+10     	;abs 0x9236
    922e:	0c 4a       	mov	r10,	r12	;
    9230:	0d 48       	mov	r8,	r13	;
    9232:	5d 0b       	rrum	#3,	r13	;
    9234:	09 3c       	jmp	$+20     	;abs 0x9248
    9236:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    9238:	0b 20       	jnz	$+24     	;abs 0x9250
    923a:	0c 48       	mov	r8,	r12	;
    923c:	3d 40 0c 00 	mov	#12,	r13	;#0x000c
    9240:	b0 12 de af 	call	#45022		;#0xafde
    9244:	0d 4c       	mov	r12,	r13	;
    9246:	0c 4a       	mov	r10,	r12	;
    9248:	b0 12 10 b2 	call	#45584		;#0xb210
    924c:	09 4c       	mov	r12,	r9	;
    924e:	09 3c       	jmp	$+20     	;abs 0x9262
    9250:	7c 90 05 00 	cmp.b	#5,	r12	;
    9254:	06 20       	jnz	$+14     	;abs 0x9262
    9256:	0c 4a       	mov	r10,	r12	;
    9258:	0d 48       	mov	r8,	r13	;
    925a:	5d 0f       	rrum	#4,	r13	;
    925c:	f5 3f       	jmp	$-20     	;abs 0x9248
    925e:	39 40 c0 5d 	mov	#24000,	r9	;#0x5dc0
    9262:	5d 42 6a 01 	mov.b	&0x016a,r13	;0x016a
    9266:	7d f0 07 00 	and.b	#7,	r13	;
    926a:	0c 49       	mov	r9,	r12	;
    926c:	3d f0 07 00 	and	#7,	r13	;
    9270:	b0 12 9e b1 	call	#45470		;#0xb19e
    9274:	28 17       	popm	#3,	r10	;16-bit words
    9276:	30 41       	ret			

00009278 <USB_init>:
    9278:	0a 15       	pushm	#1,	r10	;16-bit words
    927a:	21 82       	sub	#4,	r1	;r2 As==10
    927c:	0a 42       	mov	r2,	r10	;
    927e:	3a f2       	and	#8,	r10	;r2 As==11
    9280:	b0 12 aa 91 	call	#37290		;#0x91aa
    9284:	0e 4c       	mov	r12,	r14	;
    9286:	5e 0f       	rrum	#4,	r14	;
    9288:	5e 0b       	rrum	#3,	r14	;
    928a:	0d 4c       	mov	r12,	r13	;
    928c:	5d 0f       	rrum	#4,	r13	;
    928e:	5d 07       	rrum	#2,	r13	;
    9290:	0d 5e       	add	r14,	r13	;
    9292:	5c 03       	rrum	#1,	r12	;
    9294:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9298:	0c 5d       	add	r13,	r12	;
    929a:	32 c2       	dint			
    929c:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    92a0:	00 09 
    92a2:	b2 40 80 00 	mov	#128,	&0x0904	;#0x0080
    92a6:	04 09 
    92a8:	b2 40 40 08 	mov	#2112,	&0x0908	;#0x0840
    92ac:	08 09 
    92ae:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    92b2:	1d 41 02 00 	mov	2(r1),	r13	;
    92b6:	3e 40 13 00 	mov	#19,	r14	;#0x0013
    92ba:	0e 9d       	cmp	r13,	r14	;
    92bc:	0c 28       	jnc	$+26     	;abs 0x92d6
    92be:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    92c2:	2d 41       	mov	@r1,	r13	;
    92c4:	0d 9c       	cmp	r12,	r13	;
    92c6:	04 2c       	jc	$+10     	;abs 0x92d0
    92c8:	03 43       	nop			
    92ca:	91 53 00 00 	inc	0(r1)		;
    92ce:	f9 3f       	jmp	$-12     	;abs 0x92c2
    92d0:	91 53 02 00 	inc	2(r1)		;
    92d4:	ee 3f       	jmp	$-34     	;abs 0x92b2
    92d6:	b2 d0 00 02 	bis	#512,	&0x0908	;#0x0200
    92da:	08 09 
    92dc:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    92e0:	00 09 
    92e2:	82 43 82 24 	mov	#0,	&0x2482	;r3 As==00
    92e6:	b0 12 d6 89 	call	#35286		;#0x89d6
    92ea:	b0 12 b0 94 	call	#38064		;#0x94b0
    92ee:	02 da       	bis	r10,	r2	;
    92f0:	4c 43       	clr.b	r12		;
    92f2:	21 52       	add	#4,	r1	;r2 As==10
    92f4:	0a 17       	popm	#1,	r10	;16-bit words
    92f6:	30 41       	ret			

000092f8 <USB_enable>:
    92f8:	1a 15       	pushm	#2,	r10	;16-bit words
    92fa:	31 80 06 00 	sub	#6,	r1	;
    92fe:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    9302:	b0 12 aa 91 	call	#37290		;#0x91aa
    9306:	0a 4c       	mov	r12,	r10	;
    9308:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    930c:	55 24       	jz	$+172    	;abs 0x93b8
    930e:	92 b3 02 09 	bit	#1,	&0x0902	;r3 As==01
    9312:	04 24       	jz	$+10     	;abs 0x931c
    9314:	b2 b0 00 01 	bit	#256,	&0x0910	;#0x0100
    9318:	10 09 
    931a:	5a 20       	jnz	$+182    	;abs 0x93d0
    931c:	39 40 b6 a0 	mov	#41142,	r9	;#0xa0b6
    9320:	7c 40 05 00 	mov.b	#5,	r12	;
    9324:	2d 42       	mov	#4,	r13	;r2 As==10
    9326:	89 12       	call	r9		;
    9328:	7c 40 05 00 	mov.b	#5,	r12	;
    932c:	3d 42       	mov	#8,	r13	;r2 As==11
    932e:	89 12       	call	r9		;
    9330:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9334:	00 09 
    9336:	3c 40 00 c0 	mov	#49152,	r12	;#0xc000
    933a:	3d 40 50 c3 	mov	#50000,	r13	;#0xc350
    933e:	b0 12 8a a8 	call	#43146		;#0xa88a
    9342:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9344:	39 24       	jz	$+116    	;abs 0x93b8
    9346:	b2 40 0f 05 	mov	#1295,	&0x0912	;#0x050f
    934a:	12 09 
    934c:	b2 40 00 03 	mov	#768,	&0x0910	;#0x0300
    9350:	10 09 
    9352:	5d 42 1d 24 	mov.b	&0x241d,r13	;0x241d
    9356:	0e 4a       	mov	r10,	r14	;
    9358:	5e 0f       	rrum	#4,	r14	;
    935a:	5e 0b       	rrum	#3,	r14	;
    935c:	0c 4a       	mov	r10,	r12	;
    935e:	5c 03       	rrum	#1,	r12	;
    9360:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9364:	0c 5e       	add	r14,	r12	;
    9366:	5a 0f       	rrum	#4,	r10	;
    9368:	5a 07       	rrum	#2,	r10	;
    936a:	0a 5c       	add	r12,	r10	;
    936c:	82 43 14 09 	mov	#0,	&0x0914	;r3 As==00
    9370:	5c 43       	mov.b	#1,	r12	;r3 As==01
    9372:	4c 9d       	cmp.b	r13,	r12	;
    9374:	0e 2c       	jc	$+30     	;abs 0x9392
    9376:	1c 41 04 00 	mov	4(r1),	r12	;
    937a:	0e 4c       	mov	r12,	r14	;
    937c:	1e 53       	inc	r14		;
    937e:	81 4e 04 00 	mov	r14,	4(r1)	;
    9382:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9386:	0e 9c       	cmp	r12,	r14	;
    9388:	19 2c       	jc	$+52     	;abs 0x93bc
    938a:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    938e:	00 09 
    9390:	13 3c       	jmp	$+40     	;abs 0x93b8
    9392:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9396:	1c 41 02 00 	mov	2(r1),	r12	;
    939a:	1e 43       	mov	#1,	r14	;r3 As==01
    939c:	0e 9c       	cmp	r12,	r14	;
    939e:	eb 2b       	jnc	$-40     	;abs 0x9376
    93a0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    93a4:	2c 41       	mov	@r1,	r12	;
    93a6:	0c 9a       	cmp	r10,	r12	;
    93a8:	04 2c       	jc	$+10     	;abs 0x93b2
    93aa:	03 43       	nop			
    93ac:	91 53 00 00 	inc	0(r1)		;
    93b0:	f9 3f       	jmp	$-12     	;abs 0x93a4
    93b2:	91 53 02 00 	inc	2(r1)		;
    93b6:	ef 3f       	jmp	$-32     	;abs 0x9396
    93b8:	1c 43       	mov	#1,	r12	;r3 As==01
    93ba:	0b 3c       	jmp	$+24     	;abs 0x93d2
    93bc:	1c 42 14 09 	mov	&0x0914,r12	;0x0914
    93c0:	0c 93       	cmp	#0,	r12	;r3 As==00
    93c2:	d4 23       	jnz	$-86     	;abs 0x936c
    93c4:	92 d3 02 09 	bis	#1,	&0x0902	;r3 As==01
    93c8:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    93cc:	00 09 
    93ce:	01 3c       	jmp	$+4      	;abs 0x93d2
    93d0:	0c 43       	clr	r12		;
    93d2:	31 50 06 00 	add	#6,	r1	;
    93d6:	19 17       	popm	#2,	r10	;16-bit words
    93d8:	30 41       	ret			

000093da <USB_setup>:
    93da:	2a 15       	pushm	#3,	r10	;16-bit words
    93dc:	49 4c       	mov.b	r12,	r9	;
    93de:	48 4d       	mov.b	r13,	r8	;
    93e0:	b0 12 78 92 	call	#37496		;#0x9278
    93e4:	4a 4c       	mov.b	r12,	r10	;
    93e6:	08 93       	cmp	#0,	r8	;r3 As==00
    93e8:	03 24       	jz	$+8      	;abs 0x93f0
    93ea:	b2 40 ff 01 	mov	#511,	&0x2482	;#0x01ff
    93ee:	82 24 
    93f0:	09 93       	cmp	#0,	r9	;r3 As==00
    93f2:	0c 24       	jz	$+26     	;abs 0x940c
    93f4:	b0 12 44 8c 	call	#35908		;#0x8c44
    93f8:	1c b3       	bit	#1,	r12	;r3 As==01
    93fa:	08 24       	jz	$+18     	;abs 0x940c
    93fc:	b0 12 f8 92 	call	#37624		;#0x92f8
    9400:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9402:	04 20       	jnz	$+10     	;abs 0x940c
    9404:	b0 12 b0 8a 	call	#35504		;#0x8ab0
    9408:	b0 12 e8 8b 	call	#35816		;#0x8be8
    940c:	4c 4a       	mov.b	r10,	r12	;
    940e:	28 17       	popm	#3,	r10	;16-bit words
    9410:	30 41       	ret			

00009412 <USB_resume>:
    9412:	b0 12 f8 92 	call	#37624		;#0x92f8
    9416:	f2 f0 9f ff 	and.b	#65439,	&0x093e	;#0xff9f
    941a:	3e 09 
    941c:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    9420:	3d 09 
    9422:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    9426:	4c 43       	clr.b	r12		;
    9428:	30 41       	ret			

0000942a <memcpyV>:
    942a:	21 83       	decd	r1		;
    942c:	0f 43       	clr	r15		;
    942e:	0f 9e       	cmp	r14,	r15	;
    9430:	0b 24       	jz	$+24     	;abs 0x9448
    9432:	0b 4d       	mov	r13,	r11	;
    9434:	0b 5f       	add	r15,	r11	;
    9436:	e1 4b 01 00 	mov.b	@r11,	1(r1)	;
    943a:	0b 4c       	mov	r12,	r11	;
    943c:	0b 5f       	add	r15,	r11	;
    943e:	db 41 01 00 	mov.b	1(r1),	0(r11)	;
    9442:	00 00 
    9444:	1f 53       	inc	r15		;
    9446:	f3 3f       	jmp	$-24     	;abs 0x942e
    9448:	21 53       	incd	r1		;
    944a:	30 41       	ret			

0000944c <memcpyDMA>:
    944c:	2a 15       	pushm	#3,	r10	;16-bit words
    944e:	0a 4c       	mov	r12,	r10	;
    9450:	08 4d       	mov	r13,	r8	;
    9452:	09 4e       	mov	r14,	r9	;
    9454:	0e 93       	cmp	#0,	r14	;r3 As==00
    9456:	29 24       	jz	$+84     	;abs 0x94aa
    9458:	b0 12 98 a3 	call	#41880		;#0xa398
    945c:	4c 43       	clr.b	r12		;
    945e:	0d 48       	mov	r8,	r13	;
    9460:	0e 48       	mov	r8,	r14	;
    9462:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9466:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    946a:	b0 12 da a2 	call	#41690		;#0xa2da
    946e:	4c 43       	clr.b	r12		;
    9470:	0d 4a       	mov	r10,	r13	;
    9472:	0e 4a       	mov	r10,	r14	;
    9474:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9478:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    947c:	b0 12 06 a3 	call	#41734		;#0xa306
    9480:	b0 12 9e a3 	call	#41886		;#0xa39e
    9484:	4c 43       	clr.b	r12		;
    9486:	0d 49       	mov	r9,	r13	;
    9488:	b0 12 c6 a2 	call	#41670		;#0xa2c6
    948c:	4c 43       	clr.b	r12		;
    948e:	b0 12 36 a3 	call	#41782		;#0xa336
    9492:	4c 43       	clr.b	r12		;
    9494:	b0 12 4e a3 	call	#41806		;#0xa34e
    9498:	39 40 6c a3 	mov	#41836,	r9	;#0xa36c
    949c:	4c 43       	clr.b	r12		;
    949e:	89 12       	call	r9		;
    94a0:	0c 93       	cmp	#0,	r12	;r3 As==00
    94a2:	fc 27       	jz	$-6      	;abs 0x949c
    94a4:	4c 43       	clr.b	r12		;
    94a6:	b0 12 42 a3 	call	#41794		;#0xa342
    94aa:	0c 4a       	mov	r10,	r12	;
    94ac:	28 17       	popm	#3,	r10	;16-bit words
    94ae:	30 41       	ret			

000094b0 <USB_initMemcpy>:
    94b0:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    94b4:	0c 41       	mov	r1,	r12	;
    94b6:	0d 43       	clr	r13		;
    94b8:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    94bc:	b0 12 44 b2 	call	#45636		;#0xb244
    94c0:	b1 40 00 10 	mov	#4096,	2(r1)	;#0x1000
    94c4:	02 00 
    94c6:	f1 40 c0 ff 	mov.b	#65472,	7(r1)	;#0xffc0
    94ca:	07 00 
    94cc:	f1 40 20 00 	mov.b	#32,	8(r1)	;#0x0020
    94d0:	08 00 
    94d2:	b2 40 2a 94 	mov	#37930,	&0x248c	;#0x942a
    94d6:	8c 24 
    94d8:	b2 40 2a 94 	mov	#37930,	&0x248a	;#0x942a
    94dc:	8a 24 
    94de:	0c 41       	mov	r1,	r12	;
    94e0:	b0 12 74 a2 	call	#41588		;#0xa274
    94e4:	b2 40 4c 94 	mov	#37964,	&0x248c	;#0x944c
    94e8:	8c 24 
    94ea:	b2 40 4c 94 	mov	#37964,	&0x248a	;#0x944c
    94ee:	8a 24 
    94f0:	31 50 0a 00 	add	#10,	r1	;#0x000a
    94f4:	30 41       	ret			

000094f6 <CdcResetData>:
    94f6:	0a 15       	pushm	#1,	r10	;16-bit words
    94f8:	3a 40 44 b2 	mov	#45636,	r10	;#0xb244
    94fc:	3c 40 36 24 	mov	#9270,	r12	;#0x2436
    9500:	0d 43       	clr	r13		;
    9502:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9506:	8a 12       	call	r10		;
    9508:	3c 40 26 24 	mov	#9254,	r12	;#0x2426
    950c:	0d 43       	clr	r13		;
    950e:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9512:	8a 12       	call	r10		;
    9514:	3c 40 40 24 	mov	#9280,	r12	;#0x2440
    9518:	0d 43       	clr	r13		;
    951a:	3e 42       	mov	#8,	r14	;r2 As==11
    951c:	8a 12       	call	r10		;
    951e:	f2 42 44 24 	mov.b	#8,	&0x2444	;r2 As==11
    9522:	0a 17       	popm	#1,	r10	;16-bit words
    9524:	30 41       	ret			

00009526 <USBCDC_sendData>:
    9526:	6a 15       	pushm	#7,	r10	;16-bit words
    9528:	4a 4e       	mov.b	r14,	r10	;
    952a:	0e 4a       	mov	r10,	r14	;
    952c:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    9530:	3e 50 e4 80 	add	#32996,	r14	;#0x80e4
    9534:	54 4e 02 00 	mov.b	2(r14),	r4	;
    9538:	0d 93       	cmp	#0,	r13	;r3 As==00
    953a:	36 24       	jz	$+110    	;abs 0x95a8
    953c:	08 4d       	mov	r13,	r8	;
    953e:	07 4c       	mov	r12,	r7	;
    9540:	4c 44       	mov.b	r4,	r12	;
    9542:	b0 12 6a 91 	call	#37226		;#0x916a
    9546:	05 4c       	mov	r12,	r5	;
    9548:	36 40 84 91 	mov	#37252,	r6	;#0x9184
    954c:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9550:	04 20       	jnz	$+10     	;abs 0x955a
    9552:	59 42 1c 24 	mov.b	&0x241c,r9	;0x241c
    9556:	19 93       	cmp	#1,	r9	;r3 As==01
    9558:	04 24       	jz	$+10     	;abs 0x9562
    955a:	0c 45       	mov	r5,	r12	;
    955c:	86 12       	call	r6		;
    955e:	39 42       	mov	#8,	r9	;r2 As==11
    9560:	25 3c       	jmp	$+76     	;abs 0x95ac
    9562:	0e 4a       	mov	r10,	r14	;
    9564:	0e 5a       	add	r10,	r14	;
    9566:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    956a:	0a 5e       	add	r14,	r10	;
    956c:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    9570:	0d 4a       	mov	r10,	r13	;
    9572:	2d 53       	incd	r13		;
    9574:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9578:	04 24       	jz	$+10     	;abs 0x9582
    957a:	86 12       	call	r6		;
    957c:	39 40 03 00 	mov	#3,	r9	;
    9580:	15 3c       	jmp	$+44     	;abs 0x95ac
    9582:	8a 48 00 00 	mov	r8,	0(r10)	;
    9586:	8d 48 00 00 	mov	r8,	0(r13)	;
    958a:	8a 47 04 00 	mov	r7,	4(r10)	;
    958e:	5a 42 30 09 	mov.b	&0x0930,r10	;0x0930
    9592:	1c 43       	mov	#1,	r12	;r3 As==01
    9594:	0d 44       	mov	r4,	r13	;
    9596:	0d 5c       	add	r12,	r13	;
    9598:	b0 12 0a b1 	call	#45322		;#0xb10a
    959c:	4c da       	bis.b	r10,	r12	;
    959e:	c2 4c 30 09 	mov.b	r12,	&0x0930	;
    95a2:	0c 45       	mov	r5,	r12	;
    95a4:	86 12       	call	r6		;
    95a6:	02 3c       	jmp	$+6      	;abs 0x95ac
    95a8:	39 40 07 00 	mov	#7,	r9	;
    95ac:	4c 49       	mov.b	r9,	r12	;
    95ae:	64 17       	popm	#7,	r10	;16-bit words
    95b0:	30 41       	ret			

000095b2 <CdcToHostFromBuffer>:
    95b2:	6a 15       	pushm	#7,	r10	;16-bit words
    95b4:	21 83       	decd	r1		;
    95b6:	4a 4c       	mov.b	r12,	r10	;
    95b8:	0c 4a       	mov	r10,	r12	;
    95ba:	43 18 0c 5c 	rpt #4 { rlax.w	r12		;
    95be:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    95c2:	5f 4c 02 00 	mov.b	2(r12),	r15	;
    95c6:	06 4a       	mov	r10,	r6	;
    95c8:	06 5a       	add	r10,	r6	;
    95ca:	0e 4a       	mov	r10,	r14	;
    95cc:	42 18 0e 5e 	rpt #3 { rlax.w	r14		;
    95d0:	08 46       	mov	r6,	r8	;
    95d2:	08 5e       	add	r14,	r8	;
    95d4:	38 50 36 24 	add	#9270,	r8	;#0x2436
    95d8:	1d 48 02 00 	mov	2(r8),	r13	;
    95dc:	09 48       	mov	r8,	r9	;
    95de:	39 50 06 00 	add	#6,	r9	;
    95e2:	0d 93       	cmp	#0,	r13	;r3 As==00
    95e4:	32 20       	jnz	$+102    	;abs 0x964a
    95e6:	c9 93 01 00 	cmp.b	#0,	1(r9)	;r3 As==00
    95ea:	aa 20       	jnz	$+342    	;abs 0x9740
    95ec:	d9 43 01 00 	mov.b	#1,	1(r9)	;r3 As==01
    95f0:	f8 90 40 00 	cmp.b	#64,	8(r8)	;#0x0040
    95f4:	08 00 
    95f6:	19 20       	jnz	$+52     	;abs 0x962a
    95f8:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    95fc:	0c 4f       	mov	r15,	r12	;
    95fe:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    9602:	0a 20       	jnz	$+22     	;abs 0x9618
    9604:	3c 50 ca 23 	add	#9162,	r12	;#0x23ca
    9608:	cf 93 ca 23 	cmp.b	#0,	9162(r15);r3 As==00, 0x23ca
    960c:	0e 34       	jge	$+30     	;abs 0x962a
    960e:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    9612:	d9 43 00 00 	mov.b	#1,	0(r9)	;r3 As==01
    9616:	09 3c       	jmp	$+20     	;abs 0x962a
    9618:	3c 50 ce 23 	add	#9166,	r12	;#0x23ce
    961c:	cf 93 ce 23 	cmp.b	#0,	9166(r15);r3 As==00, 0x23ce
    9620:	04 34       	jge	$+10     	;abs 0x962a
    9622:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    9626:	c9 4d 00 00 	mov.b	r13,	0(r9)	;
    962a:	0e 46       	mov	r6,	r14	;
    962c:	41 18 0e 5e 	rpt #2 { rlax.w	r14		;
    9630:	06 5e       	add	r14,	r6	;
    9632:	86 43 36 24 	mov	#0,	9270(r6);r3 As==00, 0x2436
    9636:	f2 b0 80 00 	bit.b	#128,	&0x2482	;#0x0080
    963a:	82 24 
    963c:	81 24       	jz	$+260    	;abs 0x9740
    963e:	4c 4a       	mov.b	r10,	r12	;
    9640:	b0 12 0c 87 	call	#34572		;#0x870c
    9644:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9648:	7c 3c       	jmp	$+250    	;abs 0x9742
    964a:	c9 43 01 00 	mov.b	#0,	1(r9)	;r3 As==00
    964e:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    9652:	08 4c       	mov	r12,	r8	;
    9654:	38 50 0c 00 	add	#12,	r8	;#0x000c
    9658:	07 4c       	mov	r12,	r7	;
    965a:	37 50 0e 00 	add	#14,	r7	;#0x000e
    965e:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    9662:	10 20       	jnz	$+34     	;abs 0x9684
    9664:	2c 48       	mov	@r8,	r12	;
    9666:	09 4f       	mov	r15,	r9	;
    9668:	29 53       	incd	r9		;
    966a:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    966e:	25 47       	mov	@r7,	r5	;
    9670:	07 4f       	mov	r15,	r7	;
    9672:	37 50 06 00 	add	#6,	r7	;
    9676:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    967a:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    967e:	5f 4f 02 00 	mov.b	2(r15),	r15	;
    9682:	0f 3c       	jmp	$+32     	;abs 0x96a2
    9684:	2c 47       	mov	@r7,	r12	;
    9686:	09 4f       	mov	r15,	r9	;
    9688:	39 50 06 00 	add	#6,	r9	;
    968c:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    9690:	25 48       	mov	@r8,	r5	;
    9692:	07 4f       	mov	r15,	r7	;
    9694:	27 53       	incd	r7		;
    9696:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    969a:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    969e:	5f 4f 06 00 	mov.b	6(r15),	r15	;
    96a2:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    96a4:	4d 34       	jge	$+156    	;abs 0x9740
    96a6:	08 4d       	mov	r13,	r8	;
    96a8:	3b 40 40 00 	mov	#64,	r11	;#0x0040
    96ac:	0b 9d       	cmp	r13,	r11	;
    96ae:	01 2c       	jc	$+4      	;abs 0x96b2
    96b0:	08 4b       	mov	r11,	r8	;
    96b2:	44 48       	mov.b	r8,	r4	;
    96b4:	06 5e       	add	r14,	r6	;
    96b6:	36 50 36 24 	add	#9270,	r6	;#0x2436
    96ba:	0f 46       	mov	r6,	r15	;
    96bc:	2f 52       	add	#4,	r15	;r2 As==10
    96be:	2d 4f       	mov	@r15,	r13	;
    96c0:	0e 48       	mov	r8,	r14	;
    96c2:	81 4f 00 00 	mov	r15,	0(r1)	;
    96c6:	1b 42 8c 24 	mov	&0x248c,r11	;0x248c
    96ca:	8b 12       	call	r11		;
    96cc:	c9 44 00 00 	mov.b	r4,	0(r9)	;
    96d0:	5c 46 06 00 	mov.b	6(r6),	r12	;
    96d4:	5c 53       	inc.b	r12		;
    96d6:	5c f3       	and.b	#1,	r12	;r3 As==01
    96d8:	c6 4c 06 00 	mov.b	r12,	6(r6)	;
    96dc:	0c 46       	mov	r6,	r12	;
    96de:	2c 53       	incd	r12		;
    96e0:	29 4c       	mov	@r12,	r9	;
    96e2:	09 88       	sub	r8,	r9	;
    96e4:	8c 49 00 00 	mov	r9,	0(r12)	;
    96e8:	2f 41       	mov	@r1,	r15	;
    96ea:	2d 4f       	mov	@r15,	r13	;
    96ec:	0d 58       	add	r8,	r13	;
    96ee:	8f 4d 00 00 	mov	r13,	0(r15)	;
    96f2:	c6 44 08 00 	mov.b	r4,	8(r6)	;
    96f6:	6c 47       	mov.b	@r7,	r12	;
    96f8:	09 93       	cmp	#0,	r9	;r3 As==00
    96fa:	22 24       	jz	$+70     	;abs 0x9740
    96fc:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    96fe:	20 34       	jge	$+66     	;abs 0x9740
    9700:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    9704:	0f 99       	cmp	r9,	r15	;
    9706:	01 2c       	jc	$+4      	;abs 0x970a
    9708:	09 4f       	mov	r15,	r9	;
    970a:	48 49       	mov.b	r9,	r8	;
    970c:	0c 45       	mov	r5,	r12	;
    970e:	0e 49       	mov	r9,	r14	;
    9710:	1b 42 8c 24 	mov	&0x248c,r11	;0x248c
    9714:	8b 12       	call	r11		;
    9716:	c7 48 00 00 	mov.b	r8,	0(r7)	;
    971a:	0c 4a       	mov	r10,	r12	;
    971c:	0c 5a       	add	r10,	r12	;
    971e:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9722:	0a 5c       	add	r12,	r10	;
    9724:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    9728:	5c 4a 06 00 	mov.b	6(r10),	r12	;
    972c:	5c 53       	inc.b	r12		;
    972e:	5c f3       	and.b	#1,	r12	;r3 As==01
    9730:	ca 4c 06 00 	mov.b	r12,	6(r10)	;
    9734:	8a 89 02 00 	sub	r9,	2(r10)	;
    9738:	8a 59 04 00 	add	r9,	4(r10)	;
    973c:	ca 48 08 00 	mov.b	r8,	8(r10)	;
    9740:	0c 43       	clr	r12		;
    9742:	21 53       	incd	r1		;
    9744:	64 17       	popm	#7,	r10	;16-bit words
    9746:	30 41       	ret			

00009748 <USBCDC_abortSend>:
    9748:	1a 15       	pushm	#2,	r10	;16-bit words
    974a:	09 4c       	mov	r12,	r9	;
    974c:	4a 4d       	mov.b	r13,	r10	;
    974e:	0d 4a       	mov	r10,	r13	;
    9750:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9754:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    9758:	5c 4d 02 00 	mov.b	2(r13),	r12	;
    975c:	b0 12 6a 91 	call	#37226		;#0x916a
    9760:	0d 4a       	mov	r10,	r13	;
    9762:	0d 5a       	add	r10,	r13	;
    9764:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9768:	0a 5d       	add	r13,	r10	;
    976a:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    976e:	0d 4a       	mov	r10,	r13	;
    9770:	2d 53       	incd	r13		;
    9772:	2e 4a       	mov	@r10,	r14	;
    9774:	2e 8d       	sub	@r13,	r14	;
    9776:	89 4e 00 00 	mov	r14,	0(r9)	;
    977a:	8a 43 00 00 	mov	#0,	0(r10)	;r3 As==00
    977e:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9782:	b0 12 84 91 	call	#37252		;#0x9184
    9786:	4c 43       	clr.b	r12		;
    9788:	19 17       	popm	#2,	r10	;16-bit words
    978a:	30 41       	ret			

0000978c <CopyUsbToBuff>:
    978c:	4a 15       	pushm	#5,	r10	;16-bit words
    978e:	08 4c       	mov	r12,	r8	;
    9790:	07 4d       	mov	r13,	r7	;
    9792:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9796:	0a 4e       	mov	r14,	r10	;
    9798:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    979c:	0d 4a       	mov	r10,	r13	;
    979e:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    97a2:	1c 4d 06 00 	mov	6(r13),	r12	;
    97a6:	59 4d 0e 00 	mov.b	14(r13),r9	;0x0000e
    97aa:	0c 99       	cmp	r9,	r12	;
    97ac:	01 2c       	jc	$+4      	;abs 0x97b0
    97ae:	09 4c       	mov	r12,	r9	;
    97b0:	46 49       	mov.b	r9,	r6	;
    97b2:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    97b6:	2c 4a       	mov	@r10,	r12	;
    97b8:	0d 48       	mov	r8,	r13	;
    97ba:	0e 49       	mov	r9,	r14	;
    97bc:	1f 42 8a 24 	mov	&0x248a,r15	;0x248a
    97c0:	8f 12       	call	r15		;
    97c2:	8a 89 06 00 	sub	r9,	6(r10)	;
    97c6:	8a 59 00 00 	add	r9,	0(r10)	;
    97ca:	0e 4a       	mov	r10,	r14	;
    97cc:	3e 50 0e 00 	add	#14,	r14	;#0x000e
    97d0:	6c 4e       	mov.b	@r14,	r12	;
    97d2:	06 9c       	cmp	r12,	r6	;
    97d4:	0b 20       	jnz	$+24     	;abs 0x97ec
    97d6:	5c 4e 01 00 	mov.b	1(r14),	r12	;
    97da:	5c 53       	inc.b	r12		;
    97dc:	5c f3       	and.b	#1,	r12	;r3 As==01
    97de:	ce 4c 01 00 	mov.b	r12,	1(r14)	;
    97e2:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    97e6:	c7 43 00 00 	mov.b	#0,	0(r7)	;r3 As==00
    97ea:	06 3c       	jmp	$+14     	;abs 0x97f8
    97ec:	4c 86       	sub.b	r6,	r12	;
    97ee:	ce 4c 00 00 	mov.b	r12,	0(r14)	;
    97f2:	08 59       	add	r9,	r8	;
    97f4:	8a 48 02 00 	mov	r8,	2(r10)	;
    97f8:	46 17       	popm	#5,	r10	;16-bit words
    97fa:	30 41       	ret			

000097fc <USBCDC_receiveData>:
    97fc:	6a 15       	pushm	#7,	r10	;16-bit words
    97fe:	31 82       	sub	#8,	r1	;r2 As==11
    9800:	48 4e       	mov.b	r14,	r8	;
    9802:	09 48       	mov	r8,	r9	;
    9804:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9808:	04 49       	mov	r9,	r4	;
    980a:	34 50 e4 80 	add	#32996,	r4	;#0x80e4
    980e:	5a 44 02 00 	mov.b	2(r4),	r10	;
    9812:	0d 93       	cmp	#0,	r13	;r3 As==00
    9814:	02 25       	jz	$+518    	;abs 0x9a1a
    9816:	0c 93       	cmp	#0,	r12	;r3 As==00
    9818:	00 25       	jz	$+514    	;abs 0x9a1a
    981a:	05 4d       	mov	r13,	r5	;
    981c:	81 4c 06 00 	mov	r12,	6(r1)	;
    9820:	4c 4a       	mov.b	r10,	r12	;
    9822:	b0 12 8a 91 	call	#37258		;#0x918a
    9826:	06 4c       	mov	r12,	r6	;
    9828:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    982c:	03 20       	jnz	$+8      	;abs 0x9834
    982e:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9832:	05 24       	jz	$+12     	;abs 0x983e
    9834:	0c 46       	mov	r6,	r12	;
    9836:	b0 12 a4 91 	call	#37284		;#0x91a4
    983a:	3c 42       	mov	#8,	r12	;r2 As==11
    983c:	f0 3c       	jmp	$+482    	;abs 0x9a1e
    983e:	07 49       	mov	r9,	r7	;
    9840:	37 50 26 24 	add	#9254,	r7	;#0x2426
    9844:	87 93 00 00 	cmp	#0,	0(r7)	;r3 As==00
    9848:	05 24       	jz	$+12     	;abs 0x9854
    984a:	b0 12 a4 91 	call	#37284		;#0x91a4
    984e:	3c 40 03 00 	mov	#3,	r12	;
    9852:	e5 3c       	jmp	$+460    	;abs 0x9a1e
    9854:	87 45 04 00 	mov	r5,	4(r7)	;
    9858:	0c 47       	mov	r7,	r12	;
    985a:	3c 50 06 00 	add	#6,	r12	;
    985e:	81 4c 04 00 	mov	r12,	4(r1)	;
    9862:	8c 45 00 00 	mov	r5,	0(r12)	;
    9866:	97 41 06 00 	mov	6(r1),	0(r7)	;
    986a:	00 00 
    986c:	c7 93 0e 00 	cmp.b	#0,	14(r7)	;r3 As==00, 0x000e
    9870:	54 24       	jz	$+170    	;abs 0x991a
    9872:	0b 47       	mov	r7,	r11	;
    9874:	2b 53       	incd	r11		;
    9876:	0f 47       	mov	r7,	r15	;
    9878:	3f 52       	add	#8,	r15	;r2 As==11
    987a:	35 40 8c 97 	mov	#38796,	r5	;#0x978c
    987e:	2c 4b       	mov	@r11,	r12	;
    9880:	2d 4f       	mov	@r15,	r13	;
    9882:	4e 48       	mov.b	r8,	r14	;
    9884:	81 4b 02 00 	mov	r11,	2(r1)	;
    9888:	81 4f 00 00 	mov	r15,	0(r1)	;
    988c:	85 12       	call	r5		;
    988e:	1b 41 02 00 	mov	2(r1),	r11	;
    9892:	2f 41       	mov	@r1,	r15	;
    9894:	1c 41 04 00 	mov	4(r1),	r12	;
    9898:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    989c:	03 20       	jnz	$+8      	;abs 0x98a4
    989e:	87 43 00 00 	mov	#0,	0(r7)	;r3 As==00
    98a2:	31 3c       	jmp	$+100    	;abs 0x9906
    98a4:	0d 4a       	mov	r10,	r13	;
    98a6:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    98aa:	0c 4d       	mov	r13,	r12	;
    98ac:	2c 53       	incd	r12		;
    98ae:	3c 50 88 23 	add	#9096,	r12	;#0x2388
    98b2:	8f 9c 00 00 	cmp	r12,	0(r15)	;
    98b6:	0a 20       	jnz	$+22     	;abs 0x98cc
    98b8:	3d 50 06 00 	add	#6,	r13	;
    98bc:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    98c0:	8f 4d 00 00 	mov	r13,	0(r15)	;
    98c4:	9b 44 0a 00 	mov	10(r4),	0(r11)	;0x0000a
    98c8:	00 00 
    98ca:	05 3c       	jmp	$+12     	;abs 0x98d6
    98cc:	8f 4c 00 00 	mov	r12,	0(r15)	;
    98d0:	9b 44 08 00 	mov	8(r4),	0(r11)	;
    98d4:	00 00 
    98d6:	0c 49       	mov	r9,	r12	;
    98d8:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    98dc:	1d 4c 08 00 	mov	8(r12),	r13	;
    98e0:	6e 4d       	mov.b	@r13,	r14	;
    98e2:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    98e4:	08 34       	jge	$+18     	;abs 0x98f6
    98e6:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    98ea:	cc 4e 0e 00 	mov.b	r14,	14(r12)	; 0x000e
    98ee:	1c 4c 02 00 	mov	2(r12),	r12	;
    98f2:	4e 48       	mov.b	r8,	r14	;
    98f4:	85 12       	call	r5		;
    98f6:	0c 49       	mov	r9,	r12	;
    98f8:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    98fc:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9900:	0c 20       	jnz	$+26     	;abs 0x991a
    9902:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9906:	d2 b3 83 24 	bit.b	#1,	&0x2483	;r3 As==01
    990a:	03 24       	jz	$+8      	;abs 0x9912
    990c:	4c 48       	mov.b	r8,	r12	;
    990e:	b0 12 10 87 	call	#34576		;#0x8710
    9912:	0c 46       	mov	r6,	r12	;
    9914:	b0 12 a4 91 	call	#37284		;#0x91a4
    9918:	79 3c       	jmp	$+244    	;abs 0x9a0c
    991a:	0c 49       	mov	r9,	r12	;
    991c:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    9920:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9924:	0d 4a       	mov	r10,	r13	;
    9926:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    992a:	cc 93 0f 00 	cmp.b	#0,	15(r12)	;r3 As==00, 0x000f
    992e:	15 20       	jnz	$+44     	;abs 0x995a
    9930:	cd 93 02 00 	cmp.b	#0,	2(r13)	;r3 As==00
    9934:	5a 34       	jge	$+182    	;abs 0x99ea
    9936:	0d 49       	mov	r9,	r13	;
    9938:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    993c:	9c 4d 08 00 	mov	8(r13),	2(r12)	;
    9940:	02 00 
    9942:	0e 4a       	mov	r10,	r14	;
    9944:	2e 53       	incd	r14		;
    9946:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    994a:	8c 4e 08 00 	mov	r14,	8(r12)	;
    994e:	9c 4d 0a 00 	mov	10(r13),12(r12)	;0x0000a, 0x000c
    9952:	0c 00 
    9954:	3a 50 06 00 	add	#6,	r10	;
    9958:	14 3c       	jmp	$+42     	;abs 0x9982
    995a:	cd 93 06 00 	cmp.b	#0,	6(r13)	;r3 As==00
    995e:	45 34       	jge	$+140    	;abs 0x99ea
    9960:	0d 49       	mov	r9,	r13	;
    9962:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    9966:	9c 4d 0a 00 	mov	10(r13),2(r12)	;0x0000a
    996a:	02 00 
    996c:	0e 4a       	mov	r10,	r14	;
    996e:	3e 50 06 00 	add	#6,	r14	;
    9972:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    9976:	8c 4e 08 00 	mov	r14,	8(r12)	;
    997a:	9c 4d 08 00 	mov	8(r13),	12(r12)	; 0x000c
    997e:	0c 00 
    9980:	2a 53       	incd	r10		;
    9982:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9986:	8c 4a 0a 00 	mov	r10,	10(r12)	; 0x000a
    998a:	0a 49       	mov	r9,	r10	;
    998c:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    9990:	07 4a       	mov	r10,	r7	;
    9992:	37 52       	add	#8,	r7	;r2 As==11
    9994:	2d 47       	mov	@r7,	r13	;
    9996:	6c 4d       	mov.b	@r13,	r12	;
    9998:	0c 93       	cmp	#0,	r12	;r3 As==00
    999a:	01 20       	jnz	$+4      	;abs 0x999e
    999c:	ff 3f       	jmp	$+0      	;abs 0x999c
    999e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    99a0:	24 34       	jge	$+74     	;abs 0x99ea
    99a2:	04 4a       	mov	r10,	r4	;
    99a4:	34 50 0e 00 	add	#14,	r4	;#0x000e
    99a8:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    99ac:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    99b0:	3f 40 8c 97 	mov	#38796,	r15	;#0x978c
    99b4:	1c 4a 02 00 	mov	2(r10),	r12	;
    99b8:	4e 48       	mov.b	r8,	r14	;
    99ba:	81 4f 00 00 	mov	r15,	0(r1)	;
    99be:	8f 12       	call	r15		;
    99c0:	05 4a       	mov	r10,	r5	;
    99c2:	35 50 0a 00 	add	#10,	r5	;#0x000a
    99c6:	2d 45       	mov	@r5,	r13	;
    99c8:	6c 4d       	mov.b	@r13,	r12	;
    99ca:	2f 41       	mov	@r1,	r15	;
    99cc:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    99d0:	0c 24       	jz	$+26     	;abs 0x99ea
    99d2:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    99d4:	0a 34       	jge	$+22     	;abs 0x99ea
    99d6:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    99da:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    99de:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    99e2:	4e 48       	mov.b	r8,	r14	;
    99e4:	8f 12       	call	r15		;
    99e6:	a7 45 00 00 	mov	@r5,	0(r7)	;
    99ea:	39 50 26 24 	add	#9254,	r9	;#0x2426
    99ee:	3a 40 a4 91 	mov	#37284,	r10	;#0x91a4
    99f2:	89 93 06 00 	cmp	#0,	6(r9)	;r3 As==00
    99f6:	0d 20       	jnz	$+28     	;abs 0x9a12
    99f8:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    99fc:	d2 b3 83 24 	bit.b	#1,	&0x2483	;r3 As==01
    9a00:	03 24       	jz	$+8      	;abs 0x9a08
    9a02:	4c 48       	mov.b	r8,	r12	;
    9a04:	b0 12 10 87 	call	#34576		;#0x8710
    9a08:	0c 46       	mov	r6,	r12	;
    9a0a:	8a 12       	call	r10		;
    9a0c:	3c 40 05 00 	mov	#5,	r12	;
    9a10:	06 3c       	jmp	$+14     	;abs 0x9a1e
    9a12:	0c 46       	mov	r6,	r12	;
    9a14:	8a 12       	call	r10		;
    9a16:	2c 42       	mov	#4,	r12	;r2 As==10
    9a18:	02 3c       	jmp	$+6      	;abs 0x9a1e
    9a1a:	3c 40 07 00 	mov	#7,	r12	;
    9a1e:	31 52       	add	#8,	r1	;r2 As==11
    9a20:	64 17       	popm	#7,	r10	;16-bit words
    9a22:	30 41       	ret			

00009a24 <CdcToBufferFromHost>:
    9a24:	6a 15       	pushm	#7,	r10	;16-bit words
    9a26:	48 4c       	mov.b	r12,	r8	;
    9a28:	09 48       	mov	r8,	r9	;
    9a2a:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9a2e:	0c 49       	mov	r9,	r12	;
    9a30:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9a34:	5d 4c 02 00 	mov.b	2(r12),	r13	;
    9a38:	0f 49       	mov	r9,	r15	;
    9a3a:	3f 50 26 24 	add	#9254,	r15	;#0x2426
    9a3e:	8f 93 06 00 	cmp	#0,	6(r15)	;r3 As==00
    9a42:	03 20       	jnz	$+8      	;abs 0x9a4a
    9a44:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9a48:	7f 3c       	jmp	$+256    	;abs 0x9b48
    9a4a:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9a4e:	5e 4d 8e 23 	mov.b	9102(r13),r14	;0x0238e
    9a52:	5e dd 8a 23 	bis.b	9098(r13),r14	;0x0238a
    9a56:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9a58:	77 34       	jge	$+240    	;abs 0x9b48
    9a5a:	06 4c       	mov	r12,	r6	;
    9a5c:	36 52       	add	#8,	r6	;r2 As==11
    9a5e:	05 4f       	mov	r15,	r5	;
    9a60:	35 52       	add	#8,	r5	;r2 As==11
    9a62:	0a 4d       	mov	r13,	r10	;
    9a64:	2a 53       	incd	r10		;
    9a66:	07 4f       	mov	r15,	r7	;
    9a68:	37 50 0c 00 	add	#12,	r7	;#0x000c
    9a6c:	0e 4c       	mov	r12,	r14	;
    9a6e:	3e 50 0a 00 	add	#10,	r14	;#0x000a
    9a72:	04 4f       	mov	r15,	r4	;
    9a74:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9a78:	3d 50 06 00 	add	#6,	r13	;
    9a7c:	cf 93 0f 00 	cmp.b	#0,	15(r15)	;r3 As==00, 0x000f
    9a80:	0c 20       	jnz	$+26     	;abs 0x9a9a
    9a82:	2c 46       	mov	@r6,	r12	;
    9a84:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9a88:	85 4a 00 00 	mov	r10,	0(r5)	;
    9a8c:	a7 4e 00 00 	mov	@r14,	0(r7)	;
    9a90:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9a94:	84 4d 00 00 	mov	r13,	0(r4)	;
    9a98:	0b 3c       	jmp	$+24     	;abs 0x9ab0
    9a9a:	2c 4e       	mov	@r14,	r12	;
    9a9c:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9aa0:	85 4d 00 00 	mov	r13,	0(r5)	;
    9aa4:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9aa8:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9aac:	84 4a 00 00 	mov	r10,	0(r4)	;
    9ab0:	0a 49       	mov	r9,	r10	;
    9ab2:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    9ab6:	07 4a       	mov	r10,	r7	;
    9ab8:	37 52       	add	#8,	r7	;r2 As==11
    9aba:	2d 47       	mov	@r7,	r13	;
    9abc:	6e 4d       	mov.b	@r13,	r14	;
    9abe:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9ac0:	1f 34       	jge	$+64     	;abs 0x9b00
    9ac2:	04 4a       	mov	r10,	r4	;
    9ac4:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9ac8:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    9acc:	c4 4e 00 00 	mov.b	r14,	0(r4)	;
    9ad0:	35 40 8c 97 	mov	#38796,	r5	;#0x978c
    9ad4:	4e 48       	mov.b	r8,	r14	;
    9ad6:	85 12       	call	r5		;
    9ad8:	06 4a       	mov	r10,	r6	;
    9ada:	36 50 0a 00 	add	#10,	r6	;#0x000a
    9ade:	2d 46       	mov	@r6,	r13	;
    9ae0:	6c 4d       	mov.b	@r13,	r12	;
    9ae2:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    9ae6:	0c 24       	jz	$+26     	;abs 0x9b00
    9ae8:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9aea:	0a 34       	jge	$+22     	;abs 0x9b00
    9aec:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9af0:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9af4:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9af8:	4e 48       	mov.b	r8,	r14	;
    9afa:	85 12       	call	r5		;
    9afc:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9b00:	0c 49       	mov	r9,	r12	;
    9b02:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    9b06:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9b0a:	1b 20       	jnz	$+56     	;abs 0x9b42
    9b0c:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9b10:	1a 42 82 24 	mov	&0x2482,r10	;0x2482
    9b14:	3a f0 00 01 	and	#256,	r10	;#0x0100
    9b18:	0a 93       	cmp	#0,	r10	;r3 As==00
    9b1a:	04 24       	jz	$+10     	;abs 0x9b24
    9b1c:	4c 48       	mov.b	r8,	r12	;
    9b1e:	b0 12 10 87 	call	#34576		;#0x8710
    9b22:	4a 4c       	mov.b	r12,	r10	;
    9b24:	39 50 26 24 	add	#9254,	r9	;#0x2426
    9b28:	c9 93 0e 00 	cmp.b	#0,	14(r9)	;r3 As==00, 0x000e
    9b2c:	0b 24       	jz	$+24     	;abs 0x9b44
    9b2e:	f2 b0 40 00 	bit.b	#64,	&0x2482	;#0x0040
    9b32:	82 24 
    9b34:	07 24       	jz	$+16     	;abs 0x9b44
    9b36:	4c 48       	mov.b	r8,	r12	;
    9b38:	b0 12 04 87 	call	#34564		;#0x8704
    9b3c:	4c da       	bis.b	r10,	r12	;
    9b3e:	4a 4c       	mov.b	r12,	r10	;
    9b40:	01 3c       	jmp	$+4      	;abs 0x9b44
    9b42:	0a 43       	clr	r10		;
    9b44:	0c 4a       	mov	r10,	r12	;
    9b46:	01 3c       	jmp	$+4      	;abs 0x9b4a
    9b48:	0c 43       	clr	r12		;
    9b4a:	64 17       	popm	#7,	r10	;16-bit words
    9b4c:	30 41       	ret			

00009b4e <CdcIsReceiveInProgress>:
    9b4e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9b52:	0d 4c       	mov	r12,	r13	;
    9b54:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9b58:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9b5c:	0c 43       	clr	r12		;
    9b5e:	2c 8d       	sub	@r13,	r12	;
    9b60:	2c dd       	bis	@r13,	r12	;
    9b62:	5c 03       	rrum	#1,	r12	;
    9b64:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    9b68:	30 41       	ret			

00009b6a <USBCDC_abortReceive>:
    9b6a:	1a 15       	pushm	#2,	r10	;16-bit words
    9b6c:	09 4c       	mov	r12,	r9	;
    9b6e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9b72:	0a 4d       	mov	r13,	r10	;
    9b74:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9b78:	0c 4a       	mov	r10,	r12	;
    9b7a:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9b7e:	5c 4c 02 00 	mov.b	2(r12),	r12	;
    9b82:	b0 12 8a 91 	call	#37258		;#0x918a
    9b86:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9b8a:	0d 4a       	mov	r10,	r13	;
    9b8c:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9b90:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9b94:	0e 24       	jz	$+30     	;abs 0x9bb2
    9b96:	0e 4d       	mov	r13,	r14	;
    9b98:	3e 50 06 00 	add	#6,	r14	;
    9b9c:	1f 4d 04 00 	mov	4(r13),	r15	;
    9ba0:	2f 8e       	sub	@r14,	r15	;
    9ba2:	89 4f 00 00 	mov	r15,	0(r9)	;
    9ba6:	cd 43 0e 00 	mov.b	#0,	14(r13)	;r3 As==00, 0x000e
    9baa:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9bae:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9bb2:	b0 12 a4 91 	call	#37284		;#0x91a4
    9bb6:	4c 43       	clr.b	r12		;
    9bb8:	19 17       	popm	#2,	r10	;16-bit words
    9bba:	30 41       	ret			

00009bbc <USBCDC_rejectData>:
    9bbc:	3a 15       	pushm	#4,	r10	;16-bit words
    9bbe:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9bc2:	09 4c       	mov	r12,	r9	;
    9bc4:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9bc8:	0c 49       	mov	r9,	r12	;
    9bca:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9bce:	5a 4c 02 00 	mov.b	2(r12),	r10	;
    9bd2:	4c 4a       	mov.b	r10,	r12	;
    9bd4:	b0 12 8a 91 	call	#37258		;#0x918a
    9bd8:	0b 4c       	mov	r12,	r11	;
    9bda:	58 42 1d 24 	mov.b	&0x241d,r8	;0x241d
    9bde:	3e 40 a4 91 	mov	#37284,	r14	;#0x91a4
    9be2:	08 93       	cmp	#0,	r8	;r3 As==00
    9be4:	03 24       	jz	$+8      	;abs 0x9bec
    9be6:	8e 12       	call	r14		;
    9be8:	38 42       	mov	#8,	r8	;r2 As==11
    9bea:	25 3c       	jmp	$+76     	;abs 0x9c36
    9bec:	0d 49       	mov	r9,	r13	;
    9bee:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9bf2:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9bf6:	1d 20       	jnz	$+60     	;abs 0x9c32
    9bf8:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9bfc:	0f 4a       	mov	r10,	r15	;
    9bfe:	3f 50 88 23 	add	#9096,	r15	;#0x2388
    9c02:	57 4f 02 00 	mov.b	2(r15),	r7	;
    9c06:	77 f0 80 ff 	and.b	#65408,	r7	;#0xff80
    9c0a:	5c 4f 06 00 	mov.b	6(r15),	r12	;
    9c0e:	7c f0 80 ff 	and.b	#65408,	r12	;#0xff80
    9c12:	47 9c       	cmp.b	r12,	r7	;
    9c14:	06 24       	jz	$+14     	;abs 0x9c22
    9c16:	5c 4d 0f 00 	mov.b	15(r13),r12	;0x0000f
    9c1a:	5c 53       	inc.b	r12		;
    9c1c:	5c f3       	and.b	#1,	r12	;r3 As==01
    9c1e:	cd 4c 0f 00 	mov.b	r12,	15(r13)	; 0x000f
    9c22:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9c26:	ca 43 02 00 	mov.b	#0,	2(r10)	;r3 As==00
    9c2a:	ca 43 06 00 	mov.b	#0,	6(r10)	;r3 As==00
    9c2e:	c9 43 34 24 	mov.b	#0,	9268(r9);r3 As==00, 0x2434
    9c32:	0c 4b       	mov	r11,	r12	;
    9c34:	8e 12       	call	r14		;
    9c36:	4c 48       	mov.b	r8,	r12	;
    9c38:	37 17       	popm	#4,	r10	;16-bit words
    9c3a:	30 41       	ret			

00009c3c <USBCDC_getInterfaceStatus>:
    9c3c:	6a 15       	pushm	#7,	r10	;16-bit words
    9c3e:	4a 4c       	mov.b	r12,	r10	;
    9c40:	04 4d       	mov	r13,	r4	;
    9c42:	05 4e       	mov	r14,	r5	;
    9c44:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9c48:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9c4c:	06 4a       	mov	r10,	r6	;
    9c4e:	43 18 06 56 	rpt #4 { rlax.w	r6		;
    9c52:	0c 46       	mov	r6,	r12	;
    9c54:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9c58:	57 4c 02 00 	mov.b	2(r12),	r7	;
    9c5c:	4c 47       	mov.b	r7,	r12	;
    9c5e:	b0 12 6a 91 	call	#37226		;#0x916a
    9c62:	08 4c       	mov	r12,	r8	;
    9c64:	4c 47       	mov.b	r7,	r12	;
    9c66:	b0 12 8a 91 	call	#37258		;#0x918a
    9c6a:	09 4c       	mov	r12,	r9	;
    9c6c:	0c 4a       	mov	r10,	r12	;
    9c6e:	0c 5a       	add	r10,	r12	;
    9c70:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9c74:	0c 5a       	add	r10,	r12	;
    9c76:	3c 50 36 24 	add	#9270,	r12	;#0x2436
    9c7a:	1a 4c 02 00 	mov	2(r12),	r10	;
    9c7e:	0a 93       	cmp	#0,	r10	;r3 As==00
    9c80:	05 24       	jz	$+12     	;abs 0x9c8c
    9c82:	2c 4c       	mov	@r12,	r12	;
    9c84:	0c 8a       	sub	r10,	r12	;
    9c86:	84 4c 00 00 	mov	r12,	0(r4)	;
    9c8a:	1a 43       	mov	#1,	r10	;r3 As==01
    9c8c:	36 50 26 24 	add	#9254,	r6	;#0x2426
    9c90:	86 93 00 00 	cmp	#0,	0(r6)	;r3 As==00
    9c94:	0a 24       	jz	$+22     	;abs 0x9caa
    9c96:	6a d3       	bis.b	#2,	r10	;r3 As==10
    9c98:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9c9c:	1c 46 04 00 	mov	4(r6),	r12	;
    9ca0:	1c 86 06 00 	sub	6(r6),	r12	;
    9ca4:	85 4c 00 00 	mov	r12,	0(r5)	;
    9ca8:	10 3c       	jmp	$+34     	;abs 0x9cca
    9caa:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9cae:	13 20       	jnz	$+40     	;abs 0x9cd6
    9cb0:	42 18 07 57 	rpt #3 { rlax.w	r7		;
    9cb4:	37 50 88 23 	add	#9096,	r7	;#0x2388
    9cb8:	5c 47 06 00 	mov.b	6(r7),	r12	;
    9cbc:	5c d7 02 00 	bis.b	2(r7),	r12	;
    9cc0:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9cc2:	03 34       	jge	$+8      	;abs 0x9cca
    9cc4:	6a d2       	bis.b	#4,	r10	;r2 As==10
    9cc6:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9cca:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9cce:	03 20       	jnz	$+8      	;abs 0x9cd6
    9cd0:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9cd4:	01 24       	jz	$+4      	;abs 0x9cd8
    9cd6:	3a 42       	mov	#8,	r10	;r2 As==11
    9cd8:	0c 48       	mov	r8,	r12	;
    9cda:	b0 12 84 91 	call	#37252		;#0x9184
    9cde:	0c 49       	mov	r9,	r12	;
    9ce0:	b0 12 a4 91 	call	#37284		;#0x91a4
    9ce4:	03 43       	nop			
    9ce6:	4c 4a       	mov.b	r10,	r12	;
    9ce8:	64 17       	popm	#7,	r10	;16-bit words
    9cea:	30 41       	ret			

00009cec <USBCDC_getBytesInUSBBuffer>:
    9cec:	1a 15       	pushm	#2,	r10	;16-bit words
    9cee:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9cf2:	0a 4c       	mov	r12,	r10	;
    9cf4:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9cf8:	0c 4a       	mov	r10,	r12	;
    9cfa:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9cfe:	59 4c 02 00 	mov.b	2(r12),	r9	;
    9d02:	4c 49       	mov.b	r9,	r12	;
    9d04:	b0 12 8a 91 	call	#37258		;#0x918a
    9d08:	3e 40 a4 91 	mov	#37284,	r14	;#0x91a4
    9d0c:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9d10:	03 20       	jnz	$+8      	;abs 0x9d18
    9d12:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9d16:	03 24       	jz	$+8      	;abs 0x9d1e
    9d18:	8e 12       	call	r14		;
    9d1a:	0c 43       	clr	r12		;
    9d1c:	24 3c       	jmp	$+74     	;abs 0x9d66
    9d1e:	0d 4a       	mov	r10,	r13	;
    9d20:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9d24:	5a 4d 0e 00 	mov.b	14(r13),r10	;0x0000e
    9d28:	0a 93       	cmp	#0,	r10	;r3 As==00
    9d2a:	04 24       	jz	$+10     	;abs 0x9d34
    9d2c:	1d 4d 0a 00 	mov	10(r13),r13	;0x0000a
    9d30:	6d 4d       	mov.b	@r13,	r13	;
    9d32:	10 3c       	jmp	$+34     	;abs 0x9d54
    9d34:	42 18 09 59 	rpt #3 { rlax.w	r9		;
    9d38:	0d 49       	mov	r9,	r13	;
    9d3a:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9d3e:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9d42:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9d44:	03 34       	jge	$+8      	;abs 0x9d4c
    9d46:	0a 4d       	mov	r13,	r10	;
    9d48:	3a f0 7f 00 	and	#127,	r10	;#0x007f
    9d4c:	39 50 88 23 	add	#9096,	r9	;#0x2388
    9d50:	5d 49 06 00 	mov.b	6(r9),	r13	;
    9d54:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9d56:	05 34       	jge	$+12     	;abs 0x9d62
    9d58:	7d f0 7f 00 	and.b	#127,	r13	;#0x007f
    9d5c:	4a 5d       	add.b	r13,	r10	;
    9d5e:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9d62:	8e 12       	call	r14		;
    9d64:	0c 4a       	mov	r10,	r12	;
    9d66:	19 17       	popm	#2,	r10	;16-bit words
    9d68:	30 41       	ret			

00009d6a <usbGetLineCoding>:
    9d6a:	1a 15       	pushm	#2,	r10	;16-bit words
    9d6c:	1d 42 84 23 	mov	&0x2384,r13	;0x2384
    9d70:	1d b3       	bit	#1,	r13	;r3 As==01
    9d72:	01 24       	jz	$+4      	;abs 0x9d76
    9d74:	3d 53       	add	#-1,	r13	;r3 As==11
    9d76:	12 c3       	clrc			
    9d78:	0d 10       	rrc	r13		;
    9d7a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9d7e:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9d82:	3d 50 40 24 	add	#9280,	r13	;#0x2440
    9d86:	0c 4d       	mov	r13,	r12	;
    9d88:	2c 52       	add	#4,	r12	;r2 As==10
    9d8a:	e2 4c 5e 24 	mov.b	@r12,	&0x245e	;
    9d8e:	d2 4d 06 00 	mov.b	6(r13),	&0x245d	;
    9d92:	5d 24 
    9d94:	d2 4c 01 00 	mov.b	1(r12),	&0x245c	;
    9d98:	5c 24 
    9d9a:	2a 4d       	mov	@r13,	r10	;
    9d9c:	19 4d 02 00 	mov	2(r13),	r9	;
    9da0:	0c 4a       	mov	r10,	r12	;
    9da2:	0d 49       	mov	r9,	r13	;
    9da4:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9da8:	b0 12 08 b2 	call	#45576		;#0xb208
    9dac:	c2 4c 5b 24 	mov.b	r12,	&0x245b	;
    9db0:	0c 4a       	mov	r10,	r12	;
    9db2:	0d 49       	mov	r9,	r13	;
    9db4:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9db8:	b0 12 08 b2 	call	#45576		;#0xb208
    9dbc:	c2 4c 5a 24 	mov.b	r12,	&0x245a	;
    9dc0:	0c 4a       	mov	r10,	r12	;
    9dc2:	0d 49       	mov	r9,	r13	;
    9dc4:	b0 12 ce b1 	call	#45518		;#0xb1ce
    9dc8:	c2 4c 59 24 	mov.b	r12,	&0x2459	;
    9dcc:	c2 4a 58 24 	mov.b	r10,	&0x2458	;
    9dd0:	b2 40 07 00 	mov	#7,	&0x2484	;
    9dd4:	84 24 
    9dd6:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    9dda:	b0 12 c8 8d 	call	#36296		;#0x8dc8
    9dde:	4c 43       	clr.b	r12		;
    9de0:	19 17       	popm	#2,	r10	;16-bit words
    9de2:	30 41       	ret			

00009de4 <usbSetLineCoding>:
    9de4:	3c 40 50 24 	mov	#9296,	r12	;#0x2450
    9de8:	b0 12 38 8e 	call	#36408		;#0x8e38
    9dec:	4c 43       	clr.b	r12		;
    9dee:	30 41       	ret			

00009df0 <usbSetControlLineState>:
    9df0:	3d 40 80 23 	mov	#9088,	r13	;#0x2380
    9df4:	5c 4d 04 00 	mov.b	4(r13),	r12	;
    9df8:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9dfc:	b0 12 18 87 	call	#34584		;#0x8718
    9e00:	b0 12 4c 8e 	call	#36428		;#0x8e4c
    9e04:	4c 43       	clr.b	r12		;
    9e06:	30 41       	ret			

00009e08 <Handler_SetLineCoding>:
    9e08:	3a 15       	pushm	#4,	r10	;16-bit words
    9e0a:	21 83       	decd	r1		;
    9e0c:	19 42 84 23 	mov	&0x2384,r9	;0x2384
    9e10:	0c 49       	mov	r9,	r12	;
    9e12:	19 b3       	bit	#1,	r9	;r3 As==01
    9e14:	01 24       	jz	$+4      	;abs 0x9e18
    9e16:	3c 53       	add	#-1,	r12	;r3 As==11
    9e18:	12 c3       	clrc			
    9e1a:	0c 10       	rrc	r12		;
    9e1c:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    9e20:	5a 41 01 00 	mov.b	1(r1),	r10	;
    9e24:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9e28:	3a 50 40 24 	add	#9280,	r10	;#0x2440
    9e2c:	5c 42 53 24 	mov.b	&0x2453,r12	;0x2453
    9e30:	0d 43       	clr	r13		;
    9e32:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9e36:	b0 12 54 b1 	call	#45396		;#0xb154
    9e3a:	07 4c       	mov	r12,	r7	;
    9e3c:	08 4d       	mov	r13,	r8	;
    9e3e:	5c 42 52 24 	mov.b	&0x2452,r12	;0x2452
    9e42:	0d 43       	clr	r13		;
    9e44:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9e48:	b0 12 54 b1 	call	#45396		;#0xb154
    9e4c:	0c d7       	bis	r7,	r12	;
    9e4e:	08 dd       	bis	r13,	r8	;
    9e50:	5d 42 50 24 	mov.b	&0x2450,r13	;0x2450
    9e54:	07 4c       	mov	r12,	r7	;
    9e56:	07 dd       	bis	r13,	r7	;
    9e58:	5c 42 51 24 	mov.b	&0x2451,r12	;0x2451
    9e5c:	0d 43       	clr	r13		;
    9e5e:	b0 12 2c b1 	call	#45356		;#0xb12c
    9e62:	07 dc       	bis	r12,	r7	;
    9e64:	8a 47 00 00 	mov	r7,	0(r10)	;
    9e68:	08 dd       	bis	r13,	r8	;
    9e6a:	8a 48 02 00 	mov	r8,	2(r10)	;
    9e6e:	5d 41 01 00 	mov.b	1(r1),	r13	;
    9e72:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9e76:	4c 49       	mov.b	r9,	r12	;
    9e78:	1e 4d 42 24 	mov	9282(r13),r14	;0x02442
    9e7c:	1d 4d 40 24 	mov	9280(r13),r13	;0x02440
    9e80:	b0 12 14 87 	call	#34580		;#0x8714
    9e84:	21 53       	incd	r1		;
    9e86:	37 17       	popm	#4,	r10	;16-bit words
    9e88:	30 41       	ret			

00009e8a <TLV_getInfo>:
    9e8a:	0a 15       	pushm	#1,	r10	;16-bit words
    9e8c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9e90:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9e94:	3b 40 08 1a 	mov	#6664,	r11	;#0x1a08
    9e98:	6a 4b       	mov.b	@r11,	r10	;
    9e9a:	4a 9c       	cmp.b	r12,	r10	;
    9e9c:	1f 20       	jnz	$+64     	;abs 0x9edc
    9e9e:	0d 93       	cmp	#0,	r13	;r3 As==00
    9ea0:	0f 20       	jnz	$+32     	;abs 0x9ec0
    9ea2:	cb 9c 00 00 	cmp.b	r12,	0(r11)	;
    9ea6:	07 20       	jnz	$+16     	;abs 0x9eb6
    9ea8:	de 4b 01 00 	mov.b	1(r11),	0(r14)	;
    9eac:	00 00 
    9eae:	2b 53       	incd	r11		;
    9eb0:	8f 4b 00 00 	mov	r11,	0(r15)	;
    9eb4:	16 3c       	jmp	$+46     	;abs 0x9ee2
    9eb6:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9eba:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9ebe:	11 3c       	jmp	$+36     	;abs 0x9ee2
    9ec0:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9ec2:	ef 27       	jz	$-32     	;abs 0x9ea2
    9ec4:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9ec6:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9eca:	5a 4b 01 00 	mov.b	1(r11),	r10	;
    9ece:	2a 53       	incd	r10		;
    9ed0:	0b 5a       	add	r10,	r11	;
    9ed2:	3a 40 fe 1a 	mov	#6910,	r10	;#0x1afe
    9ed6:	0a 9b       	cmp	r11,	r10	;
    9ed8:	df 2f       	jc	$-64     	;abs 0x9e98
    9eda:	e3 3f       	jmp	$-56     	;abs 0x9ea2
    9edc:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9ede:	f5 23       	jnz	$-20     	;abs 0x9eca
    9ee0:	e0 3f       	jmp	$-62     	;abs 0x9ea2
    9ee2:	0a 17       	popm	#1,	r10	;16-bit words
    9ee4:	30 41       	ret			

00009ee6 <TLV_getDeviceType>:
    9ee6:	1c 42 04 1a 	mov	&0x1a04,r12	;0x1a04
    9eea:	30 41       	ret			

00009eec <TLV_getMemory>:
    9eec:	0a 15       	pushm	#1,	r10	;16-bit words
    9eee:	21 82       	sub	#4,	r1	;r2 As==10
    9ef0:	0c 5c       	rla	r12		;
    9ef2:	4a 4c       	mov.b	r12,	r10	;
    9ef4:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9ef6:	4d 43       	clr.b	r13		;
    9ef8:	0e 41       	mov	r1,	r14	;
    9efa:	1e 53       	inc	r14		;
    9efc:	0f 41       	mov	r1,	r15	;
    9efe:	2f 53       	incd	r15		;
    9f00:	b0 12 8a 9e 	call	#40586		;#0x9e8a
    9f04:	1f 41 02 00 	mov	2(r1),	r15	;
    9f08:	0d 43       	clr	r13		;
    9f0a:	0a 9d       	cmp	r13,	r10	;
    9f0c:	0f 28       	jnc	$+32     	;abs 0x9f2c
    9f0e:	0e 4f       	mov	r15,	r14	;
    9f10:	0e 5d       	add	r13,	r14	;
    9f12:	6c 4e       	mov.b	@r14,	r12	;
    9f14:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f16:	0b 24       	jz	$+24     	;abs 0x9f2e
    9f18:	0d 9a       	cmp	r10,	r13	;
    9f1a:	06 20       	jnz	$+14     	;abs 0x9f28
    9f1c:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    9f20:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    9f24:	0c dd       	bis	r13,	r12	;
    9f26:	03 3c       	jmp	$+8      	;abs 0x9f2e
    9f28:	2d 53       	incd	r13		;
    9f2a:	ef 3f       	jmp	$-32     	;abs 0x9f0a
    9f2c:	0c 43       	clr	r12		;
    9f2e:	21 52       	add	#4,	r1	;r2 As==10
    9f30:	0a 17       	popm	#1,	r10	;16-bit words
    9f32:	30 41       	ret			

00009f34 <TLV_getPeripheral>:
    9f34:	3a 15       	pushm	#4,	r10	;16-bit words
    9f36:	21 82       	sub	#4,	r1	;r2 As==10
    9f38:	48 4c       	mov.b	r12,	r8	;
    9f3a:	49 4d       	mov.b	r13,	r9	;
    9f3c:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9f3e:	4d 43       	clr.b	r13		;
    9f40:	0e 41       	mov	r1,	r14	;
    9f42:	1e 53       	inc	r14		;
    9f44:	0f 41       	mov	r1,	r15	;
    9f46:	2f 53       	incd	r15		;
    9f48:	b0 12 8a 9e 	call	#40586		;#0x9e8a
    9f4c:	0a 43       	clr	r10		;
    9f4e:	37 40 ec 9e 	mov	#40684,	r7	;#0x9eec
    9f52:	4c 4a       	mov.b	r10,	r12	;
    9f54:	87 12       	call	r7		;
    9f56:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f58:	02 24       	jz	$+6      	;abs 0x9f5e
    9f5a:	1a 53       	inc	r10		;
    9f5c:	fa 3f       	jmp	$-10     	;abs 0x9f52
    9f5e:	1e 41 02 00 	mov	2(r1),	r14	;
    9f62:	0a 5a       	rla	r10		;
    9f64:	0d 4e       	mov	r14,	r13	;
    9f66:	0d 5a       	add	r10,	r13	;
    9f68:	5d 4d 01 00 	mov.b	1(r13),	r13	;
    9f6c:	2a 53       	incd	r10		;
    9f6e:	0a 5e       	add	r14,	r10	;
    9f70:	81 4a 02 00 	mov	r10,	2(r1)	;
    9f74:	0e 4d       	mov	r13,	r14	;
    9f76:	0e 5d       	add	r13,	r14	;
    9f78:	0f 4a       	mov	r10,	r15	;
    9f7a:	1f 53       	inc	r15		;
    9f7c:	0d 4c       	mov	r12,	r13	;
    9f7e:	cf 98 00 00 	cmp.b	r8,	0(r15)	;
    9f82:	0c 20       	jnz	$+26     	;abs 0x9f9c
    9f84:	09 93       	cmp	#0,	r9	;r3 As==00
    9f86:	04 24       	jz	$+10     	;abs 0x9f90
    9f88:	79 53       	add.b	#-1,	r9	;r3 As==11
    9f8a:	39 f0 ff 00 	and	#255,	r9	;#0x00ff
    9f8e:	06 3c       	jmp	$+14     	;abs 0x9f9c
    9f90:	0a 5d       	add	r13,	r10	;
    9f92:	6c 4a       	mov.b	@r10,	r12	;
    9f94:	47 18 08 58 	rpt #8 { rlax.w	r8		;
    9f98:	0c d8       	bis	r8,	r12	;
    9f9a:	04 3c       	jmp	$+10     	;abs 0x9fa4
    9f9c:	2d 53       	incd	r13		;
    9f9e:	2f 53       	incd	r15		;
    9fa0:	0e 9d       	cmp	r13,	r14	;
    9fa2:	ed 2f       	jc	$-36     	;abs 0x9f7e
    9fa4:	21 52       	add	#4,	r1	;r2 As==10
    9fa6:	37 17       	popm	#4,	r10	;16-bit words
    9fa8:	30 41       	ret			

00009faa <TLV_getInterrupt>:
    9faa:	2a 15       	pushm	#3,	r10	;16-bit words
    9fac:	21 82       	sub	#4,	r1	;r2 As==10
    9fae:	49 4c       	mov.b	r12,	r9	;
    9fb0:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9fb2:	4d 43       	clr.b	r13		;
    9fb4:	0e 41       	mov	r1,	r14	;
    9fb6:	1e 53       	inc	r14		;
    9fb8:	0f 41       	mov	r1,	r15	;
    9fba:	2f 53       	incd	r15		;
    9fbc:	b0 12 8a 9e 	call	#40586		;#0x9e8a
    9fc0:	0a 43       	clr	r10		;
    9fc2:	38 40 ec 9e 	mov	#40684,	r8	;#0x9eec
    9fc6:	4c 4a       	mov.b	r10,	r12	;
    9fc8:	88 12       	call	r8		;
    9fca:	0f 4a       	mov	r10,	r15	;
    9fcc:	1f 53       	inc	r15		;
    9fce:	0c 93       	cmp	#0,	r12	;r3 As==00
    9fd0:	02 24       	jz	$+6      	;abs 0x9fd6
    9fd2:	0a 4f       	mov	r15,	r10	;
    9fd4:	f8 3f       	jmp	$-14     	;abs 0x9fc6
    9fd6:	1d 41 02 00 	mov	2(r1),	r13	;
    9fda:	0a 5a       	rla	r10		;
    9fdc:	0a 5d       	add	r13,	r10	;
    9fde:	5e 4a 01 00 	mov.b	1(r10),	r14	;
    9fe2:	0e 5f       	add	r15,	r14	;
    9fe4:	0e 5e       	rla	r14		;
    9fe6:	0d 5e       	add	r14,	r13	;
    9fe8:	81 4d 02 00 	mov	r13,	2(r1)	;
    9fec:	0e 4c       	mov	r12,	r14	;
    9fee:	09 9e       	cmp	r14,	r9	;
    9ff0:	09 28       	jnc	$+20     	;abs 0xa004
    9ff2:	0c 4d       	mov	r13,	r12	;
    9ff4:	0c 5e       	add	r14,	r12	;
    9ff6:	6c 4c       	mov.b	@r12,	r12	;
    9ff8:	0c 93       	cmp	#0,	r12	;r3 As==00
    9ffa:	05 24       	jz	$+12     	;abs 0xa006
    9ffc:	0e 99       	cmp	r9,	r14	;
    9ffe:	03 24       	jz	$+8      	;abs 0xa006
    a000:	2e 53       	incd	r14		;
    a002:	f5 3f       	jmp	$-20     	;abs 0x9fee
    a004:	0c 43       	clr	r12		;
    a006:	21 52       	add	#4,	r1	;r2 As==10
    a008:	28 17       	popm	#3,	r10	;16-bit words
    a00a:	30 41       	ret			

0000a00c <WDT_A_hold>:
    a00c:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a010:	2d 4c       	mov	@r12,	r13	;
    a012:	7d d0 80 ff 	bis.b	#65408,	r13	;#0xff80
    a016:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a01a:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a01e:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a022:	30 41       	ret			

0000a024 <WDT_A_start>:
    a024:	1d 4c 0c 00 	mov	12(r12),r13	;0x0000c
    a028:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    a02c:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a030:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a034:	30 41       	ret			

0000a036 <WDT_A_resetTimer>:
    a036:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a03a:	2d 4c       	mov	@r12,	r13	;
    a03c:	7d d2       	bis.b	#8,	r13	;r2 As==11
    a03e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a042:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a046:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a04a:	30 41       	ret			

0000a04c <WDT_A_initWatchdogTimer>:
    a04c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a050:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a054:	3d 50 88 5a 	add	#23176,	r13	;#0x5a88
    a058:	0d 5e       	add	r14,	r13	;
    a05a:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a05e:	30 41       	ret			

0000a060 <WDT_A_initIntervalTimer>:
    a060:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a064:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a068:	3d 50 98 5a 	add	#23192,	r13	;#0x5a98
    a06c:	0d 5e       	add	r14,	r13	;
    a06e:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a072:	30 41       	ret			

0000a074 <GPIO_setAsOutputPin>:
    a074:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a078:	0e 4c       	mov	r12,	r14	;
    a07a:	0e 5c       	add	r12,	r14	;
    a07c:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a080:	1c b3       	bit	#1,	r12	;r3 As==01
    a082:	02 20       	jnz	$+6      	;abs 0xa088
    a084:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a088:	8e cd 0a 00 	bic	r13,	10(r14)	; 0x000a
    a08c:	8e dd 04 00 	bis	r13,	4(r14)	;
    a090:	30 41       	ret			

0000a092 <GPIO_setAsInputPin>:
    a092:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a096:	0e 4c       	mov	r12,	r14	;
    a098:	0e 5c       	add	r12,	r14	;
    a09a:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a09e:	1c b3       	bit	#1,	r12	;r3 As==01
    a0a0:	02 20       	jnz	$+6      	;abs 0xa0a6
    a0a2:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0a6:	3d e3       	inv	r13		;
    a0a8:	8e fd 0a 00 	and	r13,	10(r14)	; 0x000a
    a0ac:	8e fd 04 00 	and	r13,	4(r14)	;
    a0b0:	8e fd 06 00 	and	r13,	6(r14)	;
    a0b4:	30 41       	ret			

0000a0b6 <GPIO_setAsPeripheralModuleFunctionOutputPin>:
    a0b6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0ba:	0e 4c       	mov	r12,	r14	;
    a0bc:	0e 5c       	add	r12,	r14	;
    a0be:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0c2:	1c b3       	bit	#1,	r12	;r3 As==01
    a0c4:	02 20       	jnz	$+6      	;abs 0xa0ca
    a0c6:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0ca:	8e dd 04 00 	bis	r13,	4(r14)	;
    a0ce:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a0d2:	30 41       	ret			

0000a0d4 <GPIO_setAsPeripheralModuleFunctionInputPin>:
    a0d4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0d8:	0e 4c       	mov	r12,	r14	;
    a0da:	0e 5c       	add	r12,	r14	;
    a0dc:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0e0:	1c b3       	bit	#1,	r12	;r3 As==01
    a0e2:	02 20       	jnz	$+6      	;abs 0xa0e8
    a0e4:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0e8:	8e cd 04 00 	bic	r13,	4(r14)	;
    a0ec:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a0f0:	30 41       	ret			

0000a0f2 <GPIO_setOutputHighOnPin>:
    a0f2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0f6:	0e 4c       	mov	r12,	r14	;
    a0f8:	0e 5c       	add	r12,	r14	;
    a0fa:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0fe:	1c b3       	bit	#1,	r12	;r3 As==01
    a100:	02 20       	jnz	$+6      	;abs 0xa106
    a102:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a106:	8e dd 02 00 	bis	r13,	2(r14)	;
    a10a:	30 41       	ret			

0000a10c <GPIO_setOutputLowOnPin>:
    a10c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a110:	0e 4c       	mov	r12,	r14	;
    a112:	0e 5c       	add	r12,	r14	;
    a114:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a118:	1c b3       	bit	#1,	r12	;r3 As==01
    a11a:	02 20       	jnz	$+6      	;abs 0xa120
    a11c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a120:	8e cd 02 00 	bic	r13,	2(r14)	;
    a124:	30 41       	ret			

0000a126 <GPIO_toggleOutputOnPin>:
    a126:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a12a:	0e 4c       	mov	r12,	r14	;
    a12c:	0e 5c       	add	r12,	r14	;
    a12e:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a132:	1c b3       	bit	#1,	r12	;r3 As==01
    a134:	02 20       	jnz	$+6      	;abs 0xa13a
    a136:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a13a:	8e ed 02 00 	xor	r13,	2(r14)	;
    a13e:	30 41       	ret			

0000a140 <GPIO_setAsInputPinWithPullDownResistor>:
    a140:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a144:	0e 4c       	mov	r12,	r14	;
    a146:	0e 5c       	add	r12,	r14	;
    a148:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a14c:	1c b3       	bit	#1,	r12	;r3 As==01
    a14e:	02 20       	jnz	$+6      	;abs 0xa154
    a150:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a154:	0c 4d       	mov	r13,	r12	;
    a156:	3c e3       	inv	r12		;
    a158:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a15c:	8e fc 04 00 	and	r12,	4(r14)	;
    a160:	8e dd 06 00 	bis	r13,	6(r14)	;
    a164:	8e fc 02 00 	and	r12,	2(r14)	;
    a168:	30 41       	ret			

0000a16a <GPIO_setAsInputPinWithPullUpResistor>:
    a16a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a16e:	0e 4c       	mov	r12,	r14	;
    a170:	0e 5c       	add	r12,	r14	;
    a172:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a176:	1c b3       	bit	#1,	r12	;r3 As==01
    a178:	02 20       	jnz	$+6      	;abs 0xa17e
    a17a:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a17e:	0c 4d       	mov	r13,	r12	;
    a180:	3c e3       	inv	r12		;
    a182:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a186:	8e fc 04 00 	and	r12,	4(r14)	;
    a18a:	8e dd 06 00 	bis	r13,	6(r14)	;
    a18e:	8e dd 02 00 	bis	r13,	2(r14)	;
    a192:	30 41       	ret			

0000a194 <GPIO_getInputPinValue>:
    a194:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a198:	0e 4c       	mov	r12,	r14	;
    a19a:	0e 5c       	add	r12,	r14	;
    a19c:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1a0:	1c b3       	bit	#1,	r12	;r3 As==01
    a1a2:	02 20       	jnz	$+6      	;abs 0xa1a8
    a1a4:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1a8:	2d fe       	and	@r14,	r13	;
    a1aa:	0c 43       	clr	r12		;
    a1ac:	0c 8d       	sub	r13,	r12	;
    a1ae:	0c dd       	bis	r13,	r12	;
    a1b0:	5c 03       	rrum	#1,	r12	;
    a1b2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a1b6:	30 41       	ret			

0000a1b8 <GPIO_enableInterrupt>:
    a1b8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1bc:	0e 4c       	mov	r12,	r14	;
    a1be:	0e 5c       	add	r12,	r14	;
    a1c0:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1c4:	1c b3       	bit	#1,	r12	;r3 As==01
    a1c6:	02 20       	jnz	$+6      	;abs 0xa1cc
    a1c8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1cc:	8e dd 1a 00 	bis	r13,	26(r14)	; 0x001a
    a1d0:	30 41       	ret			

0000a1d2 <GPIO_disableInterrupt>:
    a1d2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1d6:	0e 4c       	mov	r12,	r14	;
    a1d8:	0e 5c       	add	r12,	r14	;
    a1da:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1de:	1c b3       	bit	#1,	r12	;r3 As==01
    a1e0:	02 20       	jnz	$+6      	;abs 0xa1e6
    a1e2:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1e6:	8e cd 1a 00 	bic	r13,	26(r14)	; 0x001a
    a1ea:	30 41       	ret			

0000a1ec <GPIO_getInterruptStatus>:
    a1ec:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1f0:	0e 4c       	mov	r12,	r14	;
    a1f2:	0e 5c       	add	r12,	r14	;
    a1f4:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1f8:	1c b3       	bit	#1,	r12	;r3 As==01
    a1fa:	02 20       	jnz	$+6      	;abs 0xa200
    a1fc:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a200:	0c 4d       	mov	r13,	r12	;
    a202:	1c fe 1c 00 	and	28(r14),r12	;0x0001c
    a206:	30 41       	ret			

0000a208 <GPIO_clearInterrupt>:
    a208:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a20c:	0e 4c       	mov	r12,	r14	;
    a20e:	0e 5c       	add	r12,	r14	;
    a210:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a214:	1c b3       	bit	#1,	r12	;r3 As==01
    a216:	02 20       	jnz	$+6      	;abs 0xa21c
    a218:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a21c:	8e cd 1c 00 	bic	r13,	28(r14)	; 0x001c
    a220:	30 41       	ret			

0000a222 <GPIO_selectInterruptEdge>:
    a222:	4f 4c       	mov.b	r12,	r15	;
    a224:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a228:	0c 4f       	mov	r15,	r12	;
    a22a:	0c 5f       	add	r15,	r12	;
    a22c:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a230:	1f b3       	bit	#1,	r15	;r3 As==01
    a232:	02 20       	jnz	$+6      	;abs 0xa238
    a234:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a238:	3c 50 18 00 	add	#24,	r12	;#0x0018
    a23c:	0e 93       	cmp	#0,	r14	;r3 As==00
    a23e:	03 20       	jnz	$+8      	;abs 0xa246
    a240:	8c cd 00 00 	bic	r13,	0(r12)	;
    a244:	02 3c       	jmp	$+6      	;abs 0xa24a
    a246:	8c dd 00 00 	bis	r13,	0(r12)	;
    a24a:	30 41       	ret			

0000a24c <GPIO_setDriveStrength>:
    a24c:	4f 4c       	mov.b	r12,	r15	;
    a24e:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a252:	0c 4f       	mov	r15,	r12	;
    a254:	0c 5f       	add	r15,	r12	;
    a256:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a25a:	1f b3       	bit	#1,	r15	;r3 As==01
    a25c:	02 20       	jnz	$+6      	;abs 0xa262
    a25e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a262:	3c 52       	add	#8,	r12	;r2 As==11
    a264:	0e 93       	cmp	#0,	r14	;r3 As==00
    a266:	03 20       	jnz	$+8      	;abs 0xa26e
    a268:	8c cd 00 00 	bic	r13,	0(r12)	;
    a26c:	02 3c       	jmp	$+6      	;abs 0xa272
    a26e:	8c dd 00 00 	bis	r13,	0(r12)	;
    a272:	30 41       	ret			

0000a274 <DMA_init>:
    a274:	6f 4c       	mov.b	@r12,	r15	;
    a276:	0e 4f       	mov	r15,	r14	;
    a278:	5e 0f       	rrum	#4,	r14	;
    a27a:	5b 4c 07 00 	mov.b	7(r12),	r11	;
    a27e:	5d 4c 08 00 	mov.b	8(r12),	r13	;
    a282:	0d 5b       	add	r11,	r13	;
    a284:	1d 5c 02 00 	add	2(r12),	r13	;
    a288:	8f 4d 10 05 	mov	r13,	1296(r15); 0x0510
    a28c:	6d 4c       	mov.b	@r12,	r13	;
    a28e:	9d 4c 04 00 	mov	4(r12),	1306(r13); 0x051a
    a292:	1a 05 
    a294:	4d 4e       	mov.b	r14,	r13	;
    a296:	7d f0 0e 00 	and.b	#14,	r13	;#0x000e
    a29a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a29e:	3d 50 00 05 	add	#1280,	r13	;#0x0500
    a2a2:	1e b3       	bit	#1,	r14	;r3 As==01
    a2a4:	08 24       	jz	$+18     	;abs 0xa2b6
    a2a6:	bd f0 ff 00 	and	#255,	0(r13)	;#0x00ff
    a2aa:	00 00 
    a2ac:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a2b0:	47 18 0c 5c 	rpt #8 { rlax.w	r12		;
    a2b4:	05 3c       	jmp	$+12     	;abs 0xa2c0
    a2b6:	bd f0 00 ff 	and	#65280,	0(r13)	;#0xff00
    a2ba:	00 00 
    a2bc:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a2c0:	8d dc 00 00 	bis	r12,	0(r13)	;
    a2c4:	30 41       	ret			

0000a2c6 <DMA_setTransferSize>:
    a2c6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2ca:	8c 4d 1a 05 	mov	r13,	1306(r12); 0x051a
    a2ce:	30 41       	ret			

0000a2d0 <DMA_getTransferSize>:
    a2d0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2d4:	1c 4c 1a 05 	mov	1306(r12),r12	;0x0051a
    a2d8:	30 41       	ret			

0000a2da <DMA_setSrcAddress>:
    a2da:	21 82       	sub	#4,	r1	;r2 As==10
    a2dc:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2e0:	81 4d 00 00 	mov	r13,	0(r1)	;
    a2e4:	81 4e 02 00 	mov	r14,	2(r1)	;
    a2e8:	0d 4c       	mov	r12,	r13	;
    a2ea:	3d 50 12 05 	add	#1298,	r13	;#0x0512
    a2ee:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a2f2:	00 00 
    a2f4:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a2f8:	bc f0 ff fc 	and	#64767,	0(r12)	;#0xfcff
    a2fc:	00 00 
    a2fe:	8c df 00 00 	bis	r15,	0(r12)	;
    a302:	21 52       	add	#4,	r1	;r2 As==10
    a304:	30 41       	ret			

0000a306 <DMA_setDstAddress>:
    a306:	21 82       	sub	#4,	r1	;r2 As==10
    a308:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a30c:	81 4d 00 00 	mov	r13,	0(r1)	;
    a310:	81 4e 02 00 	mov	r14,	2(r1)	;
    a314:	0d 4c       	mov	r12,	r13	;
    a316:	3d 50 16 05 	add	#1302,	r13	;#0x0516
    a31a:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a31e:	00 00 
    a320:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a324:	bc f0 ff f3 	and	#62463,	0(r12)	;#0xf3ff
    a328:	00 00 
    a32a:	41 18 0f 5f 	rpt #2 { rlax.w	r15		;
    a32e:	8c df 00 00 	bis	r15,	0(r12)	;
    a332:	21 52       	add	#4,	r1	;r2 As==10
    a334:	30 41       	ret			

0000a336 <DMA_enableTransfers>:
    a336:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a33a:	bc d0 10 00 	bis	#16,	1296(r12);#0x0010, 0x0510
    a33e:	10 05 
    a340:	30 41       	ret			

0000a342 <DMA_disableTransfers>:
    a342:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a346:	bc f0 ef ff 	and	#65519,	1296(r12);#0xffef, 0x0510
    a34a:	10 05 
    a34c:	30 41       	ret			

0000a34e <DMA_startTransfer>:
    a34e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a352:	9c d3 10 05 	bis	#1,	1296(r12);r3 As==01, 0x0510
    a356:	30 41       	ret			

0000a358 <DMA_enableInterrupt>:
    a358:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a35c:	ac d2 10 05 	bis	#4,	1296(r12);r2 As==10, 0x0510
    a360:	30 41       	ret			

0000a362 <DMA_disableInterrupt>:
    a362:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a366:	ac c2 10 05 	bic	#4,	1296(r12);r2 As==10, 0x0510
    a36a:	30 41       	ret			

0000a36c <DMA_getInterruptStatus>:
    a36c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a370:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a374:	3c f2       	and	#8,	r12	;r2 As==11
    a376:	30 41       	ret			

0000a378 <DMA_clearInterrupt>:
    a378:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a37c:	bc c2 10 05 	bic	#8,	1296(r12);r2 As==11, 0x0510
    a380:	30 41       	ret			

0000a382 <DMA_getNMIAbortStatus>:
    a382:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a386:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a38a:	2c f3       	and	#2,	r12	;r3 As==10
    a38c:	30 41       	ret			

0000a38e <DMA_clearNMIAbort>:
    a38e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a392:	ac c3 10 05 	bic	#2,	1296(r12);r3 As==10, 0x0510
    a396:	30 41       	ret			

0000a398 <DMA_disableTransferDuringReadModifyWrite>:
    a398:	a2 d2 08 05 	bis	#4,	&0x0508	;r2 As==10
    a39c:	30 41       	ret			

0000a39e <DMA_enableTransferDuringReadModifyWrite>:
    a39e:	a2 c2 08 05 	bic	#4,	&0x0508	;r2 As==10
    a3a2:	30 41       	ret			

0000a3a4 <DMA_enableRoundRobinPriority>:
    a3a4:	a2 d3 08 05 	bis	#2,	&0x0508	;r3 As==10
    a3a8:	30 41       	ret			

0000a3aa <DMA_disableRoundRobinPriority>:
    a3aa:	a2 c3 08 05 	bic	#2,	&0x0508	;r3 As==10
    a3ae:	30 41       	ret			

0000a3b0 <DMA_enableNMIAbort>:
    a3b0:	92 d3 08 05 	bis	#1,	&0x0508	;r3 As==01
    a3b4:	30 41       	ret			

0000a3b6 <DMA_disableNMIAbort>:
    a3b6:	92 c3 08 05 	bic	#1,	&0x0508	;r3 As==01
    a3ba:	30 41       	ret			

0000a3bc <SFR_enableInterrupt>:
    a3bc:	c2 dc 00 01 	bis.b	r12,	&0x0100	;
    a3c0:	30 41       	ret			

0000a3c2 <SFR_disableInterrupt>:
    a3c2:	c2 cc 00 01 	bic.b	r12,	&0x0100	;
    a3c6:	30 41       	ret			

0000a3c8 <SFR_getInterruptStatus>:
    a3c8:	5c f2 02 01 	and.b	&0x0102,r12	;0x0102
    a3cc:	30 41       	ret			

0000a3ce <SFR_clearInterrupt>:
    a3ce:	c2 cc 02 01 	bic.b	r12,	&0x0102	;
    a3d2:	30 41       	ret			

0000a3d4 <SFR_setResetPinPullResistor>:
    a3d4:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a3d8:	fd f0 f3 ff 	and.b	#65523,	0(r13)	;#0xfff3
    a3dc:	00 00 
    a3de:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a3e2:	30 41       	ret			

0000a3e4 <SFR_setNMIEdge>:
    a3e4:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a3e8:	ed c3 00 00 	bic.b	#2,	0(r13)	;r3 As==10
    a3ec:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a3f0:	30 41       	ret			

0000a3f2 <SFR_setResetNMIPinFunction>:
    a3f2:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a3f6:	dd c3 00 00 	bic.b	#1,	0(r13)	;r3 As==01
    a3fa:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a3fe:	30 41       	ret			

0000a400 <privateUCSSourceClockFromDCO>:
    a400:	5a 15       	pushm	#6,	r10	;16-bit words
    a402:	07 4c       	mov	r12,	r7	;
    a404:	16 42 64 01 	mov	&0x0164,r6	;0x0164
    a408:	36 f0 ff 03 	and	#1023,	r6	;#0x03ff
    a40c:	5f 42 66 01 	mov.b	&0x0166,r15	;0x0166
    a410:	7f f0 07 00 	and.b	#7,	r15	;
    a414:	4d 4f       	mov.b	r15,	r13	;
    a416:	7c 40 03 00 	mov.b	#3,	r12	;
    a41a:	4c 9f       	cmp.b	r15,	r12	;
    a41c:	05 28       	jnc	$+12     	;abs 0xa428
    a41e:	1c 43       	mov	#1,	r12	;r3 As==01
    a420:	b0 12 0a b1 	call	#45322		;#0xb10a
    a424:	0a 4c       	mov	r12,	r10	;
    a426:	0c 3c       	jmp	$+26     	;abs 0xa440
    a428:	6f 92       	cmp.b	#4,	r15	;r2 As==10
    a42a:	06 24       	jz	$+14     	;abs 0xa438
    a42c:	7f 90 05 00 	cmp.b	#5,	r15	;
    a430:	06 20       	jnz	$+14     	;abs 0xa43e
    a432:	3a 40 10 00 	mov	#16,	r10	;#0x0010
    a436:	04 3c       	jmp	$+10     	;abs 0xa440
    a438:	3a 40 0c 00 	mov	#12,	r10	;#0x000c
    a43c:	01 3c       	jmp	$+4      	;abs 0xa440
    a43e:	1a 43       	mov	#1,	r10	;r3 As==01
    a440:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    a444:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    a448:	7c 90 20 00 	cmp.b	#32,	r12	;#0x0020
    a44c:	17 24       	jz	$+48     	;abs 0xa47c
    a44e:	7c 90 50 00 	cmp.b	#80,	r12	;#0x0050
    a452:	23 24       	jz	$+72     	;abs 0xa49a
    a454:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a456:	2f 20       	jnz	$+96     	;abs 0xa4b6
    a458:	18 42 4c 24 	mov	&0x244c,r8	;0x244c
    a45c:	19 42 4e 24 	mov	&0x244e,r9	;0x244e
    a460:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a464:	6c 01 
    a466:	0e 20       	jnz	$+30     	;abs 0xa484
    a468:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a46c:	24 24       	jz	$+74     	;abs 0xa4b6
    a46e:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a472:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a476:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a47a:	1d 24       	jz	$+60     	;abs 0xa4b6
    a47c:	38 40 00 80 	mov	#32768,	r8	;#0x8000
    a480:	09 43       	clr	r9		;
    a482:	19 3c       	jmp	$+52     	;abs 0xa4b6
    a484:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a488:	16 24       	jz	$+46     	;abs 0xa4b6
    a48a:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a48e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a492:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a496:	f2 23       	jnz	$-26     	;abs 0xa47c
    a498:	0e 3c       	jmp	$+30     	;abs 0xa4b6
    a49a:	18 42 48 24 	mov	&0x2448,r8	;0x2448
    a49e:	19 42 4a 24 	mov	&0x244a,r9	;0x244a
    a4a2:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a4a6:	07 24       	jz	$+16     	;abs 0xa4b6
    a4a8:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a4ac:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a4b0:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a4b4:	e3 23       	jnz	$-56     	;abs 0xa47c
    a4b6:	0e 46       	mov	r6,	r14	;
    a4b8:	1e 53       	inc	r14		;
    a4ba:	35 40 24 b2 	mov	#45604,	r5	;#0xb224
    a4be:	0c 48       	mov	r8,	r12	;
    a4c0:	0d 49       	mov	r9,	r13	;
    a4c2:	0f 43       	clr	r15		;
    a4c4:	85 12       	call	r5		;
    a4c6:	0e 4a       	mov	r10,	r14	;
    a4c8:	0f 43       	clr	r15		;
    a4ca:	b0 12 d8 b0 	call	#45272		;#0xb0d8
    a4ce:	08 4c       	mov	r12,	r8	;
    a4d0:	09 4d       	mov	r13,	r9	;
    a4d2:	0b 45       	mov	r5,	r11	;
    a4d4:	37 90 03 00 	cmp	#3,	r7	;
    a4d8:	16 20       	jnz	$+46     	;abs 0xa506
    a4da:	1c 42 64 01 	mov	&0x0164,r12	;0x0164
    a4de:	3c f0 00 70 	and	#28672,	r12	;#0x7000
    a4e2:	5c 03       	rrum	#1,	r12	;
    a4e4:	4a 18 0c 11 	rpt #11 { rrax.w	r12		;
    a4e8:	0d 43       	clr	r13		;
    a4ea:	1e 43       	mov	#1,	r14	;r3 As==01
    a4ec:	0d 9c       	cmp	r12,	r13	;
    a4ee:	05 2c       	jc	$+12     	;abs 0xa4fa
    a4f0:	0e 5e       	rla	r14		;
    a4f2:	5d 53       	inc.b	r13		;
    a4f4:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a4f8:	f9 3f       	jmp	$-12     	;abs 0xa4ec
    a4fa:	0c 48       	mov	r8,	r12	;
    a4fc:	0d 49       	mov	r9,	r13	;
    a4fe:	0f 43       	clr	r15		;
    a500:	8b 12       	call	r11		;
    a502:	08 4c       	mov	r12,	r8	;
    a504:	09 4d       	mov	r13,	r9	;
    a506:	0c 48       	mov	r8,	r12	;
    a508:	0d 49       	mov	r9,	r13	;
    a50a:	55 17       	popm	#6,	r10	;16-bit words
    a50c:	30 41       	ret			

0000a50e <privateUCSComputeCLKFrequency>:
    a50e:	0a 15       	pushm	#1,	r10	;16-bit words
    a510:	0b 43       	clr	r11		;
    a512:	1a 43       	mov	#1,	r10	;r3 As==01
    a514:	0b 9d       	cmp	r13,	r11	;
    a516:	07 2c       	jc	$+16     	;abs 0xa526
    a518:	4a 5a       	rla.b	r10		;
    a51a:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a51e:	5b 53       	inc.b	r11		;
    a520:	3b f0 ff 00 	and	#255,	r11	;#0x00ff
    a524:	f7 3f       	jmp	$-16     	;abs 0xa514
    a526:	2c 93       	cmp	#2,	r12	;r3 As==10
    a528:	3f 24       	jz	$+128    	;abs 0xa5a8
    a52a:	2d 43       	mov	#2,	r13	;r3 As==10
    a52c:	0d 9c       	cmp	r12,	r13	;
    a52e:	0e 28       	jnc	$+30     	;abs 0xa54c
    a530:	0c 93       	cmp	#0,	r12	;r3 As==00
    a532:	13 24       	jz	$+40     	;abs 0xa55a
    a534:	1c 93       	cmp	#1,	r12	;r3 As==01
    a536:	5a 20       	jnz	$+182    	;abs 0xa5ec
    a538:	3c 40 10 27 	mov	#10000,	r12	;#0x2710
    a53c:	0d 4a       	mov	r10,	r13	;
    a53e:	b0 12 98 af 	call	#44952		;#0xaf98
    a542:	0e 4c       	mov	r12,	r14	;
    a544:	0f 4c       	mov	r12,	r15	;
    a546:	4e 18 0f 11 	rpt #15 { rrax.w	r15		;
    a54a:	50 3c       	jmp	$+162    	;abs 0xa5ec
    a54c:	2d 42       	mov	#4,	r13	;r2 As==10
    a54e:	0d 9c       	cmp	r12,	r13	;
    a550:	45 2c       	jc	$+140    	;abs 0xa5dc
    a552:	3c 90 05 00 	cmp	#5,	r12	;
    a556:	30 24       	jz	$+98     	;abs 0xa5b8
    a558:	49 3c       	jmp	$+148    	;abs 0xa5ec
    a55a:	1c 42 4c 24 	mov	&0x244c,r12	;0x244c
    a55e:	1d 42 4e 24 	mov	&0x244e,r13	;0x244e
    a562:	0e 4a       	mov	r10,	r14	;
    a564:	0f 43       	clr	r15		;
    a566:	b0 12 d8 b0 	call	#45272		;#0xb0d8
    a56a:	0e 4c       	mov	r12,	r14	;
    a56c:	0f 4d       	mov	r13,	r15	;
    a56e:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a572:	6c 01 
    a574:	0e 20       	jnz	$+30     	;abs 0xa592
    a576:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a57a:	38 24       	jz	$+114    	;abs 0xa5ec
    a57c:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a580:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a584:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a588:	31 24       	jz	$+100    	;abs 0xa5ec
    a58a:	3e 40 00 80 	mov	#32768,	r14	;#0x8000
    a58e:	0f 43       	clr	r15		;
    a590:	2d 3c       	jmp	$+92     	;abs 0xa5ec
    a592:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a596:	2a 24       	jz	$+86     	;abs 0xa5ec
    a598:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a59c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a5a0:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a5a4:	f2 23       	jnz	$-26     	;abs 0xa58a
    a5a6:	22 3c       	jmp	$+70     	;abs 0xa5ec
    a5a8:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    a5ac:	0d 43       	clr	r13		;
    a5ae:	0e 4a       	mov	r10,	r14	;
    a5b0:	0f 43       	clr	r15		;
    a5b2:	b0 12 64 b0 	call	#45156		;#0xb064
    a5b6:	18 3c       	jmp	$+50     	;abs 0xa5e8
    a5b8:	1c 42 48 24 	mov	&0x2448,r12	;0x2448
    a5bc:	1d 42 4a 24 	mov	&0x244a,r13	;0x244a
    a5c0:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a5c4:	04 24       	jz	$+10     	;abs 0xa5ce
    a5c6:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a5ca:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a5ce:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a5d2:	06 24       	jz	$+14     	;abs 0xa5e0
    a5d4:	2c 42       	mov	#4,	r12	;r2 As==10
    a5d6:	b0 12 00 a4 	call	#41984		;#0xa400
    a5da:	06 3c       	jmp	$+14     	;abs 0xa5e8
    a5dc:	b0 12 00 a4 	call	#41984		;#0xa400
    a5e0:	0e 4a       	mov	r10,	r14	;
    a5e2:	0f 43       	clr	r15		;
    a5e4:	b0 12 d8 b0 	call	#45272		;#0xb0d8
    a5e8:	0e 4c       	mov	r12,	r14	;
    a5ea:	0f 4d       	mov	r13,	r15	;
    a5ec:	0c 4e       	mov	r14,	r12	;
    a5ee:	0d 4f       	mov	r15,	r13	;
    a5f0:	0a 17       	popm	#1,	r10	;16-bit words
    a5f2:	30 41       	ret			

0000a5f4 <UCS_setExternalClockSource>:
    a5f4:	82 4c 4c 24 	mov	r12,	&0x244c	;
    a5f8:	82 4d 4e 24 	mov	r13,	&0x244e	;
    a5fc:	82 4e 48 24 	mov	r14,	&0x2448	;
    a600:	82 4f 4a 24 	mov	r15,	&0x244a	;
    a604:	30 41       	ret			

0000a606 <UCS_initClockSignal>:
    a606:	0a 15       	pushm	#1,	r10	;16-bit words
    a608:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a60c:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    a60e:	26 24       	jz	$+78     	;abs 0xa65c
    a610:	6a 43       	mov.b	#2,	r10	;r3 As==10
    a612:	4a 9c       	cmp.b	r12,	r10	;
    a614:	0f 28       	jnc	$+32     	;abs 0xa634
    a616:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    a618:	42 20       	jnz	$+134    	;abs 0xa69e
    a61a:	b2 f0 ff f8 	and	#63743,	&0x0168	;#0xf8ff
    a61e:	68 01 
    a620:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a624:	82 dd 68 01 	bis	r13,	&0x0168	;
    a628:	b2 f0 ff f8 	and	#63743,	&0x016a	;#0xf8ff
    a62c:	6a 01 
    a62e:	47 18 0e 5e 	rpt #8 { rlax.w	r14		;
    a632:	11 3c       	jmp	$+36     	;abs 0xa656
    a634:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    a636:	03 24       	jz	$+8      	;abs 0xa63e
    a638:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    a63a:	19 24       	jz	$+52     	;abs 0xa66e
    a63c:	30 3c       	jmp	$+98     	;abs 0xa69e
    a63e:	b2 f0 8f ff 	and	#65423,	&0x0168	;#0xff8f
    a642:	68 01 
    a644:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a648:	82 dd 68 01 	bis	r13,	&0x0168	;
    a64c:	b2 f0 8f ff 	and	#65423,	&0x016a	;#0xff8f
    a650:	6a 01 
    a652:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    a656:	82 de 6a 01 	bis	r14,	&0x016a	;
    a65a:	21 3c       	jmp	$+68     	;abs 0xa69e
    a65c:	b2 f0 f8 ff 	and	#65528,	&0x0168	;#0xfff8
    a660:	68 01 
    a662:	82 dd 68 01 	bis	r13,	&0x0168	;
    a666:	b2 f0 f8 ff 	and	#65528,	&0x016a	;#0xfff8
    a66a:	6a 01 
    a66c:	f4 3f       	jmp	$-22     	;abs 0xa656
    a66e:	f2 f0 8f ff 	and.b	#65423,	&0x0166	;#0xff8f
    a672:	66 01 
    a674:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a678:	c2 dd 66 01 	bis.b	r13,	&0x0166	;
    a67c:	f2 f0 f8 ff 	and.b	#65528,	&0x0166	;#0xfff8
    a680:	66 01 
    a682:	2e 92       	cmp	#4,	r14	;r2 As==10
    a684:	06 24       	jz	$+14     	;abs 0xa692
    a686:	3e 90 05 00 	cmp	#5,	r14	;
    a68a:	07 20       	jnz	$+16     	;abs 0xa69a
    a68c:	e2 d2 66 01 	bis.b	#4,	&0x0166	;r2 As==10
    a690:	06 3c       	jmp	$+14     	;abs 0xa69e
    a692:	f2 d0 05 00 	bis.b	#5,	&0x0166	;
    a696:	66 01 
    a698:	02 3c       	jmp	$+6      	;abs 0xa69e
    a69a:	c2 de 66 01 	bis.b	r14,	&0x0166	;
    a69e:	0a 17       	popm	#1,	r10	;16-bit words
    a6a0:	30 41       	ret			

0000a6a2 <UCS_turnOnLFXT1>:
    a6a2:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a6a6:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a6aa:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a6ae:	6c 01 
    a6b0:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a6b4:	6c 01 
    a6b6:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a6ba:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a6be:	05 24       	jz	$+12     	;abs 0xa6ca
    a6c0:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a6c4:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a6c8:	f8 3f       	jmp	$-14     	;abs 0xa6ba
    a6ca:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a6ce:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a6d2:	0c dd       	bis	r13,	r12	;
    a6d4:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a6d8:	30 41       	ret			

0000a6da <UCS_turnOnHFXT1>:
    a6da:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a6de:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a6e2:	3d f0 c0 00 	and	#192,	r13	;#0x00c0
    a6e6:	0d 9c       	cmp	r12,	r13	;
    a6e8:	05 24       	jz	$+12     	;abs 0xa6f4
    a6ea:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a6ee:	6c 01 
    a6f0:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a6f4:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a6f8:	6c 01 
    a6fa:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a6fe:	6c 01 
    a700:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a704:	05 24       	jz	$+12     	;abs 0xa710
    a706:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a70a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a70e:	f8 3f       	jmp	$-14     	;abs 0xa700
    a710:	30 41       	ret			

0000a712 <UCS_bypassXT1>:
    a712:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a716:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a71a:	6c 01 
    a71c:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a720:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a724:	6c 01 
    a726:	0c 93       	cmp	#0,	r12	;r3 As==00
    a728:	08 20       	jnz	$+18     	;abs 0xa73a
    a72a:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a72e:	0d 24       	jz	$+28     	;abs 0xa74a
    a730:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a734:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a738:	f8 3f       	jmp	$-14     	;abs 0xa72a
    a73a:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a73e:	05 24       	jz	$+12     	;abs 0xa74a
    a740:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a744:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a748:	f8 3f       	jmp	$-14     	;abs 0xa73a
    a74a:	30 41       	ret			

0000a74c <UCS_turnOnLFXT1WithTimeout>:
    a74c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a750:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a754:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a758:	6c 01 
    a75a:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a75e:	6c 01 
    a760:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a764:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a768:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a76c:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a770:	04 24       	jz	$+10     	;abs 0xa77a
    a772:	3e 53       	add	#-1,	r14	;r3 As==11
    a774:	0e 93       	cmp	#0,	r14	;r3 As==00
    a776:	f6 23       	jnz	$-18     	;abs 0xa764
    a778:	0b 3c       	jmp	$+24     	;abs 0xa790
    a77a:	0e 93       	cmp	#0,	r14	;r3 As==00
    a77c:	09 24       	jz	$+20     	;abs 0xa790
    a77e:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a782:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a786:	0c dd       	bis	r13,	r12	;
    a788:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a78c:	1c 43       	mov	#1,	r12	;r3 As==01
    a78e:	01 3c       	jmp	$+4      	;abs 0xa792
    a790:	0c 4e       	mov	r14,	r12	;
    a792:	30 41       	ret			

0000a794 <UCS_turnOnHFXT1WithTimeout>:
    a794:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a798:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a79c:	3e f0 c0 00 	and	#192,	r14	;#0x00c0
    a7a0:	0e 9c       	cmp	r12,	r14	;
    a7a2:	05 24       	jz	$+12     	;abs 0xa7ae
    a7a4:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a7a8:	6c 01 
    a7aa:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7ae:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a7b2:	6c 01 
    a7b4:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a7b8:	6c 01 
    a7ba:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a7be:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a7c2:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a7c6:	05 24       	jz	$+12     	;abs 0xa7d2
    a7c8:	3d 53       	add	#-1,	r13	;r3 As==11
    a7ca:	0d 93       	cmp	#0,	r13	;r3 As==00
    a7cc:	f6 23       	jnz	$-18     	;abs 0xa7ba
    a7ce:	0c 4d       	mov	r13,	r12	;
    a7d0:	07 3c       	jmp	$+16     	;abs 0xa7e0
    a7d2:	0c 43       	clr	r12		;
    a7d4:	0c 8d       	sub	r13,	r12	;
    a7d6:	0d dc       	bis	r12,	r13	;
    a7d8:	0c 4d       	mov	r13,	r12	;
    a7da:	5c 03       	rrum	#1,	r12	;
    a7dc:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a7e0:	30 41       	ret			

0000a7e2 <UCS_bypassXT1WithTimeout>:
    a7e2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a7e6:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a7ea:	6c 01 
    a7ec:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7f0:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a7f4:	6c 01 
    a7f6:	0c 93       	cmp	#0,	r12	;r3 As==00
    a7f8:	0e 20       	jnz	$+30     	;abs 0xa816
    a7fa:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a7fe:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a802:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a806:	0e 24       	jz	$+30     	;abs 0xa824
    a808:	3d 53       	add	#-1,	r13	;r3 As==11
    a80a:	0d 93       	cmp	#0,	r13	;r3 As==00
    a80c:	f6 23       	jnz	$-18     	;abs 0xa7fa
    a80e:	12 3c       	jmp	$+38     	;abs 0xa834
    a810:	3d 53       	add	#-1,	r13	;r3 As==11
    a812:	0d 93       	cmp	#0,	r13	;r3 As==00
    a814:	0f 24       	jz	$+32     	;abs 0xa834
    a816:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a81a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a81e:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a822:	f6 23       	jnz	$-18     	;abs 0xa810
    a824:	0c 43       	clr	r12		;
    a826:	0c 8d       	sub	r13,	r12	;
    a828:	0d dc       	bis	r12,	r13	;
    a82a:	0c 4d       	mov	r13,	r12	;
    a82c:	5c 03       	rrum	#1,	r12	;
    a82e:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a832:	01 3c       	jmp	$+4      	;abs 0xa836
    a834:	0c 43       	clr	r12		;
    a836:	30 41       	ret			

0000a838 <UCS_turnOffXT1>:
    a838:	92 d3 6c 01 	bis	#1,	&0x016c	;r3 As==01
    a83c:	30 41       	ret			

0000a83e <UCS_turnOnXT2>:
    a83e:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a842:	3d f0 00 c0 	and	#49152,	r13	;#0xc000
    a846:	0d 9c       	cmp	r12,	r13	;
    a848:	05 24       	jz	$+12     	;abs 0xa854
    a84a:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a84e:	6c 01 
    a850:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a854:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a858:	6c 01 
    a85a:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a85e:	6c 01 
    a860:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a864:	05 24       	jz	$+12     	;abs 0xa870
    a866:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a86a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a86e:	f8 3f       	jmp	$-14     	;abs 0xa860
    a870:	30 41       	ret			

0000a872 <UCS_bypassXT2>:
    a872:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a876:	6c 01 
    a878:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a87c:	05 24       	jz	$+12     	;abs 0xa888
    a87e:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a882:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a886:	f8 3f       	jmp	$-14     	;abs 0xa878
    a888:	30 41       	ret			

0000a88a <UCS_turnOnXT2WithTimeout>:
    a88a:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a88e:	3e f0 00 c0 	and	#49152,	r14	;#0xc000
    a892:	0e 9c       	cmp	r12,	r14	;
    a894:	05 24       	jz	$+12     	;abs 0xa8a0
    a896:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a89a:	6c 01 
    a89c:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a8a0:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a8a4:	6c 01 
    a8a6:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a8aa:	6c 01 
    a8ac:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a8b0:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8b4:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a8b8:	05 24       	jz	$+12     	;abs 0xa8c4
    a8ba:	3d 53       	add	#-1,	r13	;r3 As==11
    a8bc:	0d 93       	cmp	#0,	r13	;r3 As==00
    a8be:	f6 23       	jnz	$-18     	;abs 0xa8ac
    a8c0:	0c 4d       	mov	r13,	r12	;
    a8c2:	07 3c       	jmp	$+16     	;abs 0xa8d2
    a8c4:	0c 43       	clr	r12		;
    a8c6:	0c 8d       	sub	r13,	r12	;
    a8c8:	0d dc       	bis	r12,	r13	;
    a8ca:	0c 4d       	mov	r13,	r12	;
    a8cc:	5c 03       	rrum	#1,	r12	;
    a8ce:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a8d2:	30 41       	ret			

0000a8d4 <UCS_bypassXT2WithTimeout>:
    a8d4:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a8d8:	6c 01 
    a8da:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a8de:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8e2:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a8e6:	04 24       	jz	$+10     	;abs 0xa8f0
    a8e8:	3c 53       	add	#-1,	r12	;r3 As==11
    a8ea:	0c 93       	cmp	#0,	r12	;r3 As==00
    a8ec:	f6 23       	jnz	$-18     	;abs 0xa8da
    a8ee:	06 3c       	jmp	$+14     	;abs 0xa8fc
    a8f0:	0d 43       	clr	r13		;
    a8f2:	0d 8c       	sub	r12,	r13	;
    a8f4:	0c dd       	bis	r13,	r12	;
    a8f6:	5c 03       	rrum	#1,	r12	;
    a8f8:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a8fc:	30 41       	ret			

0000a8fe <UCS_turnOffXT2>:
    a8fe:	b2 d0 00 01 	bis	#256,	&0x016c	;#0x0100
    a902:	6c 01 
    a904:	30 41       	ret			

0000a906 <UCS_initFLL>:
    a906:	0a 15       	pushm	#1,	r10	;16-bit words
    a908:	0e 42       	mov	r2,	r14	;
    a90a:	3e f0 40 00 	and	#64,	r14	;#0x0040
    a90e:	3a 40 80 3e 	mov	#16000,	r10	;#0x3e80
    a912:	0a 9c       	cmp	r12,	r10	;
    a914:	06 2c       	jc	$+14     	;abs 0xa922
    a916:	12 c3       	clrc			
    a918:	0d 10       	rrc	r13		;
    a91a:	1b 43       	mov	#1,	r11	;r3 As==01
    a91c:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    a920:	03 3c       	jmp	$+8      	;abs 0xa928
    a922:	0c 5c       	rla	r12		;
    a924:	0b 43       	clr	r11		;
    a926:	fa 3f       	jmp	$-10     	;abs 0xa91c
    a928:	3a 40 00 02 	mov	#512,	r10	;#0x0200
    a92c:	0a 9d       	cmp	r13,	r10	;
    a92e:	05 2c       	jc	$+12     	;abs 0xa93a
    a930:	3f 50 00 10 	add	#4096,	r15	;#0x1000
    a934:	12 c3       	clrc			
    a936:	0d 10       	rrc	r13		;
    a938:	f7 3f       	jmp	$-16     	;abs 0xa928
    a93a:	32 d0 40 00 	bis	#64,	r2	;#0x0040
    a93e:	c2 43 61 01 	mov.b	#0,	&0x0161	;r3 As==00
    a942:	b2 f0 00 fc 	and	#64512,	&0x0164	;#0xfc00
    a946:	64 01 
    a948:	3d 53       	add	#-1,	r13	;r3 As==11
    a94a:	0d df       	bis	r15,	r13	;
    a94c:	82 4d 64 01 	mov	r13,	&0x0164	;
    a950:	3d 40 76 02 	mov	#630,	r13	;#0x0276
    a954:	0d 9c       	cmp	r12,	r13	;
    a956:	03 28       	jnc	$+8      	;abs 0xa95e
    a958:	c2 43 62 01 	mov.b	#0,	&0x0162	;r3 As==00
    a95c:	33 3c       	jmp	$+104    	;abs 0xa9c4
    a95e:	3f 40 e1 04 	mov	#1249,	r15	;#0x04e1
    a962:	0f 9c       	cmp	r12,	r15	;
    a964:	04 28       	jnc	$+10     	;abs 0xa96e
    a966:	f2 40 10 00 	mov.b	#16,	&0x0162	;#0x0010
    a96a:	62 01 
    a96c:	2b 3c       	jmp	$+88     	;abs 0xa9c4
    a96e:	3a 40 c3 09 	mov	#2499,	r10	;#0x09c3
    a972:	0a 9c       	cmp	r12,	r10	;
    a974:	04 28       	jnc	$+10     	;abs 0xa97e
    a976:	f2 40 20 00 	mov.b	#32,	&0x0162	;#0x0020
    a97a:	62 01 
    a97c:	23 3c       	jmp	$+72     	;abs 0xa9c4
    a97e:	3d 40 87 13 	mov	#4999,	r13	;#0x1387
    a982:	0d 9c       	cmp	r12,	r13	;
    a984:	04 28       	jnc	$+10     	;abs 0xa98e
    a986:	f2 40 30 00 	mov.b	#48,	&0x0162	;#0x0030
    a98a:	62 01 
    a98c:	1b 3c       	jmp	$+56     	;abs 0xa9c4
    a98e:	3f 40 0f 27 	mov	#9999,	r15	;#0x270f
    a992:	0f 9c       	cmp	r12,	r15	;
    a994:	04 28       	jnc	$+10     	;abs 0xa99e
    a996:	f2 40 40 00 	mov.b	#64,	&0x0162	;#0x0040
    a99a:	62 01 
    a99c:	13 3c       	jmp	$+40     	;abs 0xa9c4
    a99e:	3a 40 1f 4e 	mov	#19999,	r10	;#0x4e1f
    a9a2:	0a 9c       	cmp	r12,	r10	;
    a9a4:	04 28       	jnc	$+10     	;abs 0xa9ae
    a9a6:	f2 40 50 00 	mov.b	#80,	&0x0162	;#0x0050
    a9aa:	62 01 
    a9ac:	0b 3c       	jmp	$+24     	;abs 0xa9c4
    a9ae:	3d 40 3f 9c 	mov	#39999,	r13	;#0x9c3f
    a9b2:	0d 9c       	cmp	r12,	r13	;
    a9b4:	04 28       	jnc	$+10     	;abs 0xa9be
    a9b6:	f2 40 60 00 	mov.b	#96,	&0x0162	;#0x0060
    a9ba:	62 01 
    a9bc:	03 3c       	jmp	$+8      	;abs 0xa9c4
    a9be:	f2 40 70 00 	mov.b	#112,	&0x0162	;#0x0070
    a9c2:	62 01 
    a9c4:	32 c0 40 00 	bic	#64,	r2	;#0x0040
    a9c8:	d2 b3 6e 01 	bit.b	#1,	&0x016e	;r3 As==01
    a9cc:	05 24       	jz	$+12     	;abs 0xa9d8
    a9ce:	d2 c3 6e 01 	bic.b	#1,	&0x016e	;r3 As==01
    a9d2:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a9d6:	f8 3f       	jmp	$-14     	;abs 0xa9c8
    a9d8:	02 de       	bis	r14,	r2	;
    a9da:	b2 f0 88 ff 	and	#65416,	&0x0168	;#0xff88
    a9de:	68 01 
    a9e0:	1b 93       	cmp	#1,	r11	;r3 As==01
    a9e2:	04 20       	jnz	$+10     	;abs 0xa9ec
    a9e4:	b2 d0 33 00 	bis	#51,	&0x0168	;#0x0033
    a9e8:	68 01 
    a9ea:	03 3c       	jmp	$+8      	;abs 0xa9f2
    a9ec:	b2 d0 44 00 	bis	#68,	&0x0168	;#0x0044
    a9f0:	68 01 
    a9f2:	0a 17       	popm	#1,	r10	;16-bit words
    a9f4:	30 41       	ret			

0000a9f6 <UCS_initFLLSettle>:
    a9f6:	21 82       	sub	#4,	r1	;r2 As==10
    a9f8:	0e 4d       	mov	r13,	r14	;
    a9fa:	44 18 0e 5e 	rpt #5 { rlax.w	r14		;
    a9fe:	81 4e 00 00 	mov	r14,	0(r1)	;
    aa02:	b0 12 06 a9 	call	#43270		;#0xa906
    aa06:	2c 41       	mov	@r1,	r12	;
    aa08:	0d 4c       	mov	r12,	r13	;
    aa0a:	3d 53       	add	#-1,	r13	;r3 As==11
    aa0c:	81 4d 00 00 	mov	r13,	0(r1)	;
    aa10:	0c 93       	cmp	#0,	r12	;r3 As==00
    aa12:	0c 24       	jz	$+26     	;abs 0xaa2c
    aa14:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    aa18:	1c 41 02 00 	mov	2(r1),	r12	;
    aa1c:	3d 40 1d 00 	mov	#29,	r13	;#0x001d
    aa20:	0d 9c       	cmp	r12,	r13	;
    aa22:	f1 2b       	jnc	$-28     	;abs 0xaa06
    aa24:	03 43       	nop			
    aa26:	91 53 02 00 	inc	2(r1)		;
    aa2a:	f6 3f       	jmp	$-18     	;abs 0xaa18
    aa2c:	21 52       	add	#4,	r1	;r2 As==10
    aa2e:	30 41       	ret			

0000aa30 <UCS_enableClockRequest>:
    aa30:	c2 dc 70 01 	bis.b	r12,	&0x0170	;
    aa34:	30 41       	ret			

0000aa36 <UCS_disableClockRequest>:
    aa36:	c2 cc 70 01 	bic.b	r12,	&0x0170	;
    aa3a:	30 41       	ret			

0000aa3c <UCS_getFaultFlagStatus>:
    aa3c:	5c f2 6e 01 	and.b	&0x016e,r12	;0x016e
    aa40:	30 41       	ret			

0000aa42 <UCS_clearFaultFlag>:
    aa42:	c2 cc 6e 01 	bic.b	r12,	&0x016e	;
    aa46:	30 41       	ret			

0000aa48 <UCS_turnOffSMCLK>:
    aa48:	a2 d3 6c 01 	bis	#2,	&0x016c	;r3 As==10
    aa4c:	30 41       	ret			

0000aa4e <UCS_turnOnSMCLK>:
    aa4e:	a2 c3 6c 01 	bic	#2,	&0x016c	;r3 As==10
    aa52:	30 41       	ret			

0000aa54 <UCS_getACLK>:
    aa54:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    aa58:	3c f0 00 07 	and	#1792,	r12	;#0x0700
    aa5c:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa60:	3d f0 00 07 	and	#1792,	r13	;#0x0700
    aa64:	5c 0f       	rrum	#4,	r12	;
    aa66:	5c 0f       	rrum	#4,	r12	;
    aa68:	5d 0f       	rrum	#4,	r13	;
    aa6a:	5d 0f       	rrum	#4,	r13	;
    aa6c:	b0 12 0e a5 	call	#42254		;#0xa50e
    aa70:	30 41       	ret			

0000aa72 <UCS_getSMCLK>:
    aa72:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    aa76:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    aa7a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    aa7e:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa82:	3d f0 70 00 	and	#112,	r13	;#0x0070
    aa86:	5c 0f       	rrum	#4,	r12	;
    aa88:	5d 0f       	rrum	#4,	r13	;
    aa8a:	b0 12 0e a5 	call	#42254		;#0xa50e
    aa8e:	30 41       	ret			

0000aa90 <UCS_getMCLK>:
    aa90:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    aa94:	3c f0 07 00 	and	#7,	r12	;
    aa98:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa9c:	3d f0 07 00 	and	#7,	r13	;
    aaa0:	b0 12 0e a5 	call	#42254		;#0xa50e
    aaa4:	30 41       	ret			

0000aaa6 <UCS_clearAllOscFlagsWithTimeout>:
    aaa6:	f2 f0 f0 ff 	and.b	#65520,	&0x016e	;#0xfff0
    aaaa:	6e 01 
    aaac:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    aab0:	e2 b3 02 01 	bit.b	#2,	&0x0102	;r3 As==10
    aab4:	03 24       	jz	$+8      	;abs 0xaabc
    aab6:	3c 53       	add	#-1,	r12	;r3 As==11
    aab8:	0c 93       	cmp	#0,	r12	;r3 As==00
    aaba:	f5 23       	jnz	$-20     	;abs 0xaaa6
    aabc:	5c 42 6e 01 	mov.b	&0x016e,r12	;0x016e
    aac0:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    aac4:	3c f0 0f 00 	and	#15,	r12	;#0x000f
    aac8:	30 41       	ret			

0000aaca <PMM_enableSvsL>:
    aaca:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aace:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aad2:	00 00 
    aad4:	b2 d0 00 04 	bis	#1024,	&0x0126	;#0x0400
    aad8:	26 01 
    aada:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aade:	30 41       	ret			

0000aae0 <PMM_disableSvsL>:
    aae0:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aae4:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aae8:	00 00 
    aaea:	b2 f0 ff fb 	and	#64511,	&0x0126	;#0xfbff
    aaee:	26 01 
    aaf0:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aaf4:	30 41       	ret			

0000aaf6 <PMM_enableSvmL>:
    aaf6:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aafa:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aafe:	00 00 
    ab00:	b2 d0 00 40 	bis	#16384,	&0x0126	;#0x4000
    ab04:	26 01 
    ab06:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab0a:	30 41       	ret			

0000ab0c <PMM_disableSvmL>:
    ab0c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab10:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab14:	00 00 
    ab16:	b2 f0 ff bf 	and	#49151,	&0x0126	;#0xbfff
    ab1a:	26 01 
    ab1c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab20:	30 41       	ret			

0000ab22 <PMM_enableSvsH>:
    ab22:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab26:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab2a:	00 00 
    ab2c:	b2 d0 00 04 	bis	#1024,	&0x0124	;#0x0400
    ab30:	24 01 
    ab32:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab36:	30 41       	ret			

0000ab38 <PMM_disableSvsH>:
    ab38:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab3c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab40:	00 00 
    ab42:	b2 f0 ff fb 	and	#64511,	&0x0124	;#0xfbff
    ab46:	24 01 
    ab48:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab4c:	30 41       	ret			

0000ab4e <PMM_enableSvmH>:
    ab4e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab52:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab56:	00 00 
    ab58:	b2 d0 00 40 	bis	#16384,	&0x0124	;#0x4000
    ab5c:	24 01 
    ab5e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab62:	30 41       	ret			

0000ab64 <PMM_disableSvmH>:
    ab64:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab68:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab6c:	00 00 
    ab6e:	b2 f0 ff bf 	and	#49151,	&0x0124	;#0xbfff
    ab72:	24 01 
    ab74:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab78:	30 41       	ret			

0000ab7a <PMM_enableSvsLSvmL>:
    ab7a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab7e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab82:	00 00 
    ab84:	b2 d0 00 44 	bis	#17408,	&0x0126	;#0x4400
    ab88:	26 01 
    ab8a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab8e:	30 41       	ret			

0000ab90 <PMM_disableSvsLSvmL>:
    ab90:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab94:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab98:	00 00 
    ab9a:	b2 f0 ff bb 	and	#48127,	&0x0126	;#0xbbff
    ab9e:	26 01 
    aba0:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aba4:	30 41       	ret			

0000aba6 <PMM_enableSvsHSvmH>:
    aba6:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abaa:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abae:	00 00 
    abb0:	b2 d0 00 44 	bis	#17408,	&0x0124	;#0x4400
    abb4:	24 01 
    abb6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abba:	30 41       	ret			

0000abbc <PMM_disableSvsHSvmH>:
    abbc:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abc0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abc4:	00 00 
    abc6:	b2 f0 ff bb 	and	#48127,	&0x0124	;#0xbbff
    abca:	24 01 
    abcc:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abd0:	30 41       	ret			

0000abd2 <PMM_enableSvsLReset>:
    abd2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abd6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abda:	00 00 
    abdc:	b2 d0 00 01 	bis	#256,	&0x012e	;#0x0100
    abe0:	2e 01 
    abe2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abe6:	30 41       	ret			

0000abe8 <PMM_disableSvsLReset>:
    abe8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abec:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abf0:	00 00 
    abf2:	b2 f0 ff fe 	and	#65279,	&0x012e	;#0xfeff
    abf6:	2e 01 
    abf8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abfc:	30 41       	ret			

0000abfe <PMM_enableSvmLInterrupt>:
    abfe:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac02:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac06:	00 00 
    ac08:	a2 d3 2e 01 	bis	#2,	&0x012e	;r3 As==10
    ac0c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac10:	30 41       	ret			

0000ac12 <PMM_disableSvmLInterrupt>:
    ac12:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac16:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac1a:	00 00 
    ac1c:	a2 c3 2e 01 	bic	#2,	&0x012e	;r3 As==10
    ac20:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac24:	30 41       	ret			

0000ac26 <PMM_enableSvsHReset>:
    ac26:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac2a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac2e:	00 00 
    ac30:	b2 d0 00 10 	bis	#4096,	&0x012e	;#0x1000
    ac34:	2e 01 
    ac36:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac3a:	30 41       	ret			

0000ac3c <PMM_disableSvsHReset>:
    ac3c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac40:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac44:	00 00 
    ac46:	b2 f0 ff ef 	and	#61439,	&0x012e	;#0xefff
    ac4a:	2e 01 
    ac4c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac50:	30 41       	ret			

0000ac52 <PMM_enableSvmHInterrupt>:
    ac52:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac56:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac5a:	00 00 
    ac5c:	b2 d0 20 00 	bis	#32,	&0x012e	;#0x0020
    ac60:	2e 01 
    ac62:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac66:	30 41       	ret			

0000ac68 <PMM_disableSvmHInterrupt>:
    ac68:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac6c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac70:	00 00 
    ac72:	b2 f0 df ff 	and	#65503,	&0x012e	;#0xffdf
    ac76:	2e 01 
    ac78:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac7c:	30 41       	ret			

0000ac7e <PMM_clearPMMIFGS>:
    ac7e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac82:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac86:	00 00 
    ac88:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    ac8c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac90:	30 41       	ret			

0000ac92 <PMM_enableSvsLInLPMFastWake>:
    ac92:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ac96:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ac9a:	00 00 
    ac9c:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    aca0:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    aca4:	00 00 
    aca6:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    acaa:	00 00 
    acac:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acb0:	30 41       	ret			

0000acb2 <PMM_enableSvsLInLPMSlowWake>:
    acb2:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acb6:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acba:	00 00 
    acbc:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    acc0:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    acc4:	00 00 
    acc6:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    acca:	00 00 
    accc:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acd0:	30 41       	ret			

0000acd2 <PMM_disableSvsLInLPMFastWake>:
    acd2:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acd6:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acda:	00 00 
    acdc:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ace0:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ace4:	00 00 
    ace6:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    acea:	00 00 
    acec:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acf0:	30 41       	ret			

0000acf2 <PMM_disableSvsLInLPMSlowWake>:
    acf2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    acf6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    acfa:	00 00 
    acfc:	b2 f0 6f f7 	and	#63343,	&0x0126	;#0xf76f
    ad00:	26 01 
    ad02:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad06:	30 41       	ret			

0000ad08 <PMM_enableSvsHInLPMNormPerf>:
    ad08:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad0c:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad10:	00 00 
    ad12:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad16:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ad1a:	00 00 
    ad1c:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    ad20:	00 00 
    ad22:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad26:	30 41       	ret			

0000ad28 <PMM_enableSvsHInLPMFullPerf>:
    ad28:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad2c:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad30:	00 00 
    ad32:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad36:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    ad3a:	00 00 
    ad3c:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    ad40:	00 00 
    ad42:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad46:	30 41       	ret			

0000ad48 <PMM_disableSvsHInLPMNormPerf>:
    ad48:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad4c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad50:	00 00 
    ad52:	b2 f0 6f f7 	and	#63343,	&0x0124	;#0xf76f
    ad56:	24 01 
    ad58:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad5c:	30 41       	ret			

0000ad5e <PMM_disableSvsHInLPMFullPerf>:
    ad5e:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad62:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad66:	00 00 
    ad68:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad6c:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ad70:	00 00 
    ad72:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ad76:	00 00 
    ad78:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad7c:	30 41       	ret			

0000ad7e <PMM_optimizeSvsLInLPMFastWake>:
    ad7e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad82:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad86:	00 00 
    ad88:	b2 d0 90 08 	bis	#2192,	&0x0126	;#0x0890
    ad8c:	26 01 
    ad8e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad92:	30 41       	ret			

0000ad94 <PMM_optimizeSvsHInLPMFullPerf>:
    ad94:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad98:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad9c:	00 00 
    ad9e:	b2 d0 90 08 	bis	#2192,	&0x0124	;#0x0890
    ada2:	24 01 
    ada4:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ada8:	30 41       	ret			

0000adaa <PMM_setVCoreUp>:
    adaa:	0a 15       	pushm	#1,	r10	;16-bit words
    adac:	4e 4c       	mov.b	r12,	r14	;
    adae:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    adb2:	21 01 
    adb4:	1f 42 2e 01 	mov	&0x012e,r15	;0x012e
    adb8:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    adbc:	2e 01 
    adbe:	1d 42 24 01 	mov	&0x0124,r13	;0x0124
    adc2:	1c 42 26 01 	mov	&0x0126,r12	;0x0126
    adc6:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    adca:	0b 4e       	mov	r14,	r11	;
    adcc:	3b d0 00 44 	bis	#17408,	r11	;#0x4400
    add0:	82 4b 24 01 	mov	r11,	&0x0124	;
    add4:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    add8:	2c 01 
    adda:	fc 27       	jz	$-6      	;abs 0xadd4
    addc:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ade0:	2c 01 
    ade2:	b2 b0 20 00 	bit	#32,	&0x012c	;#0x0020
    ade6:	2c 01 
    ade8:	12 24       	jz	$+38     	;abs 0xae0e
    adea:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    adee:	2c 01 
    adf0:	82 4d 24 01 	mov	r13,	&0x0124	;
    adf4:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    adf8:	2c 01 
    adfa:	fc 27       	jz	$-6      	;abs 0xadf4
    adfc:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae00:	2c 01 
    ae02:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ae06:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ae0a:	0c 43       	clr	r12		;
    ae0c:	33 3c       	jmp	$+104    	;abs 0xae74
    ae0e:	0a 4e       	mov	r14,	r10	;
    ae10:	47 18 0a 5a 	rpt #8 { rlax.w	r10		;
    ae14:	82 da 24 01 	bis	r10,	&0x0124	;
    ae18:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae1c:	2c 01 
    ae1e:	fc 27       	jz	$-6      	;abs 0xae18
    ae20:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ae24:	2c 01 
    ae26:	c2 4e 20 01 	mov.b	r14,	&0x0120	;
    ae2a:	0a db       	bis	r11,	r10	;
    ae2c:	82 4a 26 01 	mov	r10,	&0x0126	;
    ae30:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae34:	fd 27       	jz	$-4      	;abs 0xae30
    ae36:	92 c3 2c 01 	bic	#1,	&0x012c	;r3 As==01
    ae3a:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    ae3e:	26 01 
    ae40:	3c f0 f8 fc 	and	#64760,	r12	;#0xfcf8
    ae44:	82 dc 26 01 	bis	r12,	&0x0126	;
    ae48:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    ae4c:	24 01 
    ae4e:	3d f0 f8 fc 	and	#64760,	r13	;#0xfcf8
    ae52:	82 dd 24 01 	bis	r13,	&0x0124	;
    ae56:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae5a:	fd 27       	jz	$-4      	;abs 0xae56
    ae5c:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae60:	2c 01 
    ae62:	f9 27       	jz	$-12     	;abs 0xae56
    ae64:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae68:	2c 01 
    ae6a:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ae6e:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ae72:	1c 43       	mov	#1,	r12	;r3 As==01
    ae74:	0a 17       	popm	#1,	r10	;16-bit words
    ae76:	30 41       	ret			

0000ae78 <PMM_setVCoreDown>:
    ae78:	2a 15       	pushm	#3,	r10	;16-bit words
    ae7a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ae7e:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    ae82:	21 01 
    ae84:	19 42 2e 01 	mov	&0x012e,r9	;0x012e
    ae88:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    ae8c:	2e 01 
    ae8e:	1e 42 24 01 	mov	&0x0124,r14	;0x0124
    ae92:	0f 43       	clr	r15		;
    ae94:	1a 42 26 01 	mov	&0x0126,r10	;0x0126
    ae98:	0b 43       	clr	r11		;
    ae9a:	b2 f0 cc ff 	and	#65484,	&0x012c	;#0xffcc
    ae9e:	2c 01 
    aea0:	08 4c       	mov	r12,	r8	;
    aea2:	38 d0 00 44 	bis	#17408,	r8	;#0x4400
    aea6:	0d 4c       	mov	r12,	r13	;
    aea8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    aeac:	0d d8       	bis	r8,	r13	;
    aeae:	82 4d 24 01 	mov	r13,	&0x0124	;
    aeb2:	82 4d 26 01 	mov	r13,	&0x0126	;
    aeb6:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aeba:	2c 01 
    aebc:	fc 27       	jz	$-6      	;abs 0xaeb6
    aebe:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    aec2:	f9 27       	jz	$-12     	;abs 0xaeb6
    aec4:	b2 f0 ee ff 	and	#65518,	&0x012c	;#0xffee
    aec8:	2c 01 
    aeca:	c2 4c 20 01 	mov.b	r12,	&0x0120	;
    aece:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    aed2:	26 01 
    aed4:	3a f0 f8 fc 	and	#64760,	r10	;#0xfcf8
    aed8:	82 da 26 01 	bis	r10,	&0x0126	;
    aedc:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    aee0:	24 01 
    aee2:	3e f0 f8 fc 	and	#64760,	r14	;#0xfcf8
    aee6:	82 de 24 01 	bis	r14,	&0x0124	;
    aeea:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    aeee:	fd 27       	jz	$-4      	;abs 0xaeea
    aef0:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aef4:	2c 01 
    aef6:	f9 27       	jz	$-12     	;abs 0xaeea
    aef8:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    aefc:	2c 01 
    aefe:	82 49 2e 01 	mov	r9,	&0x012e	;
    af02:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    af06:	1c 43       	mov	#1,	r12	;r3 As==01
    af08:	28 17       	popm	#3,	r10	;16-bit words
    af0a:	30 41       	ret			

0000af0c <PMM_setVCore>:
    af0c:	4a 15       	pushm	#5,	r10	;16-bit words
    af0e:	0a 4c       	mov	r12,	r10	;
    af10:	3a f0 03 00 	and	#3,	r10	;
    af14:	16 42 20 01 	mov	&0x0120,r6	;0x0120
    af18:	36 f0 03 00 	and	#3,	r6	;
    af1c:	1c 43       	mov	#1,	r12	;r3 As==01
    af1e:	49 4a       	mov.b	r10,	r9	;
    af20:	38 40 78 ae 	mov	#44664,	r8	;#0xae78
    af24:	37 40 aa ad 	mov	#44458,	r7	;#0xadaa
    af28:	49 96       	cmp.b	r6,	r9	;
    af2a:	13 24       	jz	$+40     	;abs 0xaf52
    af2c:	0c 93       	cmp	#0,	r12	;r3 As==00
    af2e:	11 24       	jz	$+36     	;abs 0xaf52
    af30:	4c 46       	mov.b	r6,	r12	;
    af32:	46 9a       	cmp.b	r10,	r6	;
    af34:	04 2c       	jc	$+10     	;abs 0xaf3e
    af36:	5c 53       	inc.b	r12		;
    af38:	46 4c       	mov.b	r12,	r6	;
    af3a:	87 12       	call	r7		;
    af3c:	03 3c       	jmp	$+8      	;abs 0xaf44
    af3e:	7c 53       	add.b	#-1,	r12	;r3 As==11
    af40:	46 4c       	mov.b	r12,	r6	;
    af42:	88 12       	call	r8		;
    af44:	0d 43       	clr	r13		;
    af46:	0d 8c       	sub	r12,	r13	;
    af48:	0c dd       	bis	r13,	r12	;
    af4a:	5c 03       	rrum	#1,	r12	;
    af4c:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    af50:	eb 3f       	jmp	$-40     	;abs 0xaf28
    af52:	46 17       	popm	#5,	r10	;16-bit words
    af54:	30 41       	ret			

0000af56 <PMM_getInterruptStatus>:
    af56:	1c f2 2c 01 	and	&0x012c,r12	;0x012c
    af5a:	30 41       	ret			

0000af5c <udivmodhi4>:
    af5c:	3b 40 11 00 	mov	#17,	r11	;#0x0011
    af60:	1f 43       	mov	#1,	r15	;r3 As==01
    af62:	0d 9c       	cmp	r12,	r13	;
    af64:	09 2c       	jc	$+20     	;abs 0xaf78
    af66:	3b 53       	add	#-1,	r11	;r3 As==11
    af68:	0b 93       	cmp	#0,	r11	;r3 As==00
    af6a:	05 24       	jz	$+12     	;abs 0xaf76
    af6c:	0d 93       	cmp	#0,	r13	;r3 As==00
    af6e:	04 38       	jl	$+10     	;abs 0xaf78
    af70:	0d 5d       	rla	r13		;
    af72:	0f 5f       	rla	r15		;
    af74:	f6 3f       	jmp	$-18     	;abs 0xaf62
    af76:	0f 4b       	mov	r11,	r15	;
    af78:	0b 43       	clr	r11		;
    af7a:	0f 93       	cmp	#0,	r15	;r3 As==00
    af7c:	09 24       	jz	$+20     	;abs 0xaf90
    af7e:	0c 9d       	cmp	r13,	r12	;
    af80:	02 28       	jnc	$+6      	;abs 0xaf86
    af82:	0c 8d       	sub	r13,	r12	;
    af84:	0b df       	bis	r15,	r11	;
    af86:	12 c3       	clrc			
    af88:	0f 10       	rrc	r15		;
    af8a:	12 c3       	clrc			
    af8c:	0d 10       	rrc	r13		;
    af8e:	f5 3f       	jmp	$-20     	;abs 0xaf7a
    af90:	0e 93       	cmp	#0,	r14	;r3 As==00
    af92:	01 20       	jnz	$+4      	;abs 0xaf96
    af94:	0c 4b       	mov	r11,	r12	;
    af96:	30 41       	ret			

0000af98 <__mspabi_divi>:
    af98:	0a 15       	pushm	#1,	r10	;16-bit words
    af9a:	0e 4c       	mov	r12,	r14	;
    af9c:	0f 4d       	mov	r13,	r15	;
    af9e:	3b 40 5c af 	mov	#44892,	r11	;#0xaf5c
    afa2:	0c 93       	cmp	#0,	r12	;r3 As==00
    afa4:	07 34       	jge	$+16     	;abs 0xafb4
    afa6:	0c 43       	clr	r12		;
    afa8:	0c 8e       	sub	r14,	r12	;
    afaa:	0e 4c       	mov	r12,	r14	;
    afac:	0d 93       	cmp	#0,	r13	;r3 As==00
    afae:	10 34       	jge	$+34     	;abs 0xafd0
    afb0:	1a 43       	mov	#1,	r10	;r3 As==01
    afb2:	03 3c       	jmp	$+8      	;abs 0xafba
    afb4:	0d 93       	cmp	#0,	r13	;r3 As==00
    afb6:	0f 34       	jge	$+32     	;abs 0xafd6
    afb8:	0a 43       	clr	r10		;
    afba:	0d 43       	clr	r13		;
    afbc:	0d 8f       	sub	r15,	r13	;
    afbe:	0c 4e       	mov	r14,	r12	;
    afc0:	0e 43       	clr	r14		;
    afc2:	8b 12       	call	r11		;
    afc4:	1a 93       	cmp	#1,	r10	;r3 As==01
    afc6:	09 24       	jz	$+20     	;abs 0xafda
    afc8:	0d 43       	clr	r13		;
    afca:	0d 8c       	sub	r12,	r13	;
    afcc:	0c 4d       	mov	r13,	r12	;
    afce:	05 3c       	jmp	$+12     	;abs 0xafda
    afd0:	0e 43       	clr	r14		;
    afd2:	8b 12       	call	r11		;
    afd4:	f9 3f       	jmp	$-12     	;abs 0xafc8
    afd6:	0e 43       	clr	r14		;
    afd8:	8b 12       	call	r11		;
    afda:	0a 17       	popm	#1,	r10	;16-bit words
    afdc:	30 41       	ret			

0000afde <__mspabi_divu>:
    afde:	0e 43       	clr	r14		;
    afe0:	b0 12 5c af 	call	#44892		;#0xaf5c
    afe4:	30 41       	ret			

0000afe6 <udivmodsi4>:
    afe6:	4a 15       	pushm	#5,	r10	;16-bit words
    afe8:	0a 4c       	mov	r12,	r10	;
    afea:	0b 4d       	mov	r13,	r11	;
    afec:	3c 40 21 00 	mov	#33,	r12	;#0x0021
    aff0:	18 43       	mov	#1,	r8	;r3 As==01
    aff2:	09 43       	clr	r9		;
    aff4:	0f 9b       	cmp	r11,	r15	;
    aff6:	04 28       	jnc	$+10     	;abs 0xb000
    aff8:	0d 9f       	cmp	r15,	r13	;
    affa:	16 20       	jnz	$+46     	;abs 0xb028
    affc:	0e 9a       	cmp	r10,	r14	;
    affe:	14 2c       	jc	$+42     	;abs 0xb028
    b000:	3c 53       	add	#-1,	r12	;r3 As==11
    b002:	0c 93       	cmp	#0,	r12	;r3 As==00
    b004:	0f 24       	jz	$+32     	;abs 0xb024
    b006:	0f 93       	cmp	#0,	r15	;r3 As==00
    b008:	0f 38       	jl	$+32     	;abs 0xb028
    b00a:	06 4e       	mov	r14,	r6	;
    b00c:	07 4f       	mov	r15,	r7	;
    b00e:	06 5e       	add	r14,	r6	;
    b010:	07 6f       	addc	r15,	r7	;
    b012:	0e 46       	mov	r6,	r14	;
    b014:	0f 47       	mov	r7,	r15	;
    b016:	06 48       	mov	r8,	r6	;
    b018:	07 49       	mov	r9,	r7	;
    b01a:	06 58       	add	r8,	r6	;
    b01c:	07 69       	addc	r9,	r7	;
    b01e:	08 46       	mov	r6,	r8	;
    b020:	09 47       	mov	r7,	r9	;
    b022:	e8 3f       	jmp	$-46     	;abs 0xaff4
    b024:	08 43       	clr	r8		;
    b026:	09 43       	clr	r9		;
    b028:	0c 43       	clr	r12		;
    b02a:	0d 4c       	mov	r12,	r13	;
    b02c:	07 48       	mov	r8,	r7	;
    b02e:	07 d9       	bis	r9,	r7	;
    b030:	07 93       	cmp	#0,	r7	;r3 As==00
    b032:	11 24       	jz	$+36     	;abs 0xb056
    b034:	0b 9f       	cmp	r15,	r11	;
    b036:	08 28       	jnc	$+18     	;abs 0xb048
    b038:	0f 9b       	cmp	r11,	r15	;
    b03a:	02 20       	jnz	$+6      	;abs 0xb040
    b03c:	0a 9e       	cmp	r14,	r10	;
    b03e:	04 28       	jnc	$+10     	;abs 0xb048
    b040:	0a 8e       	sub	r14,	r10	;
    b042:	0b 7f       	subc	r15,	r11	;
    b044:	0c d8       	bis	r8,	r12	;
    b046:	0d d9       	bis	r9,	r13	;
    b048:	12 c3       	clrc			
    b04a:	09 10       	rrc	r9		;
    b04c:	08 10       	rrc	r8		;
    b04e:	12 c3       	clrc			
    b050:	0f 10       	rrc	r15		;
    b052:	0e 10       	rrc	r14		;
    b054:	eb 3f       	jmp	$-40     	;abs 0xb02c
    b056:	81 93 0c 00 	cmp	#0,	12(r1)	;r3 As==00, 0x000c
    b05a:	02 24       	jz	$+6      	;abs 0xb060
    b05c:	0c 4a       	mov	r10,	r12	;
    b05e:	0d 4b       	mov	r11,	r13	;
    b060:	46 17       	popm	#5,	r10	;16-bit words
    b062:	30 41       	ret			

0000b064 <__mspabi_divli>:
    b064:	5a 15       	pushm	#6,	r10	;16-bit words
    b066:	21 83       	decd	r1		;
    b068:	0a 4c       	mov	r12,	r10	;
    b06a:	0b 4d       	mov	r13,	r11	;
    b06c:	08 4e       	mov	r14,	r8	;
    b06e:	09 4f       	mov	r15,	r9	;
    b070:	37 40 e6 af 	mov	#45030,	r7	;#0xafe6
    b074:	0d 93       	cmp	#0,	r13	;r3 As==00
    b076:	0c 34       	jge	$+26     	;abs 0xb090
    b078:	0c 43       	clr	r12		;
    b07a:	0d 43       	clr	r13		;
    b07c:	05 4c       	mov	r12,	r5	;
    b07e:	06 4d       	mov	r13,	r6	;
    b080:	05 8a       	sub	r10,	r5	;
    b082:	06 7b       	subc	r11,	r6	;
    b084:	0a 45       	mov	r5,	r10	;
    b086:	0b 46       	mov	r6,	r11	;
    b088:	0f 93       	cmp	#0,	r15	;r3 As==00
    b08a:	1a 34       	jge	$+54     	;abs 0xb0c0
    b08c:	16 43       	mov	#1,	r6	;r3 As==01
    b08e:	04 3c       	jmp	$+10     	;abs 0xb098
    b090:	06 4f       	mov	r15,	r6	;
    b092:	0f 93       	cmp	#0,	r15	;r3 As==00
    b094:	1b 34       	jge	$+56     	;abs 0xb0cc
    b096:	06 43       	clr	r6		;
    b098:	0e 43       	clr	r14		;
    b09a:	0f 43       	clr	r15		;
    b09c:	0e 88       	sub	r8,	r14	;
    b09e:	0f 79       	subc	r9,	r15	;
    b0a0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0a4:	0c 4a       	mov	r10,	r12	;
    b0a6:	0d 4b       	mov	r11,	r13	;
    b0a8:	87 12       	call	r7		;
    b0aa:	16 93       	cmp	#1,	r6	;r3 As==01
    b0ac:	12 24       	jz	$+38     	;abs 0xb0d2
    b0ae:	0e 43       	clr	r14		;
    b0b0:	0f 43       	clr	r15		;
    b0b2:	0a 4e       	mov	r14,	r10	;
    b0b4:	0b 4f       	mov	r15,	r11	;
    b0b6:	0a 8c       	sub	r12,	r10	;
    b0b8:	0b 7d       	subc	r13,	r11	;
    b0ba:	0c 4a       	mov	r10,	r12	;
    b0bc:	0d 4b       	mov	r11,	r13	;
    b0be:	09 3c       	jmp	$+20     	;abs 0xb0d2
    b0c0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0c4:	0c 45       	mov	r5,	r12	;
    b0c6:	0d 46       	mov	r6,	r13	;
    b0c8:	87 12       	call	r7		;
    b0ca:	f1 3f       	jmp	$-28     	;abs 0xb0ae
    b0cc:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0d0:	87 12       	call	r7		;
    b0d2:	21 53       	incd	r1		;
    b0d4:	55 17       	popm	#6,	r10	;16-bit words
    b0d6:	30 41       	ret			

0000b0d8 <__mspabi_divlu>:
    b0d8:	21 83       	decd	r1		;
    b0da:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0de:	b0 12 e6 af 	call	#45030		;#0xafe6
    b0e2:	21 53       	incd	r1		;
    b0e4:	30 41       	ret			

0000b0e6 <__mspabi_slli_15>:
    b0e6:	0c 5c       	rla	r12		;

0000b0e8 <__mspabi_slli_14>:
    b0e8:	0c 5c       	rla	r12		;

0000b0ea <__mspabi_slli_13>:
    b0ea:	0c 5c       	rla	r12		;

0000b0ec <__mspabi_slli_12>:
    b0ec:	0c 5c       	rla	r12		;

0000b0ee <__mspabi_slli_11>:
    b0ee:	0c 5c       	rla	r12		;

0000b0f0 <__mspabi_slli_10>:
    b0f0:	0c 5c       	rla	r12		;

0000b0f2 <__mspabi_slli_9>:
    b0f2:	0c 5c       	rla	r12		;

0000b0f4 <__mspabi_slli_8>:
    b0f4:	0c 5c       	rla	r12		;

0000b0f6 <__mspabi_slli_7>:
    b0f6:	0c 5c       	rla	r12		;

0000b0f8 <__mspabi_slli_6>:
    b0f8:	0c 5c       	rla	r12		;

0000b0fa <__mspabi_slli_5>:
    b0fa:	0c 5c       	rla	r12		;

0000b0fc <__mspabi_slli_4>:
    b0fc:	0c 5c       	rla	r12		;

0000b0fe <__mspabi_slli_3>:
    b0fe:	0c 5c       	rla	r12		;

0000b100 <__mspabi_slli_2>:
    b100:	0c 5c       	rla	r12		;

0000b102 <__mspabi_slli_1>:
    b102:	0c 5c       	rla	r12		;
    b104:	30 41       	ret			
    b106:	3d 53       	add	#-1,	r13	;r3 As==11
    b108:	0c 5c       	rla	r12		;

0000b10a <__mspabi_slli>:
    b10a:	0d 93       	cmp	#0,	r13	;r3 As==00
    b10c:	fc 23       	jnz	$-6      	;abs 0xb106
    b10e:	30 41       	ret			

0000b110 <__mspabi_slll_15>:
    b110:	0c 5c       	rla	r12		;
    b112:	0d 6d       	rlc	r13		;

0000b114 <__mspabi_slll_14>:
    b114:	0c 5c       	rla	r12		;
    b116:	0d 6d       	rlc	r13		;

0000b118 <__mspabi_slll_13>:
    b118:	0c 5c       	rla	r12		;
    b11a:	0d 6d       	rlc	r13		;

0000b11c <__mspabi_slll_12>:
    b11c:	0c 5c       	rla	r12		;
    b11e:	0d 6d       	rlc	r13		;

0000b120 <__mspabi_slll_11>:
    b120:	0c 5c       	rla	r12		;
    b122:	0d 6d       	rlc	r13		;

0000b124 <__mspabi_slll_10>:
    b124:	0c 5c       	rla	r12		;
    b126:	0d 6d       	rlc	r13		;

0000b128 <__mspabi_slll_9>:
    b128:	0c 5c       	rla	r12		;
    b12a:	0d 6d       	rlc	r13		;

0000b12c <__mspabi_slll_8>:
    b12c:	0c 5c       	rla	r12		;
    b12e:	0d 6d       	rlc	r13		;

0000b130 <__mspabi_slll_7>:
    b130:	0c 5c       	rla	r12		;
    b132:	0d 6d       	rlc	r13		;

0000b134 <__mspabi_slll_6>:
    b134:	0c 5c       	rla	r12		;
    b136:	0d 6d       	rlc	r13		;

0000b138 <__mspabi_slll_5>:
    b138:	0c 5c       	rla	r12		;
    b13a:	0d 6d       	rlc	r13		;

0000b13c <__mspabi_slll_4>:
    b13c:	0c 5c       	rla	r12		;
    b13e:	0d 6d       	rlc	r13		;

0000b140 <__mspabi_slll_3>:
    b140:	0c 5c       	rla	r12		;
    b142:	0d 6d       	rlc	r13		;

0000b144 <__mspabi_slll_2>:
    b144:	0c 5c       	rla	r12		;
    b146:	0d 6d       	rlc	r13		;

0000b148 <__mspabi_slll_1>:
    b148:	0c 5c       	rla	r12		;
    b14a:	0d 6d       	rlc	r13		;
    b14c:	30 41       	ret			
    b14e:	3e 53       	add	#-1,	r14	;r3 As==11
    b150:	0c 5c       	rla	r12		;
    b152:	0d 6d       	rlc	r13		;

0000b154 <__mspabi_slll>:
    b154:	0e 93       	cmp	#0,	r14	;r3 As==00
    b156:	fb 23       	jnz	$-8      	;abs 0xb14e
    b158:	30 41       	ret			

0000b15a <__mspabi_srli_15>:
    b15a:	12 c3       	clrc			
    b15c:	0c 10       	rrc	r12		;

0000b15e <__mspabi_srli_14>:
    b15e:	12 c3       	clrc			
    b160:	0c 10       	rrc	r12		;

0000b162 <__mspabi_srli_13>:
    b162:	12 c3       	clrc			
    b164:	0c 10       	rrc	r12		;

0000b166 <__mspabi_srli_12>:
    b166:	12 c3       	clrc			
    b168:	0c 10       	rrc	r12		;

0000b16a <__mspabi_srli_11>:
    b16a:	12 c3       	clrc			
    b16c:	0c 10       	rrc	r12		;

0000b16e <__mspabi_srli_10>:
    b16e:	12 c3       	clrc			
    b170:	0c 10       	rrc	r12		;

0000b172 <__mspabi_srli_9>:
    b172:	12 c3       	clrc			
    b174:	0c 10       	rrc	r12		;

0000b176 <__mspabi_srli_8>:
    b176:	12 c3       	clrc			
    b178:	0c 10       	rrc	r12		;

0000b17a <__mspabi_srli_7>:
    b17a:	12 c3       	clrc			
    b17c:	0c 10       	rrc	r12		;

0000b17e <__mspabi_srli_6>:
    b17e:	12 c3       	clrc			
    b180:	0c 10       	rrc	r12		;

0000b182 <__mspabi_srli_5>:
    b182:	12 c3       	clrc			
    b184:	0c 10       	rrc	r12		;

0000b186 <__mspabi_srli_4>:
    b186:	12 c3       	clrc			
    b188:	0c 10       	rrc	r12		;

0000b18a <__mspabi_srli_3>:
    b18a:	12 c3       	clrc			
    b18c:	0c 10       	rrc	r12		;

0000b18e <__mspabi_srli_2>:
    b18e:	12 c3       	clrc			
    b190:	0c 10       	rrc	r12		;

0000b192 <__mspabi_srli_1>:
    b192:	12 c3       	clrc			
    b194:	0c 10       	rrc	r12		;
    b196:	30 41       	ret			
    b198:	3d 53       	add	#-1,	r13	;r3 As==11
    b19a:	12 c3       	clrc			
    b19c:	0c 10       	rrc	r12		;

0000b19e <__mspabi_srli>:
    b19e:	0d 93       	cmp	#0,	r13	;r3 As==00
    b1a0:	fb 23       	jnz	$-8      	;abs 0xb198
    b1a2:	30 41       	ret			

0000b1a4 <__mspabi_srll_15>:
    b1a4:	12 c3       	clrc			
    b1a6:	0d 10       	rrc	r13		;
    b1a8:	0c 10       	rrc	r12		;

0000b1aa <__mspabi_srll_14>:
    b1aa:	12 c3       	clrc			
    b1ac:	0d 10       	rrc	r13		;
    b1ae:	0c 10       	rrc	r12		;

0000b1b0 <__mspabi_srll_13>:
    b1b0:	12 c3       	clrc			
    b1b2:	0d 10       	rrc	r13		;
    b1b4:	0c 10       	rrc	r12		;

0000b1b6 <__mspabi_srll_12>:
    b1b6:	12 c3       	clrc			
    b1b8:	0d 10       	rrc	r13		;
    b1ba:	0c 10       	rrc	r12		;

0000b1bc <__mspabi_srll_11>:
    b1bc:	12 c3       	clrc			
    b1be:	0d 10       	rrc	r13		;
    b1c0:	0c 10       	rrc	r12		;

0000b1c2 <__mspabi_srll_10>:
    b1c2:	12 c3       	clrc			
    b1c4:	0d 10       	rrc	r13		;
    b1c6:	0c 10       	rrc	r12		;

0000b1c8 <__mspabi_srll_9>:
    b1c8:	12 c3       	clrc			
    b1ca:	0d 10       	rrc	r13		;
    b1cc:	0c 10       	rrc	r12		;

0000b1ce <__mspabi_srll_8>:
    b1ce:	12 c3       	clrc			
    b1d0:	0d 10       	rrc	r13		;
    b1d2:	0c 10       	rrc	r12		;

0000b1d4 <__mspabi_srll_7>:
    b1d4:	12 c3       	clrc			
    b1d6:	0d 10       	rrc	r13		;
    b1d8:	0c 10       	rrc	r12		;

0000b1da <__mspabi_srll_6>:
    b1da:	12 c3       	clrc			
    b1dc:	0d 10       	rrc	r13		;
    b1de:	0c 10       	rrc	r12		;

0000b1e0 <__mspabi_srll_5>:
    b1e0:	12 c3       	clrc			
    b1e2:	0d 10       	rrc	r13		;
    b1e4:	0c 10       	rrc	r12		;

0000b1e6 <__mspabi_srll_4>:
    b1e6:	12 c3       	clrc			
    b1e8:	0d 10       	rrc	r13		;
    b1ea:	0c 10       	rrc	r12		;

0000b1ec <__mspabi_srll_3>:
    b1ec:	12 c3       	clrc			
    b1ee:	0d 10       	rrc	r13		;
    b1f0:	0c 10       	rrc	r12		;

0000b1f2 <__mspabi_srll_2>:
    b1f2:	12 c3       	clrc			
    b1f4:	0d 10       	rrc	r13		;
    b1f6:	0c 10       	rrc	r12		;

0000b1f8 <__mspabi_srll_1>:
    b1f8:	12 c3       	clrc			
    b1fa:	0d 10       	rrc	r13		;
    b1fc:	0c 10       	rrc	r12		;
    b1fe:	30 41       	ret			
    b200:	3e 53       	add	#-1,	r14	;r3 As==11
    b202:	12 c3       	clrc			
    b204:	0d 10       	rrc	r13		;
    b206:	0c 10       	rrc	r12		;

0000b208 <__mspabi_srll>:
    b208:	0e 93       	cmp	#0,	r14	;r3 As==00
    b20a:	fa 23       	jnz	$-10     	;abs 0xb200
    b20c:	30 41       	ret			
	...

0000b210 <__mulhi2_f5>:
    b210:	02 12       	push	r2		;
    b212:	32 c2       	dint			
    b214:	03 43       	nop			
    b216:	82 4c c0 04 	mov	r12,	&0x04c0	;
    b21a:	82 4d c8 04 	mov	r13,	&0x04c8	;
    b21e:	1c 42 ca 04 	mov	&0x04ca,r12	;0x04ca
    b222:	00 13       	reti			

0000b224 <__mulsi2_f5>:
    b224:	02 12       	push	r2		;
    b226:	32 c2       	dint			
    b228:	03 43       	nop			
    b22a:	82 4c d0 04 	mov	r12,	&0x04d0	;
    b22e:	82 4d d2 04 	mov	r13,	&0x04d2	;
    b232:	82 4e e0 04 	mov	r14,	&0x04e0	;
    b236:	82 4f e2 04 	mov	r15,	&0x04e2	;
    b23a:	1c 42 e4 04 	mov	&0x04e4,r12	;0x04e4
    b23e:	1d 42 e6 04 	mov	&0x04e6,r13	;0x04e6
    b242:	00 13       	reti			

0000b244 <memset>:
    b244:	0f 4c       	mov	r12,	r15	;
    b246:	0e 5c       	add	r12,	r14	;
    b248:	0f 9e       	cmp	r14,	r15	;
    b24a:	04 24       	jz	$+10     	;abs 0xb254
    b24c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    b250:	1f 53       	inc	r15		;
    b252:	fa 3f       	jmp	$-10     	;abs 0xb248
    b254:	30 41       	ret			

0000b256 <memmove>:
    b256:	0a 15       	pushm	#1,	r10	;16-bit words
    b258:	0d 9c       	cmp	r12,	r13	;
    b25a:	10 2c       	jc	$+34     	;abs 0xb27c
    b25c:	0b 4d       	mov	r13,	r11	;
    b25e:	0b 5e       	add	r14,	r11	;
    b260:	0c 9b       	cmp	r11,	r12	;
    b262:	0c 2c       	jc	$+26     	;abs 0xb27c
    b264:	0d 4e       	mov	r14,	r13	;
    b266:	3d 53       	add	#-1,	r13	;r3 As==11
    b268:	3d 93       	cmp	#-1,	r13	;r3 As==11
    b26a:	13 24       	jz	$+40     	;abs 0xb292
    b26c:	0f 4d       	mov	r13,	r15	;
    b26e:	0f 8e       	sub	r14,	r15	;
    b270:	0f 5b       	add	r11,	r15	;
    b272:	0a 4c       	mov	r12,	r10	;
    b274:	0a 5d       	add	r13,	r10	;
    b276:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    b27a:	f5 3f       	jmp	$-20     	;abs 0xb266
    b27c:	0f 43       	clr	r15		;
    b27e:	0f 9e       	cmp	r14,	r15	;
    b280:	08 24       	jz	$+18     	;abs 0xb292
    b282:	0a 4d       	mov	r13,	r10	;
    b284:	0a 5f       	add	r15,	r10	;
    b286:	0b 4c       	mov	r12,	r11	;
    b288:	0b 5f       	add	r15,	r11	;
    b28a:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    b28e:	1f 53       	inc	r15		;
    b290:	f6 3f       	jmp	$-18     	;abs 0xb27e
    b292:	0a 17       	popm	#1,	r10	;16-bit words
    b294:	30 41       	ret			

0000b296 <__do_global_ctors_aux>:
    b296:	0a 15       	pushm	#1,	r10	;16-bit words
    b298:	1c 42 18 82 	mov	&0x8218,r12	;0x8218
    b29c:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b29e:	08 24       	jz	$+18     	;abs 0xb2b0
    b2a0:	3a 40 18 82 	mov	#33304,	r10	;#0x8218
    b2a4:	8c 12       	call	r12		;
    b2a6:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    b2aa:	2c 4a       	mov	@r10,	r12	;
    b2ac:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b2ae:	fa 23       	jnz	$-10     	;abs 0xb2a4
    b2b0:	0a 17       	popm	#1,	r10	;16-bit words
    b2b2:	30 41       	ret			

0000b2b4 <call___do_global_ctors_aux>:
    b2b4:	30 41       	ret			

0000b2b6 <__msp430_init>:
    b2b6:	b0 12 1c 83 	call	#33564		;#0x831c
    b2ba:	b0 12 96 b2 	call	#45718		;#0xb296
    b2be:	b0 12 5c 82 	call	#33372		;#0x825c
    b2c2:	b0 12 50 82 	call	#33360		;#0x8250
    b2c6:	30 41       	ret			

0000b2c8 <__msp430_fini>:
    b2c8:	b0 12 68 82 	call	#33384		;#0x8268
    b2cc:	b0 12 ce 82 	call	#33486		;#0x82ce
    b2d0:	30 41       	ret			
