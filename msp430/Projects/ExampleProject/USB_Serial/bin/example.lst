
../bin/example.elf:     file format elf32-msp430

SYMBOL TABLE:
0000ffe6 l    d  __interrupt_vector_52	00000000 __interrupt_vector_52
0000fffa l    d  __interrupt_vector_62	00000000 __interrupt_vector_62
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008220 l    d  .text	00000000 .text
00002400 l    d  .data	00000000 .data
00002404 l    d  .bss	00000000 .bss
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line.text.udivmodhi4	00000000 .debug_line.text.udivmodhi4
00000000 l    d  .debug_line.text.__divhi3	00000000 .debug_line.text.__divhi3
00000000 l    d  .debug_line.text.__udivhi3	00000000 .debug_line.text.__udivhi3
00000000 l    d  .debug_line.text.udivmodsi4	00000000 .debug_line.text.udivmodsi4
00000000 l    d  .debug_line.text.__divsi3	00000000 .debug_line.text.__divsi3
00000000 l    d  .debug_line.text.__udivsi3	00000000 .debug_line.text.__udivsi3
00000000 l    d  .debug_line.text.memset	00000000 .debug_line.text.memset
00000000 l    d  .debug_line.text.memmove	00000000 .debug_line.text.memmove
00000000 l    df *ABS*	00000000 UsbIsr.c
00000000 l    df *ABS*	00000000 usbserial.c
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00008276 l       .text	00000000 _msp430_run_array
00008284 l       .text	00000000 _msp430_run_done
00000000 l       .debug_line	00000000 L0
00008224 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2ec l       .text	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2e8 l       .text	00000000 L0
0000b2ec l       .text	00000000 L0
00000000 l       .debug_aranges	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b2e8 l       .text	00000000 L0
0000b2ec l       .text	00000000 L0
00000000 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 descriptors.c
00000000 l    df *ABS*	00000000 usb.c
0000241b l     O .bss	00000001 bRemoteWakeup
00002425 l     O .bss	00000001 bConfigurationNumber
00002424 l     O .bss	00000001 bInterfaceNumber
0000241e l     O .bss	00000001 bHostAskMoreDataThanAvailable
00002422 l     O .bss	00000002 pbIEP0Buffer
00002420 l     O .bss	00000002 pbOEP0Buffer
00000000 l    df *ABS*	00000000 gpio.c
000081f2 l     O .rodata	0000001c GPIO_PORT_TO_BASE
00000000 l    df *ABS*	00000000 crtstuff.c
00008218 l     O .rodata	00000000 __CTOR_LIST__
0000821c l     O .rodata	00000000 __DTOR_LIST__
00008210 l     O .rodata	00000000 __EH_FRAME_BEGIN__
00002400 l     O .data	00000000 __JCR_LIST__
0000b2f2 l     O .text	00000000 __TMC_LIST__
00008286 l       .text	00000000 deregister_tm_clones
000082a4 l       .text	00000000 register_tm_clones
000082ce l       .text	00000000 __do_global_dtors_aux
00002404 l     O .bss	00000001 completed.2761
00002406 l     O .bss	00000002 dtor_idx.2763
0000831a l       .text	00000000 call___do_global_dtors_aux
0000831c l       .text	00000000 frame_dummy
00002408 l     O .bss	0000000e object.2776
0000834a l       .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 crtstuff.c
0000821a l     O .rodata	00000000 __CTOR_END__
00008210 l     O .rodata	00000000 __FRAME_END__
00002400 l     O .data	00000000 __JCR_END__
0000b2b6 l       .text	00000000 __do_global_ctors_aux
0000b2d4 l       .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000312 l       .debug_line	00000000 L0
00008232 l       .text	00000000 L0
000000d0 l       .debug_aranges	00000000 L0
00008224 l       .text	00000000 L0
00008232 l       .text	00000000 L0
00000653 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_movedata.o
00000396 l       .debug_line	00000000 L0
00008246 l       .text	00000000 L0
000000f0 l       .debug_aranges	00000000 L0
00008232 l       .text	00000000 L0
00008246 l       .text	00000000 L0
00000725 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_main.o
00000426 l       .debug_line	00000000 L0
00008250 l       .text	00000000 L0
00000110 l       .debug_aranges	00000000 L0
00008246 l       .text	00000000 L0
00008250 l       .text	00000000 L0
000007f7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 hal.c
00002416 l     O .bss	00000004 CLOCKFREQ
00000000 l    df *ABS*	00000000 usbConstructs.c
00000000 l    df *ABS*	00000000 usbEventHandling.c
00000000 l    df *ABS*	00000000 usbdma.c
00000000 l    df *ABS*	00000000 UsbCdc.c
00002436 l     O .bss	0000000a CdcWriteCtrl
00002426 l     O .bss	00000010 CdcReadCtrl
00002440 l     O .bss	00000008 CdcControl
00000000 l    df *ABS*	00000000 tlv.c
00000000 l    df *ABS*	00000000 wdt_a.c
00000000 l    df *ABS*	00000000 dma.c
00000000 l    df *ABS*	00000000 sfr.c
00000000 l    df *ABS*	00000000 ucs.c
0000a422 l       .text	0000011a privateUCSSourceClockFromDCO
0000244c l     O .bss	00000004 privateXT1ClockFrequency
00002448 l     O .bss	00000004 privateXT2ClockFrequency
0000a530 l       .text	000000f4 privateUCSComputeCLKFrequency
00000000 l    df *ABS*	00000000 pmm.c
00000000 l    df *ABS*	00000000 lib2divHI.c
0000afbe l       .text	00000000 L0
0000b006 l       .text	00000000 L0
0000b008 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 lib2divSI.c
0000b08a l       .text	00000000 L0
0000b100 l       .text	00000000 L0
0000b108 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib2hw_mul.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memset.c
0000b278 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 memmove.c
0000b2ba l       .text	00000000 L0
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crtn.o
000005bc l       .debug_line	00000000 L0
0000b2e8 l       .text	00000000 L0
0000b2f2 l       .text	00000000 L0
0000b2de l       .text	00000000 L0
0000b2e8 l       .text	00000000 L0
0000b2f0 l       .text	00000000 L0
0000b2f2 l       .text	00000000 L0
00000150 l       .debug_aranges	00000000 L0
0000b2de l       .text	00000000 L0
0000b2e8 l       .text	00000000 L0
0000b2f0 l       .text	00000000 L0
0000b2f2 l       .text	00000000 L0
000009c7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 system_pre_init.c
00000000 l    df *ABS*	00000000 
00002180 l       *ABS*	00000000 pbXBufferAddressEp86
00001ec0 l       *ABS*	00000000 pbYBufferAddressEp83
00002000 l       *ABS*	00000000 pbXBufferAddressEp5
00002080 l       *ABS*	00000000 pbXBufferAddressEp85
00001c40 l       *ABS*	00000000 pbYBufferAddressEp1
00001d00 l       *ABS*	00000000 pbXBufferAddressEp2
000021c0 l       *ABS*	00000000 pbYBufferAddressEp86
00001d80 l       *ABS*	00000000 pbXBufferAddressEp82
000022c0 l       *ABS*	00000000 pbYBufferAddressEp87
00002040 l       *ABS*	00000000 pbYBufferAddressEp5
00002280 l       *ABS*	00000000 pbXBufferAddressEp87
00001dc0 l       *ABS*	00000000 pbYBufferAddressEp82
00002140 l       *ABS*	00000000 pbYBufferAddressEp6
00001d40 l       *ABS*	00000000 pbYBufferAddressEp2
00008220 l       .text	00000000 _start
00002200 l       *ABS*	00000000 pbXBufferAddressEp7
00001c00 l       *ABS*	00000000 pbXBufferAddressEp1
00002100 l       *ABS*	00000000 pbXBufferAddressEp6
000020c0 l       *ABS*	00000000 pbYBufferAddressEp85
00001fc0 l       *ABS*	00000000 pbYBufferAddressEp84
00002240 l       *ABS*	00000000 pbYBufferAddressEp7
00001c80 l       *ABS*	00000000 pbXBufferAddressEp81
00001f40 l       *ABS*	00000000 pbYBufferAddressEp4
00001f80 l       *ABS*	00000000 pbXBufferAddressEp84
00001cc0 l       *ABS*	00000000 pbYBufferAddressEp81
00001f00 l       *ABS*	00000000 pbXBufferAddressEp4
00001e00 l       *ABS*	00000000 pbXBufferAddressEp3
00001e40 l       *ABS*	00000000 pbYBufferAddressEp3
00001e80 l       *ABS*	00000000 pbXBufferAddressEp83
000090a4 g       .text	0000004c usbSetEndpointFeature
00008474 g       .text	00000038 TILEAF_BoardInit
0000ac74 g       .text	00000016 PMM_enableSvmHInterrupt
00002378 g       *ABS*	00000000 abIEP0Buffer
0000b14a g       .text	00000000 .hidden __mspabi_slll_9
0000a358 g       .text	0000000c DMA_enableTransfers
0000b13a g       .text	00000000 .hidden __mspabi_slll_13
0000a85a g       .text	00000006 UCS_turnOffXT1
0000abc8 g       .text	00000016 PMM_enableSvsHSvmH
00008d34 g       .text	00000030 USB_suspend
0000abb2 g       .text	00000016 PMM_disableSvsLSvmL
0000b194 g       .text	00000000 .hidden __mspabi_srli_9
0000a406 g       .text	0000000e SFR_setNMIEdge
00002388 g       *ABS*	00000000 tOutputEndPointDescriptorBlock
0000a3a4 g       .text	0000000c DMA_getNMIAbortStatus
0000b1e4 g       .text	00000000 .hidden __mspabi_srll_10
00008d78 g       .text	0000000a usbStallOEP0
0000adcc g       .text	000000d0 PMM_setVCoreUp
0000908c g       .text	0000001a usbSetDeviceFeature
0000a18c g       .text	0000002a GPIO_setAsInputPinWithPullUpResistor
00008c9e g       .text	000000a2 USB_getConnectionState
0000a1da g       .text	0000001a GPIO_enableInterrupt
00008c24 g       .text	00000022 USB_disconnect
0000a328 g       .text	00000030 DMA_setDstAddress
00002450 g     O .bss	00000008 abUsbRequestIncomingData
0000a3ea g       .text	00000006 SFR_getInterruptStatus
0000b190 g       .text	00000000 .hidden __mspabi_srli_10
0000a7b6 g       .text	00000050 UCS_turnOnHFXT1WithTimeout
0000b114 g       .text	00000000 .hidden __mspabi_slli_9
00008fb4 g       .text	0000007a usbGetEndpointStatus
0000b17c g       .text	00000000 .hidden __mspabi_srli_15
0000887a g       .text	00000036 OEP0InterruptHandler
00008436 g       .text	0000003e USBHAL_initClocks
0000b276 g       .text	00000044 memmove
0000a082 g       .text	00000014 WDT_A_initIntervalTimer
0000a1f4 g       .text	0000001a GPIO_disableInterrupt
0000a414 g       .text	0000000e SFR_setResetNMIPinFunction
00008716 g       .text	00000004 USB_handleResetEvent
0000a244 g       .text	0000002c GPIO_selectInterruptEdge
0000aa70 g       .text	00000006 UCS_turnOnSMCLK
00008e7c g       .text	00000046 usbClearEndpointFeature
0000944c g       .text	00000024 memcpyV
0000b1a8 g       .text	00000000 .hidden __mspabi_srli_4
0000b10e g       .text	00000000 .hidden __mspabi_slli_12
0000a928 g       .text	00000108 UCS_initFLL
0000a2e8 g       .text	0000000a DMA_setTransferSize
0000af7e g       .text	00000040 .hidden udivmodhi4
00008e0c g       .text	00000052 usbReceiveNextPacketOnOEP0
000083a8 g       .text	0000008e USBHAL_initPorts
00009eac g       .text	00000064 TLV_getInfo
0000a114 g       .text	0000001a GPIO_setOutputHighOnPin
00009518 g       .text	00000030 CdcResetData
00008726 g       .text	00000008 USBCDC_handleDataReceived
0000b19c g       .text	00000000 .hidden __mspabi_srli_7
0000b1f6 g       .text	00000000 .hidden __mspabi_srll_7
0000b20e g       .text	00000000 .hidden __mspabi_srll_3
000086a6 g       .text	00000052 USBCDC_receiveDataInBuffer
000089f2 g       .text	00000006 USB_getVersion
0000a920 g       .text	00000008 UCS_turnOffXT2
0000ab86 g       .text	00000016 PMM_disableSvmH
0000a058 g       .text	00000016 WDT_A_resetTimer
0000b2f2 g     O .text	00000000 .hidden __TMC_END__
0000b1d2 g       .text	00000000 .hidden __mspabi_srll_13
00002458 g     O .bss	00000008 abUsbRequestReturnData
0000821e g     O .rodata	00000000 .hidden __DTOR_END__
0000241a g     O .bss	00000001 bCDCDataReceived_event
0000a096 g       .text	0000001e GPIO_setAsOutputPin
00008214 g       .rodata	00000000 __fini_array_end
0000aaec g       .text	00000016 PMM_enableSvsL
0000b188 g       .text	00000000 .hidden __mspabi_srli_12
0000a39a g       .text	0000000a DMA_clearInterrupt
00009a46 g       .text	00000132 CdcToBufferFromHost
00008220 g     F .text	00000004 __crt0_start
0000a3de g       .text	00000006 SFR_enableInterrupt
00002370 g       *ABS*	00000000 abOEP0Buffer
0000b142 g       .text	00000000 .hidden __mspabi_slll_11
0000b132 g       .text	00000000 .hidden __mspabi_slll_15
0000904a g       .text	0000002c usbSetConfiguration
0000b10a g       .text	00000000 .hidden __mspabi_slli_14
0000ac48 g       .text	00000016 PMM_enableSvsHReset
0000aca0 g       .text	00000014 PMM_clearPMMIFGS
0000b11e g       .text	00000000 .hidden __mspabi_slli_4
00008224 g     F .text	0000000e __crt0_init_bss
000093fc g       .text	00000038 USB_setup
0000008a g       *ABS*	00000000 __bsssize
0000b166 g       .text	00000000 .hidden __mspabi_slll_2
000086fa g       .text	00000014 USB_handleVbusOnEvent
0000b230 g     F .text	00000014 .hidden __mulhi2_f5
00008732 g       .text	00000004 USBCDC_handleReceiveCompleted
0000ab5a g       .text	00000016 PMM_disableSvsH
00009028 g       .text	00000024 usbSetAddress
00008f4e g       .text	0000001e usbGetInterface
00008d82 g       .text	00000072 usbSendNextPacketOnIEP0
00008246 g     F .text	0000000a __crt0_call_init_then_main
000091ac g       .text	0000001a usbDisableOutEndpointInterrupt
00009bde g       .text	00000082 USBCDC_rejectData
0000b12c g       .text	00000000 .hidden __mspabi_slli
0000ab9c g       .text	00000016 PMM_enableSvsLSvmL
0000a364 g       .text	0000000c DMA_disableTransfers
0000abf4 g       .text	00000016 PMM_enableSvsLReset
00008ed0 g       .text	00000016 usbGetDeviceDescriptor
0000885e g       .text	0000001e IEP0InterruptHandler
000091cc g       .text	000000dc USB_determineFreq
0000b202 g       .text	00000000 .hidden __mspabi_srll_5
0000aa94 g       .text	0000001e UCS_getSMCLK
0000af78 g       .text	00000006 PMM_getInterruptStatus
0000b1c0 g       .text	00000000 .hidden __mspabi_srli
0000acf4 g       .text	00000020 PMM_disableSvsLInLPMFastWake
0000a616 g       .text	00000012 UCS_setExternalClockSource
00002402 g     O .data	00000002 VERSION
000094d2 g       .text	00000046 USB_initMemcpy
0000a370 g       .text	0000000a DMA_startTransfer
0000ab70 g       .text	00000016 PMM_enableSvmH
0000976a g       .text	00000044 USBCDC_abortSend
0000a734 g       .text	0000003e UCS_bypassXT1
0000a148 g       .text	0000001a GPIO_toggleOutputOnPin
0000b1de g       .text	00000000 .hidden __mspabi_srll_11
0000a8f6 g       .text	0000002c UCS_bypassXT2WithTimeout
0000910a g       .text	00000086 usbDecodeAndProcessUsbRequest
0000b15a g       .text	00000000 .hidden __mspabi_slll_5
00009c5e g       .text	000000b2 USBCDC_getInterfaceStatus
0000a628 g       .text	000000a8 UCS_initClockSignal
0000b110 g       .text	00000000 .hidden __mspabi_slli_11
0000873e g       .text	00000048 SetupPacketInterruptHandler
0000ad6a g       .text	00000016 PMM_disableSvsHInLPMNormPerf
0000b120 g       .text	00000000 .hidden __mspabi_slli_3
00002460 g     O .bss	00000022 abramSerialStringDescriptor
0000b244 g     F .text	00000020 .hidden __mulsi2_f5
0000b1a4 g       .text	00000000 .hidden __mspabi_srli_5
00009f0e g       .text	0000004c TLV_getMemory
00008c66 g       .text	0000003a USB_getConnectionInformation
00002482 g     O .bss	00000002 wUsbEventMask
0000a3b0 g       .text	0000000a DMA_clearNMIAbort
00000000  w      *UND*	00000000 __deregister_frame_info
0000a76e g       .text	0000004c UCS_turnOnLFXT1WithTimeout
0000248e g       .MP430.attributes	00000000 end
00008f96 g       .text	0000001e usbGetInterfaceStatus
00008ad2 g       .text	00000138 USB_reset
00008efc g       .text	0000005a usbGetStringDescriptor
0000817e g     O .rodata	00000043 abromConfigurationDescriptorGroup
0000a26e g       .text	0000002a GPIO_setDriveStrength
0000a0d8 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionOutputPin
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000a804 g       .text	0000005a UCS_bypassXT1WithTimeout
0000b122 g       .text	00000000 .hidden __mspabi_slli_2
00009fcc g       .text	00000066 TLV_getInterrupt
0000a6c4 g       .text	0000003a UCS_turnOnLFXT1
00009074 g       .text	0000001a usbClearDeviceFeature
0000a384 g       .text	0000000a DMA_disableInterrupt
0000b1fc g       .text	00000000 .hidden __mspabi_srll_6
0000aa52 g       .text	00000006 UCS_enableClockRequest
000081c1 g     O .rodata	00000012 abromDeviceDescriptor
00008d64 g       .text	0000000e usbStallEndpoint0
0000b008 g       .text	00000082 .hidden udivmodsi4
0000a02e g       .text	00000018 WDT_A_hold
0000a3d8 g       .text	00000006 DMA_disableNMIAbort
00002484 g     O .bss	00000002 wBytesRemainingOnIEP0
0000ac20 g       .text	00000014 PMM_enableSvmLInterrupt
0000a3c0 g       .text	00000006 DMA_enableTransferDuringReadModifyWrite
0000a860 g       .text	00000036 UCS_turnOnXT2
0000b156 g       .text	00000000 .hidden __mspabi_slll_6
0000adb6 g       .text	00000016 PMM_optimizeSvsHInLPMFullPerf
00008000 g     O .rodata	000000e4 tUsbRequestList
0000aa6a g       .text	00000006 UCS_turnOffSMCLK
0000ab02 g       .text	00000016 PMM_disableSvsL
0000b15e g       .text	00000000 .hidden __mspabi_slll_4
000095d4 g       .text	0000019c CdcToHostFromBuffer
0000b14e g       .text	00000000 .hidden __mspabi_slll_8
00008268 g     F .text	00000000 _msp430_run_fini_array
00002486 g     O .bss	00000002 wBytesRemainingOnOEP0
0000b1b4 g       .text	00000000 .hidden __mspabi_srli_1
0000871e g       .text	00000004 USB_handleResumeEvent
0000b1cc g       .text	00000000 .hidden __mspabi_srll_14
0000b11a g       .text	00000000 .hidden __mspabi_slli_6
0000929a g       .text	00000084 USB_init
00008d72 g       .text	00000006 usbClearOEP0ByteCount
000087f8 g       .text	0000006a PWRVBUSonHandler
0000a3c6 g       .text	00000006 DMA_enableRoundRobinPriority
000090fc g       .text	0000000e usbInvalidRequest
0000b180 g       .text	00000000 .hidden __mspabi_srli_14
0000ab2e g       .text	00000016 PMM_disableSvmL
00000004 g       *ABS*	00000000 __romdatacopysize
0000aa64 g       .text	00000006 UCS_clearFaultFlag
00009b8c g       .text	00000052 USBCDC_abortReceive
000084ac g       .text	0000004e UNMI_ISR
0000a3f0 g       .text	00000006 SFR_clearInterrupt
000023c8 g       *ABS*	00000000 tInputEndPointDescriptorBlock
00000920 g       *ABS*	00000000 tEndPoint0DescriptorBlock
0000a3cc g       .text	00000006 DMA_disableRoundRobinPriority
0000872e g       .text	00000004 USBCDC_handleSendCompleted
0000b136 g       .text	00000000 .hidden __mspabi_slll_14
00009f56 g       .text	0000007c TLV_getPeripheral
00009b70 g       .text	0000001c CdcIsReceiveInProgress
0000b18c g       .text	00000000 .hidden __mspabi_srli_11
0000b152 g       .text	00000000 .hidden __mspabi_slll_7
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008214 g       .rodata	00000000 __fini_array_start
0000a20e g       .text	0000001c GPIO_getInterruptStatus
0000946e g       .text	00000064 memcpyDMA
00008618 g       .text	00000094 USBCDC_sendDataInBackground
0000a3f6 g       .text	00000010 SFR_setResetPinPullResistor
000088ae g       .text	00000162 iUsbInterruptHandler
0000afba g       .text	0000004c .hidden __mspabi_divi
0000981e g       .text	0000023a USBCDC_receiveData
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000a2fc g       .text	0000002c DMA_setSrcAddress
000080f4 g     O .rodata	0000008a abromStringDescriptor
0000b2d6 g       .text	00000000 __msp430_init
0000ada0 g       .text	00000016 PMM_optimizeSvsLInLPMFastWake
0000b264 g       .text	00000014 memset
0000b13e g       .text	00000000 .hidden __mspabi_slll_12
0000834c g       .text	0000005e main
0000a6fc g       .text	0000003a UCS_turnOnHFXT1
0000a06e g       .text	00000014 WDT_A_initWatchdogTimer
0000a0f6 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionInputPin
0000b086 g       .text	0000007a .hidden __mspabi_divli
000090ea g       .text	00000012 usbSetInterface
0000b208 g       .text	00000000 .hidden __mspabi_srll_4
00008214 g       .rodata	00000000 __init_array_end
0000b1b0 g       .text	00000000 .hidden __mspabi_srli_2
0000aab2 g       .text	00000016 UCS_getMCLK
0000b124 g       .text	00000000 .hidden __mspabi_slli_1
0000aa18 g       .text	0000003c UCS_initFLLSettle
00009e2a g       .text	00000082 Handler_SetLineCoding
0000b000 g       .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
00008ee6 g       .text	00000016 usbGetConfigurationDescriptor
0000a38e g       .text	0000000c DMA_getInterruptStatus
0000a22a g       .text	0000001a GPIO_clearInterrupt
0000b162 g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000b2f2 g       .text	00000000 __msp430_fini_end
000091c6 g       .text	00000006 usbRestoreOutEndpointInterrupt
00002488 g     O .bss	00000001 bStatusAction
0000870e g       .text	00000008 USB_handleVbusOffEvent
0000b1d8 g       .text	00000000 .hidden __mspabi_srll_12
00008c0a g       .text	0000001a USB_connect
0000b11c g       .text	00000000 .hidden __mspabi_slli_5
00008f6c g       .text	0000002a usbGetDeviceStatus
0000b2f2 g       *ABS*	00000000 __romdatastart
00008dea g       .text	00000024 usbSendDataPacketOnEP0
0000248a g     O .bss	00000002 USB_RX_memcpy
0000b10c g       .text	00000000 .hidden __mspabi_slli_13
00009f08 g       .text	00000006 TLV_getDeviceType
0000a296 g       .text	00000054 DMA_init
0000241c g     O .bss	00000001 bEnumerationStatus
00008532 g       .text	0000002e SendBuffer
00008250 g     F .text	00000000 _msp430_run_init_array
00008560 g       .text	0000002e ReceiveBuffer
0000b1a0 g       .text	00000000 .hidden __mspabi_srli_6
0000ab18 g       .text	00000016 PMM_enableSvmL
0000a3d2 g       .text	00000006 DMA_enableNMIAbort
00008214 g       .rodata	00000000 __preinit_array_end
00008e5a g       .text	00000014 usbReceiveDataPacketOnEP0
0000b112 g       .text	00000000 .hidden __mspabi_slli_10
00008ac4 g       .text	00000008 USB_setEnabledEvents
0000ac8a g       .text	00000016 PMM_disableSvmHInterrupt
0000af2e g       .text	0000004e PMM_setVCore
0000b1ac g       .text	00000000 .hidden __mspabi_srli_3
0000931a g       .text	000000ec USB_enable
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
0000ae9a g       .text	00000094 PMM_setVCoreDown
00002404 g       .bss	00000000 __bssstart
00002380 g       *ABS*	00000000 tSetupPacket
0000ab44 g       .text	00000016 PMM_enableSvsH
0000aa76 g       .text	0000001e UCS_getACLK
0000241d g     O .bss	00000001 bFunctionSuspended
0000b176 g       .text	00000000 .hidden __mspabi_slll
0000ad14 g       .text	00000016 PMM_disableSvsLInLPMSlowWake
0000acd4 g       .text	00000020 PMM_enableSvsLInLPMSlowWake
00008ebc g       .text	00000014 usbGetConfiguration
00003400 g       .MP430.attributes	00000000 __stack
0000b1ea g       .text	00000000 .hidden __mspabi_srll_9
0000a8ac g       .text	0000004c UCS_turnOnXT2WithTimeout
0000a162 g       .text	0000002a GPIO_setAsInputPinWithPullDownResistor
0000873a g       .text	00000004 USBCDC_handleSetControlLineState
00009548 g       .text	00000092 USBCDC_sendData
00002404 g       .data	00000000 _edata
0000ac5e g       .text	00000016 PMM_disableSvsHReset
0000b2e8 g       .text	00000000 __msp430_init_end
00008782 g       .text	0000007a PWRVBUSoffHandler
0000b22a g       .text	00000000 .hidden __mspabi_srll
0000ad80 g       .text	00000020 PMM_disableSvsHInLPMFullPerf
00008736 g       .text	00000004 USBCDC_handleSetLineCoding
000084f4 g       .text	0000003e checkUSB
0000abde g       .text	00000016 PMM_disableSvsHSvmH
00009d0e g       .text	00000082 USBCDC_getBytesInUSBBuffer
00000000  w      *ABS*	00000000 __high_bssstart
0000b116 g       .text	00000000 .hidden __mspabi_slli_8
0000b1c6 g       .text	00000000 .hidden __mspabi_srll_15
00009434 g       .text	00000018 USB_resume
0000a37a g       .text	0000000a DMA_enableInterrupt
0000a1b6 g       .text	00000024 GPIO_getInputPinValue
0000ad4a g       .text	00000020 PMM_enableSvsHInLPMFullPerf
0000ac34 g       .text	00000014 PMM_disableSvmLInterrupt
00009e06 g       .text	0000000c usbSetLineCoding
0000aa58 g       .text	00000006 UCS_disableClockRequest
0000b146 g       .text	00000000 .hidden __mspabi_slll_10
00008acc g       .text	00000006 USB_getEnabledEvents
0000b108 g       .text	00000000 .hidden __mspabi_slli_15
0000ad2a g       .text	00000020 PMM_enableSvsHInLPMNormPerf
0000a046 g       .text	00000012 WDT_A_start
00008214 g       .rodata	00000000 __init_array_start
000080e4 g     O .rodata	00000010 stUsbHandle
00008c46 g       .text	00000024 USB_forceRemoteWakeup
000097ae g       .text	00000072 CopyUsbToBuff
0000a3e4 g       .text	00000006 SFR_disableInterrupt
0000a894 g       .text	0000001a UCS_bypassXT2
00008722 g       .text	00000004 USB_handleEnumerationCompleteEvent
0000ac0a g       .text	00000016 PMM_disableSvsLReset
0000acb4 g       .text	00000020 PMM_enableSvsLInLPMFastWake
0000918c g       .text	0000001a usbDisableInEndpointInterrupt
0000b0fa g       .text	0000000e .hidden __mspabi_divlu
0000a0b4 g       .text	00000024 GPIO_setAsInputPin
0000b184 g       .text	00000000 .hidden __mspabi_srli_13
000091a6 g       .text	00000006 usbRestoreInEndpointInterrupt
00002400 g       .data	00000000 __datastart
0000b16a g       .text	00000000 .hidden __mspabi_slll_1
0000aac8 g       .text	00000024 UCS_clearAllOscFlagsWithTimeout
0000b1f0 g       .text	00000000 .hidden __mspabi_srll_8
00009d8c g       .text	0000007a usbGetLineCoding
0000b21a g       .text	00000000 .hidden __mspabi_srll_1
0000aa5e g       .text	00000006 UCS_getFaultFlagStatus
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0000a12e g       .text	0000001a GPIO_setOutputLowOnPin
0000b118 g       .text	00000000 .hidden __mspabi_slli_7
00008214 g       .rodata	00000000 __preinit_array_start
00008232 g     F .text	00000014 __crt0_movedata
0000a2f2 g       .text	0000000a DMA_getTransferSize
00000000  w      *UND*	00000000 __register_frame_info
000089f8 g       .text	000000b6 USB_InitSerialStringDescriptor
0000825c g     F .text	00000000 _msp430_run_preinit_array
00008aa2 g       .text	00000022 USB_disable
0000871a g       .text	00000004 USB_handleSuspendEvent
0000b214 g       .text	00000000 .hidden __mspabi_srll_2
0000248c g     O .bss	00000002 USB_TX_memcpy
000086f6 g       .text	00000004 USB_handleClockEvent
00009e12 g       .text	00000018 usbSetControlLineState
0000b2e8 g       .text	00000000 __msp430_fini
0000b198 g       .text	00000000 .hidden __mspabi_srli_8
0000858e g       .text	00000092 USBCDC_sendDataAndWaitTillDone
00008e6e g       .text	0000000e usbSendZeroLengthPacketOnIEP0
0000a3ba g       .text	00000006 DMA_disableTransferDuringReadModifyWrite



Disassembly of section __interrupt_vector_52:

0000ffe6 <__interrupt_vector_52>:
    ffe6:	ae 88       	interrupt service routine at 0x88ae

Disassembly of section __interrupt_vector_62:

0000fffa <__interrupt_vector_62>:
    fffa:	ac 84       	interrupt service routine at 0x84ac

Disassembly of section .text:

00008220 <__crt0_start>:
    8220:	31 40 00 34 	mov	#13312,	r1	;#0x3400

00008224 <__crt0_init_bss>:
    8224:	3c 40 04 24 	mov	#9220,	r12	;#0x2404
    8228:	0d 43       	clr	r13		;
    822a:	3e 40 8a 00 	mov	#138,	r14	;#0x008a
    822e:	b0 12 64 b2 	call	#45668		;#0xb264

00008232 <__crt0_movedata>:
    8232:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8236:	3d 40 f2 b2 	mov	#45810,	r13	;#0xb2f2
    823a:	0d 9c       	cmp	r12,	r13	;
    823c:	04 24       	jz	$+10     	;abs 0x8246
    823e:	3e 40 04 00 	mov	#4,	r14	;
    8242:	b0 12 76 b2 	call	#45686		;#0xb276

00008246 <__crt0_call_init_then_main>:
    8246:	b0 12 d6 b2 	call	#45782		;#0xb2d6
    824a:	0c 43       	clr	r12		;
    824c:	b0 12 4c 83 	call	#33612		;#0x834c

00008250 <_msp430_run_init_array>:
    8250:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8254:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8258:	26 43       	mov	#2,	r6	;r3 As==10
    825a:	0d 3c       	jmp	$+28     	;abs 0x8276

0000825c <_msp430_run_preinit_array>:
    825c:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8260:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8264:	26 43       	mov	#2,	r6	;r3 As==10
    8266:	07 3c       	jmp	$+16     	;abs 0x8276

00008268 <_msp430_run_fini_array>:
    8268:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    826c:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8270:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    8274:	00 3c       	jmp	$+2      	;abs 0x8276

00008276 <_msp430_run_array>:
    8276:	05 94       	cmp	r4,	r5	;
    8278:	05 24       	jz	$+12     	;abs 0x8284
    827a:	27 44       	mov	@r4,	r7	;
    827c:	04 56       	add	r6,	r4	;
    827e:	a7 12       	call	@r7		;
    8280:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x8276

00008284 <_msp430_run_done>:
    8284:	30 41       	ret			

00008286 <deregister_tm_clones>:
    8286:	3c 40 f2 b2 	mov	#45810,	r12	;#0xb2f2
    828a:	3c 80 f1 b2 	sub	#45809,	r12	;#0xb2f1
    828e:	2d 43       	mov	#2,	r13	;r3 As==10
    8290:	0d 9c       	cmp	r12,	r13	;
    8292:	07 2c       	jc	$+16     	;abs 0x82a2
    8294:	3d 40 00 00 	mov	#0,	r13	;
    8298:	0d 93       	cmp	#0,	r13	;r3 As==00
    829a:	03 24       	jz	$+8      	;abs 0x82a2
    829c:	3c 40 f2 b2 	mov	#45810,	r12	;#0xb2f2
    82a0:	8d 12       	call	r13		;
    82a2:	30 41       	ret			

000082a4 <register_tm_clones>:
    82a4:	3d 40 f2 b2 	mov	#45810,	r13	;#0xb2f2
    82a8:	3d 80 f2 b2 	sub	#45810,	r13	;#0xb2f2
    82ac:	0d 11       	rra	r13		;
    82ae:	0c 4d       	mov	r13,	r12	;
    82b0:	5c 03       	rrum	#1,	r12	;
    82b2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    82b6:	0d 5c       	add	r12,	r13	;
    82b8:	0d 11       	rra	r13		;
    82ba:	0d 93       	cmp	#0,	r13	;r3 As==00
    82bc:	07 24       	jz	$+16     	;abs 0x82cc
    82be:	3e 40 00 00 	mov	#0,	r14	;
    82c2:	0e 93       	cmp	#0,	r14	;r3 As==00
    82c4:	03 24       	jz	$+8      	;abs 0x82cc
    82c6:	3c 40 f2 b2 	mov	#45810,	r12	;#0xb2f2
    82ca:	8e 12       	call	r14		;
    82cc:	30 41       	ret			

000082ce <__do_global_dtors_aux>:
    82ce:	0a 15       	pushm	#1,	r10	;16-bit words
    82d0:	c2 93 04 24 	cmp.b	#0,	&0x2404	;r3 As==00
    82d4:	20 20       	jnz	$+66     	;abs 0x8316
    82d6:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82da:	3a 40 1e 82 	mov	#33310,	r10	;#0x821e
    82de:	3a 80 1c 82 	sub	#33308,	r10	;#0x821c
    82e2:	0a 11       	rra	r10		;
    82e4:	3a 53       	add	#-1,	r10	;r3 As==11
    82e6:	0c 9a       	cmp	r10,	r12	;
    82e8:	0b 2c       	jc	$+24     	;abs 0x8300
    82ea:	1c 53       	inc	r12		;
    82ec:	82 4c 06 24 	mov	r12,	&0x2406	;
    82f0:	0c 5c       	rla	r12		;
    82f2:	1c 4c 1c 82 	mov	-32228(r12),r12	;0xffff821c
    82f6:	8c 12       	call	r12		;
    82f8:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82fc:	0c 9a       	cmp	r10,	r12	;
    82fe:	f5 2b       	jnc	$-20     	;abs 0x82ea
    8300:	b0 12 86 82 	call	#33414		;#0x8286
    8304:	3d 40 00 00 	mov	#0,	r13	;
    8308:	0d 93       	cmp	#0,	r13	;r3 As==00
    830a:	03 24       	jz	$+8      	;abs 0x8312
    830c:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8310:	8d 12       	call	r13		;
    8312:	d2 43 04 24 	mov.b	#1,	&0x2404	;r3 As==01
    8316:	0a 17       	popm	#1,	r10	;16-bit words
    8318:	30 41       	ret			

0000831a <call___do_global_dtors_aux>:
    831a:	30 41       	ret			

0000831c <frame_dummy>:
    831c:	3e 40 00 00 	mov	#0,	r14	;
    8320:	0e 93       	cmp	#0,	r14	;r3 As==00
    8322:	05 24       	jz	$+12     	;abs 0x832e
    8324:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8328:	3d 40 08 24 	mov	#9224,	r13	;#0x2408
    832c:	8e 12       	call	r14		;
    832e:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8332:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    8336:	03 20       	jnz	$+8      	;abs 0x833e
    8338:	b0 12 a4 82 	call	#33444		;#0x82a4
    833c:	30 41       	ret			
    833e:	3d 40 00 00 	mov	#0,	r13	;
    8342:	0d 93       	cmp	#0,	r13	;r3 As==00
    8344:	f9 27       	jz	$-12     	;abs 0x8338
    8346:	8d 12       	call	r13		;
    8348:	f7 3f       	jmp	$-16     	;abs 0x8338

0000834a <call_frame_dummy>:
    834a:	30 41       	ret			

0000834c <main>:
    834c:	0a 15       	pushm	#1,	r10	;16-bit words
    834e:	31 80 00 01 	sub	#256,	r1	;#0x0100
    8352:	b1 40 68 65 	mov	#25960,	0(r1)	;#0x6568
    8356:	00 00 
    8358:	b1 40 6c 6c 	mov	#27756,	2(r1)	;#0x6c6c
    835c:	02 00 
    835e:	b1 40 6f 0a 	mov	#2671,	4(r1)	;#0x0a6f
    8362:	04 00 
    8364:	b1 40 0d 00 	mov	#13,	6(r1)	;#0x000d
    8368:	06 00 
    836a:	0c 41       	mov	r1,	r12	;
    836c:	3c 52       	add	#8,	r12	;r2 As==11
    836e:	0d 43       	clr	r13		;
    8370:	3e 40 f8 00 	mov	#248,	r14	;#0x00f8
    8374:	b0 12 64 b2 	call	#45668		;#0xb264
    8378:	3c 40 00 36 	mov	#13824,	r12	;#0x3600
    837c:	3d 40 6e 01 	mov	#366,	r13	;#0x016e
    8380:	b0 12 74 84 	call	#33908		;#0x8474
    8384:	3a 40 32 85 	mov	#34098,	r10	;#0x8532
    8388:	0c 41       	mov	r1,	r12	;
    838a:	3d 40 07 00 	mov	#7,	r13	;
    838e:	8a 12       	call	r10		;
    8390:	1d 14       	pushm.a	#2,	r13	;20-bit words
    8392:	3d 40 7c cd 	mov	#52604,	r13	;#0xcd7c
    8396:	3e 40 5a 00 	mov	#90,	r14	;#0x005a
    839a:	1d 83       	dec	r13		;
    839c:	0e 73       	sbc	r14		;
    839e:	fd 23       	jnz	$-4      	;abs 0x839a
    83a0:	0d 93       	cmp	#0,	r13	;r3 As==00
    83a2:	fb 23       	jnz	$-8      	;abs 0x839a
    83a4:	1c 16       	popm.a	#2,	r13	;20-bit words
    83a6:	f0 3f       	jmp	$-30     	;abs 0x8388

000083a8 <USBHAL_initPorts>:
    83a8:	1a 15       	pushm	#2,	r10	;16-bit words
    83aa:	39 40 2e a1 	mov	#41262,	r9	;#0xa12e
    83ae:	5c 43       	mov.b	#1,	r12	;r3 As==01
    83b0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83b4:	89 12       	call	r9		;
    83b6:	3a 40 96 a0 	mov	#41110,	r10	;#0xa096
    83ba:	5c 43       	mov.b	#1,	r12	;r3 As==01
    83bc:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83c0:	8a 12       	call	r10		;
    83c2:	6c 43       	mov.b	#2,	r12	;r3 As==10
    83c4:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83c8:	89 12       	call	r9		;
    83ca:	6c 43       	mov.b	#2,	r12	;r3 As==10
    83cc:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83d0:	8a 12       	call	r10		;
    83d2:	7c 40 03 00 	mov.b	#3,	r12	;
    83d6:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83da:	89 12       	call	r9		;
    83dc:	7c 40 03 00 	mov.b	#3,	r12	;
    83e0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83e4:	8a 12       	call	r10		;
    83e6:	6c 42       	mov.b	#4,	r12	;r2 As==10
    83e8:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83ec:	89 12       	call	r9		;
    83ee:	6c 42       	mov.b	#4,	r12	;r2 As==10
    83f0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83f4:	8a 12       	call	r10		;
    83f6:	7c 40 05 00 	mov.b	#5,	r12	;
    83fa:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83fe:	89 12       	call	r9		;
    8400:	7c 40 05 00 	mov.b	#5,	r12	;
    8404:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8408:	8a 12       	call	r10		;
    840a:	7c 40 06 00 	mov.b	#6,	r12	;
    840e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8412:	89 12       	call	r9		;
    8414:	7c 40 06 00 	mov.b	#6,	r12	;
    8418:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    841c:	8a 12       	call	r10		;
    841e:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    8422:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8426:	89 12       	call	r9		;
    8428:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    842c:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8430:	8a 12       	call	r10		;
    8432:	19 17       	popm	#2,	r10	;16-bit words
    8434:	30 41       	ret			

00008436 <USBHAL_initClocks>:
    8436:	2a 15       	pushm	#3,	r10	;16-bit words
    8438:	08 4c       	mov	r12,	r8	;
    843a:	09 4d       	mov	r13,	r9	;
    843c:	3a 40 28 a6 	mov	#42536,	r10	;#0xa628
    8440:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8442:	2d 43       	mov	#2,	r13	;r3 As==10
    8444:	0e 43       	clr	r14		;
    8446:	8a 12       	call	r10		;
    8448:	5c 43       	mov.b	#1,	r12	;r3 As==01
    844a:	2d 43       	mov	#2,	r13	;r3 As==10
    844c:	0e 43       	clr	r14		;
    844e:	8a 12       	call	r10		;
    8450:	0c 48       	mov	r8,	r12	;
    8452:	0d 49       	mov	r9,	r13	;
    8454:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    8458:	0f 43       	clr	r15		;
    845a:	b0 12 fa b0 	call	#45306		;#0xb0fa
    845e:	0a 4c       	mov	r12,	r10	;
    8460:	0c 48       	mov	r8,	r12	;
    8462:	0d 49       	mov	r9,	r13	;
    8464:	b0 12 c6 b1 	call	#45510		;#0xb1c6
    8468:	0d 4c       	mov	r12,	r13	;
    846a:	0c 4a       	mov	r10,	r12	;
    846c:	b0 12 18 aa 	call	#43544		;#0xaa18
    8470:	28 17       	popm	#3,	r10	;16-bit words
    8472:	30 41       	ret			

00008474 <TILEAF_BoardInit>:
    8474:	19 15       	pushm	#2,	r9	;16-bit words
    8476:	08 4c       	mov	r12,	r8	;
    8478:	09 4d       	mov	r13,	r9	;
    847a:	82 4c 16 24 	mov	r12,	&0x2416	;
    847e:	82 4d 18 24 	mov	r13,	&0x2418	;
    8482:	3c 40 50 01 	mov	#336,	r12	;#0x0150
    8486:	b0 12 2e a0 	call	#41006		;#0xa02e
    848a:	6c 43       	mov.b	#2,	r12	;r3 As==10
    848c:	b0 12 2e af 	call	#44846		;#0xaf2e
    8490:	b0 12 a8 83 	call	#33704		;#0x83a8
    8494:	0c 48       	mov	r8,	r12	;
    8496:	0d 49       	mov	r9,	r13	;
    8498:	b0 12 36 84 	call	#33846		;#0x8436
    849c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    849e:	4d 4c       	mov.b	r12,	r13	;
    84a0:	b0 12 fc 93 	call	#37884		;#0x93fc
    84a4:	32 d2       	eint			
    84a6:	03 43       	nop			
    84a8:	18 17       	popm	#2,	r9	;16-bit words
    84aa:	30 41       	ret			

000084ac <UNMI_ISR>:
    84ac:	bf 15       	pushm	#12,	r15	;16-bit words
    84ae:	1c 42 9a 01 	mov	&0x019a,r12	;0x019a
    84b2:	2c 92       	cmp	#4,	r12	;r2 As==10
    84b4:	12 24       	jz	$+38     	;abs 0x84da
    84b6:	2d 42       	mov	#4,	r13	;r2 As==10
    84b8:	0d 9c       	cmp	r12,	r13	;
    84ba:	05 28       	jnc	$+12     	;abs 0x84c6
    84bc:	0c 93       	cmp	#0,	r12	;r3 As==00
    84be:	17 24       	jz	$+48     	;abs 0x84ee
    84c0:	2c 93       	cmp	#2,	r12	;r3 As==10
    84c2:	15 24       	jz	$+44     	;abs 0x84ee
    84c4:	15 3c       	jmp	$+44     	;abs 0x84f0
    84c6:	3c 90 06 00 	cmp	#6,	r12	;
    84ca:	11 24       	jz	$+36     	;abs 0x84ee
    84cc:	3c 92       	cmp	#8,	r12	;r2 As==11
    84ce:	10 20       	jnz	$+34     	;abs 0x84f0
    84d0:	82 43 98 01 	mov	#0,	&0x0198	;r3 As==00
    84d4:	b0 12 a2 8a 	call	#35490		;#0x8aa2
    84d8:	0b 3c       	jmp	$+24     	;abs 0x84f0
    84da:	3a 40 64 aa 	mov	#43620,	r10	;#0xaa64
    84de:	7c 42       	mov.b	#8,	r12	;r2 As==11
    84e0:	8a 12       	call	r10		;
    84e2:	5c 43       	mov.b	#1,	r12	;r3 As==01
    84e4:	8a 12       	call	r10		;
    84e6:	6c 43       	mov.b	#2,	r12	;r3 As==10
    84e8:	b0 12 f0 a3 	call	#41968		;#0xa3f0
    84ec:	01 3c       	jmp	$+4      	;abs 0x84f0
    84ee:	03 43       	nop			
    84f0:	b4 17       	popm	#12,	r15	;16-bit words
    84f2:	00 13       	reti			

000084f4 <checkUSB>:
    84f4:	0a 15       	pushm	#1,	r10	;16-bit words
    84f6:	21 83       	decd	r1		;
    84f8:	0a 4c       	mov	r12,	r10	;
    84fa:	b0 12 9e 8c 	call	#35998		;#0x8c9e
    84fe:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    8502:	14 20       	jnz	$+42     	;abs 0x852c
    8504:	5c 42 1a 24 	mov.b	&0x241a,r12	;0x241a
    8508:	0c 93       	cmp	#0,	r12	;r3 As==00
    850a:	10 24       	jz	$+34     	;abs 0x852c
    850c:	c2 43 1a 24 	mov.b	#0,	&0x241a	;r3 As==00
    8510:	0c 4a       	mov	r10,	r12	;
    8512:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    8516:	4e 43       	clr.b	r14		;
    8518:	b0 12 a6 86 	call	#34470		;#0x86a6
    851c:	0d 4c       	mov	r12,	r13	;
    851e:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8522:	1f 43       	mov	#1,	r15	;r3 As==01
    8524:	0c 4a       	mov	r10,	r12	;
    8526:	4e 43       	clr.b	r14		;
    8528:	b0 12 18 86 	call	#34328		;#0x8618
    852c:	21 53       	incd	r1		;
    852e:	0a 17       	popm	#1,	r10	;16-bit words
    8530:	30 41       	ret			

00008532 <SendBuffer>:
    8532:	0a 15       	pushm	#1,	r10	;16-bit words
    8534:	21 82       	sub	#4,	r1	;r2 As==10
    8536:	0a 4c       	mov	r12,	r10	;
    8538:	81 4d 02 00 	mov	r13,	2(r1)	;
    853c:	b0 12 9e 8c 	call	#35998		;#0x8c9e
    8540:	1d 41 02 00 	mov	2(r1),	r13	;
    8544:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    8548:	07 20       	jnz	$+16     	;abs 0x8558
    854a:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    854e:	1f 43       	mov	#1,	r15	;r3 As==01
    8550:	0c 4a       	mov	r10,	r12	;
    8552:	4e 43       	clr.b	r14		;
    8554:	b0 12 18 86 	call	#34328		;#0x8618
    8558:	0c 43       	clr	r12		;
    855a:	21 52       	add	#4,	r1	;r2 As==10
    855c:	0a 17       	popm	#1,	r10	;16-bit words
    855e:	30 41       	ret			

00008560 <ReceiveBuffer>:
    8560:	1a 15       	pushm	#2,	r10	;16-bit words
    8562:	09 4c       	mov	r12,	r9	;
    8564:	b0 12 9e 8c 	call	#35998		;#0x8c9e
    8568:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    856c:	0d 20       	jnz	$+28     	;abs 0x8588
    856e:	5c 42 1a 24 	mov.b	&0x241a,r12	;0x241a
    8572:	0c 93       	cmp	#0,	r12	;r3 As==00
    8574:	09 24       	jz	$+20     	;abs 0x8588
    8576:	c2 43 1a 24 	mov.b	#0,	&0x241a	;r3 As==00
    857a:	0c 49       	mov	r9,	r12	;
    857c:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    8580:	4e 43       	clr.b	r14		;
    8582:	b0 12 a6 86 	call	#34470		;#0x86a6
    8586:	0a 4c       	mov	r12,	r10	;
    8588:	0c 4a       	mov	r10,	r12	;
    858a:	19 17       	popm	#2,	r10	;16-bit words
    858c:	30 41       	ret			

0000858e <USBCDC_sendDataAndWaitTillDone>:
    858e:	21 83       	decd	r1		;
    8590:	91 41 02 00 	mov	2(r1),	0(r1)	;
    8594:	00 00 
    8596:	5a 15       	pushm	#6,	r10	;16-bit words
    8598:	21 82       	sub	#4,	r1	;r2 As==10
    859a:	47 4e       	mov.b	r14,	r7	;
    859c:	81 4f 12 00 	mov	r15,	18(r1)	; 0x0012
    85a0:	08 4f       	mov	r15,	r8	;
    85a2:	19 41 14 00 	mov	20(r1),	r9	;0x00014
    85a6:	4e 47       	mov.b	r7,	r14	;
    85a8:	b0 12 48 95 	call	#38216		;#0x9548
    85ac:	4d 4c       	mov.b	r12,	r13	;
    85ae:	7c 90 07 00 	cmp.b	#7,	r12	;
    85b2:	0a 24       	jz	$+22     	;abs 0x85c8
    85b4:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    85b6:	28 24       	jz	$+82     	;abs 0x8608
    85b8:	7c 90 03 00 	cmp.b	#3,	r12	;
    85bc:	26 24       	jz	$+78     	;abs 0x860a
    85be:	0a 43       	clr	r10		;
    85c0:	05 4a       	mov	r10,	r5	;
    85c2:	36 40 5e 9c 	mov	#40030,	r6	;#0x9c5e
    85c6:	12 3c       	jmp	$+38     	;abs 0x85ec
    85c8:	2d 42       	mov	#4,	r13	;r2 As==10
    85ca:	1f 3c       	jmp	$+64     	;abs 0x860a
    85cc:	0d 4c       	mov	r12,	r13	;
    85ce:	1d f3       	and	#1,	r13	;r3 As==01
    85d0:	0d 93       	cmp	#0,	r13	;r3 As==00
    85d2:	1b 24       	jz	$+56     	;abs 0x860a
    85d4:	0c 48       	mov	r8,	r12	;
    85d6:	0c d9       	bis	r9,	r12	;
    85d8:	0c 93       	cmp	#0,	r12	;r3 As==00
    85da:	08 24       	jz	$+18     	;abs 0x85ec
    85dc:	0c 4a       	mov	r10,	r12	;
    85de:	1c 53       	inc	r12		;
    85e0:	0d 45       	mov	r5,	r13	;
    85e2:	0d 63       	adc	r13		;
    85e4:	05 99       	cmp	r9,	r5	;
    85e6:	0a 2c       	jc	$+22     	;abs 0x85fc
    85e8:	0a 4c       	mov	r12,	r10	;
    85ea:	05 4d       	mov	r13,	r5	;
    85ec:	4c 47       	mov.b	r7,	r12	;
    85ee:	0d 41       	mov	r1,	r13	;
    85f0:	0e 41       	mov	r1,	r14	;
    85f2:	2e 53       	incd	r14		;
    85f4:	86 12       	call	r6		;
    85f6:	3c b2       	bit	#8,	r12	;r2 As==11
    85f8:	e9 27       	jz	$-44     	;abs 0x85cc
    85fa:	06 3c       	jmp	$+14     	;abs 0x8608
    85fc:	09 95       	cmp	r5,	r9	;
    85fe:	02 20       	jnz	$+6      	;abs 0x8604
    8600:	0a 98       	cmp	r8,	r10	;
    8602:	f2 2b       	jnc	$-26     	;abs 0x85e8
    8604:	1d 43       	mov	#1,	r13	;r3 As==01
    8606:	01 3c       	jmp	$+4      	;abs 0x860a
    8608:	2d 43       	mov	#2,	r13	;r3 As==10
    860a:	4c 4d       	mov.b	r13,	r12	;
    860c:	21 52       	add	#4,	r1	;r2 As==10
    860e:	55 17       	popm	#6,	r10	;16-bit words
    8610:	a1 41 02 00 	mov	@r1,	2(r1)	;
    8614:	21 53       	incd	r1		;
    8616:	30 41       	ret			

00008618 <USBCDC_sendDataInBackground>:
    8618:	21 83       	decd	r1		;
    861a:	91 41 02 00 	mov	2(r1),	0(r1)	;
    861e:	00 00 
    8620:	6a 15       	pushm	#7,	r10	;16-bit words
    8622:	31 82       	sub	#8,	r1	;r2 As==11
    8624:	05 4c       	mov	r12,	r5	;
    8626:	81 4d 02 00 	mov	r13,	2(r1)	;
    862a:	46 4e       	mov.b	r14,	r6	;
    862c:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018
    8630:	17 41 1a 00 	mov	26(r1),	r7	;0x0001a
    8634:	08 43       	clr	r8		;
    8636:	0a 48       	mov	r8,	r10	;
    8638:	34 40 5e 9c 	mov	#40030,	r4	;#0x9c5e
    863c:	4c 46       	mov.b	r6,	r12	;
    863e:	0d 41       	mov	r1,	r13	;
    8640:	2d 52       	add	#4,	r13	;r2 As==10
    8642:	0e 41       	mov	r1,	r14	;
    8644:	3e 50 06 00 	add	#6,	r14	;
    8648:	81 4f 00 00 	mov	r15,	0(r1)	;
    864c:	84 12       	call	r4		;
    864e:	09 4c       	mov	r12,	r9	;
    8650:	19 f3       	and	#1,	r9	;r3 As==01
    8652:	2f 41       	mov	@r1,	r15	;
    8654:	09 93       	cmp	#0,	r9	;r3 As==00
    8656:	11 24       	jz	$+36     	;abs 0x867a
    8658:	0c 4f       	mov	r15,	r12	;
    865a:	0c d7       	bis	r7,	r12	;
    865c:	0c 93       	cmp	#0,	r12	;r3 As==00
    865e:	ee 27       	jz	$-34     	;abs 0x863c
    8660:	0d 48       	mov	r8,	r13	;
    8662:	1d 53       	inc	r13		;
    8664:	0c 4a       	mov	r10,	r12	;
    8666:	0c 63       	adc	r12		;
    8668:	07 9a       	cmp	r10,	r7	;
    866a:	15 28       	jnc	$+44     	;abs 0x8696
    866c:	0a 97       	cmp	r7,	r10	;
    866e:	02 20       	jnz	$+6      	;abs 0x8674
    8670:	0f 98       	cmp	r8,	r15	;
    8672:	11 28       	jnc	$+36     	;abs 0x8696
    8674:	08 4d       	mov	r13,	r8	;
    8676:	0a 4c       	mov	r12,	r10	;
    8678:	e1 3f       	jmp	$-60     	;abs 0x863c
    867a:	0c 45       	mov	r5,	r12	;
    867c:	1d 41 02 00 	mov	2(r1),	r13	;
    8680:	4e 46       	mov.b	r6,	r14	;
    8682:	b0 12 48 95 	call	#38216		;#0x9548
    8686:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    8688:	07 24       	jz	$+16     	;abs 0x8698
    868a:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    868c:	02 20       	jnz	$+6      	;abs 0x8692
    868e:	29 43       	mov	#2,	r9	;r3 As==10
    8690:	03 3c       	jmp	$+8      	;abs 0x8698
    8692:	29 42       	mov	#4,	r9	;r2 As==10
    8694:	01 3c       	jmp	$+4      	;abs 0x8698
    8696:	19 43       	mov	#1,	r9	;r3 As==01
    8698:	4c 49       	mov.b	r9,	r12	;
    869a:	31 52       	add	#8,	r1	;r2 As==11
    869c:	64 17       	popm	#7,	r10	;16-bit words
    869e:	a1 41 02 00 	mov	@r1,	2(r1)	;
    86a2:	21 53       	incd	r1		;
    86a4:	30 41       	ret			

000086a6 <USBCDC_receiveDataInBuffer>:
    86a6:	6a 15       	pushm	#7,	r10	;16-bit words
    86a8:	08 4c       	mov	r12,	r8	;
    86aa:	06 4d       	mov	r13,	r6	;
    86ac:	47 4e       	mov.b	r14,	r7	;
    86ae:	09 4c       	mov	r12,	r9	;
    86b0:	35 40 0e 9d 	mov	#40206,	r5	;#0x9d0e
    86b4:	34 40 1e 98 	mov	#38942,	r4	;#0x981e
    86b8:	4c 47       	mov.b	r7,	r12	;
    86ba:	85 12       	call	r5		;
    86bc:	4a 4c       	mov.b	r12,	r10	;
    86be:	0f 49       	mov	r9,	r15	;
    86c0:	0f 88       	sub	r8,	r15	;
    86c2:	0c 4f       	mov	r15,	r12	;
    86c4:	0a 93       	cmp	#0,	r10	;r3 As==00
    86c6:	15 24       	jz	$+44     	;abs 0x86f2
    86c8:	0c 5a       	add	r10,	r12	;
    86ca:	06 9c       	cmp	r12,	r6	;
    86cc:	06 28       	jnc	$+14     	;abs 0x86da
    86ce:	0c 49       	mov	r9,	r12	;
    86d0:	0d 4a       	mov	r10,	r13	;
    86d2:	4e 47       	mov.b	r7,	r14	;
    86d4:	84 12       	call	r4		;
    86d6:	09 5a       	add	r10,	r9	;
    86d8:	ef 3f       	jmp	$-32     	;abs 0x86b8
    86da:	0f 48       	mov	r8,	r15	;
    86dc:	0f 89       	sub	r9,	r15	;
    86de:	0a 4f       	mov	r15,	r10	;
    86e0:	0a 56       	add	r6,	r10	;
    86e2:	0c 49       	mov	r9,	r12	;
    86e4:	0d 4a       	mov	r10,	r13	;
    86e6:	4e 47       	mov.b	r7,	r14	;
    86e8:	b0 12 1e 98 	call	#38942		;#0x981e
    86ec:	0a 59       	add	r9,	r10	;
    86ee:	0c 4a       	mov	r10,	r12	;
    86f0:	0c 88       	sub	r8,	r12	;
    86f2:	64 17       	popm	#7,	r10	;16-bit words
    86f4:	30 41       	ret			

000086f6 <USB_handleClockEvent>:
    86f6:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86f8:	30 41       	ret			

000086fa <USB_handleVbusOnEvent>:
    86fa:	b0 12 1a 93 	call	#37658		;#0x931a
    86fe:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8700:	04 20       	jnz	$+10     	;abs 0x870a
    8702:	b0 12 d2 8a 	call	#35538		;#0x8ad2
    8706:	b0 12 0a 8c 	call	#35850		;#0x8c0a
    870a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    870c:	30 41       	ret			

0000870e <USB_handleVbusOffEvent>:
    870e:	b0 12 20 a9 	call	#43296		;#0xa920
    8712:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8714:	30 41       	ret			

00008716 <USB_handleResetEvent>:
    8716:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8718:	30 41       	ret			

0000871a <USB_handleSuspendEvent>:
    871a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    871c:	30 41       	ret			

0000871e <USB_handleResumeEvent>:
    871e:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8720:	30 41       	ret			

00008722 <USB_handleEnumerationCompleteEvent>:
    8722:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8724:	30 41       	ret			

00008726 <USBCDC_handleDataReceived>:
    8726:	d2 43 1a 24 	mov.b	#1,	&0x241a	;r3 As==01
    872a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    872c:	30 41       	ret			

0000872e <USBCDC_handleSendCompleted>:
    872e:	4c 43       	clr.b	r12		;
    8730:	30 41       	ret			

00008732 <USBCDC_handleReceiveCompleted>:
    8732:	4c 43       	clr.b	r12		;
    8734:	30 41       	ret			

00008736 <USBCDC_handleSetLineCoding>:
    8736:	4c 43       	clr.b	r12		;
    8738:	30 41       	ret			

0000873a <USBCDC_handleSetControlLineState>:
    873a:	4c 43       	clr.b	r12		;
    873c:	30 41       	ret			

0000873e <SetupPacketInterruptHandler>:
    873e:	0a 15       	pushm	#1,	r10	;16-bit words
    8740:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8744:	3c 09 
    8746:	3a 40 0a 91 	mov	#37130,	r10	;#0x910a
    874a:	c2 93 80 23 	cmp.b	#0,	&0x2380	;r3 As==00
    874e:	03 34       	jge	$+8      	;abs 0x8756
    8750:	d2 d3 3c 09 	bis.b	#1,	&0x093c	;r3 As==01
    8754:	02 3c       	jmp	$+6      	;abs 0x875a
    8756:	d2 c3 3c 09 	bic.b	#1,	&0x093c	;r3 As==01
    875a:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    875e:	0c 43       	clr	r12		;
    8760:	cc 43 58 24 	mov.b	#0,	9304(r12);r3 As==00, 0x2458
    8764:	1c 53       	inc	r12		;
    8766:	3c 92       	cmp	#8,	r12	;r2 As==11
    8768:	fb 23       	jnz	$-8      	;abs 0x8760
    876a:	8a 12       	call	r10		;
    876c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8770:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    8774:	04 24       	jz	$+10     	;abs 0x877e
    8776:	f2 f0 fa ff 	and.b	#65530,	&0x093e	;#0xfffa
    877a:	3e 09 
    877c:	e6 3f       	jmp	$-50     	;abs 0x874a
    877e:	0a 17       	popm	#1,	r10	;16-bit words
    8780:	30 41       	ret			

00008782 <PWRVBUSoffHandler>:
    8782:	21 82       	sub	#4,	r1	;r2 As==10
    8784:	b0 12 cc 91 	call	#37324		;#0x91cc
    8788:	0e 4c       	mov	r12,	r14	;
    878a:	5e 0f       	rrum	#4,	r14	;
    878c:	5e 0b       	rrum	#3,	r14	;
    878e:	0d 4c       	mov	r12,	r13	;
    8790:	5d 0f       	rrum	#4,	r13	;
    8792:	5d 07       	rrum	#2,	r13	;
    8794:	0d 5e       	add	r14,	r13	;
    8796:	5c 03       	rrum	#1,	r12	;
    8798:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    879c:	0c 5d       	add	r13,	r12	;
    879e:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    87a2:	1d 41 02 00 	mov	2(r1),	r13	;
    87a6:	3e 40 03 00 	mov	#3,	r14	;
    87aa:	0e 9d       	cmp	r13,	r14	;
    87ac:	0c 28       	jnc	$+26     	;abs 0x87c6
    87ae:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    87b2:	2d 41       	mov	@r1,	r13	;
    87b4:	0d 9c       	cmp	r12,	r13	;
    87b6:	04 2c       	jc	$+10     	;abs 0x87c0
    87b8:	03 43       	nop			
    87ba:	91 53 00 00 	inc	0(r1)		;
    87be:	f9 3f       	jmp	$-12     	;abs 0x87b2
    87c0:	91 53 02 00 	inc	2(r1)		;
    87c4:	ee 3f       	jmp	$-34     	;abs 0x87a2
    87c6:	1c 42 08 09 	mov	&0x0908,r12	;0x0908
    87ca:	3c f2       	and	#8,	r12	;r2 As==11
    87cc:	0c 93       	cmp	#0,	r12	;r3 As==00
    87ce:	12 20       	jnz	$+38     	;abs 0x87f4
    87d0:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    87d4:	00 09 
    87d6:	c2 4c 1c 24 	mov.b	r12,	&0x241c	;
    87da:	c2 4c 1d 24 	mov.b	r12,	&0x241d	;
    87de:	82 4c 02 09 	mov	r12,	&0x0902	;
    87e2:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    87e6:	10 09 
    87e8:	b2 f0 fb eb 	and	#60411,	&0x0908	;#0xebfb
    87ec:	08 09 
    87ee:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    87f2:	00 09 
    87f4:	21 52       	add	#4,	r1	;r2 As==10
    87f6:	30 41       	ret			

000087f8 <PWRVBUSonHandler>:
    87f8:	21 82       	sub	#4,	r1	;r2 As==10
    87fa:	b0 12 cc 91 	call	#37324		;#0x91cc
    87fe:	0e 4c       	mov	r12,	r14	;
    8800:	5e 0f       	rrum	#4,	r14	;
    8802:	5e 0b       	rrum	#3,	r14	;
    8804:	0d 4c       	mov	r12,	r13	;
    8806:	5d 0f       	rrum	#4,	r13	;
    8808:	5d 07       	rrum	#2,	r13	;
    880a:	0d 5e       	add	r14,	r13	;
    880c:	5c 03       	rrum	#1,	r12	;
    880e:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    8812:	0c 5d       	add	r13,	r12	;
    8814:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8818:	1d 41 02 00 	mov	2(r1),	r13	;
    881c:	3e 40 03 00 	mov	#3,	r14	;
    8820:	0e 9d       	cmp	r13,	r14	;
    8822:	0c 28       	jnc	$+26     	;abs 0x883c
    8824:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    8828:	2d 41       	mov	@r1,	r13	;
    882a:	0d 9c       	cmp	r12,	r13	;
    882c:	04 2c       	jc	$+10     	;abs 0x8836
    882e:	03 43       	nop			
    8830:	91 53 00 00 	inc	0(r1)		;
    8834:	f9 3f       	jmp	$-12     	;abs 0x8828
    8836:	91 53 02 00 	inc	2(r1)		;
    883a:	ee 3f       	jmp	$-34     	;abs 0x8818
    883c:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8840:	0c 24       	jz	$+26     	;abs 0x885a
    8842:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8846:	00 09 
    8848:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    884c:	08 09 
    884e:	b2 f0 f9 ff 	and	#65529,	&0x0908	;#0xfff9
    8852:	08 09 
    8854:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8858:	00 09 
    885a:	21 52       	add	#4,	r1	;r2 As==10
    885c:	30 41       	ret			

0000885e <IEP0InterruptHandler>:
    885e:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8862:	3c 09 
    8864:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8868:	d2 93 88 24 	cmp.b	#1,	&0x2488	;r3 As==01
    886c:	03 20       	jnz	$+8      	;abs 0x8874
    886e:	b0 12 82 8d 	call	#36226		;#0x8d82
    8872:	02 3c       	jmp	$+6      	;abs 0x8878
    8874:	f2 d2 20 09 	bis.b	#8,	&0x0920	;r2 As==11
    8878:	30 41       	ret			

0000887a <OEP0InterruptHandler>:
    887a:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    887e:	3c 09 
    8880:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8884:	e2 93 88 24 	cmp.b	#2,	&0x2488	;r3 As==10
    8888:	0e 20       	jnz	$+30     	;abs 0x88a6
    888a:	b0 12 0c 8e 	call	#36364		;#0x8e0c
    888e:	c2 93 88 24 	cmp.b	#0,	&0x2488	;r3 As==00
    8892:	0b 20       	jnz	$+24     	;abs 0x88aa
    8894:	f2 90 20 00 	cmp.b	#32,	&0x2381	;#0x0020
    8898:	81 23 
    889a:	07 20       	jnz	$+16     	;abs 0x88aa
    889c:	b0 12 2a 9e 	call	#40490		;#0x9e2a
    88a0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    88a4:	03 3c       	jmp	$+8      	;abs 0x88ac
    88a6:	f2 d2 22 09 	bis.b	#8,	&0x0922	;r2 As==11
    88aa:	0c 43       	clr	r12		;
    88ac:	30 41       	ret			

000088ae <iUsbInterruptHandler>:
    88ae:	bf 15       	pushm	#12,	r15	;16-bit words
    88b0:	e2 b2 3e 09 	bit.b	#4,	&0x093e	;r2 As==10
    88b4:	06 24       	jz	$+14     	;abs 0x88c2
    88b6:	b0 12 3e 87 	call	#34622		;#0x873e
    88ba:	4a 4c       	mov.b	r12,	r10	;
    88bc:	e2 c2 3e 09 	bic.b	#4,	&0x093e	;r2 As==10
    88c0:	01 3c       	jmp	$+4      	;abs 0x88c4
    88c2:	0a 43       	clr	r10		;
    88c4:	1d 42 32 09 	mov	&0x0932,r13	;0x0932
    88c8:	3d f0 3f 00 	and	#63,	r13	;#0x003f
    88cc:	3d 90 14 00 	cmp	#20,	r13	;#0x0014
    88d0:	51 24       	jz	$+164    	;abs 0x8974
    88d2:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    88d6:	0c 9d       	cmp	r13,	r12	;
    88d8:	15 28       	jnc	$+44     	;abs 0x8904
    88da:	3d 90 0a 00 	cmp	#10,	r13	;#0x000a
    88de:	3a 24       	jz	$+118    	;abs 0x8954
    88e0:	3c 40 0a 00 	mov	#10,	r12	;#0x000a
    88e4:	0c 9d       	cmp	r13,	r12	;
    88e6:	05 28       	jnc	$+12     	;abs 0x88f2
    88e8:	2d 93       	cmp	#2,	r13	;r3 As==10
    88ea:	2c 24       	jz	$+90     	;abs 0x8944
    88ec:	3d 92       	cmp	#8,	r13	;r2 As==11
    88ee:	2c 24       	jz	$+90     	;abs 0x8948
    88f0:	78 3c       	jmp	$+242    	;abs 0x89e2
    88f2:	3d 90 0c 00 	cmp	#12,	r13	;#0x000c
    88f6:	36 24       	jz	$+110    	;abs 0x8964
    88f8:	3d 90 12 00 	cmp	#18,	r13	;#0x0012
    88fc:	72 20       	jnz	$+230    	;abs 0x89e2
    88fe:	b0 12 5e 88 	call	#34910		;#0x885e
    8902:	6f 3c       	jmp	$+224    	;abs 0x89e2
    8904:	3d 90 1a 00 	cmp	#26,	r13	;#0x001a
    8908:	49 24       	jz	$+148    	;abs 0x899c
    890a:	3c 40 1a 00 	mov	#26,	r12	;#0x001a
    890e:	0c 9d       	cmp	r13,	r12	;
    8910:	07 28       	jnc	$+16     	;abs 0x8920
    8912:	3d 90 16 00 	cmp	#22,	r13	;#0x0016
    8916:	31 24       	jz	$+100    	;abs 0x897a
    8918:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    891c:	36 24       	jz	$+110    	;abs 0x898a
    891e:	61 3c       	jmp	$+196    	;abs 0x89e2
    8920:	3d 90 26 00 	cmp	#38,	r13	;#0x0026
    8924:	44 24       	jz	$+138    	;abs 0x89ae
    8926:	3d 90 34 00 	cmp	#52,	r13	;#0x0034
    892a:	45 24       	jz	$+140    	;abs 0x89b6
    892c:	3d 90 20 00 	cmp	#32,	r13	;#0x0020
    8930:	58 20       	jnz	$+178    	;abs 0x89e2
    8932:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8936:	21 09 
    8938:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    893c:	23 09 
    893e:	b0 12 3e 87 	call	#34622		;#0x873e
    8942:	4f 3c       	jmp	$+160    	;abs 0x89e2
    8944:	03 43       	nop			
    8946:	4d 3c       	jmp	$+156    	;abs 0x89e2
    8948:	d2 b3 82 24 	bit.b	#1,	&0x2482	;r3 As==01
    894c:	4a 24       	jz	$+150    	;abs 0x89e2
    894e:	b0 12 f6 86 	call	#34550		;#0x86f6
    8952:	46 3c       	jmp	$+142    	;abs 0x89e0
    8954:	b0 12 f8 87 	call	#34808		;#0x87f8
    8958:	e2 b3 82 24 	bit.b	#2,	&0x2482	;r3 As==10
    895c:	42 24       	jz	$+134    	;abs 0x89e2
    895e:	b0 12 fa 86 	call	#34554		;#0x86fa
    8962:	3e 3c       	jmp	$+126    	;abs 0x89e0
    8964:	b0 12 82 87 	call	#34690		;#0x8782
    8968:	e2 b2 82 24 	bit.b	#4,	&0x2482	;r2 As==10
    896c:	3a 24       	jz	$+118    	;abs 0x89e2
    896e:	b0 12 0e 87 	call	#34574		;#0x870e
    8972:	36 3c       	jmp	$+110    	;abs 0x89e0
    8974:	b0 12 7a 88 	call	#34938		;#0x887a
    8978:	34 3c       	jmp	$+106    	;abs 0x89e2
    897a:	b0 12 d2 8a 	call	#35538		;#0x8ad2
    897e:	f2 b2 82 24 	bit.b	#8,	&0x2482	;r2 As==11
    8982:	2f 24       	jz	$+96     	;abs 0x89e2
    8984:	b0 12 16 87 	call	#34582		;#0x8716
    8988:	2b 3c       	jmp	$+88     	;abs 0x89e0
    898a:	b0 12 34 8d 	call	#36148		;#0x8d34
    898e:	f2 b0 10 00 	bit.b	#16,	&0x2482	;#0x0010
    8992:	82 24 
    8994:	26 24       	jz	$+78     	;abs 0x89e2
    8996:	b0 12 1a 87 	call	#34586		;#0x871a
    899a:	22 3c       	jmp	$+70     	;abs 0x89e0
    899c:	b0 12 34 94 	call	#37940		;#0x9434
    89a0:	f2 b0 20 00 	bit.b	#32,	&0x2482	;#0x0020
    89a4:	82 24 
    89a6:	1f 24       	jz	$+64     	;abs 0x89e6
    89a8:	b0 12 1e 87 	call	#34590		;#0x871e
    89ac:	1c 3c       	jmp	$+58     	;abs 0x89e6
    89ae:	4c 43       	clr.b	r12		;
    89b0:	b0 12 d4 95 	call	#38356		;#0x95d4
    89b4:	15 3c       	jmp	$+44     	;abs 0x89e0
    89b6:	4c 43       	clr.b	r12		;
    89b8:	b0 12 70 9b 	call	#39792		;#0x9b70
    89bc:	09 4c       	mov	r12,	r9	;
    89be:	0c 93       	cmp	#0,	r12	;r3 As==00
    89c0:	0c 20       	jnz	$+26     	;abs 0x89da
    89c2:	b0 12 0e 9d 	call	#40206		;#0x9d0e
    89c6:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    89c8:	08 24       	jz	$+18     	;abs 0x89da
    89ca:	f2 b0 40 00 	bit.b	#64,	&0x2482	;#0x0040
    89ce:	82 24 
    89d0:	08 24       	jz	$+18     	;abs 0x89e2
    89d2:	4c 49       	mov.b	r9,	r12	;
    89d4:	b0 12 26 87 	call	#34598		;#0x8726
    89d8:	03 3c       	jmp	$+8      	;abs 0x89e0
    89da:	4c 43       	clr.b	r12		;
    89dc:	b0 12 46 9a 	call	#39494		;#0x9a46
    89e0:	4a 4c       	mov.b	r12,	r10	;
    89e2:	0a 93       	cmp	#0,	r10	;r3 As==00
    89e4:	04 24       	jz	$+10     	;abs 0x89ee
    89e6:	b1 c0 d0 00 	bic	#208,	24(r1)	;#0x00d0, 0x0018
    89ea:	18 00 
    89ec:	03 43       	nop			
    89ee:	b4 17       	popm	#12,	r15	;16-bit words
    89f0:	00 13       	reti			

000089f2 <USB_getVersion>:
    89f2:	3c 40 02 24 	mov	#9218,	r12	;#0x2402
    89f6:	30 41       	ret			

000089f8 <USB_InitSerialStringDescriptor>:
    89f8:	0a 15       	pushm	#1,	r10	;16-bit words
    89fa:	21 82       	sub	#4,	r1	;r2 As==10
    89fc:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8a00:	f2 40 03 00 	mov.b	#3,	&0x2461	;
    8a04:	61 24 
    8a06:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8a08:	4d 43       	clr.b	r13		;
    8a0a:	0e 41       	mov	r1,	r14	;
    8a0c:	1e 53       	inc	r14		;
    8a0e:	0f 41       	mov	r1,	r15	;
    8a10:	2f 53       	incd	r15		;
    8a12:	b0 12 ac 9e 	call	#40620		;#0x9eac
    8a16:	5c 41 01 00 	mov.b	1(r1),	r12	;
    8a1a:	0c 93       	cmp	#0,	r12	;r3 As==00
    8a1c:	04 24       	jz	$+10     	;abs 0x8a26
    8a1e:	3d 40 64 24 	mov	#9316,	r13	;#0x2464
    8a22:	0f 43       	clr	r15		;
    8a24:	07 3c       	jmp	$+16     	;abs 0x8a34
    8a26:	e2 42 60 24 	mov.b	#4,	&0x2460	;r2 As==10
    8a2a:	c2 4c 62 24 	mov.b	r12,	&0x2462	;
    8a2e:	c2 4c 63 24 	mov.b	r12,	&0x2463	;
    8a32:	34 3c       	jmp	$+106    	;abs 0x8a9c
    8a34:	1b 41 02 00 	mov	2(r1),	r11	;
    8a38:	6e 4b       	mov.b	@r11,	r14	;
    8a3a:	5e 0f       	rrum	#4,	r14	;
    8a3c:	7a 40 09 00 	mov.b	#9,	r10	;
    8a40:	4a 9e       	cmp.b	r14,	r10	;
    8a42:	03 28       	jnc	$+8      	;abs 0x8a4a
    8a44:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8a48:	02 3c       	jmp	$+6      	;abs 0x8a4e
    8a4a:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8a4e:	cd 4e fe ff 	mov.b	r14,	-2(r13)	; 0xfffe
    8a52:	cd 43 ff ff 	mov.b	#0,	-1(r13)	;r3 As==00, 0xffff
    8a56:	6e 4b       	mov.b	@r11,	r14	;
    8a58:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    8a5c:	7a 40 09 00 	mov.b	#9,	r10	;
    8a60:	4a 9e       	cmp.b	r14,	r10	;
    8a62:	03 28       	jnc	$+8      	;abs 0x8a6a
    8a64:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8a68:	02 3c       	jmp	$+6      	;abs 0x8a6e
    8a6a:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8a6e:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    8a72:	cd 43 01 00 	mov.b	#0,	1(r13)	;r3 As==00
    8a76:	4e 4f       	mov.b	r15,	r14	;
    8a78:	5e 53       	inc.b	r14		;
    8a7a:	4f 4e       	mov.b	r14,	r15	;
    8a7c:	1b 53       	inc	r11		;
    8a7e:	81 4b 02 00 	mov	r11,	2(r1)	;
    8a82:	2d 52       	add	#4,	r13	;r2 As==10
    8a84:	4e 9c       	cmp.b	r12,	r14	;
    8a86:	06 20       	jnz	$+14     	;abs 0x8a94
    8a88:	41 18 0c 5c 	rpt #2 { rlax.w	r12		;
    8a8c:	6c 53       	incd.b	r12		;
    8a8e:	c2 4c 60 24 	mov.b	r12,	&0x2460	;
    8a92:	04 3c       	jmp	$+10     	;abs 0x8a9c
    8a94:	7e 92       	cmp.b	#8,	r14	;r2 As==11
    8a96:	ce 23       	jnz	$-98     	;abs 0x8a34
    8a98:	0c 4f       	mov	r15,	r12	;
    8a9a:	f6 3f       	jmp	$-18     	;abs 0x8a88
    8a9c:	21 52       	add	#4,	r1	;r2 As==10
    8a9e:	0a 17       	popm	#1,	r10	;16-bit words
    8aa0:	30 41       	ret			

00008aa2 <USB_disable>:
    8aa2:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8aa6:	00 09 
    8aa8:	82 43 02 09 	mov	#0,	&0x0902	;r3 As==00
    8aac:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8ab0:	10 09 
    8ab2:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8ab6:	00 09 
    8ab8:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8abc:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8ac0:	4c 43       	clr.b	r12		;
    8ac2:	30 41       	ret			

00008ac4 <USB_setEnabledEvents>:
    8ac4:	82 4c 82 24 	mov	r12,	&0x2482	;
    8ac8:	4c 43       	clr.b	r12		;
    8aca:	30 41       	ret			

00008acc <USB_getEnabledEvents>:
    8acc:	1c 42 82 24 	mov	&0x2482,r12	;0x2482
    8ad0:	30 41       	ret			

00008ad2 <USB_reset>:
    8ad2:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8ad6:	00 09 
    8ad8:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8adc:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8ae0:	c2 43 1b 24 	mov.b	#0,	&0x241b	;r3 As==00
    8ae4:	c2 43 25 24 	mov.b	#0,	&0x2425	;r3 As==00
    8ae8:	c2 43 24 24 	mov.b	#0,	&0x2424	;r3 As==00
    8aec:	c2 43 3c 09 	mov.b	#0,	&0x093c	;r3 As==00
    8af0:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8af4:	b2 43 86 24 	mov	#-1,	&0x2486	;r3 As==11
    8af8:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8afc:	c2 43 3f 09 	mov.b	#0,	&0x093f	;r3 As==00
    8b00:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8b04:	21 09 
    8b06:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    8b0a:	23 09 
    8b0c:	f2 40 8c ff 	mov.b	#65420,	&0x0920	;#0xff8c
    8b10:	20 09 
    8b12:	f2 40 8c ff 	mov.b	#65420,	&0x0922	;#0xff8c
    8b16:	22 09 
    8b18:	f2 40 05 00 	mov.b	#5,	&0x092f	;
    8b1c:	2f 09 
    8b1e:	f2 40 07 00 	mov.b	#7,	&0x092e	;
    8b22:	2e 09 
    8b24:	5c 42 e6 80 	mov.b	&0x80e6,r12	;0x80e6
    8b28:	0d 4c       	mov	r12,	r13	;
    8b2a:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    8b2e:	0e 4d       	mov	r13,	r14	;
    8b30:	3e 50 c8 23 	add	#9160,	r14	;#0x23c8
    8b34:	fe 40 94 ff 	mov.b	#65428,	0(r14)	;#0xff94
    8b38:	00 00 
    8b3a:	1f 42 f0 80 	mov	&0x80f0,r15	;0x80f0
    8b3e:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8b42:	5f 0b       	rrum	#3,	r15	;
    8b44:	ce 4f 01 00 	mov.b	r15,	1(r14)	;
    8b48:	1f 42 f2 80 	mov	&0x80f2,r15	;0x80f2
    8b4c:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8b50:	5f 0b       	rrum	#3,	r15	;
    8b52:	ce 4f 05 00 	mov.b	r15,	5(r14)	;
    8b56:	fe 40 80 ff 	mov.b	#65408,	2(r14)	;#0xff80
    8b5a:	02 00 
    8b5c:	3e 50 06 00 	add	#6,	r14	;
    8b60:	fe 40 80 ff 	mov.b	#65408,	0(r14)	;#0xff80
    8b64:	00 00 
    8b66:	fe 40 40 00 	mov.b	#64,	1(r14)	;#0x0040
    8b6a:	01 00 
    8b6c:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    8b70:	fd 40 94 ff 	mov.b	#65428,	0(r13)	;#0xff94
    8b74:	00 00 
    8b76:	1e 42 ec 80 	mov	&0x80ec,r14	;0x80ec
    8b7a:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8b7e:	5e 0b       	rrum	#3,	r14	;
    8b80:	cd 4e 01 00 	mov.b	r14,	1(r13)	;
    8b84:	1e 42 ee 80 	mov	&0x80ee,r14	;0x80ee
    8b88:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8b8c:	5e 0b       	rrum	#3,	r14	;
    8b8e:	cd 4e 05 00 	mov.b	r14,	5(r13)	;
    8b92:	cd 43 02 00 	mov.b	#0,	2(r13)	;r3 As==00
    8b96:	3d 50 06 00 	add	#6,	r13	;
    8b9a:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    8b9e:	fd 40 40 00 	mov.b	#64,	1(r13)	;#0x0040
    8ba2:	01 00 
    8ba4:	e2 93 e7 80 	cmp.b	#2,	&0x80e7	;r3 As==10
    8ba8:	21 20       	jnz	$+68     	;abs 0x8bec
    8baa:	3c 53       	add	#-1,	r12	;r3 As==11
    8bac:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8bb0:	3c 50 c8 23 	add	#9160,	r12	;#0x23c8
    8bb4:	fc 40 94 ff 	mov.b	#65428,	0(r12)	;#0xff94
    8bb8:	00 00 
    8bba:	1d 42 e8 80 	mov	&0x80e8,r13	;0x80e8
    8bbe:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8bc2:	5d 0b       	rrum	#3,	r13	;
    8bc4:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    8bc8:	1d 42 ea 80 	mov	&0x80ea,r13	;0x80ea
    8bcc:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8bd0:	5d 0b       	rrum	#3,	r13	;
    8bd2:	cc 4d 05 00 	mov.b	r13,	5(r12)	;
    8bd6:	fc 40 80 ff 	mov.b	#65408,	2(r12)	;#0xff80
    8bda:	02 00 
    8bdc:	3c 50 06 00 	add	#6,	r12	;
    8be0:	fc 40 80 ff 	mov.b	#65408,	0(r12)	;#0xff80
    8be4:	00 00 
    8be6:	fc 40 40 00 	mov.b	#64,	1(r12)	;#0x0040
    8bea:	01 00 
    8bec:	b0 12 18 95 	call	#38168		;#0x9518
    8bf0:	f2 40 40 00 	mov.b	#64,	&0x093c	;#0x0040
    8bf4:	3c 09 
    8bf6:	c2 43 3e 09 	mov.b	#0,	&0x093e	;r3 As==00
    8bfa:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    8bfe:	3d 09 
    8c00:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8c04:	00 09 
    8c06:	4c 43       	clr.b	r12		;
    8c08:	30 41       	ret			

00008c0a <USB_connect>:
    8c0a:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8c0e:	00 09 
    8c10:	a2 d3 02 09 	bis	#2,	&0x0902	;r3 As==10
    8c14:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    8c18:	08 09 
    8c1a:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8c1e:	00 09 
    8c20:	4c 43       	clr.b	r12		;
    8c22:	30 41       	ret			

00008c24 <USB_disconnect>:
    8c24:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8c28:	00 09 
    8c2a:	a2 c3 02 09 	bic	#2,	&0x0902	;r3 As==10
    8c2e:	b2 f0 ff fb 	and	#64511,	&0x0908	;#0xfbff
    8c32:	08 09 
    8c34:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8c38:	00 09 
    8c3a:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    8c3e:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    8c42:	4c 43       	clr.b	r12		;
    8c44:	30 41       	ret			

00008c46 <USB_forceRemoteWakeup>:
    8c46:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    8c4a:	08 24       	jz	$+18     	;abs 0x8c5c
    8c4c:	d2 93 1b 24 	cmp.b	#1,	&0x241b	;r3 As==01
    8c50:	08 20       	jnz	$+18     	;abs 0x8c62
    8c52:	f2 d0 20 00 	bis.b	#32,	&0x093c	;#0x0020
    8c56:	3c 09 
    8c58:	0c 43       	clr	r12		;
    8c5a:	04 3c       	jmp	$+10     	;abs 0x8c64
    8c5c:	3c 40 10 00 	mov	#16,	r12	;#0x0010
    8c60:	01 3c       	jmp	$+4      	;abs 0x8c64
    8c62:	1c 43       	mov	#1,	r12	;r3 As==01
    8c64:	30 41       	ret			

00008c66 <USB_getConnectionInformation>:
    8c66:	1d 42 08 09 	mov	&0x0908,r13	;0x0908
    8c6a:	5d 0b       	rrum	#3,	r13	;
    8c6c:	5d f3       	and.b	#1,	r13	;r3 As==01
    8c6e:	4c 4d       	mov.b	r13,	r12	;
    8c70:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8c74:	03 20       	jnz	$+8      	;abs 0x8c7c
    8c76:	7d d0 20 00 	bis.b	#32,	r13	;#0x0020
    8c7a:	4c 4d       	mov.b	r13,	r12	;
    8c7c:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c80:	04 24       	jz	$+10     	;abs 0x8c8a
    8c82:	7c d0 40 00 	bis.b	#64,	r12	;#0x0040
    8c86:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c8a:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8c8e:	02 20       	jnz	$+6      	;abs 0x8c94
    8c90:	7c d2       	bis.b	#8,	r12	;r2 As==11
    8c92:	02 3c       	jmp	$+6      	;abs 0x8c98
    8c94:	7c d0 10 00 	bis.b	#16,	r12	;#0x0010
    8c98:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c9c:	30 41       	ret			

00008c9e <USB_getConnectionState>:
    8c9e:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8ca2:	36 24       	jz	$+110    	;abs 0x8d10
    8ca4:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8ca8:	03 24       	jz	$+8      	;abs 0x8cb0
    8caa:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cae:	33 24       	jz	$+104    	;abs 0x8d16
    8cb0:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8cb4:	09 24       	jz	$+20     	;abs 0x8cc8
    8cb6:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cba:	06 24       	jz	$+14     	;abs 0x8cc8
    8cbc:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8cc0:	03 20       	jnz	$+8      	;abs 0x8cc8
    8cc2:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8cc6:	2a 20       	jnz	$+86     	;abs 0x8d1c
    8cc8:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8ccc:	09 24       	jz	$+20     	;abs 0x8ce0
    8cce:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cd2:	06 24       	jz	$+14     	;abs 0x8ce0
    8cd4:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8cd8:	03 24       	jz	$+8      	;abs 0x8ce0
    8cda:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8cde:	21 24       	jz	$+68     	;abs 0x8d22
    8ce0:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8ce4:	09 24       	jz	$+20     	;abs 0x8cf8
    8ce6:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8cea:	06 24       	jz	$+14     	;abs 0x8cf8
    8cec:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8cf0:	03 20       	jnz	$+8      	;abs 0x8cf8
    8cf2:	d2 93 1d 24 	cmp.b	#1,	&0x241d	;r3 As==01
    8cf6:	18 24       	jz	$+50     	;abs 0x8d28
    8cf8:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8cfc:	18 24       	jz	$+50     	;abs 0x8d2e
    8cfe:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d02:	15 24       	jz	$+44     	;abs 0x8d2e
    8d04:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    8d08:	12 24       	jz	$+38     	;abs 0x8d2e
    8d0a:	3c 40 82 00 	mov	#130,	r12	;#0x0082
    8d0e:	11 3c       	jmp	$+36     	;abs 0x8d32
    8d10:	3c 40 80 00 	mov	#128,	r12	;#0x0080
    8d14:	0e 3c       	jmp	$+30     	;abs 0x8d32
    8d16:	3c 40 81 00 	mov	#129,	r12	;#0x0081
    8d1a:	0b 3c       	jmp	$+24     	;abs 0x8d32
    8d1c:	3c 40 83 00 	mov	#131,	r12	;#0x0083
    8d20:	08 3c       	jmp	$+18     	;abs 0x8d32
    8d22:	3c 40 87 00 	mov	#135,	r12	;#0x0087
    8d26:	05 3c       	jmp	$+12     	;abs 0x8d32
    8d28:	3c 40 84 00 	mov	#132,	r12	;#0x0084
    8d2c:	02 3c       	jmp	$+6      	;abs 0x8d32
    8d2e:	3c 40 86 00 	mov	#134,	r12	;#0x0086
    8d32:	30 41       	ret			

00008d34 <USB_suspend>:
    8d34:	d2 43 1d 24 	mov.b	#1,	&0x241d	;r3 As==01
    8d38:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8d3c:	00 09 
    8d3e:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8d42:	3c 09 
    8d44:	f2 f0 bf ff 	and.b	#65471,	&0x093e	;#0xffbf
    8d48:	3e 09 
    8d4a:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8d4e:	10 09 
    8d50:	b0 12 20 a9 	call	#43296		;#0xa920
    8d54:	f2 40 20 00 	mov.b	#32,	&0x093d	;#0x0020
    8d58:	3d 09 
    8d5a:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8d5e:	00 09 
    8d60:	4c 43       	clr.b	r12		;
    8d62:	30 41       	ret			

00008d64 <usbStallEndpoint0>:
    8d64:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8d68:	fc d2 00 00 	bis.b	#8,	0(r12)	;r2 As==11
    8d6c:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8d70:	30 41       	ret			

00008d72 <usbClearOEP0ByteCount>:
    8d72:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8d76:	30 41       	ret			

00008d78 <usbStallOEP0>:
    8d78:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8d7c:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8d80:	30 41       	ret			

00008d82 <usbSendNextPacketOnIEP0>:
    8d82:	1c 42 84 24 	mov	&0x2484,r12	;0x2484
    8d86:	3c 93       	cmp	#-1,	r12	;r3 As==11
    8d88:	2d 24       	jz	$+92     	;abs 0x8de4
    8d8a:	3d 42       	mov	#8,	r13	;r2 As==11
    8d8c:	0d 9c       	cmp	r12,	r13	;
    8d8e:	08 2c       	jc	$+18     	;abs 0x8da0
    8d90:	3c 50 f8 ff 	add	#65528,	r12	;#0xfff8
    8d94:	82 4c 84 24 	mov	r12,	&0x2484	;
    8d98:	d2 43 88 24 	mov.b	#1,	&0x2488	;r3 As==01
    8d9c:	0c 4d       	mov	r13,	r12	;
    8d9e:	11 3c       	jmp	$+36     	;abs 0x8dc2
    8da0:	3c 92       	cmp	#8,	r12	;r2 As==11
    8da2:	03 24       	jz	$+8      	;abs 0x8daa
    8da4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8da8:	08 3c       	jmp	$+18     	;abs 0x8dba
    8daa:	d2 93 1e 24 	cmp.b	#1,	&0x241e	;r3 As==01
    8dae:	05 20       	jnz	$+12     	;abs 0x8dba
    8db0:	82 43 84 24 	mov	#0,	&0x2484	;r3 As==00
    8db4:	d2 43 88 24 	mov.b	#1,	&0x2488	;r3 As==01
    8db8:	04 3c       	jmp	$+10     	;abs 0x8dc2
    8dba:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8dbe:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8dc2:	1e 42 22 24 	mov	&0x2422,r14	;0x2422
    8dc6:	0d 43       	clr	r13		;
    8dc8:	4d 9c       	cmp.b	r12,	r13	;
    8dca:	06 2c       	jc	$+14     	;abs 0x8dd8
    8dcc:	0f 4e       	mov	r14,	r15	;
    8dce:	0f 5d       	add	r13,	r15	;
    8dd0:	ed 4f 78 23 	mov.b	@r15,	9080(r13); 0x2378
    8dd4:	1d 53       	inc	r13		;
    8dd6:	f8 3f       	jmp	$-14     	;abs 0x8dc8
    8dd8:	0e 5c       	add	r12,	r14	;
    8dda:	82 4e 22 24 	mov	r14,	&0x2422	;
    8dde:	c2 4c 21 09 	mov.b	r12,	&0x0921	;
    8de2:	02 3c       	jmp	$+6      	;abs 0x8de8
    8de4:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8de8:	30 41       	ret			

00008dea <usbSendDataPacketOnEP0>:
    8dea:	82 4c 22 24 	mov	r12,	&0x2422	;
    8dee:	1c 42 86 23 	mov	&0x2386,r12	;0x2386
    8df2:	82 9c 84 24 	cmp	r12,	&0x2484	;
    8df6:	05 28       	jnc	$+12     	;abs 0x8e02
    8df8:	82 4c 84 24 	mov	r12,	&0x2484	;
    8dfc:	c2 43 1e 24 	mov.b	#0,	&0x241e	;r3 As==00
    8e00:	02 3c       	jmp	$+6      	;abs 0x8e06
    8e02:	d2 43 1e 24 	mov.b	#1,	&0x241e	;r3 As==01
    8e06:	b0 12 82 8d 	call	#36226		;#0x8d82
    8e0a:	30 41       	ret			

00008e0c <usbReceiveNextPacketOnOEP0>:
    8e0c:	5d 42 23 09 	mov.b	&0x0923,r13	;0x0923
    8e10:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    8e14:	82 9d 86 24 	cmp	r13,	&0x2486	;
    8e18:	1b 28       	jnc	$+56     	;abs 0x8e50
    8e1a:	1e 42 20 24 	mov	&0x2420,r14	;0x2420
    8e1e:	0c 43       	clr	r12		;
    8e20:	4c 9d       	cmp.b	r13,	r12	;
    8e22:	07 2c       	jc	$+16     	;abs 0x8e32
    8e24:	0f 4e       	mov	r14,	r15	;
    8e26:	0f 5c       	add	r12,	r15	;
    8e28:	df 4c 70 23 	mov.b	9072(r12),0(r15)	;0x02370
    8e2c:	00 00 
    8e2e:	1c 53       	inc	r12		;
    8e30:	f7 3f       	jmp	$-16     	;abs 0x8e20
    8e32:	0e 5d       	add	r13,	r14	;
    8e34:	82 4e 20 24 	mov	r14,	&0x2420	;
    8e38:	1c 42 86 24 	mov	&0x2486,r12	;0x2486
    8e3c:	0c 8d       	sub	r13,	r12	;
    8e3e:	82 4c 86 24 	mov	r12,	&0x2486	;
    8e42:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e44:	05 24       	jz	$+12     	;abs 0x8e50
    8e46:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e4a:	e2 43 88 24 	mov.b	#2,	&0x2488	;r3 As==10
    8e4e:	04 3c       	jmp	$+10     	;abs 0x8e58
    8e50:	b0 12 78 8d 	call	#36216		;#0x8d78
    8e54:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8e58:	30 41       	ret			

00008e5a <usbReceiveDataPacketOnEP0>:
    8e5a:	82 4c 20 24 	mov	r12,	&0x2420	;
    8e5e:	92 42 86 23 	mov	&0x2386,&0x2486	;0x2386
    8e62:	86 24 
    8e64:	e2 43 88 24 	mov.b	#2,	&0x2488	;r3 As==10
    8e68:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e6c:	30 41       	ret			

00008e6e <usbSendZeroLengthPacketOnIEP0>:
    8e6e:	b2 43 84 24 	mov	#-1,	&0x2484	;r3 As==11
    8e72:	c2 43 88 24 	mov.b	#0,	&0x2488	;r3 As==00
    8e76:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8e7a:	30 41       	ret			

00008e7c <usbClearEndpointFeature>:
    8e7c:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8e80:	4d 4e       	mov.b	r14,	r13	;
    8e82:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    8e86:	4c 4d       	mov.b	r13,	r12	;
    8e88:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e8a:	03 20       	jnz	$+8      	;abs 0x8e92
    8e8c:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    8e90:	13 3c       	jmp	$+40     	;abs 0x8eb8
    8e92:	7d 53       	add.b	#-1,	r13	;r3 As==11
    8e94:	4c 4d       	mov.b	r13,	r12	;
    8e96:	7f 40 06 00 	mov.b	#6,	r15	;
    8e9a:	4f 9d       	cmp.b	r13,	r15	;
    8e9c:	0d 28       	jnc	$+28     	;abs 0x8eb8
    8e9e:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8ea2:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8ea6:	04 24       	jz	$+10     	;abs 0x8eb0
    8ea8:	fc f0 d7 ff 	and.b	#65495,	9160(r12);#0xffd7, 0x23c8
    8eac:	c8 23 
    8eae:	ee 3f       	jmp	$-34     	;abs 0x8e8c
    8eb0:	fc f0 d7 ff 	and.b	#65495,	9096(r12);#0xffd7, 0x2388
    8eb4:	88 23 
    8eb6:	ea 3f       	jmp	$-42     	;abs 0x8e8c
    8eb8:	4c 43       	clr.b	r12		;
    8eba:	30 41       	ret			

00008ebc <usbGetConfiguration>:
    8ebc:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ec0:	92 43 84 24 	mov	#1,	&0x2484	;r3 As==01
    8ec4:	3c 40 25 24 	mov	#9253,	r12	;#0x2425
    8ec8:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8ecc:	4c 43       	clr.b	r12		;
    8ece:	30 41       	ret			

00008ed0 <usbGetDeviceDescriptor>:
    8ed0:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ed4:	b2 40 12 00 	mov	#18,	&0x2484	;#0x0012
    8ed8:	84 24 
    8eda:	3c 40 c1 81 	mov	#33217,	r12	;#0x81c1
    8ede:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8ee2:	4c 43       	clr.b	r12		;
    8ee4:	30 41       	ret			

00008ee6 <usbGetConfigurationDescriptor>:
    8ee6:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8eea:	b2 40 43 00 	mov	#67,	&0x2484	;#0x0043
    8eee:	84 24 
    8ef0:	3c 40 7e 81 	mov	#33150,	r12	;#0x817e
    8ef4:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8ef8:	4c 43       	clr.b	r12		;
    8efa:	30 41       	ret			

00008efc <usbGetStringDescriptor>:
    8efc:	5d 42 82 23 	mov.b	&0x2382,r13	;0x2382
    8f00:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f04:	7c 40 05 00 	mov.b	#5,	r12	;
    8f08:	4c 9d       	cmp.b	r13,	r12	;
    8f0a:	1d 28       	jnc	$+60     	;abs 0x8f46
    8f0c:	3d 90 03 00 	cmp	#3,	r13	;
    8f10:	02 24       	jz	$+6      	;abs 0x8f16
    8f12:	0e 43       	clr	r14		;
    8f14:	07 3c       	jmp	$+16     	;abs 0x8f24
    8f16:	5d 42 60 24 	mov.b	&0x2460,r13	;0x2460
    8f1a:	82 4d 84 24 	mov	r13,	&0x2484	;
    8f1e:	3c 40 60 24 	mov	#9312,	r12	;#0x2460
    8f22:	0e 3c       	jmp	$+30     	;abs 0x8f40
    8f24:	4f 4d       	mov.b	r13,	r15	;
    8f26:	7f 53       	add.b	#-1,	r15	;r3 As==11
    8f28:	4d 4f       	mov.b	r15,	r13	;
    8f2a:	0c 4e       	mov	r14,	r12	;
    8f2c:	3c 50 f4 80 	add	#33012,	r12	;#0x80f4
    8f30:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    8f32:	03 24       	jz	$+8      	;abs 0x8f3a
    8f34:	6c 4c       	mov.b	@r12,	r12	;
    8f36:	0e 5c       	add	r12,	r14	;
    8f38:	f5 3f       	jmp	$-20     	;abs 0x8f24
    8f3a:	6d 4c       	mov.b	@r12,	r13	;
    8f3c:	82 4d 84 24 	mov	r13,	&0x2484	;
    8f40:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8f44:	02 3c       	jmp	$+6      	;abs 0x8f4a
    8f46:	b0 12 64 8d 	call	#36196		;#0x8d64
    8f4a:	4c 43       	clr.b	r12		;
    8f4c:	30 41       	ret			

00008f4e <usbGetInterface>:
    8f4e:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f52:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f56:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8f5a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f5e:	dc 42 24 24 	mov.b	&0x2424,1(r12)	;0x2424
    8f62:	01 00 
    8f64:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8f68:	4c 43       	clr.b	r12		;
    8f6a:	30 41       	ret			

00008f6c <usbGetDeviceStatus>:
    8f6c:	f2 b0 40 00 	bit.b	#64,	&0x8185	;#0x0040
    8f70:	85 81 
    8f72:	02 24       	jz	$+6      	;abs 0x8f78
    8f74:	d2 43 58 24 	mov.b	#1,	&0x2458	;r3 As==01
    8f78:	d2 93 1b 24 	cmp.b	#1,	&0x241b	;r3 As==01
    8f7c:	02 20       	jnz	$+6      	;abs 0x8f82
    8f7e:	e2 d3 58 24 	bis.b	#2,	&0x2458	;r3 As==10
    8f82:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f86:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f8a:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8f8e:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8f92:	4c 43       	clr.b	r12		;
    8f94:	30 41       	ret			

00008f96 <usbGetInterfaceStatus>:
    8f96:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f9a:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    8f9e:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    8fa2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8fa6:	dc 42 24 24 	mov.b	&0x2424,1(r12)	;0x2424
    8faa:	01 00 
    8fac:	b0 12 ea 8d 	call	#36330		;#0x8dea
    8fb0:	4c 43       	clr.b	r12		;
    8fb2:	30 41       	ret			

00008fb4 <usbGetEndpointStatus>:
    8fb4:	0a 15       	pushm	#1,	r10	;16-bit words
    8fb6:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8fba:	4c 4e       	mov.b	r14,	r12	;
    8fbc:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    8fc0:	4d 4c       	mov.b	r12,	r13	;
    8fc2:	3f 40 ea 8d 	mov	#36330,	r15	;#0x8dea
    8fc6:	0d 93       	cmp	#0,	r13	;r3 As==00
    8fc8:	0c 20       	jnz	$+26     	;abs 0x8fe2
    8fca:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8fce:	06 24       	jz	$+14     	;abs 0x8fdc
    8fd0:	5a 42 20 09 	mov.b	&0x0920,r10	;0x0920
    8fd4:	7a f2       	and.b	#8,	r10	;r2 As==11
    8fd6:	c2 4a 58 24 	mov.b	r10,	&0x2458	;
    8fda:	17 3c       	jmp	$+48     	;abs 0x900a
    8fdc:	5c 42 22 09 	mov.b	&0x0922,r12	;0x0922
    8fe0:	11 3c       	jmp	$+36     	;abs 0x9004
    8fe2:	7c 53       	add.b	#-1,	r12	;r3 As==11
    8fe4:	4d 4c       	mov.b	r12,	r13	;
    8fe6:	7a 40 06 00 	mov.b	#6,	r10	;
    8fea:	4a 9c       	cmp.b	r12,	r10	;
    8fec:	0e 28       	jnc	$+30     	;abs 0x900a
    8fee:	0c 4d       	mov	r13,	r12	;
    8ff0:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8ff4:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8ff8:	03 24       	jz	$+8      	;abs 0x9000
    8ffa:	5c 4c c8 23 	mov.b	9160(r12),r12	;0x023c8
    8ffe:	02 3c       	jmp	$+6      	;abs 0x9004
    9000:	5c 4c 88 23 	mov.b	9096(r12),r12	;0x02388
    9004:	7c f2       	and.b	#8,	r12	;r2 As==11
    9006:	c2 4c 58 24 	mov.b	r12,	&0x2458	;
    900a:	5c 42 58 24 	mov.b	&0x2458,r12	;0x2458
    900e:	5c 0b       	rrum	#3,	r12	;
    9010:	c2 4c 58 24 	mov.b	r12,	&0x2458	;
    9014:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9018:	a2 43 84 24 	mov	#2,	&0x2484	;r3 As==10
    901c:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    9020:	8f 12       	call	r15		;
    9022:	4c 43       	clr.b	r12		;
    9024:	0a 17       	popm	#1,	r10	;16-bit words
    9026:	30 41       	ret			

00009028 <usbSetAddress>:
    9028:	b0 12 78 8d 	call	#36216		;#0x8d78
    902c:	1c 42 82 23 	mov	&0x2382,r12	;0x2382
    9030:	3d 40 7f 00 	mov	#127,	r13	;#0x007f
    9034:	0d 9c       	cmp	r12,	r13	;
    9036:	05 28       	jnc	$+12     	;abs 0x9042
    9038:	c2 4c 3f 09 	mov.b	r12,	&0x093f	;
    903c:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    9040:	02 3c       	jmp	$+6      	;abs 0x9046
    9042:	b0 12 64 8d 	call	#36196		;#0x8d64
    9046:	4c 43       	clr.b	r12		;
    9048:	30 41       	ret			

0000904a <usbSetConfiguration>:
    904a:	b0 12 78 8d 	call	#36216		;#0x8d78
    904e:	d2 42 82 23 	mov.b	&0x2382,&0x2425	;0x2382
    9052:	25 24 
    9054:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    9058:	d2 93 25 24 	cmp.b	#1,	&0x2425	;r3 As==01
    905c:	07 20       	jnz	$+16     	;abs 0x906c
    905e:	d2 43 1c 24 	mov.b	#1,	&0x241c	;r3 As==01
    9062:	b0 12 22 87 	call	#34594		;#0x8722
    9066:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    906a:	03 3c       	jmp	$+8      	;abs 0x9072
    906c:	c2 43 1c 24 	mov.b	#0,	&0x241c	;r3 As==00
    9070:	0c 43       	clr	r12		;
    9072:	30 41       	ret			

00009074 <usbClearDeviceFeature>:
    9074:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9078:	05 20       	jnz	$+12     	;abs 0x9084
    907a:	c2 43 1b 24 	mov.b	#0,	&0x241b	;r3 As==00
    907e:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    9082:	02 3c       	jmp	$+6      	;abs 0x9088
    9084:	b0 12 64 8d 	call	#36196		;#0x8d64
    9088:	4c 43       	clr.b	r12		;
    908a:	30 41       	ret			

0000908c <usbSetDeviceFeature>:
    908c:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9090:	05 20       	jnz	$+12     	;abs 0x909c
    9092:	d2 43 1b 24 	mov.b	#1,	&0x241b	;r3 As==01
    9096:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    909a:	02 3c       	jmp	$+6      	;abs 0x90a0
    909c:	b0 12 64 8d 	call	#36196		;#0x8d64
    90a0:	4c 43       	clr.b	r12		;
    90a2:	30 41       	ret			

000090a4 <usbSetEndpointFeature>:
    90a4:	82 93 82 23 	cmp	#0,	&0x2382	;r3 As==00
    90a8:	1c 20       	jnz	$+58     	;abs 0x90e2
    90aa:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    90ae:	4d 4e       	mov.b	r14,	r13	;
    90b0:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    90b4:	4c 4d       	mov.b	r13,	r12	;
    90b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    90b8:	03 20       	jnz	$+8      	;abs 0x90c0
    90ba:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    90be:	13 3c       	jmp	$+40     	;abs 0x90e6
    90c0:	7d 53       	add.b	#-1,	r13	;r3 As==11
    90c2:	4c 4d       	mov.b	r13,	r12	;
    90c4:	7f 40 06 00 	mov.b	#6,	r15	;
    90c8:	4f 9d       	cmp.b	r13,	r15	;
    90ca:	0d 28       	jnc	$+28     	;abs 0x90e6
    90cc:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    90d0:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    90d4:	03 24       	jz	$+8      	;abs 0x90dc
    90d6:	fc d2 c8 23 	bis.b	#8,	9160(r12);r2 As==11, 0x23c8
    90da:	ef 3f       	jmp	$-32     	;abs 0x90ba
    90dc:	fc d2 88 23 	bis.b	#8,	9096(r12);r2 As==11, 0x2388
    90e0:	ec 3f       	jmp	$-38     	;abs 0x90ba
    90e2:	b0 12 64 8d 	call	#36196		;#0x8d64
    90e6:	4c 43       	clr.b	r12		;
    90e8:	30 41       	ret			

000090ea <usbSetInterface>:
    90ea:	b0 12 78 8d 	call	#36216		;#0x8d78
    90ee:	d2 42 84 23 	mov.b	&0x2384,&0x2424	;0x2384
    90f2:	24 24 
    90f4:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    90f8:	4c 43       	clr.b	r12		;
    90fa:	30 41       	ret			

000090fc <usbInvalidRequest>:
    90fc:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9100:	02 20       	jnz	$+6      	;abs 0x9106
    9102:	b0 12 64 8d 	call	#36196		;#0x8d64
    9106:	4c 43       	clr.b	r12		;
    9108:	30 41       	ret			

0000910a <usbDecodeAndProcessUsbRequest>:
    910a:	3a 15       	pushm	#4,	r10	;16-bit words
    910c:	5b 42 80 23 	mov.b	&0x2380,r11	;0x2380
    9110:	5a 42 81 23 	mov.b	&0x2381,r10	;0x2381
    9114:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    9118:	49 4b       	mov.b	r11,	r9	;
    911a:	79 f0 7f 00 	and.b	#127,	r9	;#0x007f
    911e:	6e 4c       	mov.b	@r12,	r14	;
    9120:	5d 4c 01 00 	mov.b	1(r12),	r13	;
    9124:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    9126:	02 20       	jnz	$+6      	;abs 0x912c
    9128:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    912a:	24 24       	jz	$+74     	;abs 0x9174
    912c:	79 90 40 00 	cmp.b	#64,	r9	;#0x0040
    9130:	21 24       	jz	$+68     	;abs 0x9174
    9132:	0e 9b       	cmp	r11,	r14	;
    9134:	1c 20       	jnz	$+58     	;abs 0x916e
    9136:	0d 9a       	cmp	r10,	r13	;
    9138:	1a 20       	jnz	$+54     	;abs 0x916e
    913a:	08 4c       	mov	r12,	r8	;
    913c:	28 53       	incd	r8		;
    913e:	0e 43       	clr	r14		;
    9140:	3d 40 c0 00 	mov	#192,	r13	;#0x00c0
    9144:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9148:	07 48       	mov	r8,	r7	;
    914a:	07 5e       	add	r14,	r7	;
    914c:	ee 97 82 23 	cmp.b	@r7,	9090(r14); 0x2382
    9150:	03 20       	jnz	$+8      	;abs 0x9158
    9152:	4d df       	bis.b	r15,	r13	;
    9154:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9158:	12 c3       	clrc			
    915a:	0f 10       	rrc	r15		;
    915c:	1e 53       	inc	r14		;
    915e:	3e 90 06 00 	cmp	#6,	r14	;
    9162:	f2 23       	jnz	$-26     	;abs 0x9148
    9164:	5d fc 08 00 	and.b	8(r12),	r13	;
    9168:	5d 9c 08 00 	cmp.b	8(r12),	r13	;
    916c:	03 24       	jz	$+8      	;abs 0x9174
    916e:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    9172:	d5 3f       	jmp	$-84     	;abs 0x911e
    9174:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9178:	06 20       	jnz	$+14     	;abs 0x9186
    917a:	1c 4c 0a 00 	mov	10(r12),r12	;0x0000a
    917e:	8c 12       	call	r12		;
    9180:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9184:	01 3c       	jmp	$+4      	;abs 0x9188
    9186:	0c 43       	clr	r12		;
    9188:	37 17       	popm	#4,	r10	;16-bit words
    918a:	30 41       	ret			

0000918c <usbDisableInEndpointInterrupt>:
    918c:	0a 15       	pushm	#1,	r10	;16-bit words
    918e:	4d 4c       	mov.b	r12,	r13	;
    9190:	5a 42 2e 09 	mov.b	&0x092e,r10	;0x092e
    9194:	1c 43       	mov	#1,	r12	;r3 As==01
    9196:	0d 5c       	add	r12,	r13	;
    9198:	b0 12 2c b1 	call	#45356		;#0xb12c
    919c:	c2 cc 2e 09 	bic.b	r12,	&0x092e	;
    91a0:	0c fa       	and	r10,	r12	;
    91a2:	0a 17       	popm	#1,	r10	;16-bit words
    91a4:	30 41       	ret			

000091a6 <usbRestoreInEndpointInterrupt>:
    91a6:	c2 dc 2e 09 	bis.b	r12,	&0x092e	;
    91aa:	30 41       	ret			

000091ac <usbDisableOutEndpointInterrupt>:
    91ac:	0a 15       	pushm	#1,	r10	;16-bit words
    91ae:	4d 4c       	mov.b	r12,	r13	;
    91b0:	5a 42 2f 09 	mov.b	&0x092f,r10	;0x092f
    91b4:	1c 43       	mov	#1,	r12	;r3 As==01
    91b6:	0d 5c       	add	r12,	r13	;
    91b8:	b0 12 2c b1 	call	#45356		;#0xb12c
    91bc:	c2 cc 2f 09 	bic.b	r12,	&0x092f	;
    91c0:	0c fa       	and	r10,	r12	;
    91c2:	0a 17       	popm	#1,	r10	;16-bit words
    91c4:	30 41       	ret			

000091c6 <usbRestoreOutEndpointInterrupt>:
    91c6:	c2 dc 2f 09 	bis.b	r12,	&0x092f	;
    91ca:	30 41       	ret			

000091cc <USB_determineFreq>:
    91cc:	2a 15       	pushm	#3,	r10	;16-bit words
    91ce:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    91d2:	7c f0 07 00 	and.b	#7,	r12	;
    91d6:	6d 42       	mov.b	#4,	r13	;r2 As==10
    91d8:	4d 9c       	cmp.b	r12,	r13	;
    91da:	52 28       	jnc	$+166    	;abs 0x9280
    91dc:	5d 42 66 01 	mov.b	&0x0166,r13	;0x0166
    91e0:	7d f0 70 00 	and.b	#112,	r13	;#0x0070
    91e4:	7e 40 4f 00 	mov.b	#79,	r14	;#0x004f
    91e8:	4e 9d       	cmp.b	r13,	r14	;
    91ea:	03 2c       	jc	$+8      	;abs 0x91f2
    91ec:	38 40 c0 5d 	mov	#24000,	r8	;#0x5dc0
    91f0:	02 3c       	jmp	$+6      	;abs 0x91f6
    91f2:	38 40 21 00 	mov	#33,	r8	;#0x0021
    91f6:	1a 42 64 01 	mov	&0x0164,r10	;0x0164
    91fa:	3a f0 ff 03 	and	#1023,	r10	;#0x03ff
    91fe:	1a 53       	inc	r10		;
    9200:	7c 90 03 00 	cmp.b	#3,	r12	;
    9204:	0b 20       	jnz	$+24     	;abs 0x921c
    9206:	1d 42 64 01 	mov	&0x0164,r13	;0x0164
    920a:	3d f0 00 70 	and	#28672,	r13	;#0x7000
    920e:	0c 4a       	mov	r10,	r12	;
    9210:	5d 03       	rrum	#1,	r13	;
    9212:	4a 18 0d 11 	rpt #11 { rrax.w	r13		;
    9216:	b0 12 2c b1 	call	#45356		;#0xb12c
    921a:	0a 4c       	mov	r12,	r10	;
    921c:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    9220:	7c f0 07 00 	and.b	#7,	r12	;
    9224:	4d 4c       	mov.b	r12,	r13	;
    9226:	0d 93       	cmp	#0,	r13	;r3 As==00
    9228:	03 20       	jnz	$+8      	;abs 0x9230
    922a:	0c 4a       	mov	r10,	r12	;
    922c:	0d 48       	mov	r8,	r13	;
    922e:	1d 3c       	jmp	$+60     	;abs 0x926a
    9230:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    9232:	05 20       	jnz	$+12     	;abs 0x923e
    9234:	0c 4a       	mov	r10,	r12	;
    9236:	0d 48       	mov	r8,	r13	;
    9238:	12 c3       	clrc			
    923a:	0d 10       	rrc	r13		;
    923c:	16 3c       	jmp	$+46     	;abs 0x926a
    923e:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    9240:	04 20       	jnz	$+10     	;abs 0x924a
    9242:	0c 4a       	mov	r10,	r12	;
    9244:	0d 48       	mov	r8,	r13	;
    9246:	5d 07       	rrum	#2,	r13	;
    9248:	10 3c       	jmp	$+34     	;abs 0x926a
    924a:	7c 90 03 00 	cmp.b	#3,	r12	;
    924e:	04 20       	jnz	$+10     	;abs 0x9258
    9250:	0c 4a       	mov	r10,	r12	;
    9252:	0d 48       	mov	r8,	r13	;
    9254:	5d 0b       	rrum	#3,	r13	;
    9256:	09 3c       	jmp	$+20     	;abs 0x926a
    9258:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    925a:	0b 20       	jnz	$+24     	;abs 0x9272
    925c:	0c 48       	mov	r8,	r12	;
    925e:	3d 40 0c 00 	mov	#12,	r13	;#0x000c
    9262:	b0 12 00 b0 	call	#45056		;#0xb000
    9266:	0d 4c       	mov	r12,	r13	;
    9268:	0c 4a       	mov	r10,	r12	;
    926a:	b0 12 30 b2 	call	#45616		;#0xb230
    926e:	09 4c       	mov	r12,	r9	;
    9270:	09 3c       	jmp	$+20     	;abs 0x9284
    9272:	7c 90 05 00 	cmp.b	#5,	r12	;
    9276:	06 20       	jnz	$+14     	;abs 0x9284
    9278:	0c 4a       	mov	r10,	r12	;
    927a:	0d 48       	mov	r8,	r13	;
    927c:	5d 0f       	rrum	#4,	r13	;
    927e:	f5 3f       	jmp	$-20     	;abs 0x926a
    9280:	39 40 c0 5d 	mov	#24000,	r9	;#0x5dc0
    9284:	5d 42 6a 01 	mov.b	&0x016a,r13	;0x016a
    9288:	7d f0 07 00 	and.b	#7,	r13	;
    928c:	0c 49       	mov	r9,	r12	;
    928e:	3d f0 07 00 	and	#7,	r13	;
    9292:	b0 12 c0 b1 	call	#45504		;#0xb1c0
    9296:	28 17       	popm	#3,	r10	;16-bit words
    9298:	30 41       	ret			

0000929a <USB_init>:
    929a:	0a 15       	pushm	#1,	r10	;16-bit words
    929c:	21 82       	sub	#4,	r1	;r2 As==10
    929e:	0a 42       	mov	r2,	r10	;
    92a0:	3a f2       	and	#8,	r10	;r2 As==11
    92a2:	b0 12 cc 91 	call	#37324		;#0x91cc
    92a6:	0e 4c       	mov	r12,	r14	;
    92a8:	5e 0f       	rrum	#4,	r14	;
    92aa:	5e 0b       	rrum	#3,	r14	;
    92ac:	0d 4c       	mov	r12,	r13	;
    92ae:	5d 0f       	rrum	#4,	r13	;
    92b0:	5d 07       	rrum	#2,	r13	;
    92b2:	0d 5e       	add	r14,	r13	;
    92b4:	5c 03       	rrum	#1,	r12	;
    92b6:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    92ba:	0c 5d       	add	r13,	r12	;
    92bc:	32 c2       	dint			
    92be:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    92c2:	00 09 
    92c4:	b2 40 80 00 	mov	#128,	&0x0904	;#0x0080
    92c8:	04 09 
    92ca:	b2 40 40 08 	mov	#2112,	&0x0908	;#0x0840
    92ce:	08 09 
    92d0:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    92d4:	1d 41 02 00 	mov	2(r1),	r13	;
    92d8:	3e 40 13 00 	mov	#19,	r14	;#0x0013
    92dc:	0e 9d       	cmp	r13,	r14	;
    92de:	0c 28       	jnc	$+26     	;abs 0x92f8
    92e0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    92e4:	2d 41       	mov	@r1,	r13	;
    92e6:	0d 9c       	cmp	r12,	r13	;
    92e8:	04 2c       	jc	$+10     	;abs 0x92f2
    92ea:	03 43       	nop			
    92ec:	91 53 00 00 	inc	0(r1)		;
    92f0:	f9 3f       	jmp	$-12     	;abs 0x92e4
    92f2:	91 53 02 00 	inc	2(r1)		;
    92f6:	ee 3f       	jmp	$-34     	;abs 0x92d4
    92f8:	b2 d0 00 02 	bis	#512,	&0x0908	;#0x0200
    92fc:	08 09 
    92fe:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9302:	00 09 
    9304:	82 43 82 24 	mov	#0,	&0x2482	;r3 As==00
    9308:	b0 12 f8 89 	call	#35320		;#0x89f8
    930c:	b0 12 d2 94 	call	#38098		;#0x94d2
    9310:	02 da       	bis	r10,	r2	;
    9312:	4c 43       	clr.b	r12		;
    9314:	21 52       	add	#4,	r1	;r2 As==10
    9316:	0a 17       	popm	#1,	r10	;16-bit words
    9318:	30 41       	ret			

0000931a <USB_enable>:
    931a:	1a 15       	pushm	#2,	r10	;16-bit words
    931c:	31 80 06 00 	sub	#6,	r1	;
    9320:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    9324:	b0 12 cc 91 	call	#37324		;#0x91cc
    9328:	0a 4c       	mov	r12,	r10	;
    932a:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    932e:	55 24       	jz	$+172    	;abs 0x93da
    9330:	92 b3 02 09 	bit	#1,	&0x0902	;r3 As==01
    9334:	04 24       	jz	$+10     	;abs 0x933e
    9336:	b2 b0 00 01 	bit	#256,	&0x0910	;#0x0100
    933a:	10 09 
    933c:	5a 20       	jnz	$+182    	;abs 0x93f2
    933e:	39 40 d8 a0 	mov	#41176,	r9	;#0xa0d8
    9342:	7c 40 05 00 	mov.b	#5,	r12	;
    9346:	2d 42       	mov	#4,	r13	;r2 As==10
    9348:	89 12       	call	r9		;
    934a:	7c 40 05 00 	mov.b	#5,	r12	;
    934e:	3d 42       	mov	#8,	r13	;r2 As==11
    9350:	89 12       	call	r9		;
    9352:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9356:	00 09 
    9358:	3c 40 00 c0 	mov	#49152,	r12	;#0xc000
    935c:	3d 40 50 c3 	mov	#50000,	r13	;#0xc350
    9360:	b0 12 ac a8 	call	#43180		;#0xa8ac
    9364:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9366:	39 24       	jz	$+116    	;abs 0x93da
    9368:	b2 40 0f 05 	mov	#1295,	&0x0912	;#0x050f
    936c:	12 09 
    936e:	b2 40 00 03 	mov	#768,	&0x0910	;#0x0300
    9372:	10 09 
    9374:	5d 42 1d 24 	mov.b	&0x241d,r13	;0x241d
    9378:	0e 4a       	mov	r10,	r14	;
    937a:	5e 0f       	rrum	#4,	r14	;
    937c:	5e 0b       	rrum	#3,	r14	;
    937e:	0c 4a       	mov	r10,	r12	;
    9380:	5c 03       	rrum	#1,	r12	;
    9382:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9386:	0c 5e       	add	r14,	r12	;
    9388:	5a 0f       	rrum	#4,	r10	;
    938a:	5a 07       	rrum	#2,	r10	;
    938c:	0a 5c       	add	r12,	r10	;
    938e:	82 43 14 09 	mov	#0,	&0x0914	;r3 As==00
    9392:	5c 43       	mov.b	#1,	r12	;r3 As==01
    9394:	4c 9d       	cmp.b	r13,	r12	;
    9396:	0e 2c       	jc	$+30     	;abs 0x93b4
    9398:	1c 41 04 00 	mov	4(r1),	r12	;
    939c:	0e 4c       	mov	r12,	r14	;
    939e:	1e 53       	inc	r14		;
    93a0:	81 4e 04 00 	mov	r14,	4(r1)	;
    93a4:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    93a8:	0e 9c       	cmp	r12,	r14	;
    93aa:	19 2c       	jc	$+52     	;abs 0x93de
    93ac:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    93b0:	00 09 
    93b2:	13 3c       	jmp	$+40     	;abs 0x93da
    93b4:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    93b8:	1c 41 02 00 	mov	2(r1),	r12	;
    93bc:	1e 43       	mov	#1,	r14	;r3 As==01
    93be:	0e 9c       	cmp	r12,	r14	;
    93c0:	eb 2b       	jnc	$-40     	;abs 0x9398
    93c2:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    93c6:	2c 41       	mov	@r1,	r12	;
    93c8:	0c 9a       	cmp	r10,	r12	;
    93ca:	04 2c       	jc	$+10     	;abs 0x93d4
    93cc:	03 43       	nop			
    93ce:	91 53 00 00 	inc	0(r1)		;
    93d2:	f9 3f       	jmp	$-12     	;abs 0x93c6
    93d4:	91 53 02 00 	inc	2(r1)		;
    93d8:	ef 3f       	jmp	$-32     	;abs 0x93b8
    93da:	1c 43       	mov	#1,	r12	;r3 As==01
    93dc:	0b 3c       	jmp	$+24     	;abs 0x93f4
    93de:	1c 42 14 09 	mov	&0x0914,r12	;0x0914
    93e2:	0c 93       	cmp	#0,	r12	;r3 As==00
    93e4:	d4 23       	jnz	$-86     	;abs 0x938e
    93e6:	92 d3 02 09 	bis	#1,	&0x0902	;r3 As==01
    93ea:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    93ee:	00 09 
    93f0:	01 3c       	jmp	$+4      	;abs 0x93f4
    93f2:	0c 43       	clr	r12		;
    93f4:	31 50 06 00 	add	#6,	r1	;
    93f8:	19 17       	popm	#2,	r10	;16-bit words
    93fa:	30 41       	ret			

000093fc <USB_setup>:
    93fc:	2a 15       	pushm	#3,	r10	;16-bit words
    93fe:	49 4c       	mov.b	r12,	r9	;
    9400:	48 4d       	mov.b	r13,	r8	;
    9402:	b0 12 9a 92 	call	#37530		;#0x929a
    9406:	4a 4c       	mov.b	r12,	r10	;
    9408:	08 93       	cmp	#0,	r8	;r3 As==00
    940a:	03 24       	jz	$+8      	;abs 0x9412
    940c:	b2 40 ff 01 	mov	#511,	&0x2482	;#0x01ff
    9410:	82 24 
    9412:	09 93       	cmp	#0,	r9	;r3 As==00
    9414:	0c 24       	jz	$+26     	;abs 0x942e
    9416:	b0 12 66 8c 	call	#35942		;#0x8c66
    941a:	1c b3       	bit	#1,	r12	;r3 As==01
    941c:	08 24       	jz	$+18     	;abs 0x942e
    941e:	b0 12 1a 93 	call	#37658		;#0x931a
    9422:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9424:	04 20       	jnz	$+10     	;abs 0x942e
    9426:	b0 12 d2 8a 	call	#35538		;#0x8ad2
    942a:	b0 12 0a 8c 	call	#35850		;#0x8c0a
    942e:	4c 4a       	mov.b	r10,	r12	;
    9430:	28 17       	popm	#3,	r10	;16-bit words
    9432:	30 41       	ret			

00009434 <USB_resume>:
    9434:	b0 12 1a 93 	call	#37658		;#0x931a
    9438:	f2 f0 9f ff 	and.b	#65439,	&0x093e	;#0xff9f
    943c:	3e 09 
    943e:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    9442:	3d 09 
    9444:	c2 43 1d 24 	mov.b	#0,	&0x241d	;r3 As==00
    9448:	4c 43       	clr.b	r12		;
    944a:	30 41       	ret			

0000944c <memcpyV>:
    944c:	21 83       	decd	r1		;
    944e:	0f 43       	clr	r15		;
    9450:	0f 9e       	cmp	r14,	r15	;
    9452:	0b 24       	jz	$+24     	;abs 0x946a
    9454:	0b 4d       	mov	r13,	r11	;
    9456:	0b 5f       	add	r15,	r11	;
    9458:	e1 4b 01 00 	mov.b	@r11,	1(r1)	;
    945c:	0b 4c       	mov	r12,	r11	;
    945e:	0b 5f       	add	r15,	r11	;
    9460:	db 41 01 00 	mov.b	1(r1),	0(r11)	;
    9464:	00 00 
    9466:	1f 53       	inc	r15		;
    9468:	f3 3f       	jmp	$-24     	;abs 0x9450
    946a:	21 53       	incd	r1		;
    946c:	30 41       	ret			

0000946e <memcpyDMA>:
    946e:	2a 15       	pushm	#3,	r10	;16-bit words
    9470:	0a 4c       	mov	r12,	r10	;
    9472:	08 4d       	mov	r13,	r8	;
    9474:	09 4e       	mov	r14,	r9	;
    9476:	0e 93       	cmp	#0,	r14	;r3 As==00
    9478:	29 24       	jz	$+84     	;abs 0x94cc
    947a:	b0 12 ba a3 	call	#41914		;#0xa3ba
    947e:	4c 43       	clr.b	r12		;
    9480:	0d 48       	mov	r8,	r13	;
    9482:	0e 48       	mov	r8,	r14	;
    9484:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9488:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    948c:	b0 12 fc a2 	call	#41724		;#0xa2fc
    9490:	4c 43       	clr.b	r12		;
    9492:	0d 4a       	mov	r10,	r13	;
    9494:	0e 4a       	mov	r10,	r14	;
    9496:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    949a:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    949e:	b0 12 28 a3 	call	#41768		;#0xa328
    94a2:	b0 12 c0 a3 	call	#41920		;#0xa3c0
    94a6:	4c 43       	clr.b	r12		;
    94a8:	0d 49       	mov	r9,	r13	;
    94aa:	b0 12 e8 a2 	call	#41704		;#0xa2e8
    94ae:	4c 43       	clr.b	r12		;
    94b0:	b0 12 58 a3 	call	#41816		;#0xa358
    94b4:	4c 43       	clr.b	r12		;
    94b6:	b0 12 70 a3 	call	#41840		;#0xa370
    94ba:	39 40 8e a3 	mov	#41870,	r9	;#0xa38e
    94be:	4c 43       	clr.b	r12		;
    94c0:	89 12       	call	r9		;
    94c2:	0c 93       	cmp	#0,	r12	;r3 As==00
    94c4:	fc 27       	jz	$-6      	;abs 0x94be
    94c6:	4c 43       	clr.b	r12		;
    94c8:	b0 12 64 a3 	call	#41828		;#0xa364
    94cc:	0c 4a       	mov	r10,	r12	;
    94ce:	28 17       	popm	#3,	r10	;16-bit words
    94d0:	30 41       	ret			

000094d2 <USB_initMemcpy>:
    94d2:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    94d6:	0c 41       	mov	r1,	r12	;
    94d8:	0d 43       	clr	r13		;
    94da:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    94de:	b0 12 64 b2 	call	#45668		;#0xb264
    94e2:	b1 40 00 10 	mov	#4096,	2(r1)	;#0x1000
    94e6:	02 00 
    94e8:	f1 40 c0 ff 	mov.b	#65472,	7(r1)	;#0xffc0
    94ec:	07 00 
    94ee:	f1 40 20 00 	mov.b	#32,	8(r1)	;#0x0020
    94f2:	08 00 
    94f4:	b2 40 4c 94 	mov	#37964,	&0x248c	;#0x944c
    94f8:	8c 24 
    94fa:	b2 40 4c 94 	mov	#37964,	&0x248a	;#0x944c
    94fe:	8a 24 
    9500:	0c 41       	mov	r1,	r12	;
    9502:	b0 12 96 a2 	call	#41622		;#0xa296
    9506:	b2 40 6e 94 	mov	#37998,	&0x248c	;#0x946e
    950a:	8c 24 
    950c:	b2 40 6e 94 	mov	#37998,	&0x248a	;#0x946e
    9510:	8a 24 
    9512:	31 50 0a 00 	add	#10,	r1	;#0x000a
    9516:	30 41       	ret			

00009518 <CdcResetData>:
    9518:	0a 15       	pushm	#1,	r10	;16-bit words
    951a:	3a 40 64 b2 	mov	#45668,	r10	;#0xb264
    951e:	3c 40 36 24 	mov	#9270,	r12	;#0x2436
    9522:	0d 43       	clr	r13		;
    9524:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9528:	8a 12       	call	r10		;
    952a:	3c 40 26 24 	mov	#9254,	r12	;#0x2426
    952e:	0d 43       	clr	r13		;
    9530:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9534:	8a 12       	call	r10		;
    9536:	3c 40 40 24 	mov	#9280,	r12	;#0x2440
    953a:	0d 43       	clr	r13		;
    953c:	3e 42       	mov	#8,	r14	;r2 As==11
    953e:	8a 12       	call	r10		;
    9540:	f2 42 44 24 	mov.b	#8,	&0x2444	;r2 As==11
    9544:	0a 17       	popm	#1,	r10	;16-bit words
    9546:	30 41       	ret			

00009548 <USBCDC_sendData>:
    9548:	6a 15       	pushm	#7,	r10	;16-bit words
    954a:	4a 4e       	mov.b	r14,	r10	;
    954c:	0e 4a       	mov	r10,	r14	;
    954e:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    9552:	3e 50 e4 80 	add	#32996,	r14	;#0x80e4
    9556:	54 4e 02 00 	mov.b	2(r14),	r4	;
    955a:	0d 93       	cmp	#0,	r13	;r3 As==00
    955c:	36 24       	jz	$+110    	;abs 0x95ca
    955e:	08 4d       	mov	r13,	r8	;
    9560:	07 4c       	mov	r12,	r7	;
    9562:	4c 44       	mov.b	r4,	r12	;
    9564:	b0 12 8c 91 	call	#37260		;#0x918c
    9568:	05 4c       	mov	r12,	r5	;
    956a:	36 40 a6 91 	mov	#37286,	r6	;#0x91a6
    956e:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9572:	04 20       	jnz	$+10     	;abs 0x957c
    9574:	59 42 1c 24 	mov.b	&0x241c,r9	;0x241c
    9578:	19 93       	cmp	#1,	r9	;r3 As==01
    957a:	04 24       	jz	$+10     	;abs 0x9584
    957c:	0c 45       	mov	r5,	r12	;
    957e:	86 12       	call	r6		;
    9580:	39 42       	mov	#8,	r9	;r2 As==11
    9582:	25 3c       	jmp	$+76     	;abs 0x95ce
    9584:	0e 4a       	mov	r10,	r14	;
    9586:	0e 5a       	add	r10,	r14	;
    9588:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    958c:	0a 5e       	add	r14,	r10	;
    958e:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    9592:	0d 4a       	mov	r10,	r13	;
    9594:	2d 53       	incd	r13		;
    9596:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    959a:	04 24       	jz	$+10     	;abs 0x95a4
    959c:	86 12       	call	r6		;
    959e:	39 40 03 00 	mov	#3,	r9	;
    95a2:	15 3c       	jmp	$+44     	;abs 0x95ce
    95a4:	8a 48 00 00 	mov	r8,	0(r10)	;
    95a8:	8d 48 00 00 	mov	r8,	0(r13)	;
    95ac:	8a 47 04 00 	mov	r7,	4(r10)	;
    95b0:	5a 42 30 09 	mov.b	&0x0930,r10	;0x0930
    95b4:	1c 43       	mov	#1,	r12	;r3 As==01
    95b6:	0d 44       	mov	r4,	r13	;
    95b8:	0d 5c       	add	r12,	r13	;
    95ba:	b0 12 2c b1 	call	#45356		;#0xb12c
    95be:	4c da       	bis.b	r10,	r12	;
    95c0:	c2 4c 30 09 	mov.b	r12,	&0x0930	;
    95c4:	0c 45       	mov	r5,	r12	;
    95c6:	86 12       	call	r6		;
    95c8:	02 3c       	jmp	$+6      	;abs 0x95ce
    95ca:	39 40 07 00 	mov	#7,	r9	;
    95ce:	4c 49       	mov.b	r9,	r12	;
    95d0:	64 17       	popm	#7,	r10	;16-bit words
    95d2:	30 41       	ret			

000095d4 <CdcToHostFromBuffer>:
    95d4:	6a 15       	pushm	#7,	r10	;16-bit words
    95d6:	21 83       	decd	r1		;
    95d8:	4a 4c       	mov.b	r12,	r10	;
    95da:	0c 4a       	mov	r10,	r12	;
    95dc:	43 18 0c 5c 	rpt #4 { rlax.w	r12		;
    95e0:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    95e4:	5f 4c 02 00 	mov.b	2(r12),	r15	;
    95e8:	06 4a       	mov	r10,	r6	;
    95ea:	06 5a       	add	r10,	r6	;
    95ec:	0e 4a       	mov	r10,	r14	;
    95ee:	42 18 0e 5e 	rpt #3 { rlax.w	r14		;
    95f2:	08 46       	mov	r6,	r8	;
    95f4:	08 5e       	add	r14,	r8	;
    95f6:	38 50 36 24 	add	#9270,	r8	;#0x2436
    95fa:	1d 48 02 00 	mov	2(r8),	r13	;
    95fe:	09 48       	mov	r8,	r9	;
    9600:	39 50 06 00 	add	#6,	r9	;
    9604:	0d 93       	cmp	#0,	r13	;r3 As==00
    9606:	32 20       	jnz	$+102    	;abs 0x966c
    9608:	c9 93 01 00 	cmp.b	#0,	1(r9)	;r3 As==00
    960c:	aa 20       	jnz	$+342    	;abs 0x9762
    960e:	d9 43 01 00 	mov.b	#1,	1(r9)	;r3 As==01
    9612:	f8 90 40 00 	cmp.b	#64,	8(r8)	;#0x0040
    9616:	08 00 
    9618:	19 20       	jnz	$+52     	;abs 0x964c
    961a:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    961e:	0c 4f       	mov	r15,	r12	;
    9620:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    9624:	0a 20       	jnz	$+22     	;abs 0x963a
    9626:	3c 50 ca 23 	add	#9162,	r12	;#0x23ca
    962a:	cf 93 ca 23 	cmp.b	#0,	9162(r15);r3 As==00, 0x23ca
    962e:	0e 34       	jge	$+30     	;abs 0x964c
    9630:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    9634:	d9 43 00 00 	mov.b	#1,	0(r9)	;r3 As==01
    9638:	09 3c       	jmp	$+20     	;abs 0x964c
    963a:	3c 50 ce 23 	add	#9166,	r12	;#0x23ce
    963e:	cf 93 ce 23 	cmp.b	#0,	9166(r15);r3 As==00, 0x23ce
    9642:	04 34       	jge	$+10     	;abs 0x964c
    9644:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    9648:	c9 4d 00 00 	mov.b	r13,	0(r9)	;
    964c:	0e 46       	mov	r6,	r14	;
    964e:	41 18 0e 5e 	rpt #2 { rlax.w	r14		;
    9652:	06 5e       	add	r14,	r6	;
    9654:	86 43 36 24 	mov	#0,	9270(r6);r3 As==00, 0x2436
    9658:	f2 b0 80 00 	bit.b	#128,	&0x2482	;#0x0080
    965c:	82 24 
    965e:	81 24       	jz	$+260    	;abs 0x9762
    9660:	4c 4a       	mov.b	r10,	r12	;
    9662:	b0 12 2e 87 	call	#34606		;#0x872e
    9666:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    966a:	7c 3c       	jmp	$+250    	;abs 0x9764
    966c:	c9 43 01 00 	mov.b	#0,	1(r9)	;r3 As==00
    9670:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    9674:	08 4c       	mov	r12,	r8	;
    9676:	38 50 0c 00 	add	#12,	r8	;#0x000c
    967a:	07 4c       	mov	r12,	r7	;
    967c:	37 50 0e 00 	add	#14,	r7	;#0x000e
    9680:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    9684:	10 20       	jnz	$+34     	;abs 0x96a6
    9686:	2c 48       	mov	@r8,	r12	;
    9688:	09 4f       	mov	r15,	r9	;
    968a:	29 53       	incd	r9		;
    968c:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    9690:	25 47       	mov	@r7,	r5	;
    9692:	07 4f       	mov	r15,	r7	;
    9694:	37 50 06 00 	add	#6,	r7	;
    9698:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    969c:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    96a0:	5f 4f 02 00 	mov.b	2(r15),	r15	;
    96a4:	0f 3c       	jmp	$+32     	;abs 0x96c4
    96a6:	2c 47       	mov	@r7,	r12	;
    96a8:	09 4f       	mov	r15,	r9	;
    96aa:	39 50 06 00 	add	#6,	r9	;
    96ae:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    96b2:	25 48       	mov	@r8,	r5	;
    96b4:	07 4f       	mov	r15,	r7	;
    96b6:	27 53       	incd	r7		;
    96b8:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    96bc:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    96c0:	5f 4f 06 00 	mov.b	6(r15),	r15	;
    96c4:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    96c6:	4d 34       	jge	$+156    	;abs 0x9762
    96c8:	08 4d       	mov	r13,	r8	;
    96ca:	3b 40 40 00 	mov	#64,	r11	;#0x0040
    96ce:	0b 9d       	cmp	r13,	r11	;
    96d0:	01 2c       	jc	$+4      	;abs 0x96d4
    96d2:	08 4b       	mov	r11,	r8	;
    96d4:	44 48       	mov.b	r8,	r4	;
    96d6:	06 5e       	add	r14,	r6	;
    96d8:	36 50 36 24 	add	#9270,	r6	;#0x2436
    96dc:	0f 46       	mov	r6,	r15	;
    96de:	2f 52       	add	#4,	r15	;r2 As==10
    96e0:	2d 4f       	mov	@r15,	r13	;
    96e2:	0e 48       	mov	r8,	r14	;
    96e4:	81 4f 00 00 	mov	r15,	0(r1)	;
    96e8:	1b 42 8c 24 	mov	&0x248c,r11	;0x248c
    96ec:	8b 12       	call	r11		;
    96ee:	c9 44 00 00 	mov.b	r4,	0(r9)	;
    96f2:	5c 46 06 00 	mov.b	6(r6),	r12	;
    96f6:	5c 53       	inc.b	r12		;
    96f8:	5c f3       	and.b	#1,	r12	;r3 As==01
    96fa:	c6 4c 06 00 	mov.b	r12,	6(r6)	;
    96fe:	0c 46       	mov	r6,	r12	;
    9700:	2c 53       	incd	r12		;
    9702:	29 4c       	mov	@r12,	r9	;
    9704:	09 88       	sub	r8,	r9	;
    9706:	8c 49 00 00 	mov	r9,	0(r12)	;
    970a:	2f 41       	mov	@r1,	r15	;
    970c:	2d 4f       	mov	@r15,	r13	;
    970e:	0d 58       	add	r8,	r13	;
    9710:	8f 4d 00 00 	mov	r13,	0(r15)	;
    9714:	c6 44 08 00 	mov.b	r4,	8(r6)	;
    9718:	6c 47       	mov.b	@r7,	r12	;
    971a:	09 93       	cmp	#0,	r9	;r3 As==00
    971c:	22 24       	jz	$+70     	;abs 0x9762
    971e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9720:	20 34       	jge	$+66     	;abs 0x9762
    9722:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    9726:	0f 99       	cmp	r9,	r15	;
    9728:	01 2c       	jc	$+4      	;abs 0x972c
    972a:	09 4f       	mov	r15,	r9	;
    972c:	48 49       	mov.b	r9,	r8	;
    972e:	0c 45       	mov	r5,	r12	;
    9730:	0e 49       	mov	r9,	r14	;
    9732:	1b 42 8c 24 	mov	&0x248c,r11	;0x248c
    9736:	8b 12       	call	r11		;
    9738:	c7 48 00 00 	mov.b	r8,	0(r7)	;
    973c:	0c 4a       	mov	r10,	r12	;
    973e:	0c 5a       	add	r10,	r12	;
    9740:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9744:	0a 5c       	add	r12,	r10	;
    9746:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    974a:	5c 4a 06 00 	mov.b	6(r10),	r12	;
    974e:	5c 53       	inc.b	r12		;
    9750:	5c f3       	and.b	#1,	r12	;r3 As==01
    9752:	ca 4c 06 00 	mov.b	r12,	6(r10)	;
    9756:	8a 89 02 00 	sub	r9,	2(r10)	;
    975a:	8a 59 04 00 	add	r9,	4(r10)	;
    975e:	ca 48 08 00 	mov.b	r8,	8(r10)	;
    9762:	0c 43       	clr	r12		;
    9764:	21 53       	incd	r1		;
    9766:	64 17       	popm	#7,	r10	;16-bit words
    9768:	30 41       	ret			

0000976a <USBCDC_abortSend>:
    976a:	1a 15       	pushm	#2,	r10	;16-bit words
    976c:	09 4c       	mov	r12,	r9	;
    976e:	4a 4d       	mov.b	r13,	r10	;
    9770:	0d 4a       	mov	r10,	r13	;
    9772:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9776:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    977a:	5c 4d 02 00 	mov.b	2(r13),	r12	;
    977e:	b0 12 8c 91 	call	#37260		;#0x918c
    9782:	0d 4a       	mov	r10,	r13	;
    9784:	0d 5a       	add	r10,	r13	;
    9786:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    978a:	0a 5d       	add	r13,	r10	;
    978c:	3a 50 36 24 	add	#9270,	r10	;#0x2436
    9790:	0d 4a       	mov	r10,	r13	;
    9792:	2d 53       	incd	r13		;
    9794:	2e 4a       	mov	@r10,	r14	;
    9796:	2e 8d       	sub	@r13,	r14	;
    9798:	89 4e 00 00 	mov	r14,	0(r9)	;
    979c:	8a 43 00 00 	mov	#0,	0(r10)	;r3 As==00
    97a0:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    97a4:	b0 12 a6 91 	call	#37286		;#0x91a6
    97a8:	4c 43       	clr.b	r12		;
    97aa:	19 17       	popm	#2,	r10	;16-bit words
    97ac:	30 41       	ret			

000097ae <CopyUsbToBuff>:
    97ae:	4a 15       	pushm	#5,	r10	;16-bit words
    97b0:	08 4c       	mov	r12,	r8	;
    97b2:	07 4d       	mov	r13,	r7	;
    97b4:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    97b8:	0a 4e       	mov	r14,	r10	;
    97ba:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    97be:	0d 4a       	mov	r10,	r13	;
    97c0:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    97c4:	1c 4d 06 00 	mov	6(r13),	r12	;
    97c8:	59 4d 0e 00 	mov.b	14(r13),r9	;0x0000e
    97cc:	0c 99       	cmp	r9,	r12	;
    97ce:	01 2c       	jc	$+4      	;abs 0x97d2
    97d0:	09 4c       	mov	r12,	r9	;
    97d2:	46 49       	mov.b	r9,	r6	;
    97d4:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    97d8:	2c 4a       	mov	@r10,	r12	;
    97da:	0d 48       	mov	r8,	r13	;
    97dc:	0e 49       	mov	r9,	r14	;
    97de:	1f 42 8a 24 	mov	&0x248a,r15	;0x248a
    97e2:	8f 12       	call	r15		;
    97e4:	8a 89 06 00 	sub	r9,	6(r10)	;
    97e8:	8a 59 00 00 	add	r9,	0(r10)	;
    97ec:	0e 4a       	mov	r10,	r14	;
    97ee:	3e 50 0e 00 	add	#14,	r14	;#0x000e
    97f2:	6c 4e       	mov.b	@r14,	r12	;
    97f4:	06 9c       	cmp	r12,	r6	;
    97f6:	0b 20       	jnz	$+24     	;abs 0x980e
    97f8:	5c 4e 01 00 	mov.b	1(r14),	r12	;
    97fc:	5c 53       	inc.b	r12		;
    97fe:	5c f3       	and.b	#1,	r12	;r3 As==01
    9800:	ce 4c 01 00 	mov.b	r12,	1(r14)	;
    9804:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9808:	c7 43 00 00 	mov.b	#0,	0(r7)	;r3 As==00
    980c:	06 3c       	jmp	$+14     	;abs 0x981a
    980e:	4c 86       	sub.b	r6,	r12	;
    9810:	ce 4c 00 00 	mov.b	r12,	0(r14)	;
    9814:	08 59       	add	r9,	r8	;
    9816:	8a 48 02 00 	mov	r8,	2(r10)	;
    981a:	46 17       	popm	#5,	r10	;16-bit words
    981c:	30 41       	ret			

0000981e <USBCDC_receiveData>:
    981e:	6a 15       	pushm	#7,	r10	;16-bit words
    9820:	31 82       	sub	#8,	r1	;r2 As==11
    9822:	48 4e       	mov.b	r14,	r8	;
    9824:	09 48       	mov	r8,	r9	;
    9826:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    982a:	04 49       	mov	r9,	r4	;
    982c:	34 50 e4 80 	add	#32996,	r4	;#0x80e4
    9830:	5a 44 02 00 	mov.b	2(r4),	r10	;
    9834:	0d 93       	cmp	#0,	r13	;r3 As==00
    9836:	02 25       	jz	$+518    	;abs 0x9a3c
    9838:	0c 93       	cmp	#0,	r12	;r3 As==00
    983a:	00 25       	jz	$+514    	;abs 0x9a3c
    983c:	05 4d       	mov	r13,	r5	;
    983e:	81 4c 06 00 	mov	r12,	6(r1)	;
    9842:	4c 4a       	mov.b	r10,	r12	;
    9844:	b0 12 ac 91 	call	#37292		;#0x91ac
    9848:	06 4c       	mov	r12,	r6	;
    984a:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    984e:	03 20       	jnz	$+8      	;abs 0x9856
    9850:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9854:	05 24       	jz	$+12     	;abs 0x9860
    9856:	0c 46       	mov	r6,	r12	;
    9858:	b0 12 c6 91 	call	#37318		;#0x91c6
    985c:	3c 42       	mov	#8,	r12	;r2 As==11
    985e:	f0 3c       	jmp	$+482    	;abs 0x9a40
    9860:	07 49       	mov	r9,	r7	;
    9862:	37 50 26 24 	add	#9254,	r7	;#0x2426
    9866:	87 93 00 00 	cmp	#0,	0(r7)	;r3 As==00
    986a:	05 24       	jz	$+12     	;abs 0x9876
    986c:	b0 12 c6 91 	call	#37318		;#0x91c6
    9870:	3c 40 03 00 	mov	#3,	r12	;
    9874:	e5 3c       	jmp	$+460    	;abs 0x9a40
    9876:	87 45 04 00 	mov	r5,	4(r7)	;
    987a:	0c 47       	mov	r7,	r12	;
    987c:	3c 50 06 00 	add	#6,	r12	;
    9880:	81 4c 04 00 	mov	r12,	4(r1)	;
    9884:	8c 45 00 00 	mov	r5,	0(r12)	;
    9888:	97 41 06 00 	mov	6(r1),	0(r7)	;
    988c:	00 00 
    988e:	c7 93 0e 00 	cmp.b	#0,	14(r7)	;r3 As==00, 0x000e
    9892:	54 24       	jz	$+170    	;abs 0x993c
    9894:	0b 47       	mov	r7,	r11	;
    9896:	2b 53       	incd	r11		;
    9898:	0f 47       	mov	r7,	r15	;
    989a:	3f 52       	add	#8,	r15	;r2 As==11
    989c:	35 40 ae 97 	mov	#38830,	r5	;#0x97ae
    98a0:	2c 4b       	mov	@r11,	r12	;
    98a2:	2d 4f       	mov	@r15,	r13	;
    98a4:	4e 48       	mov.b	r8,	r14	;
    98a6:	81 4b 02 00 	mov	r11,	2(r1)	;
    98aa:	81 4f 00 00 	mov	r15,	0(r1)	;
    98ae:	85 12       	call	r5		;
    98b0:	1b 41 02 00 	mov	2(r1),	r11	;
    98b4:	2f 41       	mov	@r1,	r15	;
    98b6:	1c 41 04 00 	mov	4(r1),	r12	;
    98ba:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    98be:	03 20       	jnz	$+8      	;abs 0x98c6
    98c0:	87 43 00 00 	mov	#0,	0(r7)	;r3 As==00
    98c4:	31 3c       	jmp	$+100    	;abs 0x9928
    98c6:	0d 4a       	mov	r10,	r13	;
    98c8:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    98cc:	0c 4d       	mov	r13,	r12	;
    98ce:	2c 53       	incd	r12		;
    98d0:	3c 50 88 23 	add	#9096,	r12	;#0x2388
    98d4:	8f 9c 00 00 	cmp	r12,	0(r15)	;
    98d8:	0a 20       	jnz	$+22     	;abs 0x98ee
    98da:	3d 50 06 00 	add	#6,	r13	;
    98de:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    98e2:	8f 4d 00 00 	mov	r13,	0(r15)	;
    98e6:	9b 44 0a 00 	mov	10(r4),	0(r11)	;0x0000a
    98ea:	00 00 
    98ec:	05 3c       	jmp	$+12     	;abs 0x98f8
    98ee:	8f 4c 00 00 	mov	r12,	0(r15)	;
    98f2:	9b 44 08 00 	mov	8(r4),	0(r11)	;
    98f6:	00 00 
    98f8:	0c 49       	mov	r9,	r12	;
    98fa:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    98fe:	1d 4c 08 00 	mov	8(r12),	r13	;
    9902:	6e 4d       	mov.b	@r13,	r14	;
    9904:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9906:	08 34       	jge	$+18     	;abs 0x9918
    9908:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    990c:	cc 4e 0e 00 	mov.b	r14,	14(r12)	; 0x000e
    9910:	1c 4c 02 00 	mov	2(r12),	r12	;
    9914:	4e 48       	mov.b	r8,	r14	;
    9916:	85 12       	call	r5		;
    9918:	0c 49       	mov	r9,	r12	;
    991a:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    991e:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9922:	0c 20       	jnz	$+26     	;abs 0x993c
    9924:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9928:	d2 b3 83 24 	bit.b	#1,	&0x2483	;r3 As==01
    992c:	03 24       	jz	$+8      	;abs 0x9934
    992e:	4c 48       	mov.b	r8,	r12	;
    9930:	b0 12 32 87 	call	#34610		;#0x8732
    9934:	0c 46       	mov	r6,	r12	;
    9936:	b0 12 c6 91 	call	#37318		;#0x91c6
    993a:	79 3c       	jmp	$+244    	;abs 0x9a2e
    993c:	0c 49       	mov	r9,	r12	;
    993e:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    9942:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9946:	0d 4a       	mov	r10,	r13	;
    9948:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    994c:	cc 93 0f 00 	cmp.b	#0,	15(r12)	;r3 As==00, 0x000f
    9950:	15 20       	jnz	$+44     	;abs 0x997c
    9952:	cd 93 02 00 	cmp.b	#0,	2(r13)	;r3 As==00
    9956:	5a 34       	jge	$+182    	;abs 0x9a0c
    9958:	0d 49       	mov	r9,	r13	;
    995a:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    995e:	9c 4d 08 00 	mov	8(r13),	2(r12)	;
    9962:	02 00 
    9964:	0e 4a       	mov	r10,	r14	;
    9966:	2e 53       	incd	r14		;
    9968:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    996c:	8c 4e 08 00 	mov	r14,	8(r12)	;
    9970:	9c 4d 0a 00 	mov	10(r13),12(r12)	;0x0000a, 0x000c
    9974:	0c 00 
    9976:	3a 50 06 00 	add	#6,	r10	;
    997a:	14 3c       	jmp	$+42     	;abs 0x99a4
    997c:	cd 93 06 00 	cmp.b	#0,	6(r13)	;r3 As==00
    9980:	45 34       	jge	$+140    	;abs 0x9a0c
    9982:	0d 49       	mov	r9,	r13	;
    9984:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    9988:	9c 4d 0a 00 	mov	10(r13),2(r12)	;0x0000a
    998c:	02 00 
    998e:	0e 4a       	mov	r10,	r14	;
    9990:	3e 50 06 00 	add	#6,	r14	;
    9994:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    9998:	8c 4e 08 00 	mov	r14,	8(r12)	;
    999c:	9c 4d 08 00 	mov	8(r13),	12(r12)	; 0x000c
    99a0:	0c 00 
    99a2:	2a 53       	incd	r10		;
    99a4:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    99a8:	8c 4a 0a 00 	mov	r10,	10(r12)	; 0x000a
    99ac:	0a 49       	mov	r9,	r10	;
    99ae:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    99b2:	07 4a       	mov	r10,	r7	;
    99b4:	37 52       	add	#8,	r7	;r2 As==11
    99b6:	2d 47       	mov	@r7,	r13	;
    99b8:	6c 4d       	mov.b	@r13,	r12	;
    99ba:	0c 93       	cmp	#0,	r12	;r3 As==00
    99bc:	01 20       	jnz	$+4      	;abs 0x99c0
    99be:	ff 3f       	jmp	$+0      	;abs 0x99be
    99c0:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    99c2:	24 34       	jge	$+74     	;abs 0x9a0c
    99c4:	04 4a       	mov	r10,	r4	;
    99c6:	34 50 0e 00 	add	#14,	r4	;#0x000e
    99ca:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    99ce:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    99d2:	3f 40 ae 97 	mov	#38830,	r15	;#0x97ae
    99d6:	1c 4a 02 00 	mov	2(r10),	r12	;
    99da:	4e 48       	mov.b	r8,	r14	;
    99dc:	81 4f 00 00 	mov	r15,	0(r1)	;
    99e0:	8f 12       	call	r15		;
    99e2:	05 4a       	mov	r10,	r5	;
    99e4:	35 50 0a 00 	add	#10,	r5	;#0x000a
    99e8:	2d 45       	mov	@r5,	r13	;
    99ea:	6c 4d       	mov.b	@r13,	r12	;
    99ec:	2f 41       	mov	@r1,	r15	;
    99ee:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    99f2:	0c 24       	jz	$+26     	;abs 0x9a0c
    99f4:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    99f6:	0a 34       	jge	$+22     	;abs 0x9a0c
    99f8:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    99fc:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9a00:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9a04:	4e 48       	mov.b	r8,	r14	;
    9a06:	8f 12       	call	r15		;
    9a08:	a7 45 00 00 	mov	@r5,	0(r7)	;
    9a0c:	39 50 26 24 	add	#9254,	r9	;#0x2426
    9a10:	3a 40 c6 91 	mov	#37318,	r10	;#0x91c6
    9a14:	89 93 06 00 	cmp	#0,	6(r9)	;r3 As==00
    9a18:	0d 20       	jnz	$+28     	;abs 0x9a34
    9a1a:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9a1e:	d2 b3 83 24 	bit.b	#1,	&0x2483	;r3 As==01
    9a22:	03 24       	jz	$+8      	;abs 0x9a2a
    9a24:	4c 48       	mov.b	r8,	r12	;
    9a26:	b0 12 32 87 	call	#34610		;#0x8732
    9a2a:	0c 46       	mov	r6,	r12	;
    9a2c:	8a 12       	call	r10		;
    9a2e:	3c 40 05 00 	mov	#5,	r12	;
    9a32:	06 3c       	jmp	$+14     	;abs 0x9a40
    9a34:	0c 46       	mov	r6,	r12	;
    9a36:	8a 12       	call	r10		;
    9a38:	2c 42       	mov	#4,	r12	;r2 As==10
    9a3a:	02 3c       	jmp	$+6      	;abs 0x9a40
    9a3c:	3c 40 07 00 	mov	#7,	r12	;
    9a40:	31 52       	add	#8,	r1	;r2 As==11
    9a42:	64 17       	popm	#7,	r10	;16-bit words
    9a44:	30 41       	ret			

00009a46 <CdcToBufferFromHost>:
    9a46:	6a 15       	pushm	#7,	r10	;16-bit words
    9a48:	48 4c       	mov.b	r12,	r8	;
    9a4a:	09 48       	mov	r8,	r9	;
    9a4c:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9a50:	0c 49       	mov	r9,	r12	;
    9a52:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9a56:	5d 4c 02 00 	mov.b	2(r12),	r13	;
    9a5a:	0f 49       	mov	r9,	r15	;
    9a5c:	3f 50 26 24 	add	#9254,	r15	;#0x2426
    9a60:	8f 93 06 00 	cmp	#0,	6(r15)	;r3 As==00
    9a64:	03 20       	jnz	$+8      	;abs 0x9a6c
    9a66:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9a6a:	7f 3c       	jmp	$+256    	;abs 0x9b6a
    9a6c:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9a70:	5e 4d 8e 23 	mov.b	9102(r13),r14	;0x0238e
    9a74:	5e dd 8a 23 	bis.b	9098(r13),r14	;0x0238a
    9a78:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9a7a:	77 34       	jge	$+240    	;abs 0x9b6a
    9a7c:	06 4c       	mov	r12,	r6	;
    9a7e:	36 52       	add	#8,	r6	;r2 As==11
    9a80:	05 4f       	mov	r15,	r5	;
    9a82:	35 52       	add	#8,	r5	;r2 As==11
    9a84:	0a 4d       	mov	r13,	r10	;
    9a86:	2a 53       	incd	r10		;
    9a88:	07 4f       	mov	r15,	r7	;
    9a8a:	37 50 0c 00 	add	#12,	r7	;#0x000c
    9a8e:	0e 4c       	mov	r12,	r14	;
    9a90:	3e 50 0a 00 	add	#10,	r14	;#0x000a
    9a94:	04 4f       	mov	r15,	r4	;
    9a96:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9a9a:	3d 50 06 00 	add	#6,	r13	;
    9a9e:	cf 93 0f 00 	cmp.b	#0,	15(r15)	;r3 As==00, 0x000f
    9aa2:	0c 20       	jnz	$+26     	;abs 0x9abc
    9aa4:	2c 46       	mov	@r6,	r12	;
    9aa6:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9aaa:	85 4a 00 00 	mov	r10,	0(r5)	;
    9aae:	a7 4e 00 00 	mov	@r14,	0(r7)	;
    9ab2:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9ab6:	84 4d 00 00 	mov	r13,	0(r4)	;
    9aba:	0b 3c       	jmp	$+24     	;abs 0x9ad2
    9abc:	2c 4e       	mov	@r14,	r12	;
    9abe:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9ac2:	85 4d 00 00 	mov	r13,	0(r5)	;
    9ac6:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9aca:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9ace:	84 4a 00 00 	mov	r10,	0(r4)	;
    9ad2:	0a 49       	mov	r9,	r10	;
    9ad4:	3a 50 26 24 	add	#9254,	r10	;#0x2426
    9ad8:	07 4a       	mov	r10,	r7	;
    9ada:	37 52       	add	#8,	r7	;r2 As==11
    9adc:	2d 47       	mov	@r7,	r13	;
    9ade:	6e 4d       	mov.b	@r13,	r14	;
    9ae0:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9ae2:	1f 34       	jge	$+64     	;abs 0x9b22
    9ae4:	04 4a       	mov	r10,	r4	;
    9ae6:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9aea:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    9aee:	c4 4e 00 00 	mov.b	r14,	0(r4)	;
    9af2:	35 40 ae 97 	mov	#38830,	r5	;#0x97ae
    9af6:	4e 48       	mov.b	r8,	r14	;
    9af8:	85 12       	call	r5		;
    9afa:	06 4a       	mov	r10,	r6	;
    9afc:	36 50 0a 00 	add	#10,	r6	;#0x000a
    9b00:	2d 46       	mov	@r6,	r13	;
    9b02:	6c 4d       	mov.b	@r13,	r12	;
    9b04:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    9b08:	0c 24       	jz	$+26     	;abs 0x9b22
    9b0a:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9b0c:	0a 34       	jge	$+22     	;abs 0x9b22
    9b0e:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9b12:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9b16:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9b1a:	4e 48       	mov.b	r8,	r14	;
    9b1c:	85 12       	call	r5		;
    9b1e:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9b22:	0c 49       	mov	r9,	r12	;
    9b24:	3c 50 26 24 	add	#9254,	r12	;#0x2426
    9b28:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9b2c:	1b 20       	jnz	$+56     	;abs 0x9b64
    9b2e:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9b32:	1a 42 82 24 	mov	&0x2482,r10	;0x2482
    9b36:	3a f0 00 01 	and	#256,	r10	;#0x0100
    9b3a:	0a 93       	cmp	#0,	r10	;r3 As==00
    9b3c:	04 24       	jz	$+10     	;abs 0x9b46
    9b3e:	4c 48       	mov.b	r8,	r12	;
    9b40:	b0 12 32 87 	call	#34610		;#0x8732
    9b44:	4a 4c       	mov.b	r12,	r10	;
    9b46:	39 50 26 24 	add	#9254,	r9	;#0x2426
    9b4a:	c9 93 0e 00 	cmp.b	#0,	14(r9)	;r3 As==00, 0x000e
    9b4e:	0b 24       	jz	$+24     	;abs 0x9b66
    9b50:	f2 b0 40 00 	bit.b	#64,	&0x2482	;#0x0040
    9b54:	82 24 
    9b56:	07 24       	jz	$+16     	;abs 0x9b66
    9b58:	4c 48       	mov.b	r8,	r12	;
    9b5a:	b0 12 26 87 	call	#34598		;#0x8726
    9b5e:	4c da       	bis.b	r10,	r12	;
    9b60:	4a 4c       	mov.b	r12,	r10	;
    9b62:	01 3c       	jmp	$+4      	;abs 0x9b66
    9b64:	0a 43       	clr	r10		;
    9b66:	0c 4a       	mov	r10,	r12	;
    9b68:	01 3c       	jmp	$+4      	;abs 0x9b6c
    9b6a:	0c 43       	clr	r12		;
    9b6c:	64 17       	popm	#7,	r10	;16-bit words
    9b6e:	30 41       	ret			

00009b70 <CdcIsReceiveInProgress>:
    9b70:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9b74:	0d 4c       	mov	r12,	r13	;
    9b76:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9b7a:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9b7e:	0c 43       	clr	r12		;
    9b80:	2c 8d       	sub	@r13,	r12	;
    9b82:	2c dd       	bis	@r13,	r12	;
    9b84:	5c 03       	rrum	#1,	r12	;
    9b86:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    9b8a:	30 41       	ret			

00009b8c <USBCDC_abortReceive>:
    9b8c:	1a 15       	pushm	#2,	r10	;16-bit words
    9b8e:	09 4c       	mov	r12,	r9	;
    9b90:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9b94:	0a 4d       	mov	r13,	r10	;
    9b96:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9b9a:	0c 4a       	mov	r10,	r12	;
    9b9c:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9ba0:	5c 4c 02 00 	mov.b	2(r12),	r12	;
    9ba4:	b0 12 ac 91 	call	#37292		;#0x91ac
    9ba8:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9bac:	0d 4a       	mov	r10,	r13	;
    9bae:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9bb2:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9bb6:	0e 24       	jz	$+30     	;abs 0x9bd4
    9bb8:	0e 4d       	mov	r13,	r14	;
    9bba:	3e 50 06 00 	add	#6,	r14	;
    9bbe:	1f 4d 04 00 	mov	4(r13),	r15	;
    9bc2:	2f 8e       	sub	@r14,	r15	;
    9bc4:	89 4f 00 00 	mov	r15,	0(r9)	;
    9bc8:	cd 43 0e 00 	mov.b	#0,	14(r13)	;r3 As==00, 0x000e
    9bcc:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9bd0:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9bd4:	b0 12 c6 91 	call	#37318		;#0x91c6
    9bd8:	4c 43       	clr.b	r12		;
    9bda:	19 17       	popm	#2,	r10	;16-bit words
    9bdc:	30 41       	ret			

00009bde <USBCDC_rejectData>:
    9bde:	3a 15       	pushm	#4,	r10	;16-bit words
    9be0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9be4:	09 4c       	mov	r12,	r9	;
    9be6:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9bea:	0c 49       	mov	r9,	r12	;
    9bec:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9bf0:	5a 4c 02 00 	mov.b	2(r12),	r10	;
    9bf4:	4c 4a       	mov.b	r10,	r12	;
    9bf6:	b0 12 ac 91 	call	#37292		;#0x91ac
    9bfa:	0b 4c       	mov	r12,	r11	;
    9bfc:	58 42 1d 24 	mov.b	&0x241d,r8	;0x241d
    9c00:	3e 40 c6 91 	mov	#37318,	r14	;#0x91c6
    9c04:	08 93       	cmp	#0,	r8	;r3 As==00
    9c06:	03 24       	jz	$+8      	;abs 0x9c0e
    9c08:	8e 12       	call	r14		;
    9c0a:	38 42       	mov	#8,	r8	;r2 As==11
    9c0c:	25 3c       	jmp	$+76     	;abs 0x9c58
    9c0e:	0d 49       	mov	r9,	r13	;
    9c10:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9c14:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9c18:	1d 20       	jnz	$+60     	;abs 0x9c54
    9c1a:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9c1e:	0f 4a       	mov	r10,	r15	;
    9c20:	3f 50 88 23 	add	#9096,	r15	;#0x2388
    9c24:	57 4f 02 00 	mov.b	2(r15),	r7	;
    9c28:	77 f0 80 ff 	and.b	#65408,	r7	;#0xff80
    9c2c:	5c 4f 06 00 	mov.b	6(r15),	r12	;
    9c30:	7c f0 80 ff 	and.b	#65408,	r12	;#0xff80
    9c34:	47 9c       	cmp.b	r12,	r7	;
    9c36:	06 24       	jz	$+14     	;abs 0x9c44
    9c38:	5c 4d 0f 00 	mov.b	15(r13),r12	;0x0000f
    9c3c:	5c 53       	inc.b	r12		;
    9c3e:	5c f3       	and.b	#1,	r12	;r3 As==01
    9c40:	cd 4c 0f 00 	mov.b	r12,	15(r13)	; 0x000f
    9c44:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9c48:	ca 43 02 00 	mov.b	#0,	2(r10)	;r3 As==00
    9c4c:	ca 43 06 00 	mov.b	#0,	6(r10)	;r3 As==00
    9c50:	c9 43 34 24 	mov.b	#0,	9268(r9);r3 As==00, 0x2434
    9c54:	0c 4b       	mov	r11,	r12	;
    9c56:	8e 12       	call	r14		;
    9c58:	4c 48       	mov.b	r8,	r12	;
    9c5a:	37 17       	popm	#4,	r10	;16-bit words
    9c5c:	30 41       	ret			

00009c5e <USBCDC_getInterfaceStatus>:
    9c5e:	6a 15       	pushm	#7,	r10	;16-bit words
    9c60:	4a 4c       	mov.b	r12,	r10	;
    9c62:	04 4d       	mov	r13,	r4	;
    9c64:	05 4e       	mov	r14,	r5	;
    9c66:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9c6a:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9c6e:	06 4a       	mov	r10,	r6	;
    9c70:	43 18 06 56 	rpt #4 { rlax.w	r6		;
    9c74:	0c 46       	mov	r6,	r12	;
    9c76:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9c7a:	57 4c 02 00 	mov.b	2(r12),	r7	;
    9c7e:	4c 47       	mov.b	r7,	r12	;
    9c80:	b0 12 8c 91 	call	#37260		;#0x918c
    9c84:	08 4c       	mov	r12,	r8	;
    9c86:	4c 47       	mov.b	r7,	r12	;
    9c88:	b0 12 ac 91 	call	#37292		;#0x91ac
    9c8c:	09 4c       	mov	r12,	r9	;
    9c8e:	0c 4a       	mov	r10,	r12	;
    9c90:	0c 5a       	add	r10,	r12	;
    9c92:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9c96:	0c 5a       	add	r10,	r12	;
    9c98:	3c 50 36 24 	add	#9270,	r12	;#0x2436
    9c9c:	1a 4c 02 00 	mov	2(r12),	r10	;
    9ca0:	0a 93       	cmp	#0,	r10	;r3 As==00
    9ca2:	05 24       	jz	$+12     	;abs 0x9cae
    9ca4:	2c 4c       	mov	@r12,	r12	;
    9ca6:	0c 8a       	sub	r10,	r12	;
    9ca8:	84 4c 00 00 	mov	r12,	0(r4)	;
    9cac:	1a 43       	mov	#1,	r10	;r3 As==01
    9cae:	36 50 26 24 	add	#9254,	r6	;#0x2426
    9cb2:	86 93 00 00 	cmp	#0,	0(r6)	;r3 As==00
    9cb6:	0a 24       	jz	$+22     	;abs 0x9ccc
    9cb8:	6a d3       	bis.b	#2,	r10	;r3 As==10
    9cba:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9cbe:	1c 46 04 00 	mov	4(r6),	r12	;
    9cc2:	1c 86 06 00 	sub	6(r6),	r12	;
    9cc6:	85 4c 00 00 	mov	r12,	0(r5)	;
    9cca:	10 3c       	jmp	$+34     	;abs 0x9cec
    9ccc:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9cd0:	13 20       	jnz	$+40     	;abs 0x9cf8
    9cd2:	42 18 07 57 	rpt #3 { rlax.w	r7		;
    9cd6:	37 50 88 23 	add	#9096,	r7	;#0x2388
    9cda:	5c 47 06 00 	mov.b	6(r7),	r12	;
    9cde:	5c d7 02 00 	bis.b	2(r7),	r12	;
    9ce2:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9ce4:	03 34       	jge	$+8      	;abs 0x9cec
    9ce6:	6a d2       	bis.b	#4,	r10	;r2 As==10
    9ce8:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9cec:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9cf0:	03 20       	jnz	$+8      	;abs 0x9cf8
    9cf2:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9cf6:	01 24       	jz	$+4      	;abs 0x9cfa
    9cf8:	3a 42       	mov	#8,	r10	;r2 As==11
    9cfa:	0c 48       	mov	r8,	r12	;
    9cfc:	b0 12 a6 91 	call	#37286		;#0x91a6
    9d00:	0c 49       	mov	r9,	r12	;
    9d02:	b0 12 c6 91 	call	#37318		;#0x91c6
    9d06:	03 43       	nop			
    9d08:	4c 4a       	mov.b	r10,	r12	;
    9d0a:	64 17       	popm	#7,	r10	;16-bit words
    9d0c:	30 41       	ret			

00009d0e <USBCDC_getBytesInUSBBuffer>:
    9d0e:	1a 15       	pushm	#2,	r10	;16-bit words
    9d10:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9d14:	0a 4c       	mov	r12,	r10	;
    9d16:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9d1a:	0c 4a       	mov	r10,	r12	;
    9d1c:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9d20:	59 4c 02 00 	mov.b	2(r12),	r9	;
    9d24:	4c 49       	mov.b	r9,	r12	;
    9d26:	b0 12 ac 91 	call	#37292		;#0x91ac
    9d2a:	3e 40 c6 91 	mov	#37318,	r14	;#0x91c6
    9d2e:	c2 93 1d 24 	cmp.b	#0,	&0x241d	;r3 As==00
    9d32:	03 20       	jnz	$+8      	;abs 0x9d3a
    9d34:	d2 93 1c 24 	cmp.b	#1,	&0x241c	;r3 As==01
    9d38:	03 24       	jz	$+8      	;abs 0x9d40
    9d3a:	8e 12       	call	r14		;
    9d3c:	0c 43       	clr	r12		;
    9d3e:	24 3c       	jmp	$+74     	;abs 0x9d88
    9d40:	0d 4a       	mov	r10,	r13	;
    9d42:	3d 50 26 24 	add	#9254,	r13	;#0x2426
    9d46:	5a 4d 0e 00 	mov.b	14(r13),r10	;0x0000e
    9d4a:	0a 93       	cmp	#0,	r10	;r3 As==00
    9d4c:	04 24       	jz	$+10     	;abs 0x9d56
    9d4e:	1d 4d 0a 00 	mov	10(r13),r13	;0x0000a
    9d52:	6d 4d       	mov.b	@r13,	r13	;
    9d54:	10 3c       	jmp	$+34     	;abs 0x9d76
    9d56:	42 18 09 59 	rpt #3 { rlax.w	r9		;
    9d5a:	0d 49       	mov	r9,	r13	;
    9d5c:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9d60:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9d64:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9d66:	03 34       	jge	$+8      	;abs 0x9d6e
    9d68:	0a 4d       	mov	r13,	r10	;
    9d6a:	3a f0 7f 00 	and	#127,	r10	;#0x007f
    9d6e:	39 50 88 23 	add	#9096,	r9	;#0x2388
    9d72:	5d 49 06 00 	mov.b	6(r9),	r13	;
    9d76:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9d78:	05 34       	jge	$+12     	;abs 0x9d84
    9d7a:	7d f0 7f 00 	and.b	#127,	r13	;#0x007f
    9d7e:	4a 5d       	add.b	r13,	r10	;
    9d80:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9d84:	8e 12       	call	r14		;
    9d86:	0c 4a       	mov	r10,	r12	;
    9d88:	19 17       	popm	#2,	r10	;16-bit words
    9d8a:	30 41       	ret			

00009d8c <usbGetLineCoding>:
    9d8c:	1a 15       	pushm	#2,	r10	;16-bit words
    9d8e:	1d 42 84 23 	mov	&0x2384,r13	;0x2384
    9d92:	1d b3       	bit	#1,	r13	;r3 As==01
    9d94:	01 24       	jz	$+4      	;abs 0x9d98
    9d96:	3d 53       	add	#-1,	r13	;r3 As==11
    9d98:	12 c3       	clrc			
    9d9a:	0d 10       	rrc	r13		;
    9d9c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9da0:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9da4:	3d 50 40 24 	add	#9280,	r13	;#0x2440
    9da8:	0c 4d       	mov	r13,	r12	;
    9daa:	2c 52       	add	#4,	r12	;r2 As==10
    9dac:	e2 4c 5e 24 	mov.b	@r12,	&0x245e	;
    9db0:	d2 4d 06 00 	mov.b	6(r13),	&0x245d	;
    9db4:	5d 24 
    9db6:	d2 4c 01 00 	mov.b	1(r12),	&0x245c	;
    9dba:	5c 24 
    9dbc:	2a 4d       	mov	@r13,	r10	;
    9dbe:	19 4d 02 00 	mov	2(r13),	r9	;
    9dc2:	0c 4a       	mov	r10,	r12	;
    9dc4:	0d 49       	mov	r9,	r13	;
    9dc6:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9dca:	b0 12 2a b2 	call	#45610		;#0xb22a
    9dce:	c2 4c 5b 24 	mov.b	r12,	&0x245b	;
    9dd2:	0c 4a       	mov	r10,	r12	;
    9dd4:	0d 49       	mov	r9,	r13	;
    9dd6:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9dda:	b0 12 2a b2 	call	#45610		;#0xb22a
    9dde:	c2 4c 5a 24 	mov.b	r12,	&0x245a	;
    9de2:	0c 4a       	mov	r10,	r12	;
    9de4:	0d 49       	mov	r9,	r13	;
    9de6:	b0 12 f0 b1 	call	#45552		;#0xb1f0
    9dea:	c2 4c 59 24 	mov.b	r12,	&0x2459	;
    9dee:	c2 4a 58 24 	mov.b	r10,	&0x2458	;
    9df2:	b2 40 07 00 	mov	#7,	&0x2484	;
    9df6:	84 24 
    9df8:	3c 40 58 24 	mov	#9304,	r12	;#0x2458
    9dfc:	b0 12 ea 8d 	call	#36330		;#0x8dea
    9e00:	4c 43       	clr.b	r12		;
    9e02:	19 17       	popm	#2,	r10	;16-bit words
    9e04:	30 41       	ret			

00009e06 <usbSetLineCoding>:
    9e06:	3c 40 50 24 	mov	#9296,	r12	;#0x2450
    9e0a:	b0 12 5a 8e 	call	#36442		;#0x8e5a
    9e0e:	4c 43       	clr.b	r12		;
    9e10:	30 41       	ret			

00009e12 <usbSetControlLineState>:
    9e12:	3d 40 80 23 	mov	#9088,	r13	;#0x2380
    9e16:	5c 4d 04 00 	mov.b	4(r13),	r12	;
    9e1a:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9e1e:	b0 12 3a 87 	call	#34618		;#0x873a
    9e22:	b0 12 6e 8e 	call	#36462		;#0x8e6e
    9e26:	4c 43       	clr.b	r12		;
    9e28:	30 41       	ret			

00009e2a <Handler_SetLineCoding>:
    9e2a:	3a 15       	pushm	#4,	r10	;16-bit words
    9e2c:	21 83       	decd	r1		;
    9e2e:	19 42 84 23 	mov	&0x2384,r9	;0x2384
    9e32:	0c 49       	mov	r9,	r12	;
    9e34:	19 b3       	bit	#1,	r9	;r3 As==01
    9e36:	01 24       	jz	$+4      	;abs 0x9e3a
    9e38:	3c 53       	add	#-1,	r12	;r3 As==11
    9e3a:	12 c3       	clrc			
    9e3c:	0c 10       	rrc	r12		;
    9e3e:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    9e42:	5a 41 01 00 	mov.b	1(r1),	r10	;
    9e46:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9e4a:	3a 50 40 24 	add	#9280,	r10	;#0x2440
    9e4e:	5c 42 53 24 	mov.b	&0x2453,r12	;0x2453
    9e52:	0d 43       	clr	r13		;
    9e54:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9e58:	b0 12 76 b1 	call	#45430		;#0xb176
    9e5c:	07 4c       	mov	r12,	r7	;
    9e5e:	08 4d       	mov	r13,	r8	;
    9e60:	5c 42 52 24 	mov.b	&0x2452,r12	;0x2452
    9e64:	0d 43       	clr	r13		;
    9e66:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9e6a:	b0 12 76 b1 	call	#45430		;#0xb176
    9e6e:	0c d7       	bis	r7,	r12	;
    9e70:	08 dd       	bis	r13,	r8	;
    9e72:	5d 42 50 24 	mov.b	&0x2450,r13	;0x2450
    9e76:	07 4c       	mov	r12,	r7	;
    9e78:	07 dd       	bis	r13,	r7	;
    9e7a:	5c 42 51 24 	mov.b	&0x2451,r12	;0x2451
    9e7e:	0d 43       	clr	r13		;
    9e80:	b0 12 4e b1 	call	#45390		;#0xb14e
    9e84:	07 dc       	bis	r12,	r7	;
    9e86:	8a 47 00 00 	mov	r7,	0(r10)	;
    9e8a:	08 dd       	bis	r13,	r8	;
    9e8c:	8a 48 02 00 	mov	r8,	2(r10)	;
    9e90:	5d 41 01 00 	mov.b	1(r1),	r13	;
    9e94:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9e98:	4c 49       	mov.b	r9,	r12	;
    9e9a:	1e 4d 42 24 	mov	9282(r13),r14	;0x02442
    9e9e:	1d 4d 40 24 	mov	9280(r13),r13	;0x02440
    9ea2:	b0 12 36 87 	call	#34614		;#0x8736
    9ea6:	21 53       	incd	r1		;
    9ea8:	37 17       	popm	#4,	r10	;16-bit words
    9eaa:	30 41       	ret			

00009eac <TLV_getInfo>:
    9eac:	0a 15       	pushm	#1,	r10	;16-bit words
    9eae:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9eb2:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9eb6:	3b 40 08 1a 	mov	#6664,	r11	;#0x1a08
    9eba:	6a 4b       	mov.b	@r11,	r10	;
    9ebc:	4a 9c       	cmp.b	r12,	r10	;
    9ebe:	1f 20       	jnz	$+64     	;abs 0x9efe
    9ec0:	0d 93       	cmp	#0,	r13	;r3 As==00
    9ec2:	0f 20       	jnz	$+32     	;abs 0x9ee2
    9ec4:	cb 9c 00 00 	cmp.b	r12,	0(r11)	;
    9ec8:	07 20       	jnz	$+16     	;abs 0x9ed8
    9eca:	de 4b 01 00 	mov.b	1(r11),	0(r14)	;
    9ece:	00 00 
    9ed0:	2b 53       	incd	r11		;
    9ed2:	8f 4b 00 00 	mov	r11,	0(r15)	;
    9ed6:	16 3c       	jmp	$+46     	;abs 0x9f04
    9ed8:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9edc:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9ee0:	11 3c       	jmp	$+36     	;abs 0x9f04
    9ee2:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9ee4:	ef 27       	jz	$-32     	;abs 0x9ec4
    9ee6:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9ee8:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9eec:	5a 4b 01 00 	mov.b	1(r11),	r10	;
    9ef0:	2a 53       	incd	r10		;
    9ef2:	0b 5a       	add	r10,	r11	;
    9ef4:	3a 40 fe 1a 	mov	#6910,	r10	;#0x1afe
    9ef8:	0a 9b       	cmp	r11,	r10	;
    9efa:	df 2f       	jc	$-64     	;abs 0x9eba
    9efc:	e3 3f       	jmp	$-56     	;abs 0x9ec4
    9efe:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9f00:	f5 23       	jnz	$-20     	;abs 0x9eec
    9f02:	e0 3f       	jmp	$-62     	;abs 0x9ec4
    9f04:	0a 17       	popm	#1,	r10	;16-bit words
    9f06:	30 41       	ret			

00009f08 <TLV_getDeviceType>:
    9f08:	1c 42 04 1a 	mov	&0x1a04,r12	;0x1a04
    9f0c:	30 41       	ret			

00009f0e <TLV_getMemory>:
    9f0e:	0a 15       	pushm	#1,	r10	;16-bit words
    9f10:	21 82       	sub	#4,	r1	;r2 As==10
    9f12:	0c 5c       	rla	r12		;
    9f14:	4a 4c       	mov.b	r12,	r10	;
    9f16:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9f18:	4d 43       	clr.b	r13		;
    9f1a:	0e 41       	mov	r1,	r14	;
    9f1c:	1e 53       	inc	r14		;
    9f1e:	0f 41       	mov	r1,	r15	;
    9f20:	2f 53       	incd	r15		;
    9f22:	b0 12 ac 9e 	call	#40620		;#0x9eac
    9f26:	1f 41 02 00 	mov	2(r1),	r15	;
    9f2a:	0d 43       	clr	r13		;
    9f2c:	0a 9d       	cmp	r13,	r10	;
    9f2e:	0f 28       	jnc	$+32     	;abs 0x9f4e
    9f30:	0e 4f       	mov	r15,	r14	;
    9f32:	0e 5d       	add	r13,	r14	;
    9f34:	6c 4e       	mov.b	@r14,	r12	;
    9f36:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f38:	0b 24       	jz	$+24     	;abs 0x9f50
    9f3a:	0d 9a       	cmp	r10,	r13	;
    9f3c:	06 20       	jnz	$+14     	;abs 0x9f4a
    9f3e:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    9f42:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    9f46:	0c dd       	bis	r13,	r12	;
    9f48:	03 3c       	jmp	$+8      	;abs 0x9f50
    9f4a:	2d 53       	incd	r13		;
    9f4c:	ef 3f       	jmp	$-32     	;abs 0x9f2c
    9f4e:	0c 43       	clr	r12		;
    9f50:	21 52       	add	#4,	r1	;r2 As==10
    9f52:	0a 17       	popm	#1,	r10	;16-bit words
    9f54:	30 41       	ret			

00009f56 <TLV_getPeripheral>:
    9f56:	3a 15       	pushm	#4,	r10	;16-bit words
    9f58:	21 82       	sub	#4,	r1	;r2 As==10
    9f5a:	48 4c       	mov.b	r12,	r8	;
    9f5c:	49 4d       	mov.b	r13,	r9	;
    9f5e:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9f60:	4d 43       	clr.b	r13		;
    9f62:	0e 41       	mov	r1,	r14	;
    9f64:	1e 53       	inc	r14		;
    9f66:	0f 41       	mov	r1,	r15	;
    9f68:	2f 53       	incd	r15		;
    9f6a:	b0 12 ac 9e 	call	#40620		;#0x9eac
    9f6e:	0a 43       	clr	r10		;
    9f70:	37 40 0e 9f 	mov	#40718,	r7	;#0x9f0e
    9f74:	4c 4a       	mov.b	r10,	r12	;
    9f76:	87 12       	call	r7		;
    9f78:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f7a:	02 24       	jz	$+6      	;abs 0x9f80
    9f7c:	1a 53       	inc	r10		;
    9f7e:	fa 3f       	jmp	$-10     	;abs 0x9f74
    9f80:	1e 41 02 00 	mov	2(r1),	r14	;
    9f84:	0a 5a       	rla	r10		;
    9f86:	0d 4e       	mov	r14,	r13	;
    9f88:	0d 5a       	add	r10,	r13	;
    9f8a:	5d 4d 01 00 	mov.b	1(r13),	r13	;
    9f8e:	2a 53       	incd	r10		;
    9f90:	0a 5e       	add	r14,	r10	;
    9f92:	81 4a 02 00 	mov	r10,	2(r1)	;
    9f96:	0e 4d       	mov	r13,	r14	;
    9f98:	0e 5d       	add	r13,	r14	;
    9f9a:	0f 4a       	mov	r10,	r15	;
    9f9c:	1f 53       	inc	r15		;
    9f9e:	0d 4c       	mov	r12,	r13	;
    9fa0:	cf 98 00 00 	cmp.b	r8,	0(r15)	;
    9fa4:	0c 20       	jnz	$+26     	;abs 0x9fbe
    9fa6:	09 93       	cmp	#0,	r9	;r3 As==00
    9fa8:	04 24       	jz	$+10     	;abs 0x9fb2
    9faa:	79 53       	add.b	#-1,	r9	;r3 As==11
    9fac:	39 f0 ff 00 	and	#255,	r9	;#0x00ff
    9fb0:	06 3c       	jmp	$+14     	;abs 0x9fbe
    9fb2:	0a 5d       	add	r13,	r10	;
    9fb4:	6c 4a       	mov.b	@r10,	r12	;
    9fb6:	47 18 08 58 	rpt #8 { rlax.w	r8		;
    9fba:	0c d8       	bis	r8,	r12	;
    9fbc:	04 3c       	jmp	$+10     	;abs 0x9fc6
    9fbe:	2d 53       	incd	r13		;
    9fc0:	2f 53       	incd	r15		;
    9fc2:	0e 9d       	cmp	r13,	r14	;
    9fc4:	ed 2f       	jc	$-36     	;abs 0x9fa0
    9fc6:	21 52       	add	#4,	r1	;r2 As==10
    9fc8:	37 17       	popm	#4,	r10	;16-bit words
    9fca:	30 41       	ret			

00009fcc <TLV_getInterrupt>:
    9fcc:	2a 15       	pushm	#3,	r10	;16-bit words
    9fce:	21 82       	sub	#4,	r1	;r2 As==10
    9fd0:	49 4c       	mov.b	r12,	r9	;
    9fd2:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9fd4:	4d 43       	clr.b	r13		;
    9fd6:	0e 41       	mov	r1,	r14	;
    9fd8:	1e 53       	inc	r14		;
    9fda:	0f 41       	mov	r1,	r15	;
    9fdc:	2f 53       	incd	r15		;
    9fde:	b0 12 ac 9e 	call	#40620		;#0x9eac
    9fe2:	0a 43       	clr	r10		;
    9fe4:	38 40 0e 9f 	mov	#40718,	r8	;#0x9f0e
    9fe8:	4c 4a       	mov.b	r10,	r12	;
    9fea:	88 12       	call	r8		;
    9fec:	0f 4a       	mov	r10,	r15	;
    9fee:	1f 53       	inc	r15		;
    9ff0:	0c 93       	cmp	#0,	r12	;r3 As==00
    9ff2:	02 24       	jz	$+6      	;abs 0x9ff8
    9ff4:	0a 4f       	mov	r15,	r10	;
    9ff6:	f8 3f       	jmp	$-14     	;abs 0x9fe8
    9ff8:	1d 41 02 00 	mov	2(r1),	r13	;
    9ffc:	0a 5a       	rla	r10		;
    9ffe:	0a 5d       	add	r13,	r10	;
    a000:	5e 4a 01 00 	mov.b	1(r10),	r14	;
    a004:	0e 5f       	add	r15,	r14	;
    a006:	0e 5e       	rla	r14		;
    a008:	0d 5e       	add	r14,	r13	;
    a00a:	81 4d 02 00 	mov	r13,	2(r1)	;
    a00e:	0e 4c       	mov	r12,	r14	;
    a010:	09 9e       	cmp	r14,	r9	;
    a012:	09 28       	jnc	$+20     	;abs 0xa026
    a014:	0c 4d       	mov	r13,	r12	;
    a016:	0c 5e       	add	r14,	r12	;
    a018:	6c 4c       	mov.b	@r12,	r12	;
    a01a:	0c 93       	cmp	#0,	r12	;r3 As==00
    a01c:	05 24       	jz	$+12     	;abs 0xa028
    a01e:	0e 99       	cmp	r9,	r14	;
    a020:	03 24       	jz	$+8      	;abs 0xa028
    a022:	2e 53       	incd	r14		;
    a024:	f5 3f       	jmp	$-20     	;abs 0xa010
    a026:	0c 43       	clr	r12		;
    a028:	21 52       	add	#4,	r1	;r2 As==10
    a02a:	28 17       	popm	#3,	r10	;16-bit words
    a02c:	30 41       	ret			

0000a02e <WDT_A_hold>:
    a02e:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a032:	2d 4c       	mov	@r12,	r13	;
    a034:	7d d0 80 ff 	bis.b	#65408,	r13	;#0xff80
    a038:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a03c:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a040:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a044:	30 41       	ret			

0000a046 <WDT_A_start>:
    a046:	1d 4c 0c 00 	mov	12(r12),r13	;0x0000c
    a04a:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    a04e:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a052:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a056:	30 41       	ret			

0000a058 <WDT_A_resetTimer>:
    a058:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a05c:	2d 4c       	mov	@r12,	r13	;
    a05e:	7d d2       	bis.b	#8,	r13	;r2 As==11
    a060:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a064:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a068:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a06c:	30 41       	ret			

0000a06e <WDT_A_initWatchdogTimer>:
    a06e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a072:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a076:	3d 50 88 5a 	add	#23176,	r13	;#0x5a88
    a07a:	0d 5e       	add	r14,	r13	;
    a07c:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a080:	30 41       	ret			

0000a082 <WDT_A_initIntervalTimer>:
    a082:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a086:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a08a:	3d 50 98 5a 	add	#23192,	r13	;#0x5a98
    a08e:	0d 5e       	add	r14,	r13	;
    a090:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a094:	30 41       	ret			

0000a096 <GPIO_setAsOutputPin>:
    a096:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a09a:	0e 4c       	mov	r12,	r14	;
    a09c:	0e 5c       	add	r12,	r14	;
    a09e:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0a2:	1c b3       	bit	#1,	r12	;r3 As==01
    a0a4:	02 20       	jnz	$+6      	;abs 0xa0aa
    a0a6:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0aa:	8e cd 0a 00 	bic	r13,	10(r14)	; 0x000a
    a0ae:	8e dd 04 00 	bis	r13,	4(r14)	;
    a0b2:	30 41       	ret			

0000a0b4 <GPIO_setAsInputPin>:
    a0b4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0b8:	0e 4c       	mov	r12,	r14	;
    a0ba:	0e 5c       	add	r12,	r14	;
    a0bc:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0c0:	1c b3       	bit	#1,	r12	;r3 As==01
    a0c2:	02 20       	jnz	$+6      	;abs 0xa0c8
    a0c4:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0c8:	3d e3       	inv	r13		;
    a0ca:	8e fd 0a 00 	and	r13,	10(r14)	; 0x000a
    a0ce:	8e fd 04 00 	and	r13,	4(r14)	;
    a0d2:	8e fd 06 00 	and	r13,	6(r14)	;
    a0d6:	30 41       	ret			

0000a0d8 <GPIO_setAsPeripheralModuleFunctionOutputPin>:
    a0d8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0dc:	0e 4c       	mov	r12,	r14	;
    a0de:	0e 5c       	add	r12,	r14	;
    a0e0:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0e4:	1c b3       	bit	#1,	r12	;r3 As==01
    a0e6:	02 20       	jnz	$+6      	;abs 0xa0ec
    a0e8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0ec:	8e dd 04 00 	bis	r13,	4(r14)	;
    a0f0:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a0f4:	30 41       	ret			

0000a0f6 <GPIO_setAsPeripheralModuleFunctionInputPin>:
    a0f6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0fa:	0e 4c       	mov	r12,	r14	;
    a0fc:	0e 5c       	add	r12,	r14	;
    a0fe:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a102:	1c b3       	bit	#1,	r12	;r3 As==01
    a104:	02 20       	jnz	$+6      	;abs 0xa10a
    a106:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a10a:	8e cd 04 00 	bic	r13,	4(r14)	;
    a10e:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a112:	30 41       	ret			

0000a114 <GPIO_setOutputHighOnPin>:
    a114:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a118:	0e 4c       	mov	r12,	r14	;
    a11a:	0e 5c       	add	r12,	r14	;
    a11c:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a120:	1c b3       	bit	#1,	r12	;r3 As==01
    a122:	02 20       	jnz	$+6      	;abs 0xa128
    a124:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a128:	8e dd 02 00 	bis	r13,	2(r14)	;
    a12c:	30 41       	ret			

0000a12e <GPIO_setOutputLowOnPin>:
    a12e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a132:	0e 4c       	mov	r12,	r14	;
    a134:	0e 5c       	add	r12,	r14	;
    a136:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a13a:	1c b3       	bit	#1,	r12	;r3 As==01
    a13c:	02 20       	jnz	$+6      	;abs 0xa142
    a13e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a142:	8e cd 02 00 	bic	r13,	2(r14)	;
    a146:	30 41       	ret			

0000a148 <GPIO_toggleOutputOnPin>:
    a148:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a14c:	0e 4c       	mov	r12,	r14	;
    a14e:	0e 5c       	add	r12,	r14	;
    a150:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a154:	1c b3       	bit	#1,	r12	;r3 As==01
    a156:	02 20       	jnz	$+6      	;abs 0xa15c
    a158:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a15c:	8e ed 02 00 	xor	r13,	2(r14)	;
    a160:	30 41       	ret			

0000a162 <GPIO_setAsInputPinWithPullDownResistor>:
    a162:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a166:	0e 4c       	mov	r12,	r14	;
    a168:	0e 5c       	add	r12,	r14	;
    a16a:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a16e:	1c b3       	bit	#1,	r12	;r3 As==01
    a170:	02 20       	jnz	$+6      	;abs 0xa176
    a172:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a176:	0c 4d       	mov	r13,	r12	;
    a178:	3c e3       	inv	r12		;
    a17a:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a17e:	8e fc 04 00 	and	r12,	4(r14)	;
    a182:	8e dd 06 00 	bis	r13,	6(r14)	;
    a186:	8e fc 02 00 	and	r12,	2(r14)	;
    a18a:	30 41       	ret			

0000a18c <GPIO_setAsInputPinWithPullUpResistor>:
    a18c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a190:	0e 4c       	mov	r12,	r14	;
    a192:	0e 5c       	add	r12,	r14	;
    a194:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a198:	1c b3       	bit	#1,	r12	;r3 As==01
    a19a:	02 20       	jnz	$+6      	;abs 0xa1a0
    a19c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1a0:	0c 4d       	mov	r13,	r12	;
    a1a2:	3c e3       	inv	r12		;
    a1a4:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a1a8:	8e fc 04 00 	and	r12,	4(r14)	;
    a1ac:	8e dd 06 00 	bis	r13,	6(r14)	;
    a1b0:	8e dd 02 00 	bis	r13,	2(r14)	;
    a1b4:	30 41       	ret			

0000a1b6 <GPIO_getInputPinValue>:
    a1b6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1ba:	0e 4c       	mov	r12,	r14	;
    a1bc:	0e 5c       	add	r12,	r14	;
    a1be:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1c2:	1c b3       	bit	#1,	r12	;r3 As==01
    a1c4:	02 20       	jnz	$+6      	;abs 0xa1ca
    a1c6:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1ca:	2d fe       	and	@r14,	r13	;
    a1cc:	0c 43       	clr	r12		;
    a1ce:	0c 8d       	sub	r13,	r12	;
    a1d0:	0c dd       	bis	r13,	r12	;
    a1d2:	5c 03       	rrum	#1,	r12	;
    a1d4:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a1d8:	30 41       	ret			

0000a1da <GPIO_enableInterrupt>:
    a1da:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1de:	0e 4c       	mov	r12,	r14	;
    a1e0:	0e 5c       	add	r12,	r14	;
    a1e2:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1e6:	1c b3       	bit	#1,	r12	;r3 As==01
    a1e8:	02 20       	jnz	$+6      	;abs 0xa1ee
    a1ea:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1ee:	8e dd 1a 00 	bis	r13,	26(r14)	; 0x001a
    a1f2:	30 41       	ret			

0000a1f4 <GPIO_disableInterrupt>:
    a1f4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1f8:	0e 4c       	mov	r12,	r14	;
    a1fa:	0e 5c       	add	r12,	r14	;
    a1fc:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a200:	1c b3       	bit	#1,	r12	;r3 As==01
    a202:	02 20       	jnz	$+6      	;abs 0xa208
    a204:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a208:	8e cd 1a 00 	bic	r13,	26(r14)	; 0x001a
    a20c:	30 41       	ret			

0000a20e <GPIO_getInterruptStatus>:
    a20e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a212:	0e 4c       	mov	r12,	r14	;
    a214:	0e 5c       	add	r12,	r14	;
    a216:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a21a:	1c b3       	bit	#1,	r12	;r3 As==01
    a21c:	02 20       	jnz	$+6      	;abs 0xa222
    a21e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a222:	0c 4d       	mov	r13,	r12	;
    a224:	1c fe 1c 00 	and	28(r14),r12	;0x0001c
    a228:	30 41       	ret			

0000a22a <GPIO_clearInterrupt>:
    a22a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a22e:	0e 4c       	mov	r12,	r14	;
    a230:	0e 5c       	add	r12,	r14	;
    a232:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a236:	1c b3       	bit	#1,	r12	;r3 As==01
    a238:	02 20       	jnz	$+6      	;abs 0xa23e
    a23a:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a23e:	8e cd 1c 00 	bic	r13,	28(r14)	; 0x001c
    a242:	30 41       	ret			

0000a244 <GPIO_selectInterruptEdge>:
    a244:	4f 4c       	mov.b	r12,	r15	;
    a246:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a24a:	0c 4f       	mov	r15,	r12	;
    a24c:	0c 5f       	add	r15,	r12	;
    a24e:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a252:	1f b3       	bit	#1,	r15	;r3 As==01
    a254:	02 20       	jnz	$+6      	;abs 0xa25a
    a256:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a25a:	3c 50 18 00 	add	#24,	r12	;#0x0018
    a25e:	0e 93       	cmp	#0,	r14	;r3 As==00
    a260:	03 20       	jnz	$+8      	;abs 0xa268
    a262:	8c cd 00 00 	bic	r13,	0(r12)	;
    a266:	02 3c       	jmp	$+6      	;abs 0xa26c
    a268:	8c dd 00 00 	bis	r13,	0(r12)	;
    a26c:	30 41       	ret			

0000a26e <GPIO_setDriveStrength>:
    a26e:	4f 4c       	mov.b	r12,	r15	;
    a270:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a274:	0c 4f       	mov	r15,	r12	;
    a276:	0c 5f       	add	r15,	r12	;
    a278:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a27c:	1f b3       	bit	#1,	r15	;r3 As==01
    a27e:	02 20       	jnz	$+6      	;abs 0xa284
    a280:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a284:	3c 52       	add	#8,	r12	;r2 As==11
    a286:	0e 93       	cmp	#0,	r14	;r3 As==00
    a288:	03 20       	jnz	$+8      	;abs 0xa290
    a28a:	8c cd 00 00 	bic	r13,	0(r12)	;
    a28e:	02 3c       	jmp	$+6      	;abs 0xa294
    a290:	8c dd 00 00 	bis	r13,	0(r12)	;
    a294:	30 41       	ret			

0000a296 <DMA_init>:
    a296:	6f 4c       	mov.b	@r12,	r15	;
    a298:	0e 4f       	mov	r15,	r14	;
    a29a:	5e 0f       	rrum	#4,	r14	;
    a29c:	5b 4c 07 00 	mov.b	7(r12),	r11	;
    a2a0:	5d 4c 08 00 	mov.b	8(r12),	r13	;
    a2a4:	0d 5b       	add	r11,	r13	;
    a2a6:	1d 5c 02 00 	add	2(r12),	r13	;
    a2aa:	8f 4d 10 05 	mov	r13,	1296(r15); 0x0510
    a2ae:	6d 4c       	mov.b	@r12,	r13	;
    a2b0:	9d 4c 04 00 	mov	4(r12),	1306(r13); 0x051a
    a2b4:	1a 05 
    a2b6:	4d 4e       	mov.b	r14,	r13	;
    a2b8:	7d f0 0e 00 	and.b	#14,	r13	;#0x000e
    a2bc:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a2c0:	3d 50 00 05 	add	#1280,	r13	;#0x0500
    a2c4:	1e b3       	bit	#1,	r14	;r3 As==01
    a2c6:	08 24       	jz	$+18     	;abs 0xa2d8
    a2c8:	bd f0 ff 00 	and	#255,	0(r13)	;#0x00ff
    a2cc:	00 00 
    a2ce:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a2d2:	47 18 0c 5c 	rpt #8 { rlax.w	r12		;
    a2d6:	05 3c       	jmp	$+12     	;abs 0xa2e2
    a2d8:	bd f0 00 ff 	and	#65280,	0(r13)	;#0xff00
    a2dc:	00 00 
    a2de:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a2e2:	8d dc 00 00 	bis	r12,	0(r13)	;
    a2e6:	30 41       	ret			

0000a2e8 <DMA_setTransferSize>:
    a2e8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2ec:	8c 4d 1a 05 	mov	r13,	1306(r12); 0x051a
    a2f0:	30 41       	ret			

0000a2f2 <DMA_getTransferSize>:
    a2f2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2f6:	1c 4c 1a 05 	mov	1306(r12),r12	;0x0051a
    a2fa:	30 41       	ret			

0000a2fc <DMA_setSrcAddress>:
    a2fc:	21 82       	sub	#4,	r1	;r2 As==10
    a2fe:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a302:	81 4d 00 00 	mov	r13,	0(r1)	;
    a306:	81 4e 02 00 	mov	r14,	2(r1)	;
    a30a:	0d 4c       	mov	r12,	r13	;
    a30c:	3d 50 12 05 	add	#1298,	r13	;#0x0512
    a310:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a314:	00 00 
    a316:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a31a:	bc f0 ff fc 	and	#64767,	0(r12)	;#0xfcff
    a31e:	00 00 
    a320:	8c df 00 00 	bis	r15,	0(r12)	;
    a324:	21 52       	add	#4,	r1	;r2 As==10
    a326:	30 41       	ret			

0000a328 <DMA_setDstAddress>:
    a328:	21 82       	sub	#4,	r1	;r2 As==10
    a32a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a32e:	81 4d 00 00 	mov	r13,	0(r1)	;
    a332:	81 4e 02 00 	mov	r14,	2(r1)	;
    a336:	0d 4c       	mov	r12,	r13	;
    a338:	3d 50 16 05 	add	#1302,	r13	;#0x0516
    a33c:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a340:	00 00 
    a342:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a346:	bc f0 ff f3 	and	#62463,	0(r12)	;#0xf3ff
    a34a:	00 00 
    a34c:	41 18 0f 5f 	rpt #2 { rlax.w	r15		;
    a350:	8c df 00 00 	bis	r15,	0(r12)	;
    a354:	21 52       	add	#4,	r1	;r2 As==10
    a356:	30 41       	ret			

0000a358 <DMA_enableTransfers>:
    a358:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a35c:	bc d0 10 00 	bis	#16,	1296(r12);#0x0010, 0x0510
    a360:	10 05 
    a362:	30 41       	ret			

0000a364 <DMA_disableTransfers>:
    a364:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a368:	bc f0 ef ff 	and	#65519,	1296(r12);#0xffef, 0x0510
    a36c:	10 05 
    a36e:	30 41       	ret			

0000a370 <DMA_startTransfer>:
    a370:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a374:	9c d3 10 05 	bis	#1,	1296(r12);r3 As==01, 0x0510
    a378:	30 41       	ret			

0000a37a <DMA_enableInterrupt>:
    a37a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a37e:	ac d2 10 05 	bis	#4,	1296(r12);r2 As==10, 0x0510
    a382:	30 41       	ret			

0000a384 <DMA_disableInterrupt>:
    a384:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a388:	ac c2 10 05 	bic	#4,	1296(r12);r2 As==10, 0x0510
    a38c:	30 41       	ret			

0000a38e <DMA_getInterruptStatus>:
    a38e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a392:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a396:	3c f2       	and	#8,	r12	;r2 As==11
    a398:	30 41       	ret			

0000a39a <DMA_clearInterrupt>:
    a39a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a39e:	bc c2 10 05 	bic	#8,	1296(r12);r2 As==11, 0x0510
    a3a2:	30 41       	ret			

0000a3a4 <DMA_getNMIAbortStatus>:
    a3a4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a3a8:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a3ac:	2c f3       	and	#2,	r12	;r3 As==10
    a3ae:	30 41       	ret			

0000a3b0 <DMA_clearNMIAbort>:
    a3b0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a3b4:	ac c3 10 05 	bic	#2,	1296(r12);r3 As==10, 0x0510
    a3b8:	30 41       	ret			

0000a3ba <DMA_disableTransferDuringReadModifyWrite>:
    a3ba:	a2 d2 08 05 	bis	#4,	&0x0508	;r2 As==10
    a3be:	30 41       	ret			

0000a3c0 <DMA_enableTransferDuringReadModifyWrite>:
    a3c0:	a2 c2 08 05 	bic	#4,	&0x0508	;r2 As==10
    a3c4:	30 41       	ret			

0000a3c6 <DMA_enableRoundRobinPriority>:
    a3c6:	a2 d3 08 05 	bis	#2,	&0x0508	;r3 As==10
    a3ca:	30 41       	ret			

0000a3cc <DMA_disableRoundRobinPriority>:
    a3cc:	a2 c3 08 05 	bic	#2,	&0x0508	;r3 As==10
    a3d0:	30 41       	ret			

0000a3d2 <DMA_enableNMIAbort>:
    a3d2:	92 d3 08 05 	bis	#1,	&0x0508	;r3 As==01
    a3d6:	30 41       	ret			

0000a3d8 <DMA_disableNMIAbort>:
    a3d8:	92 c3 08 05 	bic	#1,	&0x0508	;r3 As==01
    a3dc:	30 41       	ret			

0000a3de <SFR_enableInterrupt>:
    a3de:	c2 dc 00 01 	bis.b	r12,	&0x0100	;
    a3e2:	30 41       	ret			

0000a3e4 <SFR_disableInterrupt>:
    a3e4:	c2 cc 00 01 	bic.b	r12,	&0x0100	;
    a3e8:	30 41       	ret			

0000a3ea <SFR_getInterruptStatus>:
    a3ea:	5c f2 02 01 	and.b	&0x0102,r12	;0x0102
    a3ee:	30 41       	ret			

0000a3f0 <SFR_clearInterrupt>:
    a3f0:	c2 cc 02 01 	bic.b	r12,	&0x0102	;
    a3f4:	30 41       	ret			

0000a3f6 <SFR_setResetPinPullResistor>:
    a3f6:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a3fa:	fd f0 f3 ff 	and.b	#65523,	0(r13)	;#0xfff3
    a3fe:	00 00 
    a400:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a404:	30 41       	ret			

0000a406 <SFR_setNMIEdge>:
    a406:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a40a:	ed c3 00 00 	bic.b	#2,	0(r13)	;r3 As==10
    a40e:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a412:	30 41       	ret			

0000a414 <SFR_setResetNMIPinFunction>:
    a414:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a418:	dd c3 00 00 	bic.b	#1,	0(r13)	;r3 As==01
    a41c:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a420:	30 41       	ret			

0000a422 <privateUCSSourceClockFromDCO>:
    a422:	5a 15       	pushm	#6,	r10	;16-bit words
    a424:	07 4c       	mov	r12,	r7	;
    a426:	16 42 64 01 	mov	&0x0164,r6	;0x0164
    a42a:	36 f0 ff 03 	and	#1023,	r6	;#0x03ff
    a42e:	5f 42 66 01 	mov.b	&0x0166,r15	;0x0166
    a432:	7f f0 07 00 	and.b	#7,	r15	;
    a436:	4d 4f       	mov.b	r15,	r13	;
    a438:	7c 40 03 00 	mov.b	#3,	r12	;
    a43c:	4c 9f       	cmp.b	r15,	r12	;
    a43e:	05 28       	jnc	$+12     	;abs 0xa44a
    a440:	1c 43       	mov	#1,	r12	;r3 As==01
    a442:	b0 12 2c b1 	call	#45356		;#0xb12c
    a446:	0a 4c       	mov	r12,	r10	;
    a448:	0c 3c       	jmp	$+26     	;abs 0xa462
    a44a:	6f 92       	cmp.b	#4,	r15	;r2 As==10
    a44c:	06 24       	jz	$+14     	;abs 0xa45a
    a44e:	7f 90 05 00 	cmp.b	#5,	r15	;
    a452:	06 20       	jnz	$+14     	;abs 0xa460
    a454:	3a 40 10 00 	mov	#16,	r10	;#0x0010
    a458:	04 3c       	jmp	$+10     	;abs 0xa462
    a45a:	3a 40 0c 00 	mov	#12,	r10	;#0x000c
    a45e:	01 3c       	jmp	$+4      	;abs 0xa462
    a460:	1a 43       	mov	#1,	r10	;r3 As==01
    a462:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    a466:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    a46a:	7c 90 20 00 	cmp.b	#32,	r12	;#0x0020
    a46e:	17 24       	jz	$+48     	;abs 0xa49e
    a470:	7c 90 50 00 	cmp.b	#80,	r12	;#0x0050
    a474:	23 24       	jz	$+72     	;abs 0xa4bc
    a476:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a478:	2f 20       	jnz	$+96     	;abs 0xa4d8
    a47a:	18 42 4c 24 	mov	&0x244c,r8	;0x244c
    a47e:	19 42 4e 24 	mov	&0x244e,r9	;0x244e
    a482:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a486:	6c 01 
    a488:	0e 20       	jnz	$+30     	;abs 0xa4a6
    a48a:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a48e:	24 24       	jz	$+74     	;abs 0xa4d8
    a490:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a494:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a498:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a49c:	1d 24       	jz	$+60     	;abs 0xa4d8
    a49e:	38 40 00 80 	mov	#32768,	r8	;#0x8000
    a4a2:	09 43       	clr	r9		;
    a4a4:	19 3c       	jmp	$+52     	;abs 0xa4d8
    a4a6:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a4aa:	16 24       	jz	$+46     	;abs 0xa4d8
    a4ac:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a4b0:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a4b4:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a4b8:	f2 23       	jnz	$-26     	;abs 0xa49e
    a4ba:	0e 3c       	jmp	$+30     	;abs 0xa4d8
    a4bc:	18 42 48 24 	mov	&0x2448,r8	;0x2448
    a4c0:	19 42 4a 24 	mov	&0x244a,r9	;0x244a
    a4c4:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a4c8:	07 24       	jz	$+16     	;abs 0xa4d8
    a4ca:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a4ce:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a4d2:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a4d6:	e3 23       	jnz	$-56     	;abs 0xa49e
    a4d8:	0e 46       	mov	r6,	r14	;
    a4da:	1e 53       	inc	r14		;
    a4dc:	35 40 44 b2 	mov	#45636,	r5	;#0xb244
    a4e0:	0c 48       	mov	r8,	r12	;
    a4e2:	0d 49       	mov	r9,	r13	;
    a4e4:	0f 43       	clr	r15		;
    a4e6:	85 12       	call	r5		;
    a4e8:	0e 4a       	mov	r10,	r14	;
    a4ea:	0f 43       	clr	r15		;
    a4ec:	b0 12 fa b0 	call	#45306		;#0xb0fa
    a4f0:	08 4c       	mov	r12,	r8	;
    a4f2:	09 4d       	mov	r13,	r9	;
    a4f4:	0b 45       	mov	r5,	r11	;
    a4f6:	37 90 03 00 	cmp	#3,	r7	;
    a4fa:	16 20       	jnz	$+46     	;abs 0xa528
    a4fc:	1c 42 64 01 	mov	&0x0164,r12	;0x0164
    a500:	3c f0 00 70 	and	#28672,	r12	;#0x7000
    a504:	5c 03       	rrum	#1,	r12	;
    a506:	4a 18 0c 11 	rpt #11 { rrax.w	r12		;
    a50a:	0d 43       	clr	r13		;
    a50c:	1e 43       	mov	#1,	r14	;r3 As==01
    a50e:	0d 9c       	cmp	r12,	r13	;
    a510:	05 2c       	jc	$+12     	;abs 0xa51c
    a512:	0e 5e       	rla	r14		;
    a514:	5d 53       	inc.b	r13		;
    a516:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a51a:	f9 3f       	jmp	$-12     	;abs 0xa50e
    a51c:	0c 48       	mov	r8,	r12	;
    a51e:	0d 49       	mov	r9,	r13	;
    a520:	0f 43       	clr	r15		;
    a522:	8b 12       	call	r11		;
    a524:	08 4c       	mov	r12,	r8	;
    a526:	09 4d       	mov	r13,	r9	;
    a528:	0c 48       	mov	r8,	r12	;
    a52a:	0d 49       	mov	r9,	r13	;
    a52c:	55 17       	popm	#6,	r10	;16-bit words
    a52e:	30 41       	ret			

0000a530 <privateUCSComputeCLKFrequency>:
    a530:	0a 15       	pushm	#1,	r10	;16-bit words
    a532:	0b 43       	clr	r11		;
    a534:	1a 43       	mov	#1,	r10	;r3 As==01
    a536:	0b 9d       	cmp	r13,	r11	;
    a538:	07 2c       	jc	$+16     	;abs 0xa548
    a53a:	4a 5a       	rla.b	r10		;
    a53c:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a540:	5b 53       	inc.b	r11		;
    a542:	3b f0 ff 00 	and	#255,	r11	;#0x00ff
    a546:	f7 3f       	jmp	$-16     	;abs 0xa536
    a548:	2c 93       	cmp	#2,	r12	;r3 As==10
    a54a:	3f 24       	jz	$+128    	;abs 0xa5ca
    a54c:	2d 43       	mov	#2,	r13	;r3 As==10
    a54e:	0d 9c       	cmp	r12,	r13	;
    a550:	0e 28       	jnc	$+30     	;abs 0xa56e
    a552:	0c 93       	cmp	#0,	r12	;r3 As==00
    a554:	13 24       	jz	$+40     	;abs 0xa57c
    a556:	1c 93       	cmp	#1,	r12	;r3 As==01
    a558:	5a 20       	jnz	$+182    	;abs 0xa60e
    a55a:	3c 40 10 27 	mov	#10000,	r12	;#0x2710
    a55e:	0d 4a       	mov	r10,	r13	;
    a560:	b0 12 ba af 	call	#44986		;#0xafba
    a564:	0e 4c       	mov	r12,	r14	;
    a566:	0f 4c       	mov	r12,	r15	;
    a568:	4e 18 0f 11 	rpt #15 { rrax.w	r15		;
    a56c:	50 3c       	jmp	$+162    	;abs 0xa60e
    a56e:	2d 42       	mov	#4,	r13	;r2 As==10
    a570:	0d 9c       	cmp	r12,	r13	;
    a572:	45 2c       	jc	$+140    	;abs 0xa5fe
    a574:	3c 90 05 00 	cmp	#5,	r12	;
    a578:	30 24       	jz	$+98     	;abs 0xa5da
    a57a:	49 3c       	jmp	$+148    	;abs 0xa60e
    a57c:	1c 42 4c 24 	mov	&0x244c,r12	;0x244c
    a580:	1d 42 4e 24 	mov	&0x244e,r13	;0x244e
    a584:	0e 4a       	mov	r10,	r14	;
    a586:	0f 43       	clr	r15		;
    a588:	b0 12 fa b0 	call	#45306		;#0xb0fa
    a58c:	0e 4c       	mov	r12,	r14	;
    a58e:	0f 4d       	mov	r13,	r15	;
    a590:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a594:	6c 01 
    a596:	0e 20       	jnz	$+30     	;abs 0xa5b4
    a598:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a59c:	38 24       	jz	$+114    	;abs 0xa60e
    a59e:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a5a2:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a5a6:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a5aa:	31 24       	jz	$+100    	;abs 0xa60e
    a5ac:	3e 40 00 80 	mov	#32768,	r14	;#0x8000
    a5b0:	0f 43       	clr	r15		;
    a5b2:	2d 3c       	jmp	$+92     	;abs 0xa60e
    a5b4:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a5b8:	2a 24       	jz	$+86     	;abs 0xa60e
    a5ba:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a5be:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a5c2:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a5c6:	f2 23       	jnz	$-26     	;abs 0xa5ac
    a5c8:	22 3c       	jmp	$+70     	;abs 0xa60e
    a5ca:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    a5ce:	0d 43       	clr	r13		;
    a5d0:	0e 4a       	mov	r10,	r14	;
    a5d2:	0f 43       	clr	r15		;
    a5d4:	b0 12 86 b0 	call	#45190		;#0xb086
    a5d8:	18 3c       	jmp	$+50     	;abs 0xa60a
    a5da:	1c 42 48 24 	mov	&0x2448,r12	;0x2448
    a5de:	1d 42 4a 24 	mov	&0x244a,r13	;0x244a
    a5e2:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a5e6:	04 24       	jz	$+10     	;abs 0xa5f0
    a5e8:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a5ec:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a5f0:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a5f4:	06 24       	jz	$+14     	;abs 0xa602
    a5f6:	2c 42       	mov	#4,	r12	;r2 As==10
    a5f8:	b0 12 22 a4 	call	#42018		;#0xa422
    a5fc:	06 3c       	jmp	$+14     	;abs 0xa60a
    a5fe:	b0 12 22 a4 	call	#42018		;#0xa422
    a602:	0e 4a       	mov	r10,	r14	;
    a604:	0f 43       	clr	r15		;
    a606:	b0 12 fa b0 	call	#45306		;#0xb0fa
    a60a:	0e 4c       	mov	r12,	r14	;
    a60c:	0f 4d       	mov	r13,	r15	;
    a60e:	0c 4e       	mov	r14,	r12	;
    a610:	0d 4f       	mov	r15,	r13	;
    a612:	0a 17       	popm	#1,	r10	;16-bit words
    a614:	30 41       	ret			

0000a616 <UCS_setExternalClockSource>:
    a616:	82 4c 4c 24 	mov	r12,	&0x244c	;
    a61a:	82 4d 4e 24 	mov	r13,	&0x244e	;
    a61e:	82 4e 48 24 	mov	r14,	&0x2448	;
    a622:	82 4f 4a 24 	mov	r15,	&0x244a	;
    a626:	30 41       	ret			

0000a628 <UCS_initClockSignal>:
    a628:	0a 15       	pushm	#1,	r10	;16-bit words
    a62a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a62e:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    a630:	26 24       	jz	$+78     	;abs 0xa67e
    a632:	6a 43       	mov.b	#2,	r10	;r3 As==10
    a634:	4a 9c       	cmp.b	r12,	r10	;
    a636:	0f 28       	jnc	$+32     	;abs 0xa656
    a638:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    a63a:	42 20       	jnz	$+134    	;abs 0xa6c0
    a63c:	b2 f0 ff f8 	and	#63743,	&0x0168	;#0xf8ff
    a640:	68 01 
    a642:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a646:	82 dd 68 01 	bis	r13,	&0x0168	;
    a64a:	b2 f0 ff f8 	and	#63743,	&0x016a	;#0xf8ff
    a64e:	6a 01 
    a650:	47 18 0e 5e 	rpt #8 { rlax.w	r14		;
    a654:	11 3c       	jmp	$+36     	;abs 0xa678
    a656:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    a658:	03 24       	jz	$+8      	;abs 0xa660
    a65a:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    a65c:	19 24       	jz	$+52     	;abs 0xa690
    a65e:	30 3c       	jmp	$+98     	;abs 0xa6c0
    a660:	b2 f0 8f ff 	and	#65423,	&0x0168	;#0xff8f
    a664:	68 01 
    a666:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a66a:	82 dd 68 01 	bis	r13,	&0x0168	;
    a66e:	b2 f0 8f ff 	and	#65423,	&0x016a	;#0xff8f
    a672:	6a 01 
    a674:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    a678:	82 de 6a 01 	bis	r14,	&0x016a	;
    a67c:	21 3c       	jmp	$+68     	;abs 0xa6c0
    a67e:	b2 f0 f8 ff 	and	#65528,	&0x0168	;#0xfff8
    a682:	68 01 
    a684:	82 dd 68 01 	bis	r13,	&0x0168	;
    a688:	b2 f0 f8 ff 	and	#65528,	&0x016a	;#0xfff8
    a68c:	6a 01 
    a68e:	f4 3f       	jmp	$-22     	;abs 0xa678
    a690:	f2 f0 8f ff 	and.b	#65423,	&0x0166	;#0xff8f
    a694:	66 01 
    a696:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a69a:	c2 dd 66 01 	bis.b	r13,	&0x0166	;
    a69e:	f2 f0 f8 ff 	and.b	#65528,	&0x0166	;#0xfff8
    a6a2:	66 01 
    a6a4:	2e 92       	cmp	#4,	r14	;r2 As==10
    a6a6:	06 24       	jz	$+14     	;abs 0xa6b4
    a6a8:	3e 90 05 00 	cmp	#5,	r14	;
    a6ac:	07 20       	jnz	$+16     	;abs 0xa6bc
    a6ae:	e2 d2 66 01 	bis.b	#4,	&0x0166	;r2 As==10
    a6b2:	06 3c       	jmp	$+14     	;abs 0xa6c0
    a6b4:	f2 d0 05 00 	bis.b	#5,	&0x0166	;
    a6b8:	66 01 
    a6ba:	02 3c       	jmp	$+6      	;abs 0xa6c0
    a6bc:	c2 de 66 01 	bis.b	r14,	&0x0166	;
    a6c0:	0a 17       	popm	#1,	r10	;16-bit words
    a6c2:	30 41       	ret			

0000a6c4 <UCS_turnOnLFXT1>:
    a6c4:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a6c8:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a6cc:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a6d0:	6c 01 
    a6d2:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a6d6:	6c 01 
    a6d8:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a6dc:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a6e0:	05 24       	jz	$+12     	;abs 0xa6ec
    a6e2:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a6e6:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a6ea:	f8 3f       	jmp	$-14     	;abs 0xa6dc
    a6ec:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a6f0:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a6f4:	0c dd       	bis	r13,	r12	;
    a6f6:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a6fa:	30 41       	ret			

0000a6fc <UCS_turnOnHFXT1>:
    a6fc:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a700:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a704:	3d f0 c0 00 	and	#192,	r13	;#0x00c0
    a708:	0d 9c       	cmp	r12,	r13	;
    a70a:	05 24       	jz	$+12     	;abs 0xa716
    a70c:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a710:	6c 01 
    a712:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a716:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a71a:	6c 01 
    a71c:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a720:	6c 01 
    a722:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a726:	05 24       	jz	$+12     	;abs 0xa732
    a728:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a72c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a730:	f8 3f       	jmp	$-14     	;abs 0xa722
    a732:	30 41       	ret			

0000a734 <UCS_bypassXT1>:
    a734:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a738:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a73c:	6c 01 
    a73e:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a742:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a746:	6c 01 
    a748:	0c 93       	cmp	#0,	r12	;r3 As==00
    a74a:	08 20       	jnz	$+18     	;abs 0xa75c
    a74c:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a750:	0d 24       	jz	$+28     	;abs 0xa76c
    a752:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a756:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a75a:	f8 3f       	jmp	$-14     	;abs 0xa74c
    a75c:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a760:	05 24       	jz	$+12     	;abs 0xa76c
    a762:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a766:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a76a:	f8 3f       	jmp	$-14     	;abs 0xa75c
    a76c:	30 41       	ret			

0000a76e <UCS_turnOnLFXT1WithTimeout>:
    a76e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a772:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a776:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a77a:	6c 01 
    a77c:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a780:	6c 01 
    a782:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a786:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a78a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a78e:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a792:	04 24       	jz	$+10     	;abs 0xa79c
    a794:	3e 53       	add	#-1,	r14	;r3 As==11
    a796:	0e 93       	cmp	#0,	r14	;r3 As==00
    a798:	f6 23       	jnz	$-18     	;abs 0xa786
    a79a:	0b 3c       	jmp	$+24     	;abs 0xa7b2
    a79c:	0e 93       	cmp	#0,	r14	;r3 As==00
    a79e:	09 24       	jz	$+20     	;abs 0xa7b2
    a7a0:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a7a4:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a7a8:	0c dd       	bis	r13,	r12	;
    a7aa:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a7ae:	1c 43       	mov	#1,	r12	;r3 As==01
    a7b0:	01 3c       	jmp	$+4      	;abs 0xa7b4
    a7b2:	0c 4e       	mov	r14,	r12	;
    a7b4:	30 41       	ret			

0000a7b6 <UCS_turnOnHFXT1WithTimeout>:
    a7b6:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a7ba:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a7be:	3e f0 c0 00 	and	#192,	r14	;#0x00c0
    a7c2:	0e 9c       	cmp	r12,	r14	;
    a7c4:	05 24       	jz	$+12     	;abs 0xa7d0
    a7c6:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a7ca:	6c 01 
    a7cc:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7d0:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a7d4:	6c 01 
    a7d6:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a7da:	6c 01 
    a7dc:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a7e0:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a7e4:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a7e8:	05 24       	jz	$+12     	;abs 0xa7f4
    a7ea:	3d 53       	add	#-1,	r13	;r3 As==11
    a7ec:	0d 93       	cmp	#0,	r13	;r3 As==00
    a7ee:	f6 23       	jnz	$-18     	;abs 0xa7dc
    a7f0:	0c 4d       	mov	r13,	r12	;
    a7f2:	07 3c       	jmp	$+16     	;abs 0xa802
    a7f4:	0c 43       	clr	r12		;
    a7f6:	0c 8d       	sub	r13,	r12	;
    a7f8:	0d dc       	bis	r12,	r13	;
    a7fa:	0c 4d       	mov	r13,	r12	;
    a7fc:	5c 03       	rrum	#1,	r12	;
    a7fe:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a802:	30 41       	ret			

0000a804 <UCS_bypassXT1WithTimeout>:
    a804:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a808:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a80c:	6c 01 
    a80e:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a812:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a816:	6c 01 
    a818:	0c 93       	cmp	#0,	r12	;r3 As==00
    a81a:	0e 20       	jnz	$+30     	;abs 0xa838
    a81c:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a820:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a824:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a828:	0e 24       	jz	$+30     	;abs 0xa846
    a82a:	3d 53       	add	#-1,	r13	;r3 As==11
    a82c:	0d 93       	cmp	#0,	r13	;r3 As==00
    a82e:	f6 23       	jnz	$-18     	;abs 0xa81c
    a830:	12 3c       	jmp	$+38     	;abs 0xa856
    a832:	3d 53       	add	#-1,	r13	;r3 As==11
    a834:	0d 93       	cmp	#0,	r13	;r3 As==00
    a836:	0f 24       	jz	$+32     	;abs 0xa856
    a838:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a83c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a840:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a844:	f6 23       	jnz	$-18     	;abs 0xa832
    a846:	0c 43       	clr	r12		;
    a848:	0c 8d       	sub	r13,	r12	;
    a84a:	0d dc       	bis	r12,	r13	;
    a84c:	0c 4d       	mov	r13,	r12	;
    a84e:	5c 03       	rrum	#1,	r12	;
    a850:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a854:	01 3c       	jmp	$+4      	;abs 0xa858
    a856:	0c 43       	clr	r12		;
    a858:	30 41       	ret			

0000a85a <UCS_turnOffXT1>:
    a85a:	92 d3 6c 01 	bis	#1,	&0x016c	;r3 As==01
    a85e:	30 41       	ret			

0000a860 <UCS_turnOnXT2>:
    a860:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a864:	3d f0 00 c0 	and	#49152,	r13	;#0xc000
    a868:	0d 9c       	cmp	r12,	r13	;
    a86a:	05 24       	jz	$+12     	;abs 0xa876
    a86c:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a870:	6c 01 
    a872:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a876:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a87a:	6c 01 
    a87c:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a880:	6c 01 
    a882:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a886:	05 24       	jz	$+12     	;abs 0xa892
    a888:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a88c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a890:	f8 3f       	jmp	$-14     	;abs 0xa882
    a892:	30 41       	ret			

0000a894 <UCS_bypassXT2>:
    a894:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a898:	6c 01 
    a89a:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a89e:	05 24       	jz	$+12     	;abs 0xa8aa
    a8a0:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a8a4:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8a8:	f8 3f       	jmp	$-14     	;abs 0xa89a
    a8aa:	30 41       	ret			

0000a8ac <UCS_turnOnXT2WithTimeout>:
    a8ac:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a8b0:	3e f0 00 c0 	and	#49152,	r14	;#0xc000
    a8b4:	0e 9c       	cmp	r12,	r14	;
    a8b6:	05 24       	jz	$+12     	;abs 0xa8c2
    a8b8:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a8bc:	6c 01 
    a8be:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a8c2:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a8c6:	6c 01 
    a8c8:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a8cc:	6c 01 
    a8ce:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a8d2:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8d6:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a8da:	05 24       	jz	$+12     	;abs 0xa8e6
    a8dc:	3d 53       	add	#-1,	r13	;r3 As==11
    a8de:	0d 93       	cmp	#0,	r13	;r3 As==00
    a8e0:	f6 23       	jnz	$-18     	;abs 0xa8ce
    a8e2:	0c 4d       	mov	r13,	r12	;
    a8e4:	07 3c       	jmp	$+16     	;abs 0xa8f4
    a8e6:	0c 43       	clr	r12		;
    a8e8:	0c 8d       	sub	r13,	r12	;
    a8ea:	0d dc       	bis	r12,	r13	;
    a8ec:	0c 4d       	mov	r13,	r12	;
    a8ee:	5c 03       	rrum	#1,	r12	;
    a8f0:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a8f4:	30 41       	ret			

0000a8f6 <UCS_bypassXT2WithTimeout>:
    a8f6:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a8fa:	6c 01 
    a8fc:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a900:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a904:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a908:	04 24       	jz	$+10     	;abs 0xa912
    a90a:	3c 53       	add	#-1,	r12	;r3 As==11
    a90c:	0c 93       	cmp	#0,	r12	;r3 As==00
    a90e:	f6 23       	jnz	$-18     	;abs 0xa8fc
    a910:	06 3c       	jmp	$+14     	;abs 0xa91e
    a912:	0d 43       	clr	r13		;
    a914:	0d 8c       	sub	r12,	r13	;
    a916:	0c dd       	bis	r13,	r12	;
    a918:	5c 03       	rrum	#1,	r12	;
    a91a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a91e:	30 41       	ret			

0000a920 <UCS_turnOffXT2>:
    a920:	b2 d0 00 01 	bis	#256,	&0x016c	;#0x0100
    a924:	6c 01 
    a926:	30 41       	ret			

0000a928 <UCS_initFLL>:
    a928:	0a 15       	pushm	#1,	r10	;16-bit words
    a92a:	0e 42       	mov	r2,	r14	;
    a92c:	3e f0 40 00 	and	#64,	r14	;#0x0040
    a930:	3a 40 80 3e 	mov	#16000,	r10	;#0x3e80
    a934:	0a 9c       	cmp	r12,	r10	;
    a936:	06 2c       	jc	$+14     	;abs 0xa944
    a938:	12 c3       	clrc			
    a93a:	0d 10       	rrc	r13		;
    a93c:	1b 43       	mov	#1,	r11	;r3 As==01
    a93e:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    a942:	03 3c       	jmp	$+8      	;abs 0xa94a
    a944:	0c 5c       	rla	r12		;
    a946:	0b 43       	clr	r11		;
    a948:	fa 3f       	jmp	$-10     	;abs 0xa93e
    a94a:	3a 40 00 02 	mov	#512,	r10	;#0x0200
    a94e:	0a 9d       	cmp	r13,	r10	;
    a950:	05 2c       	jc	$+12     	;abs 0xa95c
    a952:	3f 50 00 10 	add	#4096,	r15	;#0x1000
    a956:	12 c3       	clrc			
    a958:	0d 10       	rrc	r13		;
    a95a:	f7 3f       	jmp	$-16     	;abs 0xa94a
    a95c:	32 d0 40 00 	bis	#64,	r2	;#0x0040
    a960:	c2 43 61 01 	mov.b	#0,	&0x0161	;r3 As==00
    a964:	b2 f0 00 fc 	and	#64512,	&0x0164	;#0xfc00
    a968:	64 01 
    a96a:	3d 53       	add	#-1,	r13	;r3 As==11
    a96c:	0d df       	bis	r15,	r13	;
    a96e:	82 4d 64 01 	mov	r13,	&0x0164	;
    a972:	3d 40 76 02 	mov	#630,	r13	;#0x0276
    a976:	0d 9c       	cmp	r12,	r13	;
    a978:	03 28       	jnc	$+8      	;abs 0xa980
    a97a:	c2 43 62 01 	mov.b	#0,	&0x0162	;r3 As==00
    a97e:	33 3c       	jmp	$+104    	;abs 0xa9e6
    a980:	3f 40 e1 04 	mov	#1249,	r15	;#0x04e1
    a984:	0f 9c       	cmp	r12,	r15	;
    a986:	04 28       	jnc	$+10     	;abs 0xa990
    a988:	f2 40 10 00 	mov.b	#16,	&0x0162	;#0x0010
    a98c:	62 01 
    a98e:	2b 3c       	jmp	$+88     	;abs 0xa9e6
    a990:	3a 40 c3 09 	mov	#2499,	r10	;#0x09c3
    a994:	0a 9c       	cmp	r12,	r10	;
    a996:	04 28       	jnc	$+10     	;abs 0xa9a0
    a998:	f2 40 20 00 	mov.b	#32,	&0x0162	;#0x0020
    a99c:	62 01 
    a99e:	23 3c       	jmp	$+72     	;abs 0xa9e6
    a9a0:	3d 40 87 13 	mov	#4999,	r13	;#0x1387
    a9a4:	0d 9c       	cmp	r12,	r13	;
    a9a6:	04 28       	jnc	$+10     	;abs 0xa9b0
    a9a8:	f2 40 30 00 	mov.b	#48,	&0x0162	;#0x0030
    a9ac:	62 01 
    a9ae:	1b 3c       	jmp	$+56     	;abs 0xa9e6
    a9b0:	3f 40 0f 27 	mov	#9999,	r15	;#0x270f
    a9b4:	0f 9c       	cmp	r12,	r15	;
    a9b6:	04 28       	jnc	$+10     	;abs 0xa9c0
    a9b8:	f2 40 40 00 	mov.b	#64,	&0x0162	;#0x0040
    a9bc:	62 01 
    a9be:	13 3c       	jmp	$+40     	;abs 0xa9e6
    a9c0:	3a 40 1f 4e 	mov	#19999,	r10	;#0x4e1f
    a9c4:	0a 9c       	cmp	r12,	r10	;
    a9c6:	04 28       	jnc	$+10     	;abs 0xa9d0
    a9c8:	f2 40 50 00 	mov.b	#80,	&0x0162	;#0x0050
    a9cc:	62 01 
    a9ce:	0b 3c       	jmp	$+24     	;abs 0xa9e6
    a9d0:	3d 40 3f 9c 	mov	#39999,	r13	;#0x9c3f
    a9d4:	0d 9c       	cmp	r12,	r13	;
    a9d6:	04 28       	jnc	$+10     	;abs 0xa9e0
    a9d8:	f2 40 60 00 	mov.b	#96,	&0x0162	;#0x0060
    a9dc:	62 01 
    a9de:	03 3c       	jmp	$+8      	;abs 0xa9e6
    a9e0:	f2 40 70 00 	mov.b	#112,	&0x0162	;#0x0070
    a9e4:	62 01 
    a9e6:	32 c0 40 00 	bic	#64,	r2	;#0x0040
    a9ea:	d2 b3 6e 01 	bit.b	#1,	&0x016e	;r3 As==01
    a9ee:	05 24       	jz	$+12     	;abs 0xa9fa
    a9f0:	d2 c3 6e 01 	bic.b	#1,	&0x016e	;r3 As==01
    a9f4:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a9f8:	f8 3f       	jmp	$-14     	;abs 0xa9ea
    a9fa:	02 de       	bis	r14,	r2	;
    a9fc:	b2 f0 88 ff 	and	#65416,	&0x0168	;#0xff88
    aa00:	68 01 
    aa02:	1b 93       	cmp	#1,	r11	;r3 As==01
    aa04:	04 20       	jnz	$+10     	;abs 0xaa0e
    aa06:	b2 d0 33 00 	bis	#51,	&0x0168	;#0x0033
    aa0a:	68 01 
    aa0c:	03 3c       	jmp	$+8      	;abs 0xaa14
    aa0e:	b2 d0 44 00 	bis	#68,	&0x0168	;#0x0044
    aa12:	68 01 
    aa14:	0a 17       	popm	#1,	r10	;16-bit words
    aa16:	30 41       	ret			

0000aa18 <UCS_initFLLSettle>:
    aa18:	21 82       	sub	#4,	r1	;r2 As==10
    aa1a:	0e 4d       	mov	r13,	r14	;
    aa1c:	44 18 0e 5e 	rpt #5 { rlax.w	r14		;
    aa20:	81 4e 00 00 	mov	r14,	0(r1)	;
    aa24:	b0 12 28 a9 	call	#43304		;#0xa928
    aa28:	2c 41       	mov	@r1,	r12	;
    aa2a:	0d 4c       	mov	r12,	r13	;
    aa2c:	3d 53       	add	#-1,	r13	;r3 As==11
    aa2e:	81 4d 00 00 	mov	r13,	0(r1)	;
    aa32:	0c 93       	cmp	#0,	r12	;r3 As==00
    aa34:	0c 24       	jz	$+26     	;abs 0xaa4e
    aa36:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    aa3a:	1c 41 02 00 	mov	2(r1),	r12	;
    aa3e:	3d 40 1d 00 	mov	#29,	r13	;#0x001d
    aa42:	0d 9c       	cmp	r12,	r13	;
    aa44:	f1 2b       	jnc	$-28     	;abs 0xaa28
    aa46:	03 43       	nop			
    aa48:	91 53 02 00 	inc	2(r1)		;
    aa4c:	f6 3f       	jmp	$-18     	;abs 0xaa3a
    aa4e:	21 52       	add	#4,	r1	;r2 As==10
    aa50:	30 41       	ret			

0000aa52 <UCS_enableClockRequest>:
    aa52:	c2 dc 70 01 	bis.b	r12,	&0x0170	;
    aa56:	30 41       	ret			

0000aa58 <UCS_disableClockRequest>:
    aa58:	c2 cc 70 01 	bic.b	r12,	&0x0170	;
    aa5c:	30 41       	ret			

0000aa5e <UCS_getFaultFlagStatus>:
    aa5e:	5c f2 6e 01 	and.b	&0x016e,r12	;0x016e
    aa62:	30 41       	ret			

0000aa64 <UCS_clearFaultFlag>:
    aa64:	c2 cc 6e 01 	bic.b	r12,	&0x016e	;
    aa68:	30 41       	ret			

0000aa6a <UCS_turnOffSMCLK>:
    aa6a:	a2 d3 6c 01 	bis	#2,	&0x016c	;r3 As==10
    aa6e:	30 41       	ret			

0000aa70 <UCS_turnOnSMCLK>:
    aa70:	a2 c3 6c 01 	bic	#2,	&0x016c	;r3 As==10
    aa74:	30 41       	ret			

0000aa76 <UCS_getACLK>:
    aa76:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    aa7a:	3c f0 00 07 	and	#1792,	r12	;#0x0700
    aa7e:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa82:	3d f0 00 07 	and	#1792,	r13	;#0x0700
    aa86:	5c 0f       	rrum	#4,	r12	;
    aa88:	5c 0f       	rrum	#4,	r12	;
    aa8a:	5d 0f       	rrum	#4,	r13	;
    aa8c:	5d 0f       	rrum	#4,	r13	;
    aa8e:	b0 12 30 a5 	call	#42288		;#0xa530
    aa92:	30 41       	ret			

0000aa94 <UCS_getSMCLK>:
    aa94:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    aa98:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    aa9c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    aaa0:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aaa4:	3d f0 70 00 	and	#112,	r13	;#0x0070
    aaa8:	5c 0f       	rrum	#4,	r12	;
    aaaa:	5d 0f       	rrum	#4,	r13	;
    aaac:	b0 12 30 a5 	call	#42288		;#0xa530
    aab0:	30 41       	ret			

0000aab2 <UCS_getMCLK>:
    aab2:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    aab6:	3c f0 07 00 	and	#7,	r12	;
    aaba:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aabe:	3d f0 07 00 	and	#7,	r13	;
    aac2:	b0 12 30 a5 	call	#42288		;#0xa530
    aac6:	30 41       	ret			

0000aac8 <UCS_clearAllOscFlagsWithTimeout>:
    aac8:	f2 f0 f0 ff 	and.b	#65520,	&0x016e	;#0xfff0
    aacc:	6e 01 
    aace:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    aad2:	e2 b3 02 01 	bit.b	#2,	&0x0102	;r3 As==10
    aad6:	03 24       	jz	$+8      	;abs 0xaade
    aad8:	3c 53       	add	#-1,	r12	;r3 As==11
    aada:	0c 93       	cmp	#0,	r12	;r3 As==00
    aadc:	f5 23       	jnz	$-20     	;abs 0xaac8
    aade:	5c 42 6e 01 	mov.b	&0x016e,r12	;0x016e
    aae2:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    aae6:	3c f0 0f 00 	and	#15,	r12	;#0x000f
    aaea:	30 41       	ret			

0000aaec <PMM_enableSvsL>:
    aaec:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aaf0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aaf4:	00 00 
    aaf6:	b2 d0 00 04 	bis	#1024,	&0x0126	;#0x0400
    aafa:	26 01 
    aafc:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab00:	30 41       	ret			

0000ab02 <PMM_disableSvsL>:
    ab02:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab06:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab0a:	00 00 
    ab0c:	b2 f0 ff fb 	and	#64511,	&0x0126	;#0xfbff
    ab10:	26 01 
    ab12:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab16:	30 41       	ret			

0000ab18 <PMM_enableSvmL>:
    ab18:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab1c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab20:	00 00 
    ab22:	b2 d0 00 40 	bis	#16384,	&0x0126	;#0x4000
    ab26:	26 01 
    ab28:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab2c:	30 41       	ret			

0000ab2e <PMM_disableSvmL>:
    ab2e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab32:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab36:	00 00 
    ab38:	b2 f0 ff bf 	and	#49151,	&0x0126	;#0xbfff
    ab3c:	26 01 
    ab3e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab42:	30 41       	ret			

0000ab44 <PMM_enableSvsH>:
    ab44:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab48:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab4c:	00 00 
    ab4e:	b2 d0 00 04 	bis	#1024,	&0x0124	;#0x0400
    ab52:	24 01 
    ab54:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab58:	30 41       	ret			

0000ab5a <PMM_disableSvsH>:
    ab5a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab5e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab62:	00 00 
    ab64:	b2 f0 ff fb 	and	#64511,	&0x0124	;#0xfbff
    ab68:	24 01 
    ab6a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab6e:	30 41       	ret			

0000ab70 <PMM_enableSvmH>:
    ab70:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab74:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab78:	00 00 
    ab7a:	b2 d0 00 40 	bis	#16384,	&0x0124	;#0x4000
    ab7e:	24 01 
    ab80:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab84:	30 41       	ret			

0000ab86 <PMM_disableSvmH>:
    ab86:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab8a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab8e:	00 00 
    ab90:	b2 f0 ff bf 	and	#49151,	&0x0124	;#0xbfff
    ab94:	24 01 
    ab96:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab9a:	30 41       	ret			

0000ab9c <PMM_enableSvsLSvmL>:
    ab9c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aba0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aba4:	00 00 
    aba6:	b2 d0 00 44 	bis	#17408,	&0x0126	;#0x4400
    abaa:	26 01 
    abac:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abb0:	30 41       	ret			

0000abb2 <PMM_disableSvsLSvmL>:
    abb2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abb6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abba:	00 00 
    abbc:	b2 f0 ff bb 	and	#48127,	&0x0126	;#0xbbff
    abc0:	26 01 
    abc2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abc6:	30 41       	ret			

0000abc8 <PMM_enableSvsHSvmH>:
    abc8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abcc:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abd0:	00 00 
    abd2:	b2 d0 00 44 	bis	#17408,	&0x0124	;#0x4400
    abd6:	24 01 
    abd8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abdc:	30 41       	ret			

0000abde <PMM_disableSvsHSvmH>:
    abde:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abe2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abe6:	00 00 
    abe8:	b2 f0 ff bb 	and	#48127,	&0x0124	;#0xbbff
    abec:	24 01 
    abee:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abf2:	30 41       	ret			

0000abf4 <PMM_enableSvsLReset>:
    abf4:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abf8:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abfc:	00 00 
    abfe:	b2 d0 00 01 	bis	#256,	&0x012e	;#0x0100
    ac02:	2e 01 
    ac04:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac08:	30 41       	ret			

0000ac0a <PMM_disableSvsLReset>:
    ac0a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac0e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac12:	00 00 
    ac14:	b2 f0 ff fe 	and	#65279,	&0x012e	;#0xfeff
    ac18:	2e 01 
    ac1a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac1e:	30 41       	ret			

0000ac20 <PMM_enableSvmLInterrupt>:
    ac20:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac24:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac28:	00 00 
    ac2a:	a2 d3 2e 01 	bis	#2,	&0x012e	;r3 As==10
    ac2e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac32:	30 41       	ret			

0000ac34 <PMM_disableSvmLInterrupt>:
    ac34:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac38:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac3c:	00 00 
    ac3e:	a2 c3 2e 01 	bic	#2,	&0x012e	;r3 As==10
    ac42:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac46:	30 41       	ret			

0000ac48 <PMM_enableSvsHReset>:
    ac48:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac4c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac50:	00 00 
    ac52:	b2 d0 00 10 	bis	#4096,	&0x012e	;#0x1000
    ac56:	2e 01 
    ac58:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac5c:	30 41       	ret			

0000ac5e <PMM_disableSvsHReset>:
    ac5e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac62:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac66:	00 00 
    ac68:	b2 f0 ff ef 	and	#61439,	&0x012e	;#0xefff
    ac6c:	2e 01 
    ac6e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac72:	30 41       	ret			

0000ac74 <PMM_enableSvmHInterrupt>:
    ac74:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac78:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac7c:	00 00 
    ac7e:	b2 d0 20 00 	bis	#32,	&0x012e	;#0x0020
    ac82:	2e 01 
    ac84:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac88:	30 41       	ret			

0000ac8a <PMM_disableSvmHInterrupt>:
    ac8a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac8e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac92:	00 00 
    ac94:	b2 f0 df ff 	and	#65503,	&0x012e	;#0xffdf
    ac98:	2e 01 
    ac9a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac9e:	30 41       	ret			

0000aca0 <PMM_clearPMMIFGS>:
    aca0:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aca4:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aca8:	00 00 
    acaa:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    acae:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acb2:	30 41       	ret			

0000acb4 <PMM_enableSvsLInLPMFastWake>:
    acb4:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acb8:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acbc:	00 00 
    acbe:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    acc2:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    acc6:	00 00 
    acc8:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    accc:	00 00 
    acce:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acd2:	30 41       	ret			

0000acd4 <PMM_enableSvsLInLPMSlowWake>:
    acd4:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acd8:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acdc:	00 00 
    acde:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ace2:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ace6:	00 00 
    ace8:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    acec:	00 00 
    acee:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acf2:	30 41       	ret			

0000acf4 <PMM_disableSvsLInLPMFastWake>:
    acf4:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acf8:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acfc:	00 00 
    acfe:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ad02:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ad06:	00 00 
    ad08:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ad0c:	00 00 
    ad0e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad12:	30 41       	ret			

0000ad14 <PMM_disableSvsLInLPMSlowWake>:
    ad14:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad18:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad1c:	00 00 
    ad1e:	b2 f0 6f f7 	and	#63343,	&0x0126	;#0xf76f
    ad22:	26 01 
    ad24:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad28:	30 41       	ret			

0000ad2a <PMM_enableSvsHInLPMNormPerf>:
    ad2a:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad2e:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad32:	00 00 
    ad34:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad38:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ad3c:	00 00 
    ad3e:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    ad42:	00 00 
    ad44:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad48:	30 41       	ret			

0000ad4a <PMM_enableSvsHInLPMFullPerf>:
    ad4a:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad4e:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad52:	00 00 
    ad54:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad58:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    ad5c:	00 00 
    ad5e:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    ad62:	00 00 
    ad64:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad68:	30 41       	ret			

0000ad6a <PMM_disableSvsHInLPMNormPerf>:
    ad6a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad6e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad72:	00 00 
    ad74:	b2 f0 6f f7 	and	#63343,	&0x0124	;#0xf76f
    ad78:	24 01 
    ad7a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad7e:	30 41       	ret			

0000ad80 <PMM_disableSvsHInLPMFullPerf>:
    ad80:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad84:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad88:	00 00 
    ad8a:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad8e:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ad92:	00 00 
    ad94:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ad98:	00 00 
    ad9a:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad9e:	30 41       	ret			

0000ada0 <PMM_optimizeSvsLInLPMFastWake>:
    ada0:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ada4:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ada8:	00 00 
    adaa:	b2 d0 90 08 	bis	#2192,	&0x0126	;#0x0890
    adae:	26 01 
    adb0:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    adb4:	30 41       	ret			

0000adb6 <PMM_optimizeSvsHInLPMFullPerf>:
    adb6:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    adba:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    adbe:	00 00 
    adc0:	b2 d0 90 08 	bis	#2192,	&0x0124	;#0x0890
    adc4:	24 01 
    adc6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    adca:	30 41       	ret			

0000adcc <PMM_setVCoreUp>:
    adcc:	0a 15       	pushm	#1,	r10	;16-bit words
    adce:	4e 4c       	mov.b	r12,	r14	;
    add0:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    add4:	21 01 
    add6:	1f 42 2e 01 	mov	&0x012e,r15	;0x012e
    adda:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    adde:	2e 01 
    ade0:	1d 42 24 01 	mov	&0x0124,r13	;0x0124
    ade4:	1c 42 26 01 	mov	&0x0126,r12	;0x0126
    ade8:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    adec:	0b 4e       	mov	r14,	r11	;
    adee:	3b d0 00 44 	bis	#17408,	r11	;#0x4400
    adf2:	82 4b 24 01 	mov	r11,	&0x0124	;
    adf6:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    adfa:	2c 01 
    adfc:	fc 27       	jz	$-6      	;abs 0xadf6
    adfe:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ae02:	2c 01 
    ae04:	b2 b0 20 00 	bit	#32,	&0x012c	;#0x0020
    ae08:	2c 01 
    ae0a:	12 24       	jz	$+38     	;abs 0xae30
    ae0c:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ae10:	2c 01 
    ae12:	82 4d 24 01 	mov	r13,	&0x0124	;
    ae16:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae1a:	2c 01 
    ae1c:	fc 27       	jz	$-6      	;abs 0xae16
    ae1e:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae22:	2c 01 
    ae24:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ae28:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ae2c:	0c 43       	clr	r12		;
    ae2e:	33 3c       	jmp	$+104    	;abs 0xae96
    ae30:	0a 4e       	mov	r14,	r10	;
    ae32:	47 18 0a 5a 	rpt #8 { rlax.w	r10		;
    ae36:	82 da 24 01 	bis	r10,	&0x0124	;
    ae3a:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae3e:	2c 01 
    ae40:	fc 27       	jz	$-6      	;abs 0xae3a
    ae42:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ae46:	2c 01 
    ae48:	c2 4e 20 01 	mov.b	r14,	&0x0120	;
    ae4c:	0a db       	bis	r11,	r10	;
    ae4e:	82 4a 26 01 	mov	r10,	&0x0126	;
    ae52:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae56:	fd 27       	jz	$-4      	;abs 0xae52
    ae58:	92 c3 2c 01 	bic	#1,	&0x012c	;r3 As==01
    ae5c:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    ae60:	26 01 
    ae62:	3c f0 f8 fc 	and	#64760,	r12	;#0xfcf8
    ae66:	82 dc 26 01 	bis	r12,	&0x0126	;
    ae6a:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    ae6e:	24 01 
    ae70:	3d f0 f8 fc 	and	#64760,	r13	;#0xfcf8
    ae74:	82 dd 24 01 	bis	r13,	&0x0124	;
    ae78:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae7c:	fd 27       	jz	$-4      	;abs 0xae78
    ae7e:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae82:	2c 01 
    ae84:	f9 27       	jz	$-12     	;abs 0xae78
    ae86:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae8a:	2c 01 
    ae8c:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ae90:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ae94:	1c 43       	mov	#1,	r12	;r3 As==01
    ae96:	0a 17       	popm	#1,	r10	;16-bit words
    ae98:	30 41       	ret			

0000ae9a <PMM_setVCoreDown>:
    ae9a:	2a 15       	pushm	#3,	r10	;16-bit words
    ae9c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    aea0:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    aea4:	21 01 
    aea6:	19 42 2e 01 	mov	&0x012e,r9	;0x012e
    aeaa:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    aeae:	2e 01 
    aeb0:	1e 42 24 01 	mov	&0x0124,r14	;0x0124
    aeb4:	0f 43       	clr	r15		;
    aeb6:	1a 42 26 01 	mov	&0x0126,r10	;0x0126
    aeba:	0b 43       	clr	r11		;
    aebc:	b2 f0 cc ff 	and	#65484,	&0x012c	;#0xffcc
    aec0:	2c 01 
    aec2:	08 4c       	mov	r12,	r8	;
    aec4:	38 d0 00 44 	bis	#17408,	r8	;#0x4400
    aec8:	0d 4c       	mov	r12,	r13	;
    aeca:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    aece:	0d d8       	bis	r8,	r13	;
    aed0:	82 4d 24 01 	mov	r13,	&0x0124	;
    aed4:	82 4d 26 01 	mov	r13,	&0x0126	;
    aed8:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aedc:	2c 01 
    aede:	fc 27       	jz	$-6      	;abs 0xaed8
    aee0:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    aee4:	f9 27       	jz	$-12     	;abs 0xaed8
    aee6:	b2 f0 ee ff 	and	#65518,	&0x012c	;#0xffee
    aeea:	2c 01 
    aeec:	c2 4c 20 01 	mov.b	r12,	&0x0120	;
    aef0:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    aef4:	26 01 
    aef6:	3a f0 f8 fc 	and	#64760,	r10	;#0xfcf8
    aefa:	82 da 26 01 	bis	r10,	&0x0126	;
    aefe:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    af02:	24 01 
    af04:	3e f0 f8 fc 	and	#64760,	r14	;#0xfcf8
    af08:	82 de 24 01 	bis	r14,	&0x0124	;
    af0c:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    af10:	fd 27       	jz	$-4      	;abs 0xaf0c
    af12:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    af16:	2c 01 
    af18:	f9 27       	jz	$-12     	;abs 0xaf0c
    af1a:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    af1e:	2c 01 
    af20:	82 49 2e 01 	mov	r9,	&0x012e	;
    af24:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    af28:	1c 43       	mov	#1,	r12	;r3 As==01
    af2a:	28 17       	popm	#3,	r10	;16-bit words
    af2c:	30 41       	ret			

0000af2e <PMM_setVCore>:
    af2e:	4a 15       	pushm	#5,	r10	;16-bit words
    af30:	0a 4c       	mov	r12,	r10	;
    af32:	3a f0 03 00 	and	#3,	r10	;
    af36:	16 42 20 01 	mov	&0x0120,r6	;0x0120
    af3a:	36 f0 03 00 	and	#3,	r6	;
    af3e:	1c 43       	mov	#1,	r12	;r3 As==01
    af40:	49 4a       	mov.b	r10,	r9	;
    af42:	38 40 9a ae 	mov	#44698,	r8	;#0xae9a
    af46:	37 40 cc ad 	mov	#44492,	r7	;#0xadcc
    af4a:	49 96       	cmp.b	r6,	r9	;
    af4c:	13 24       	jz	$+40     	;abs 0xaf74
    af4e:	0c 93       	cmp	#0,	r12	;r3 As==00
    af50:	11 24       	jz	$+36     	;abs 0xaf74
    af52:	4c 46       	mov.b	r6,	r12	;
    af54:	46 9a       	cmp.b	r10,	r6	;
    af56:	04 2c       	jc	$+10     	;abs 0xaf60
    af58:	5c 53       	inc.b	r12		;
    af5a:	46 4c       	mov.b	r12,	r6	;
    af5c:	87 12       	call	r7		;
    af5e:	03 3c       	jmp	$+8      	;abs 0xaf66
    af60:	7c 53       	add.b	#-1,	r12	;r3 As==11
    af62:	46 4c       	mov.b	r12,	r6	;
    af64:	88 12       	call	r8		;
    af66:	0d 43       	clr	r13		;
    af68:	0d 8c       	sub	r12,	r13	;
    af6a:	0c dd       	bis	r13,	r12	;
    af6c:	5c 03       	rrum	#1,	r12	;
    af6e:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    af72:	eb 3f       	jmp	$-40     	;abs 0xaf4a
    af74:	46 17       	popm	#5,	r10	;16-bit words
    af76:	30 41       	ret			

0000af78 <PMM_getInterruptStatus>:
    af78:	1c f2 2c 01 	and	&0x012c,r12	;0x012c
    af7c:	30 41       	ret			

0000af7e <udivmodhi4>:
    af7e:	3b 40 11 00 	mov	#17,	r11	;#0x0011
    af82:	1f 43       	mov	#1,	r15	;r3 As==01
    af84:	0d 9c       	cmp	r12,	r13	;
    af86:	09 2c       	jc	$+20     	;abs 0xaf9a
    af88:	3b 53       	add	#-1,	r11	;r3 As==11
    af8a:	0b 93       	cmp	#0,	r11	;r3 As==00
    af8c:	05 24       	jz	$+12     	;abs 0xaf98
    af8e:	0d 93       	cmp	#0,	r13	;r3 As==00
    af90:	04 38       	jl	$+10     	;abs 0xaf9a
    af92:	0d 5d       	rla	r13		;
    af94:	0f 5f       	rla	r15		;
    af96:	f6 3f       	jmp	$-18     	;abs 0xaf84
    af98:	0f 4b       	mov	r11,	r15	;
    af9a:	0b 43       	clr	r11		;
    af9c:	0f 93       	cmp	#0,	r15	;r3 As==00
    af9e:	09 24       	jz	$+20     	;abs 0xafb2
    afa0:	0c 9d       	cmp	r13,	r12	;
    afa2:	02 28       	jnc	$+6      	;abs 0xafa8
    afa4:	0c 8d       	sub	r13,	r12	;
    afa6:	0b df       	bis	r15,	r11	;
    afa8:	12 c3       	clrc			
    afaa:	0f 10       	rrc	r15		;
    afac:	12 c3       	clrc			
    afae:	0d 10       	rrc	r13		;
    afb0:	f5 3f       	jmp	$-20     	;abs 0xaf9c
    afb2:	0e 93       	cmp	#0,	r14	;r3 As==00
    afb4:	01 20       	jnz	$+4      	;abs 0xafb8
    afb6:	0c 4b       	mov	r11,	r12	;
    afb8:	30 41       	ret			

0000afba <__mspabi_divi>:
    afba:	0a 15       	pushm	#1,	r10	;16-bit words
    afbc:	0e 4c       	mov	r12,	r14	;
    afbe:	0f 4d       	mov	r13,	r15	;
    afc0:	3b 40 7e af 	mov	#44926,	r11	;#0xaf7e
    afc4:	0c 93       	cmp	#0,	r12	;r3 As==00
    afc6:	07 34       	jge	$+16     	;abs 0xafd6
    afc8:	0c 43       	clr	r12		;
    afca:	0c 8e       	sub	r14,	r12	;
    afcc:	0e 4c       	mov	r12,	r14	;
    afce:	0d 93       	cmp	#0,	r13	;r3 As==00
    afd0:	10 34       	jge	$+34     	;abs 0xaff2
    afd2:	1a 43       	mov	#1,	r10	;r3 As==01
    afd4:	03 3c       	jmp	$+8      	;abs 0xafdc
    afd6:	0d 93       	cmp	#0,	r13	;r3 As==00
    afd8:	0f 34       	jge	$+32     	;abs 0xaff8
    afda:	0a 43       	clr	r10		;
    afdc:	0d 43       	clr	r13		;
    afde:	0d 8f       	sub	r15,	r13	;
    afe0:	0c 4e       	mov	r14,	r12	;
    afe2:	0e 43       	clr	r14		;
    afe4:	8b 12       	call	r11		;
    afe6:	1a 93       	cmp	#1,	r10	;r3 As==01
    afe8:	09 24       	jz	$+20     	;abs 0xaffc
    afea:	0d 43       	clr	r13		;
    afec:	0d 8c       	sub	r12,	r13	;
    afee:	0c 4d       	mov	r13,	r12	;
    aff0:	05 3c       	jmp	$+12     	;abs 0xaffc
    aff2:	0e 43       	clr	r14		;
    aff4:	8b 12       	call	r11		;
    aff6:	f9 3f       	jmp	$-12     	;abs 0xafea
    aff8:	0e 43       	clr	r14		;
    affa:	8b 12       	call	r11		;
    affc:	0a 17       	popm	#1,	r10	;16-bit words
    affe:	30 41       	ret			

0000b000 <__mspabi_divu>:
    b000:	0e 43       	clr	r14		;
    b002:	b0 12 7e af 	call	#44926		;#0xaf7e
    b006:	30 41       	ret			

0000b008 <udivmodsi4>:
    b008:	4a 15       	pushm	#5,	r10	;16-bit words
    b00a:	0a 4c       	mov	r12,	r10	;
    b00c:	0b 4d       	mov	r13,	r11	;
    b00e:	3c 40 21 00 	mov	#33,	r12	;#0x0021
    b012:	18 43       	mov	#1,	r8	;r3 As==01
    b014:	09 43       	clr	r9		;
    b016:	0f 9b       	cmp	r11,	r15	;
    b018:	04 28       	jnc	$+10     	;abs 0xb022
    b01a:	0d 9f       	cmp	r15,	r13	;
    b01c:	16 20       	jnz	$+46     	;abs 0xb04a
    b01e:	0e 9a       	cmp	r10,	r14	;
    b020:	14 2c       	jc	$+42     	;abs 0xb04a
    b022:	3c 53       	add	#-1,	r12	;r3 As==11
    b024:	0c 93       	cmp	#0,	r12	;r3 As==00
    b026:	0f 24       	jz	$+32     	;abs 0xb046
    b028:	0f 93       	cmp	#0,	r15	;r3 As==00
    b02a:	0f 38       	jl	$+32     	;abs 0xb04a
    b02c:	06 4e       	mov	r14,	r6	;
    b02e:	07 4f       	mov	r15,	r7	;
    b030:	06 5e       	add	r14,	r6	;
    b032:	07 6f       	addc	r15,	r7	;
    b034:	0e 46       	mov	r6,	r14	;
    b036:	0f 47       	mov	r7,	r15	;
    b038:	06 48       	mov	r8,	r6	;
    b03a:	07 49       	mov	r9,	r7	;
    b03c:	06 58       	add	r8,	r6	;
    b03e:	07 69       	addc	r9,	r7	;
    b040:	08 46       	mov	r6,	r8	;
    b042:	09 47       	mov	r7,	r9	;
    b044:	e8 3f       	jmp	$-46     	;abs 0xb016
    b046:	08 43       	clr	r8		;
    b048:	09 43       	clr	r9		;
    b04a:	0c 43       	clr	r12		;
    b04c:	0d 4c       	mov	r12,	r13	;
    b04e:	07 48       	mov	r8,	r7	;
    b050:	07 d9       	bis	r9,	r7	;
    b052:	07 93       	cmp	#0,	r7	;r3 As==00
    b054:	11 24       	jz	$+36     	;abs 0xb078
    b056:	0b 9f       	cmp	r15,	r11	;
    b058:	08 28       	jnc	$+18     	;abs 0xb06a
    b05a:	0f 9b       	cmp	r11,	r15	;
    b05c:	02 20       	jnz	$+6      	;abs 0xb062
    b05e:	0a 9e       	cmp	r14,	r10	;
    b060:	04 28       	jnc	$+10     	;abs 0xb06a
    b062:	0a 8e       	sub	r14,	r10	;
    b064:	0b 7f       	subc	r15,	r11	;
    b066:	0c d8       	bis	r8,	r12	;
    b068:	0d d9       	bis	r9,	r13	;
    b06a:	12 c3       	clrc			
    b06c:	09 10       	rrc	r9		;
    b06e:	08 10       	rrc	r8		;
    b070:	12 c3       	clrc			
    b072:	0f 10       	rrc	r15		;
    b074:	0e 10       	rrc	r14		;
    b076:	eb 3f       	jmp	$-40     	;abs 0xb04e
    b078:	81 93 0c 00 	cmp	#0,	12(r1)	;r3 As==00, 0x000c
    b07c:	02 24       	jz	$+6      	;abs 0xb082
    b07e:	0c 4a       	mov	r10,	r12	;
    b080:	0d 4b       	mov	r11,	r13	;
    b082:	46 17       	popm	#5,	r10	;16-bit words
    b084:	30 41       	ret			

0000b086 <__mspabi_divli>:
    b086:	5a 15       	pushm	#6,	r10	;16-bit words
    b088:	21 83       	decd	r1		;
    b08a:	0a 4c       	mov	r12,	r10	;
    b08c:	0b 4d       	mov	r13,	r11	;
    b08e:	08 4e       	mov	r14,	r8	;
    b090:	09 4f       	mov	r15,	r9	;
    b092:	37 40 08 b0 	mov	#45064,	r7	;#0xb008
    b096:	0d 93       	cmp	#0,	r13	;r3 As==00
    b098:	0c 34       	jge	$+26     	;abs 0xb0b2
    b09a:	0c 43       	clr	r12		;
    b09c:	0d 43       	clr	r13		;
    b09e:	05 4c       	mov	r12,	r5	;
    b0a0:	06 4d       	mov	r13,	r6	;
    b0a2:	05 8a       	sub	r10,	r5	;
    b0a4:	06 7b       	subc	r11,	r6	;
    b0a6:	0a 45       	mov	r5,	r10	;
    b0a8:	0b 46       	mov	r6,	r11	;
    b0aa:	0f 93       	cmp	#0,	r15	;r3 As==00
    b0ac:	1a 34       	jge	$+54     	;abs 0xb0e2
    b0ae:	16 43       	mov	#1,	r6	;r3 As==01
    b0b0:	04 3c       	jmp	$+10     	;abs 0xb0ba
    b0b2:	06 4f       	mov	r15,	r6	;
    b0b4:	0f 93       	cmp	#0,	r15	;r3 As==00
    b0b6:	1b 34       	jge	$+56     	;abs 0xb0ee
    b0b8:	06 43       	clr	r6		;
    b0ba:	0e 43       	clr	r14		;
    b0bc:	0f 43       	clr	r15		;
    b0be:	0e 88       	sub	r8,	r14	;
    b0c0:	0f 79       	subc	r9,	r15	;
    b0c2:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0c6:	0c 4a       	mov	r10,	r12	;
    b0c8:	0d 4b       	mov	r11,	r13	;
    b0ca:	87 12       	call	r7		;
    b0cc:	16 93       	cmp	#1,	r6	;r3 As==01
    b0ce:	12 24       	jz	$+38     	;abs 0xb0f4
    b0d0:	0e 43       	clr	r14		;
    b0d2:	0f 43       	clr	r15		;
    b0d4:	0a 4e       	mov	r14,	r10	;
    b0d6:	0b 4f       	mov	r15,	r11	;
    b0d8:	0a 8c       	sub	r12,	r10	;
    b0da:	0b 7d       	subc	r13,	r11	;
    b0dc:	0c 4a       	mov	r10,	r12	;
    b0de:	0d 4b       	mov	r11,	r13	;
    b0e0:	09 3c       	jmp	$+20     	;abs 0xb0f4
    b0e2:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0e6:	0c 45       	mov	r5,	r12	;
    b0e8:	0d 46       	mov	r6,	r13	;
    b0ea:	87 12       	call	r7		;
    b0ec:	f1 3f       	jmp	$-28     	;abs 0xb0d0
    b0ee:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b0f2:	87 12       	call	r7		;
    b0f4:	21 53       	incd	r1		;
    b0f6:	55 17       	popm	#6,	r10	;16-bit words
    b0f8:	30 41       	ret			

0000b0fa <__mspabi_divlu>:
    b0fa:	21 83       	decd	r1		;
    b0fc:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b100:	b0 12 08 b0 	call	#45064		;#0xb008
    b104:	21 53       	incd	r1		;
    b106:	30 41       	ret			

0000b108 <__mspabi_slli_15>:
    b108:	0c 5c       	rla	r12		;

0000b10a <__mspabi_slli_14>:
    b10a:	0c 5c       	rla	r12		;

0000b10c <__mspabi_slli_13>:
    b10c:	0c 5c       	rla	r12		;

0000b10e <__mspabi_slli_12>:
    b10e:	0c 5c       	rla	r12		;

0000b110 <__mspabi_slli_11>:
    b110:	0c 5c       	rla	r12		;

0000b112 <__mspabi_slli_10>:
    b112:	0c 5c       	rla	r12		;

0000b114 <__mspabi_slli_9>:
    b114:	0c 5c       	rla	r12		;

0000b116 <__mspabi_slli_8>:
    b116:	0c 5c       	rla	r12		;

0000b118 <__mspabi_slli_7>:
    b118:	0c 5c       	rla	r12		;

0000b11a <__mspabi_slli_6>:
    b11a:	0c 5c       	rla	r12		;

0000b11c <__mspabi_slli_5>:
    b11c:	0c 5c       	rla	r12		;

0000b11e <__mspabi_slli_4>:
    b11e:	0c 5c       	rla	r12		;

0000b120 <__mspabi_slli_3>:
    b120:	0c 5c       	rla	r12		;

0000b122 <__mspabi_slli_2>:
    b122:	0c 5c       	rla	r12		;

0000b124 <__mspabi_slli_1>:
    b124:	0c 5c       	rla	r12		;
    b126:	30 41       	ret			
    b128:	3d 53       	add	#-1,	r13	;r3 As==11
    b12a:	0c 5c       	rla	r12		;

0000b12c <__mspabi_slli>:
    b12c:	0d 93       	cmp	#0,	r13	;r3 As==00
    b12e:	fc 23       	jnz	$-6      	;abs 0xb128
    b130:	30 41       	ret			

0000b132 <__mspabi_slll_15>:
    b132:	0c 5c       	rla	r12		;
    b134:	0d 6d       	rlc	r13		;

0000b136 <__mspabi_slll_14>:
    b136:	0c 5c       	rla	r12		;
    b138:	0d 6d       	rlc	r13		;

0000b13a <__mspabi_slll_13>:
    b13a:	0c 5c       	rla	r12		;
    b13c:	0d 6d       	rlc	r13		;

0000b13e <__mspabi_slll_12>:
    b13e:	0c 5c       	rla	r12		;
    b140:	0d 6d       	rlc	r13		;

0000b142 <__mspabi_slll_11>:
    b142:	0c 5c       	rla	r12		;
    b144:	0d 6d       	rlc	r13		;

0000b146 <__mspabi_slll_10>:
    b146:	0c 5c       	rla	r12		;
    b148:	0d 6d       	rlc	r13		;

0000b14a <__mspabi_slll_9>:
    b14a:	0c 5c       	rla	r12		;
    b14c:	0d 6d       	rlc	r13		;

0000b14e <__mspabi_slll_8>:
    b14e:	0c 5c       	rla	r12		;
    b150:	0d 6d       	rlc	r13		;

0000b152 <__mspabi_slll_7>:
    b152:	0c 5c       	rla	r12		;
    b154:	0d 6d       	rlc	r13		;

0000b156 <__mspabi_slll_6>:
    b156:	0c 5c       	rla	r12		;
    b158:	0d 6d       	rlc	r13		;

0000b15a <__mspabi_slll_5>:
    b15a:	0c 5c       	rla	r12		;
    b15c:	0d 6d       	rlc	r13		;

0000b15e <__mspabi_slll_4>:
    b15e:	0c 5c       	rla	r12		;
    b160:	0d 6d       	rlc	r13		;

0000b162 <__mspabi_slll_3>:
    b162:	0c 5c       	rla	r12		;
    b164:	0d 6d       	rlc	r13		;

0000b166 <__mspabi_slll_2>:
    b166:	0c 5c       	rla	r12		;
    b168:	0d 6d       	rlc	r13		;

0000b16a <__mspabi_slll_1>:
    b16a:	0c 5c       	rla	r12		;
    b16c:	0d 6d       	rlc	r13		;
    b16e:	30 41       	ret			
    b170:	3e 53       	add	#-1,	r14	;r3 As==11
    b172:	0c 5c       	rla	r12		;
    b174:	0d 6d       	rlc	r13		;

0000b176 <__mspabi_slll>:
    b176:	0e 93       	cmp	#0,	r14	;r3 As==00
    b178:	fb 23       	jnz	$-8      	;abs 0xb170
    b17a:	30 41       	ret			

0000b17c <__mspabi_srli_15>:
    b17c:	12 c3       	clrc			
    b17e:	0c 10       	rrc	r12		;

0000b180 <__mspabi_srli_14>:
    b180:	12 c3       	clrc			
    b182:	0c 10       	rrc	r12		;

0000b184 <__mspabi_srli_13>:
    b184:	12 c3       	clrc			
    b186:	0c 10       	rrc	r12		;

0000b188 <__mspabi_srli_12>:
    b188:	12 c3       	clrc			
    b18a:	0c 10       	rrc	r12		;

0000b18c <__mspabi_srli_11>:
    b18c:	12 c3       	clrc			
    b18e:	0c 10       	rrc	r12		;

0000b190 <__mspabi_srli_10>:
    b190:	12 c3       	clrc			
    b192:	0c 10       	rrc	r12		;

0000b194 <__mspabi_srli_9>:
    b194:	12 c3       	clrc			
    b196:	0c 10       	rrc	r12		;

0000b198 <__mspabi_srli_8>:
    b198:	12 c3       	clrc			
    b19a:	0c 10       	rrc	r12		;

0000b19c <__mspabi_srli_7>:
    b19c:	12 c3       	clrc			
    b19e:	0c 10       	rrc	r12		;

0000b1a0 <__mspabi_srli_6>:
    b1a0:	12 c3       	clrc			
    b1a2:	0c 10       	rrc	r12		;

0000b1a4 <__mspabi_srli_5>:
    b1a4:	12 c3       	clrc			
    b1a6:	0c 10       	rrc	r12		;

0000b1a8 <__mspabi_srli_4>:
    b1a8:	12 c3       	clrc			
    b1aa:	0c 10       	rrc	r12		;

0000b1ac <__mspabi_srli_3>:
    b1ac:	12 c3       	clrc			
    b1ae:	0c 10       	rrc	r12		;

0000b1b0 <__mspabi_srli_2>:
    b1b0:	12 c3       	clrc			
    b1b2:	0c 10       	rrc	r12		;

0000b1b4 <__mspabi_srli_1>:
    b1b4:	12 c3       	clrc			
    b1b6:	0c 10       	rrc	r12		;
    b1b8:	30 41       	ret			
    b1ba:	3d 53       	add	#-1,	r13	;r3 As==11
    b1bc:	12 c3       	clrc			
    b1be:	0c 10       	rrc	r12		;

0000b1c0 <__mspabi_srli>:
    b1c0:	0d 93       	cmp	#0,	r13	;r3 As==00
    b1c2:	fb 23       	jnz	$-8      	;abs 0xb1ba
    b1c4:	30 41       	ret			

0000b1c6 <__mspabi_srll_15>:
    b1c6:	12 c3       	clrc			
    b1c8:	0d 10       	rrc	r13		;
    b1ca:	0c 10       	rrc	r12		;

0000b1cc <__mspabi_srll_14>:
    b1cc:	12 c3       	clrc			
    b1ce:	0d 10       	rrc	r13		;
    b1d0:	0c 10       	rrc	r12		;

0000b1d2 <__mspabi_srll_13>:
    b1d2:	12 c3       	clrc			
    b1d4:	0d 10       	rrc	r13		;
    b1d6:	0c 10       	rrc	r12		;

0000b1d8 <__mspabi_srll_12>:
    b1d8:	12 c3       	clrc			
    b1da:	0d 10       	rrc	r13		;
    b1dc:	0c 10       	rrc	r12		;

0000b1de <__mspabi_srll_11>:
    b1de:	12 c3       	clrc			
    b1e0:	0d 10       	rrc	r13		;
    b1e2:	0c 10       	rrc	r12		;

0000b1e4 <__mspabi_srll_10>:
    b1e4:	12 c3       	clrc			
    b1e6:	0d 10       	rrc	r13		;
    b1e8:	0c 10       	rrc	r12		;

0000b1ea <__mspabi_srll_9>:
    b1ea:	12 c3       	clrc			
    b1ec:	0d 10       	rrc	r13		;
    b1ee:	0c 10       	rrc	r12		;

0000b1f0 <__mspabi_srll_8>:
    b1f0:	12 c3       	clrc			
    b1f2:	0d 10       	rrc	r13		;
    b1f4:	0c 10       	rrc	r12		;

0000b1f6 <__mspabi_srll_7>:
    b1f6:	12 c3       	clrc			
    b1f8:	0d 10       	rrc	r13		;
    b1fa:	0c 10       	rrc	r12		;

0000b1fc <__mspabi_srll_6>:
    b1fc:	12 c3       	clrc			
    b1fe:	0d 10       	rrc	r13		;
    b200:	0c 10       	rrc	r12		;

0000b202 <__mspabi_srll_5>:
    b202:	12 c3       	clrc			
    b204:	0d 10       	rrc	r13		;
    b206:	0c 10       	rrc	r12		;

0000b208 <__mspabi_srll_4>:
    b208:	12 c3       	clrc			
    b20a:	0d 10       	rrc	r13		;
    b20c:	0c 10       	rrc	r12		;

0000b20e <__mspabi_srll_3>:
    b20e:	12 c3       	clrc			
    b210:	0d 10       	rrc	r13		;
    b212:	0c 10       	rrc	r12		;

0000b214 <__mspabi_srll_2>:
    b214:	12 c3       	clrc			
    b216:	0d 10       	rrc	r13		;
    b218:	0c 10       	rrc	r12		;

0000b21a <__mspabi_srll_1>:
    b21a:	12 c3       	clrc			
    b21c:	0d 10       	rrc	r13		;
    b21e:	0c 10       	rrc	r12		;
    b220:	30 41       	ret			
    b222:	3e 53       	add	#-1,	r14	;r3 As==11
    b224:	12 c3       	clrc			
    b226:	0d 10       	rrc	r13		;
    b228:	0c 10       	rrc	r12		;

0000b22a <__mspabi_srll>:
    b22a:	0e 93       	cmp	#0,	r14	;r3 As==00
    b22c:	fa 23       	jnz	$-10     	;abs 0xb222
    b22e:	30 41       	ret			

0000b230 <__mulhi2_f5>:
    b230:	02 12       	push	r2		;
    b232:	32 c2       	dint			
    b234:	03 43       	nop			
    b236:	82 4c c0 04 	mov	r12,	&0x04c0	;
    b23a:	82 4d c8 04 	mov	r13,	&0x04c8	;
    b23e:	1c 42 ca 04 	mov	&0x04ca,r12	;0x04ca
    b242:	00 13       	reti			

0000b244 <__mulsi2_f5>:
    b244:	02 12       	push	r2		;
    b246:	32 c2       	dint			
    b248:	03 43       	nop			
    b24a:	82 4c d0 04 	mov	r12,	&0x04d0	;
    b24e:	82 4d d2 04 	mov	r13,	&0x04d2	;
    b252:	82 4e e0 04 	mov	r14,	&0x04e0	;
    b256:	82 4f e2 04 	mov	r15,	&0x04e2	;
    b25a:	1c 42 e4 04 	mov	&0x04e4,r12	;0x04e4
    b25e:	1d 42 e6 04 	mov	&0x04e6,r13	;0x04e6
    b262:	00 13       	reti			

0000b264 <memset>:
    b264:	0f 4c       	mov	r12,	r15	;
    b266:	0e 5c       	add	r12,	r14	;
    b268:	0f 9e       	cmp	r14,	r15	;
    b26a:	04 24       	jz	$+10     	;abs 0xb274
    b26c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    b270:	1f 53       	inc	r15		;
    b272:	fa 3f       	jmp	$-10     	;abs 0xb268
    b274:	30 41       	ret			

0000b276 <memmove>:
    b276:	0a 15       	pushm	#1,	r10	;16-bit words
    b278:	0d 9c       	cmp	r12,	r13	;
    b27a:	10 2c       	jc	$+34     	;abs 0xb29c
    b27c:	0b 4d       	mov	r13,	r11	;
    b27e:	0b 5e       	add	r14,	r11	;
    b280:	0c 9b       	cmp	r11,	r12	;
    b282:	0c 2c       	jc	$+26     	;abs 0xb29c
    b284:	0d 4e       	mov	r14,	r13	;
    b286:	3d 53       	add	#-1,	r13	;r3 As==11
    b288:	3d 93       	cmp	#-1,	r13	;r3 As==11
    b28a:	13 24       	jz	$+40     	;abs 0xb2b2
    b28c:	0f 4d       	mov	r13,	r15	;
    b28e:	0f 8e       	sub	r14,	r15	;
    b290:	0f 5b       	add	r11,	r15	;
    b292:	0a 4c       	mov	r12,	r10	;
    b294:	0a 5d       	add	r13,	r10	;
    b296:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    b29a:	f5 3f       	jmp	$-20     	;abs 0xb286
    b29c:	0f 43       	clr	r15		;
    b29e:	0f 9e       	cmp	r14,	r15	;
    b2a0:	08 24       	jz	$+18     	;abs 0xb2b2
    b2a2:	0a 4d       	mov	r13,	r10	;
    b2a4:	0a 5f       	add	r15,	r10	;
    b2a6:	0b 4c       	mov	r12,	r11	;
    b2a8:	0b 5f       	add	r15,	r11	;
    b2aa:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    b2ae:	1f 53       	inc	r15		;
    b2b0:	f6 3f       	jmp	$-18     	;abs 0xb29e
    b2b2:	0a 17       	popm	#1,	r10	;16-bit words
    b2b4:	30 41       	ret			

0000b2b6 <__do_global_ctors_aux>:
    b2b6:	0a 15       	pushm	#1,	r10	;16-bit words
    b2b8:	1c 42 18 82 	mov	&0x8218,r12	;0x8218
    b2bc:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b2be:	08 24       	jz	$+18     	;abs 0xb2d0
    b2c0:	3a 40 18 82 	mov	#33304,	r10	;#0x8218
    b2c4:	8c 12       	call	r12		;
    b2c6:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    b2ca:	2c 4a       	mov	@r10,	r12	;
    b2cc:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b2ce:	fa 23       	jnz	$-10     	;abs 0xb2c4
    b2d0:	0a 17       	popm	#1,	r10	;16-bit words
    b2d2:	30 41       	ret			

0000b2d4 <call___do_global_ctors_aux>:
    b2d4:	30 41       	ret			

0000b2d6 <__msp430_init>:
    b2d6:	b0 12 1c 83 	call	#33564		;#0x831c
    b2da:	b0 12 b6 b2 	call	#45750		;#0xb2b6
    b2de:	b0 12 5c 82 	call	#33372		;#0x825c
    b2e2:	b0 12 50 82 	call	#33360		;#0x8250
    b2e6:	30 41       	ret			

0000b2e8 <__msp430_fini>:
    b2e8:	b0 12 68 82 	call	#33384		;#0x8268
    b2ec:	b0 12 ce 82 	call	#33486		;#0x82ce
    b2f0:	30 41       	ret			
