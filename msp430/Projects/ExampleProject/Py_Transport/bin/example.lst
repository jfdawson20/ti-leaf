
../bin/example.elf:     file format elf32-msp430

SYMBOL TABLE:
0000ffe6 l    d  __interrupt_vector_52	00000000 __interrupt_vector_52
0000fffa l    d  __interrupt_vector_62	00000000 __interrupt_vector_62
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008224 l    d  .text	00000000 .text
00002400 l    d  .data	00000000 .data
00002404 l    d  .bss	00000000 .bss
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line.text.udivmodhi4	00000000 .debug_line.text.udivmodhi4
00000000 l    d  .debug_line.text.__divhi3	00000000 .debug_line.text.__divhi3
00000000 l    d  .debug_line.text.__udivhi3	00000000 .debug_line.text.__udivhi3
00000000 l    d  .debug_line.text.udivmodsi4	00000000 .debug_line.text.udivmodsi4
00000000 l    d  .debug_line.text.__divsi3	00000000 .debug_line.text.__divsi3
00000000 l    d  .debug_line.text.__udivsi3	00000000 .debug_line.text.__udivsi3
00000000 l    d  .debug_line.text.memset	00000000 .debug_line.text.memset
00000000 l    d  .debug_line.text.memmove	00000000 .debug_line.text.memmove
00000000 l    df *ABS*	00000000 UsbIsr.c
00000000 l    df *ABS*	00000000 usbserial.c
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
0000827a l       .text	00000000 _msp430_run_array
00008288 l       .text	00000000 _msp430_run_done
00000000 l       .debug_line	00000000 L0
00008228 l       .text	00000000 L0
00008290 l       .text	00000000 L0
0000b398 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008228 l       .text	00000000 L0
00008254 l       .text	00000000 L0
00008290 l       .text	00000000 L0
0000b394 l       .text	00000000 L0
0000b398 l       .text	00000000 L0
00000000 l       .debug_aranges	00000000 L0
00008224 l       .text	00000000 L0
00008228 l       .text	00000000 L0
00008254 l       .text	00000000 L0
00008290 l       .text	00000000 L0
0000b394 l       .text	00000000 L0
0000b398 l       .text	00000000 L0
00000000 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 transport.c
00002416 l     O .bss	00000040 buffer
00000000 l    df *ABS*	00000000 descriptors.c
00000000 l    df *ABS*	00000000 usb.c
0000245b l     O .bss	00000001 bRemoteWakeup
00002465 l     O .bss	00000001 bConfigurationNumber
00002464 l     O .bss	00000001 bInterfaceNumber
0000245e l     O .bss	00000001 bHostAskMoreDataThanAvailable
00002462 l     O .bss	00000002 pbIEP0Buffer
00002460 l     O .bss	00000002 pbOEP0Buffer
00000000 l    df *ABS*	00000000 gpio.c
000081f6 l     O .rodata	0000001c GPIO_PORT_TO_BASE
00000000 l    df *ABS*	00000000 crtstuff.c
0000821c l     O .rodata	00000000 __CTOR_LIST__
00008220 l     O .rodata	00000000 __DTOR_LIST__
00008214 l     O .rodata	00000000 __EH_FRAME_BEGIN__
00002400 l     O .data	00000000 __JCR_LIST__
0000b39e l     O .text	00000000 __TMC_LIST__
0000828a l       .text	00000000 deregister_tm_clones
000082a8 l       .text	00000000 register_tm_clones
000082d2 l       .text	00000000 __do_global_dtors_aux
00002404 l     O .bss	00000001 completed.2761
00002406 l     O .bss	00000002 dtor_idx.2763
0000831e l       .text	00000000 call___do_global_dtors_aux
00008320 l       .text	00000000 frame_dummy
00002408 l     O .bss	0000000e object.2776
0000834e l       .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 crtstuff.c
0000821e l     O .rodata	00000000 __CTOR_END__
00008214 l     O .rodata	00000000 __FRAME_END__
00002400 l     O .data	00000000 __JCR_END__
0000b362 l       .text	00000000 __do_global_ctors_aux
0000b380 l       .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000312 l       .debug_line	00000000 L0
00008236 l       .text	00000000 L0
000000d0 l       .debug_aranges	00000000 L0
00008228 l       .text	00000000 L0
00008236 l       .text	00000000 L0
00000653 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_movedata.o
00000396 l       .debug_line	00000000 L0
0000824a l       .text	00000000 L0
000000f0 l       .debug_aranges	00000000 L0
00008236 l       .text	00000000 L0
0000824a l       .text	00000000 L0
00000725 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_main.o
00000426 l       .debug_line	00000000 L0
00008254 l       .text	00000000 L0
00000110 l       .debug_aranges	00000000 L0
0000824a l       .text	00000000 L0
00008254 l       .text	00000000 L0
000007f7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 hal.c
00002456 l     O .bss	00000004 CLOCKFREQ
00000000 l    df *ABS*	00000000 usbConstructs.c
00000000 l    df *ABS*	00000000 usbEventHandling.c
00000000 l    df *ABS*	00000000 usbdma.c
00000000 l    df *ABS*	00000000 UsbCdc.c
00002476 l     O .bss	0000000a CdcWriteCtrl
00002466 l     O .bss	00000010 CdcReadCtrl
00002480 l     O .bss	00000008 CdcControl
00000000 l    df *ABS*	00000000 tlv.c
00000000 l    df *ABS*	00000000 wdt_a.c
00000000 l    df *ABS*	00000000 dma.c
00000000 l    df *ABS*	00000000 sfr.c
00000000 l    df *ABS*	00000000 ucs.c
0000a4cc l       .text	0000011a privateUCSSourceClockFromDCO
0000248c l     O .bss	00000004 privateXT1ClockFrequency
00002488 l     O .bss	00000004 privateXT2ClockFrequency
0000a5da l       .text	000000f4 privateUCSComputeCLKFrequency
00000000 l    df *ABS*	00000000 pmm.c
00000000 l    df *ABS*	00000000 lib2divHI.c
0000b068 l       .text	00000000 L0
0000b0b0 l       .text	00000000 L0
0000b0b2 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 lib2divSI.c
0000b134 l       .text	00000000 L0
0000b1aa l       .text	00000000 L0
0000b1b2 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib2hw_mul.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memset.c
0000b324 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 memmove.c
0000b366 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crtn.o
000005bc l       .debug_line	00000000 L0
0000b394 l       .text	00000000 L0
0000b39e l       .text	00000000 L0
0000b38a l       .text	00000000 L0
0000b394 l       .text	00000000 L0
0000b39c l       .text	00000000 L0
0000b39e l       .text	00000000 L0
00000150 l       .debug_aranges	00000000 L0
0000b38a l       .text	00000000 L0
0000b394 l       .text	00000000 L0
0000b39c l       .text	00000000 L0
0000b39e l       .text	00000000 L0
000009c7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 system_pre_init.c
00000000 l    df *ABS*	00000000 
00002180 l       *ABS*	00000000 pbXBufferAddressEp86
00001ec0 l       *ABS*	00000000 pbYBufferAddressEp83
00002000 l       *ABS*	00000000 pbXBufferAddressEp5
00002080 l       *ABS*	00000000 pbXBufferAddressEp85
00001c40 l       *ABS*	00000000 pbYBufferAddressEp1
00001d00 l       *ABS*	00000000 pbXBufferAddressEp2
000021c0 l       *ABS*	00000000 pbYBufferAddressEp86
00001d80 l       *ABS*	00000000 pbXBufferAddressEp82
000022c0 l       *ABS*	00000000 pbYBufferAddressEp87
00002040 l       *ABS*	00000000 pbYBufferAddressEp5
00002280 l       *ABS*	00000000 pbXBufferAddressEp87
00001dc0 l       *ABS*	00000000 pbYBufferAddressEp82
00002140 l       *ABS*	00000000 pbYBufferAddressEp6
00001d40 l       *ABS*	00000000 pbYBufferAddressEp2
00008224 l       .text	00000000 _start
00002200 l       *ABS*	00000000 pbXBufferAddressEp7
00001c00 l       *ABS*	00000000 pbXBufferAddressEp1
00002100 l       *ABS*	00000000 pbXBufferAddressEp6
000020c0 l       *ABS*	00000000 pbYBufferAddressEp85
00001fc0 l       *ABS*	00000000 pbYBufferAddressEp84
00002240 l       *ABS*	00000000 pbYBufferAddressEp7
00001c80 l       *ABS*	00000000 pbXBufferAddressEp81
00001f40 l       *ABS*	00000000 pbYBufferAddressEp4
00001f80 l       *ABS*	00000000 pbXBufferAddressEp84
00001cc0 l       *ABS*	00000000 pbYBufferAddressEp81
00001f00 l       *ABS*	00000000 pbXBufferAddressEp4
00001e00 l       *ABS*	00000000 pbXBufferAddressEp3
00001e40 l       *ABS*	00000000 pbYBufferAddressEp3
00001e80 l       *ABS*	00000000 pbXBufferAddressEp83
0000914e g       .text	0000004c usbSetEndpointFeature
0000851a g       .text	00000038 TILEAF_BoardInit
0000ad1e g       .text	00000016 PMM_enableSvmHInterrupt
00002378 g       *ABS*	00000000 abIEP0Buffer
0000b1f4 g       .text	00000000 .hidden __mspabi_slll_9
0000a402 g       .text	0000000c DMA_enableTransfers
0000b1e4 g       .text	00000000 .hidden __mspabi_slll_13
0000a904 g       .text	00000006 UCS_turnOffXT1
0000ac72 g       .text	00000016 PMM_enableSvsHSvmH
00008dde g       .text	00000030 USB_suspend
0000ac5c g       .text	00000016 PMM_disableSvsLSvmL
0000b23e g       .text	00000000 .hidden __mspabi_srli_9
0000a4b0 g       .text	0000000e SFR_setNMIEdge
00002388 g       *ABS*	00000000 tOutputEndPointDescriptorBlock
0000a44e g       .text	0000000c DMA_getNMIAbortStatus
0000b28e g       .text	00000000 .hidden __mspabi_srll_10
00008e22 g       .text	0000000a usbStallOEP0
0000ae76 g       .text	000000d0 PMM_setVCoreUp
00009136 g       .text	0000001a usbSetDeviceFeature
0000a236 g       .text	0000002a GPIO_setAsInputPinWithPullUpResistor
00008d48 g       .text	000000a2 USB_getConnectionState
0000a284 g       .text	0000001a GPIO_enableInterrupt
00008cce g       .text	00000022 USB_disconnect
0000a3d2 g       .text	00000030 DMA_setDstAddress
00002490 g     O .bss	00000008 abUsbRequestIncomingData
0000a494 g       .text	00000006 SFR_getInterruptStatus
0000b23a g       .text	00000000 .hidden __mspabi_srli_10
0000a860 g       .text	00000050 UCS_turnOnHFXT1WithTimeout
0000b1be g       .text	00000000 .hidden __mspabi_slli_9
0000905e g       .text	0000007a usbGetEndpointStatus
0000b226 g       .text	00000000 .hidden __mspabi_srli_15
00008924 g       .text	00000036 OEP0InterruptHandler
000084dc g       .text	0000003e USBHAL_initClocks
0000b322 g       .text	00000044 memmove
0000a12c g       .text	00000014 WDT_A_initIntervalTimer
0000a29e g       .text	0000001a GPIO_disableInterrupt
0000a4be g       .text	0000000e SFR_setResetNMIPinFunction
000087c0 g       .text	00000004 USB_handleResetEvent
0000a2ee g       .text	0000002c GPIO_selectInterruptEdge
0000ab1a g       .text	00000006 UCS_turnOnSMCLK
00008f26 g       .text	00000046 usbClearEndpointFeature
000094f6 g       .text	00000024 memcpyV
0000b252 g       .text	00000000 .hidden __mspabi_srli_4
0000b1b8 g       .text	00000000 .hidden __mspabi_slli_12
0000a9d2 g       .text	00000108 UCS_initFLL
0000a392 g       .text	0000000a DMA_setTransferSize
0000b028 g       .text	00000040 .hidden udivmodhi4
00008eb6 g       .text	00000052 usbReceiveNextPacketOnOEP0
0000844e g       .text	0000008e USBHAL_initPorts
00009f56 g       .text	00000064 TLV_getInfo
0000a1be g       .text	0000001a GPIO_setOutputHighOnPin
000095c2 g       .text	00000030 CdcResetData
000087d0 g       .text	00000008 USBCDC_handleDataReceived
0000b246 g       .text	00000000 .hidden __mspabi_srli_7
0000b2a0 g       .text	00000000 .hidden __mspabi_srll_7
0000b2b8 g       .text	00000000 .hidden __mspabi_srll_3
00008750 g       .text	00000052 USBCDC_receiveDataInBuffer
00008a9c g       .text	00000006 USB_getVersion
0000a9ca g       .text	00000008 UCS_turnOffXT2
0000ac30 g       .text	00000016 PMM_disableSvmH
0000a102 g       .text	00000016 WDT_A_resetTimer
0000b39e g     O .text	00000000 .hidden __TMC_END__
0000b27c g       .text	00000000 .hidden __mspabi_srll_13
00002498 g     O .bss	00000008 abUsbRequestReturnData
00008222 g     O .rodata	00000000 .hidden __DTOR_END__
0000245a g     O .bss	00000001 bCDCDataReceived_event
0000a140 g       .text	0000001e GPIO_setAsOutputPin
00008218 g       .rodata	00000000 __fini_array_end
0000ab96 g       .text	00000016 PMM_enableSvsL
0000b232 g       .text	00000000 .hidden __mspabi_srli_12
0000a444 g       .text	0000000a DMA_clearInterrupt
00009af0 g       .text	00000132 CdcToBufferFromHost
00008224 g     F .text	00000004 __crt0_start
0000a488 g       .text	00000006 SFR_enableInterrupt
00002370 g       *ABS*	00000000 abOEP0Buffer
0000b1ec g       .text	00000000 .hidden __mspabi_slll_11
0000b1dc g       .text	00000000 .hidden __mspabi_slll_15
000090f4 g       .text	0000002c usbSetConfiguration
0000b1b4 g       .text	00000000 .hidden __mspabi_slli_14
0000acf2 g       .text	00000016 PMM_enableSvsHReset
0000ad4a g       .text	00000014 PMM_clearPMMIFGS
0000b1c8 g       .text	00000000 .hidden __mspabi_slli_4
00008228 g     F .text	0000000e __crt0_init_bss
000094a6 g       .text	00000038 USB_setup
000000ca g       *ABS*	00000000 __bsssize
0000b210 g       .text	00000000 .hidden __mspabi_slll_2
000087a4 g       .text	00000014 USB_handleVbusOnEvent
0000b2dc g     F .text	00000014 .hidden __mulhi2_f5
000087dc g       .text	00000004 USBCDC_handleReceiveCompleted
0000ac04 g       .text	00000016 PMM_disableSvsH
000090d2 g       .text	00000024 usbSetAddress
00008ff8 g       .text	0000001e usbGetInterface
00008e2c g       .text	00000072 usbSendNextPacketOnIEP0
0000824a g     F .text	0000000a __crt0_call_init_then_main
00009256 g       .text	0000001a usbDisableOutEndpointInterrupt
00009c88 g       .text	00000082 USBCDC_rejectData
0000b1d6 g       .text	00000000 .hidden __mspabi_slli
0000ac46 g       .text	00000016 PMM_enableSvsLSvmL
0000a40e g       .text	0000000c DMA_disableTransfers
0000ac9e g       .text	00000016 PMM_enableSvsLReset
00008f7a g       .text	00000016 usbGetDeviceDescriptor
00008908 g       .text	0000001e IEP0InterruptHandler
00009276 g       .text	000000dc USB_determineFreq
0000b2ac g       .text	00000000 .hidden __mspabi_srll_5
0000ab3e g       .text	0000001e UCS_getSMCLK
0000b022 g       .text	00000006 PMM_getInterruptStatus
0000b26a g       .text	00000000 .hidden __mspabi_srli
0000ad9e g       .text	00000020 PMM_disableSvsLInLPMFastWake
0000a6c0 g       .text	00000012 UCS_setExternalClockSource
00002402 g     O .data	00000002 VERSION
0000957c g       .text	00000046 USB_initMemcpy
0000a41a g       .text	0000000a DMA_startTransfer
00008350 g       .text	0000002a WaitForCommand
0000ac1a g       .text	00000016 PMM_enableSvmH
00009814 g       .text	00000044 USBCDC_abortSend
0000a7de g       .text	0000003e UCS_bypassXT1
0000a1f2 g       .text	0000001a GPIO_toggleOutputOnPin
0000b288 g       .text	00000000 .hidden __mspabi_srll_11
0000a9a0 g       .text	0000002c UCS_bypassXT2WithTimeout
000091b4 g       .text	00000086 usbDecodeAndProcessUsbRequest
0000b204 g       .text	00000000 .hidden __mspabi_slll_5
00009d08 g       .text	000000b2 USBCDC_getInterfaceStatus
0000a6d2 g       .text	000000a8 UCS_initClockSignal
0000b1ba g       .text	00000000 .hidden __mspabi_slli_11
000087e8 g       .text	00000048 SetupPacketInterruptHandler
0000ae14 g       .text	00000016 PMM_disableSvsHInLPMNormPerf
0000b1ca g       .text	00000000 .hidden __mspabi_slli_3
000024a0 g     O .bss	00000022 abramSerialStringDescriptor
0000b2f0 g     F .text	00000020 .hidden __mulsi2_f5
0000b24e g       .text	00000000 .hidden __mspabi_srli_5
00009fb8 g       .text	0000004c TLV_getMemory
00008d10 g       .text	0000003a USB_getConnectionInformation
000024c2 g     O .bss	00000002 wUsbEventMask
0000a45a g       .text	0000000a DMA_clearNMIAbort
00000000  w      *UND*	00000000 __deregister_frame_info
0000a818 g       .text	0000004c UCS_turnOnLFXT1WithTimeout
000024ce g       .MP430.attributes	00000000 end
00009040 g       .text	0000001e usbGetInterfaceStatus
00008b7c g       .text	00000138 USB_reset
00008fa6 g       .text	0000005a usbGetStringDescriptor
00008182 g     O .rodata	00000043 abromConfigurationDescriptorGroup
0000a318 g       .text	0000002a GPIO_setDriveStrength
0000a182 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionOutputPin
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000a8ae g       .text	0000005a UCS_bypassXT1WithTimeout
0000b1cc g       .text	00000000 .hidden __mspabi_slli_2
0000a076 g       .text	00000066 TLV_getInterrupt
0000a76e g       .text	0000003a UCS_turnOnLFXT1
0000911e g       .text	0000001a usbClearDeviceFeature
0000a42e g       .text	0000000a DMA_disableInterrupt
0000b2a6 g       .text	00000000 .hidden __mspabi_srll_6
0000aafc g       .text	00000006 UCS_enableClockRequest
000081c5 g     O .rodata	00000012 abromDeviceDescriptor
00008e0e g       .text	0000000e usbStallEndpoint0
0000b0b2 g       .text	00000082 .hidden udivmodsi4
0000a0d8 g       .text	00000018 WDT_A_hold
0000a482 g       .text	00000006 DMA_disableNMIAbort
000024c4 g     O .bss	00000002 wBytesRemainingOnIEP0
0000acca g       .text	00000014 PMM_enableSvmLInterrupt
0000a46a g       .text	00000006 DMA_enableTransferDuringReadModifyWrite
0000a90a g       .text	00000036 UCS_turnOnXT2
0000b200 g       .text	00000000 .hidden __mspabi_slll_6
0000ae60 g       .text	00000016 PMM_optimizeSvsHInLPMFullPerf
00008004 g     O .rodata	000000e4 tUsbRequestList
0000ab14 g       .text	00000006 UCS_turnOffSMCLK
0000abac g       .text	00000016 PMM_disableSvsL
0000b208 g       .text	00000000 .hidden __mspabi_slll_4
0000967e g       .text	0000019c CdcToHostFromBuffer
0000b1f8 g       .text	00000000 .hidden __mspabi_slll_8
0000826c g     F .text	00000000 _msp430_run_fini_array
000024c6 g     O .bss	00000002 wBytesRemainingOnOEP0
0000b25e g       .text	00000000 .hidden __mspabi_srli_1
000087c8 g       .text	00000004 USB_handleResumeEvent
0000b276 g       .text	00000000 .hidden __mspabi_srll_14
0000b1c4 g       .text	00000000 .hidden __mspabi_slli_6
00009344 g       .text	00000084 USB_init
00008e1c g       .text	00000006 usbClearOEP0ByteCount
000088a2 g       .text	0000006a PWRVBUSonHandler
0000a470 g       .text	00000006 DMA_enableRoundRobinPriority
000091a6 g       .text	0000000e usbInvalidRequest
0000b22a g       .text	00000000 .hidden __mspabi_srli_14
0000abd8 g       .text	00000016 PMM_disableSvmL
00000004 g       *ABS*	00000000 __romdatacopysize
0000ab0e g       .text	00000006 UCS_clearFaultFlag
00009c36 g       .text	00000052 USBCDC_abortReceive
00008552 g       .text	0000004e UNMI_ISR
0000a49a g       .text	00000006 SFR_clearInterrupt
000023c8 g       *ABS*	00000000 tInputEndPointDescriptorBlock
00000920 g       *ABS*	00000000 tEndPoint0DescriptorBlock
0000a476 g       .text	00000006 DMA_disableRoundRobinPriority
000087d8 g       .text	00000004 USBCDC_handleSendCompleted
0000b1e0 g       .text	00000000 .hidden __mspabi_slll_14
0000a000 g       .text	0000007c TLV_getPeripheral
00009c1a g       .text	0000001c CdcIsReceiveInProgress
0000b236 g       .text	00000000 .hidden __mspabi_srli_11
0000b1fc g       .text	00000000 .hidden __mspabi_slll_7
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008218 g       .rodata	00000000 __fini_array_start
0000a2b8 g       .text	0000001c GPIO_getInterruptStatus
00009518 g       .text	00000064 memcpyDMA
000086c2 g       .text	00000094 USBCDC_sendDataInBackground
0000a4a0 g       .text	00000010 SFR_setResetPinPullResistor
00008958 g       .text	00000162 iUsbInterruptHandler
0000b064 g       .text	0000004c .hidden __mspabi_divi
000098c8 g       .text	0000023a USBCDC_receiveData
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000a3a6 g       .text	0000002c DMA_setSrcAddress
000080f8 g     O .rodata	0000008a abromStringDescriptor
0000b382 g       .text	00000000 __msp430_init
0000ae4a g       .text	00000016 PMM_optimizeSvsLInLPMFastWake
0000b310 g       .text	00000014 memset
0000b1e8 g       .text	00000000 .hidden __mspabi_slll_12
000083be g       .text	00000094 main
0000a7a6 g       .text	0000003a UCS_turnOnHFXT1
0000a118 g       .text	00000014 WDT_A_initWatchdogTimer
0000a1a0 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionInputPin
0000b130 g       .text	0000007a .hidden __mspabi_divli
00009194 g       .text	00000012 usbSetInterface
0000b2b2 g       .text	00000000 .hidden __mspabi_srll_4
00008218 g       .rodata	00000000 __init_array_end
0000b25a g       .text	00000000 .hidden __mspabi_srli_2
0000ab5c g       .text	00000016 UCS_getMCLK
0000b1ce g       .text	00000000 .hidden __mspabi_slli_1
0000aac2 g       .text	0000003c UCS_initFLLSettle
00009ed4 g       .text	00000082 Handler_SetLineCoding
0000b0aa g       .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
00008f90 g       .text	00000016 usbGetConfigurationDescriptor
0000a438 g       .text	0000000c DMA_getInterruptStatus
0000a2d4 g       .text	0000001a GPIO_clearInterrupt
0000b20c g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000b39e g       .text	00000000 __msp430_fini_end
00009270 g       .text	00000006 usbRestoreOutEndpointInterrupt
000024c8 g     O .bss	00000001 bStatusAction
000087b8 g       .text	00000008 USB_handleVbusOffEvent
0000b282 g       .text	00000000 .hidden __mspabi_srll_12
00008cb4 g       .text	0000001a USB_connect
0000b1c6 g       .text	00000000 .hidden __mspabi_slli_5
00009016 g       .text	0000002a usbGetDeviceStatus
0000b39e g       *ABS*	00000000 __romdatastart
00008e94 g       .text	00000024 usbSendDataPacketOnEP0
000024ca g     O .bss	00000002 USB_RX_memcpy
0000b1b6 g       .text	00000000 .hidden __mspabi_slli_13
00009fb2 g       .text	00000006 TLV_getDeviceType
0000a340 g       .text	00000054 DMA_init
0000245c g     O .bss	00000001 bEnumerationStatus
000085d8 g       .text	0000002e SendBuffer
00008254 g     F .text	00000000 _msp430_run_init_array
00008606 g       .text	00000036 ReceiveBuffer
0000b24a g       .text	00000000 .hidden __mspabi_srli_6
0000abc2 g       .text	00000016 PMM_enableSvmL
0000a47c g       .text	00000006 DMA_enableNMIAbort
00008218 g       .rodata	00000000 __preinit_array_end
00008f04 g       .text	00000014 usbReceiveDataPacketOnEP0
0000b1bc g       .text	00000000 .hidden __mspabi_slli_10
00008b6e g       .text	00000008 USB_setEnabledEvents
0000ad34 g       .text	00000016 PMM_disableSvmHInterrupt
0000afd8 g       .text	0000004e PMM_setVCore
0000b256 g       .text	00000000 .hidden __mspabi_srli_3
000093c4 g       .text	000000ec USB_enable
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
0000af44 g       .text	00000094 PMM_setVCoreDown
00002404 g       .bss	00000000 __bssstart
00002380 g       *ABS*	00000000 tSetupPacket
0000abee g       .text	00000016 PMM_enableSvsH
0000ab20 g       .text	0000001e UCS_getACLK
0000245d g     O .bss	00000001 bFunctionSuspended
0000b220 g       .text	00000000 .hidden __mspabi_slll
0000837a g       .text	00000024 TransmitCommand
0000adbe g       .text	00000016 PMM_disableSvsLInLPMSlowWake
0000ad7e g       .text	00000020 PMM_enableSvsLInLPMSlowWake
00008f66 g       .text	00000014 usbGetConfiguration
00003400 g       .MP430.attributes	00000000 __stack
0000b294 g       .text	00000000 .hidden __mspabi_srll_9
0000a956 g       .text	0000004c UCS_turnOnXT2WithTimeout
0000a20c g       .text	0000002a GPIO_setAsInputPinWithPullDownResistor
000087e4 g       .text	00000004 USBCDC_handleSetControlLineState
000095f2 g       .text	00000092 USBCDC_sendData
00002404 g       .data	00000000 _edata
0000ad08 g       .text	00000016 PMM_disableSvsHReset
0000b394 g       .text	00000000 __msp430_init_end
0000882c g       .text	0000007a PWRVBUSoffHandler
0000b2d4 g       .text	00000000 .hidden __mspabi_srll
0000ae2a g       .text	00000020 PMM_disableSvsHInLPMFullPerf
000087e0 g       .text	00000004 USBCDC_handleSetLineCoding
0000859a g       .text	0000003e checkUSB
0000ac88 g       .text	00000016 PMM_disableSvsHSvmH
00009db8 g       .text	00000082 USBCDC_getBytesInUSBBuffer
00000000  w      *ABS*	00000000 __high_bssstart
0000b1c0 g       .text	00000000 .hidden __mspabi_slli_8
0000b270 g       .text	00000000 .hidden __mspabi_srll_15
000094de g       .text	00000018 USB_resume
0000a424 g       .text	0000000a DMA_enableInterrupt
0000a260 g       .text	00000024 GPIO_getInputPinValue
0000adf4 g       .text	00000020 PMM_enableSvsHInLPMFullPerf
0000acde g       .text	00000014 PMM_disableSvmLInterrupt
00009eb0 g       .text	0000000c usbSetLineCoding
0000ab02 g       .text	00000006 UCS_disableClockRequest
0000b1f0 g       .text	00000000 .hidden __mspabi_slll_10
00008b76 g       .text	00000006 USB_getEnabledEvents
0000b1b2 g       .text	00000000 .hidden __mspabi_slli_15
0000add4 g       .text	00000020 PMM_enableSvsHInLPMNormPerf
0000a0f0 g       .text	00000012 WDT_A_start
00008218 g       .rodata	00000000 __init_array_start
000080e8 g     O .rodata	00000010 stUsbHandle
00008cf0 g       .text	00000024 USB_forceRemoteWakeup
00009858 g       .text	00000072 CopyUsbToBuff
0000a48e g       .text	00000006 SFR_disableInterrupt
0000a93e g       .text	0000001a UCS_bypassXT2
000087cc g       .text	00000004 USB_handleEnumerationCompleteEvent
0000acb4 g       .text	00000016 PMM_disableSvsLReset
0000ad5e g       .text	00000020 PMM_enableSvsLInLPMFastWake
00009236 g       .text	0000001a usbDisableInEndpointInterrupt
0000b1a4 g       .text	0000000e .hidden __mspabi_divlu
0000a15e g       .text	00000024 GPIO_setAsInputPin
0000b22e g       .text	00000000 .hidden __mspabi_srli_13
00009250 g       .text	00000006 usbRestoreInEndpointInterrupt
00002400 g       .data	00000000 __datastart
0000b214 g       .text	00000000 .hidden __mspabi_slll_1
0000ab72 g       .text	00000024 UCS_clearAllOscFlagsWithTimeout
0000b29a g       .text	00000000 .hidden __mspabi_srll_8
00009e36 g       .text	0000007a usbGetLineCoding
0000b2c4 g       .text	00000000 .hidden __mspabi_srll_1
0000ab08 g       .text	00000006 UCS_getFaultFlagStatus
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0000a1d8 g       .text	0000001a GPIO_setOutputLowOnPin
0000b1c2 g       .text	00000000 .hidden __mspabi_slli_7
00008218 g       .rodata	00000000 __preinit_array_start
00008236 g     F .text	00000014 __crt0_movedata
0000839e g       .text	00000022 bufCopy
0000a39c g       .text	0000000a DMA_getTransferSize
00000000  w      *UND*	00000000 __register_frame_info
00008aa2 g       .text	000000b6 USB_InitSerialStringDescriptor
00008260 g     F .text	00000000 _msp430_run_preinit_array
00008b4c g       .text	00000022 USB_disable
000087c4 g       .text	00000004 USB_handleSuspendEvent
0000b2be g       .text	00000000 .hidden __mspabi_srll_2
000024cc g     O .bss	00000002 USB_TX_memcpy
000087a0 g       .text	00000004 USB_handleClockEvent
00009ebc g       .text	00000018 usbSetControlLineState
0000b394 g       .text	00000000 __msp430_fini
0000b242 g       .text	00000000 .hidden __mspabi_srli_8
00008638 g       .text	00000092 USBCDC_sendDataAndWaitTillDone
00008f18 g       .text	0000000e usbSendZeroLengthPacketOnIEP0
0000a464 g       .text	00000006 DMA_disableTransferDuringReadModifyWrite



Disassembly of section __interrupt_vector_52:

0000ffe6 <__interrupt_vector_52>:
    ffe6:	58 89       	interrupt service routine at 0x8958

Disassembly of section __interrupt_vector_62:

0000fffa <__interrupt_vector_62>:
    fffa:	52 85       	interrupt service routine at 0x8552

Disassembly of section .text:

00008224 <__crt0_start>:
    8224:	31 40 00 34 	mov	#13312,	r1	;#0x3400

00008228 <__crt0_init_bss>:
    8228:	3c 40 04 24 	mov	#9220,	r12	;#0x2404
    822c:	0d 43       	clr	r13		;
    822e:	3e 40 ca 00 	mov	#202,	r14	;#0x00ca
    8232:	b0 12 10 b3 	call	#45840		;#0xb310

00008236 <__crt0_movedata>:
    8236:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    823a:	3d 40 9e b3 	mov	#45982,	r13	;#0xb39e
    823e:	0d 9c       	cmp	r12,	r13	;
    8240:	04 24       	jz	$+10     	;abs 0x824a
    8242:	3e 40 04 00 	mov	#4,	r14	;
    8246:	b0 12 22 b3 	call	#45858		;#0xb322

0000824a <__crt0_call_init_then_main>:
    824a:	b0 12 82 b3 	call	#45954		;#0xb382
    824e:	0c 43       	clr	r12		;
    8250:	b0 12 be 83 	call	#33726		;#0x83be

00008254 <_msp430_run_init_array>:
    8254:	34 40 18 82 	mov	#33304,	r4	;#0x8218
    8258:	35 40 18 82 	mov	#33304,	r5	;#0x8218
    825c:	26 43       	mov	#2,	r6	;r3 As==10
    825e:	0d 3c       	jmp	$+28     	;abs 0x827a

00008260 <_msp430_run_preinit_array>:
    8260:	34 40 18 82 	mov	#33304,	r4	;#0x8218
    8264:	35 40 18 82 	mov	#33304,	r5	;#0x8218
    8268:	26 43       	mov	#2,	r6	;r3 As==10
    826a:	07 3c       	jmp	$+16     	;abs 0x827a

0000826c <_msp430_run_fini_array>:
    826c:	34 40 18 82 	mov	#33304,	r4	;#0x8218
    8270:	35 40 18 82 	mov	#33304,	r5	;#0x8218
    8274:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    8278:	00 3c       	jmp	$+2      	;abs 0x827a

0000827a <_msp430_run_array>:
    827a:	05 94       	cmp	r4,	r5	;
    827c:	05 24       	jz	$+12     	;abs 0x8288
    827e:	27 44       	mov	@r4,	r7	;
    8280:	04 56       	add	r6,	r4	;
    8282:	a7 12       	call	@r7		;
    8284:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x827a

00008288 <_msp430_run_done>:
    8288:	30 41       	ret			

0000828a <deregister_tm_clones>:
    828a:	3c 40 9e b3 	mov	#45982,	r12	;#0xb39e
    828e:	3c 80 9d b3 	sub	#45981,	r12	;#0xb39d
    8292:	2d 43       	mov	#2,	r13	;r3 As==10
    8294:	0d 9c       	cmp	r12,	r13	;
    8296:	07 2c       	jc	$+16     	;abs 0x82a6
    8298:	3d 40 00 00 	mov	#0,	r13	;
    829c:	0d 93       	cmp	#0,	r13	;r3 As==00
    829e:	03 24       	jz	$+8      	;abs 0x82a6
    82a0:	3c 40 9e b3 	mov	#45982,	r12	;#0xb39e
    82a4:	8d 12       	call	r13		;
    82a6:	30 41       	ret			

000082a8 <register_tm_clones>:
    82a8:	3d 40 9e b3 	mov	#45982,	r13	;#0xb39e
    82ac:	3d 80 9e b3 	sub	#45982,	r13	;#0xb39e
    82b0:	0d 11       	rra	r13		;
    82b2:	0c 4d       	mov	r13,	r12	;
    82b4:	5c 03       	rrum	#1,	r12	;
    82b6:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    82ba:	0d 5c       	add	r12,	r13	;
    82bc:	0d 11       	rra	r13		;
    82be:	0d 93       	cmp	#0,	r13	;r3 As==00
    82c0:	07 24       	jz	$+16     	;abs 0x82d0
    82c2:	3e 40 00 00 	mov	#0,	r14	;
    82c6:	0e 93       	cmp	#0,	r14	;r3 As==00
    82c8:	03 24       	jz	$+8      	;abs 0x82d0
    82ca:	3c 40 9e b3 	mov	#45982,	r12	;#0xb39e
    82ce:	8e 12       	call	r14		;
    82d0:	30 41       	ret			

000082d2 <__do_global_dtors_aux>:
    82d2:	0a 15       	pushm	#1,	r10	;16-bit words
    82d4:	c2 93 04 24 	cmp.b	#0,	&0x2404	;r3 As==00
    82d8:	20 20       	jnz	$+66     	;abs 0x831a
    82da:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82de:	3a 40 22 82 	mov	#33314,	r10	;#0x8222
    82e2:	3a 80 20 82 	sub	#33312,	r10	;#0x8220
    82e6:	0a 11       	rra	r10		;
    82e8:	3a 53       	add	#-1,	r10	;r3 As==11
    82ea:	0c 9a       	cmp	r10,	r12	;
    82ec:	0b 2c       	jc	$+24     	;abs 0x8304
    82ee:	1c 53       	inc	r12		;
    82f0:	82 4c 06 24 	mov	r12,	&0x2406	;
    82f4:	0c 5c       	rla	r12		;
    82f6:	1c 4c 20 82 	mov	-32224(r12),r12	;0xffff8220
    82fa:	8c 12       	call	r12		;
    82fc:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    8300:	0c 9a       	cmp	r10,	r12	;
    8302:	f5 2b       	jnc	$-20     	;abs 0x82ee
    8304:	b0 12 8a 82 	call	#33418		;#0x828a
    8308:	3d 40 00 00 	mov	#0,	r13	;
    830c:	0d 93       	cmp	#0,	r13	;r3 As==00
    830e:	03 24       	jz	$+8      	;abs 0x8316
    8310:	3c 40 14 82 	mov	#33300,	r12	;#0x8214
    8314:	8d 12       	call	r13		;
    8316:	d2 43 04 24 	mov.b	#1,	&0x2404	;r3 As==01
    831a:	0a 17       	popm	#1,	r10	;16-bit words
    831c:	30 41       	ret			

0000831e <call___do_global_dtors_aux>:
    831e:	30 41       	ret			

00008320 <frame_dummy>:
    8320:	3e 40 00 00 	mov	#0,	r14	;
    8324:	0e 93       	cmp	#0,	r14	;r3 As==00
    8326:	05 24       	jz	$+12     	;abs 0x8332
    8328:	3c 40 14 82 	mov	#33300,	r12	;#0x8214
    832c:	3d 40 08 24 	mov	#9224,	r13	;#0x2408
    8330:	8e 12       	call	r14		;
    8332:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8336:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    833a:	03 20       	jnz	$+8      	;abs 0x8342
    833c:	b0 12 a8 82 	call	#33448		;#0x82a8
    8340:	30 41       	ret			
    8342:	3d 40 00 00 	mov	#0,	r13	;
    8346:	0d 93       	cmp	#0,	r13	;r3 As==00
    8348:	f9 27       	jz	$-12     	;abs 0x833c
    834a:	8d 12       	call	r13		;
    834c:	f7 3f       	jmp	$-16     	;abs 0x833c

0000834e <call_frame_dummy>:
    834e:	30 41       	ret			

00008350 <WaitForCommand>:
    8350:	0a 15       	pushm	#1,	r10	;16-bit words
    8352:	0a 4c       	mov	r12,	r10	;
    8354:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    8358:	b0 12 06 86 	call	#34310		;#0x8606
    835c:	0e 4c       	mov	r12,	r14	;
    835e:	0c 93       	cmp	#0,	r12	;r3 As==00
    8360:	08 24       	jz	$+18     	;abs 0x8372
    8362:	5c 42 16 24 	mov.b	&0x2416,r12	;0x2416
    8366:	3d 43       	mov	#-1,	r13	;r3 As==11
    8368:	3c 90 00 80 	cmp	#32768,	r12	;#0x8000
    836c:	03 20       	jnz	$+8      	;abs 0x8374
    836e:	ea 43 00 00 	mov.b	#2,	0(r10)	;r3 As==10
    8372:	0d 4e       	mov	r14,	r13	;
    8374:	0c 4d       	mov	r13,	r12	;
    8376:	0a 17       	popm	#1,	r10	;16-bit words
    8378:	30 41       	ret			

0000837a <TransmitCommand>:
    837a:	3d 40 02 80 	mov	#32770,	r13	;#0x8002
    837e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    8382:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    8386:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    838a:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    838e:	cc 4d 02 00 	mov.b	r13,	2(r12)	;
    8392:	3d 40 03 00 	mov	#3,	r13	;
    8396:	b0 12 d8 85 	call	#34264		;#0x85d8
    839a:	0c 43       	clr	r12		;
    839c:	30 41       	ret			

0000839e <bufCopy>:
    839e:	0a 15       	pushm	#1,	r10	;16-bit words
    83a0:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    83a4:	0f 43       	clr	r15		;
    83a6:	4f 9e       	cmp.b	r14,	r15	;
    83a8:	08 2c       	jc	$+18     	;abs 0x83ba
    83aa:	0a 4c       	mov	r12,	r10	;
    83ac:	0a 5f       	add	r15,	r10	;
    83ae:	0b 4d       	mov	r13,	r11	;
    83b0:	0b 5f       	add	r15,	r11	;
    83b2:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    83b6:	1f 53       	inc	r15		;
    83b8:	f6 3f       	jmp	$-18     	;abs 0x83a6
    83ba:	0a 17       	popm	#1,	r10	;16-bit words
    83bc:	30 41       	ret			

000083be <main>:
    83be:	31 80 9c 00 	sub	#156,	r1	;#0x009c
    83c2:	b1 40 77 72 	mov	#29303,	0(r1)	;#0x7277
    83c6:	00 00 
    83c8:	b1 40 69 74 	mov	#29801,	2(r1)	;#0x7469
    83cc:	02 00 
    83ce:	b1 40 65 00 	mov	#101,	4(r1)	;#0x0065
    83d2:	04 00 
    83d4:	81 43 06 00 	mov	#0,	6(r1)	;r3 As==00
    83d8:	81 43 08 00 	mov	#0,	8(r1)	;r3 As==00
    83dc:	81 43 0a 00 	mov	#0,	10(r1)	;r3 As==00, 0x000a
    83e0:	81 43 0c 00 	mov	#0,	12(r1)	;r3 As==00, 0x000c
    83e4:	81 43 0e 00 	mov	#0,	14(r1)	;r3 As==00, 0x000e
    83e8:	b1 40 64 65 	mov	#25956,	16(r1)	;#0x6564, 0x0010
    83ec:	10 00 
    83ee:	b1 40 66 61 	mov	#24934,	18(r1)	;#0x6166, 0x0012
    83f2:	12 00 
    83f4:	b1 40 75 00 	mov	#117,	20(r1)	;#0x0075, 0x0014
    83f8:	14 00 
    83fa:	81 43 16 00 	mov	#0,	22(r1)	;r3 As==00, 0x0016
    83fe:	81 43 18 00 	mov	#0,	24(r1)	;r3 As==00, 0x0018
    8402:	81 43 1a 00 	mov	#0,	26(r1)	;r3 As==00, 0x001a
    8406:	81 43 1c 00 	mov	#0,	28(r1)	;r3 As==00, 0x001c
    840a:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e
    840e:	3c 40 00 36 	mov	#13824,	r12	;#0x3600
    8412:	3d 40 6e 01 	mov	#366,	r13	;#0x016e
    8416:	b0 12 1a 85 	call	#34074		;#0x851a
    841a:	c1 43 20 00 	mov.b	#0,	32(r1)	;r3 As==00, 0x0020
    841e:	0c 41       	mov	r1,	r12	;
    8420:	3c 50 20 00 	add	#32,	r12	;#0x0020
    8424:	b0 12 50 83 	call	#33616		;#0x8350
    8428:	0c 93       	cmp	#0,	r12	;r3 As==00
    842a:	f7 27       	jz	$-16     	;abs 0x841a
    842c:	5c 41 20 00 	mov.b	32(r1),	r12	;0x00020
    8430:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    8432:	f3 27       	jz	$-24     	;abs 0x841a
    8434:	3e 40 d8 85 	mov	#34264,	r14	;#0x85d8
    8438:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    843a:	02 20       	jnz	$+6      	;abs 0x8440
    843c:	0c 41       	mov	r1,	r12	;
    843e:	03 3c       	jmp	$+8      	;abs 0x8446
    8440:	0c 41       	mov	r1,	r12	;
    8442:	3c 50 10 00 	add	#16,	r12	;#0x0010
    8446:	3d 40 05 00 	mov	#5,	r13	;
    844a:	8e 12       	call	r14		;
    844c:	e6 3f       	jmp	$-50     	;abs 0x841a

0000844e <USBHAL_initPorts>:
    844e:	1a 15       	pushm	#2,	r10	;16-bit words
    8450:	39 40 d8 a1 	mov	#41432,	r9	;#0xa1d8
    8454:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8456:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    845a:	89 12       	call	r9		;
    845c:	3a 40 40 a1 	mov	#41280,	r10	;#0xa140
    8460:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8462:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8466:	8a 12       	call	r10		;
    8468:	6c 43       	mov.b	#2,	r12	;r3 As==10
    846a:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    846e:	89 12       	call	r9		;
    8470:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8472:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8476:	8a 12       	call	r10		;
    8478:	7c 40 03 00 	mov.b	#3,	r12	;
    847c:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8480:	89 12       	call	r9		;
    8482:	7c 40 03 00 	mov.b	#3,	r12	;
    8486:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    848a:	8a 12       	call	r10		;
    848c:	6c 42       	mov.b	#4,	r12	;r2 As==10
    848e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8492:	89 12       	call	r9		;
    8494:	6c 42       	mov.b	#4,	r12	;r2 As==10
    8496:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    849a:	8a 12       	call	r10		;
    849c:	7c 40 05 00 	mov.b	#5,	r12	;
    84a0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84a4:	89 12       	call	r9		;
    84a6:	7c 40 05 00 	mov.b	#5,	r12	;
    84aa:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84ae:	8a 12       	call	r10		;
    84b0:	7c 40 06 00 	mov.b	#6,	r12	;
    84b4:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84b8:	89 12       	call	r9		;
    84ba:	7c 40 06 00 	mov.b	#6,	r12	;
    84be:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84c2:	8a 12       	call	r10		;
    84c4:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    84c8:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84cc:	89 12       	call	r9		;
    84ce:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    84d2:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84d6:	8a 12       	call	r10		;
    84d8:	19 17       	popm	#2,	r10	;16-bit words
    84da:	30 41       	ret			

000084dc <USBHAL_initClocks>:
    84dc:	2a 15       	pushm	#3,	r10	;16-bit words
    84de:	08 4c       	mov	r12,	r8	;
    84e0:	09 4d       	mov	r13,	r9	;
    84e2:	3a 40 d2 a6 	mov	#42706,	r10	;#0xa6d2
    84e6:	7c 42       	mov.b	#8,	r12	;r2 As==11
    84e8:	2d 43       	mov	#2,	r13	;r3 As==10
    84ea:	0e 43       	clr	r14		;
    84ec:	8a 12       	call	r10		;
    84ee:	5c 43       	mov.b	#1,	r12	;r3 As==01
    84f0:	2d 43       	mov	#2,	r13	;r3 As==10
    84f2:	0e 43       	clr	r14		;
    84f4:	8a 12       	call	r10		;
    84f6:	0c 48       	mov	r8,	r12	;
    84f8:	0d 49       	mov	r9,	r13	;
    84fa:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    84fe:	0f 43       	clr	r15		;
    8500:	b0 12 a4 b1 	call	#45476		;#0xb1a4
    8504:	0a 4c       	mov	r12,	r10	;
    8506:	0c 48       	mov	r8,	r12	;
    8508:	0d 49       	mov	r9,	r13	;
    850a:	b0 12 70 b2 	call	#45680		;#0xb270
    850e:	0d 4c       	mov	r12,	r13	;
    8510:	0c 4a       	mov	r10,	r12	;
    8512:	b0 12 c2 aa 	call	#43714		;#0xaac2
    8516:	28 17       	popm	#3,	r10	;16-bit words
    8518:	30 41       	ret			

0000851a <TILEAF_BoardInit>:
    851a:	19 15       	pushm	#2,	r9	;16-bit words
    851c:	08 4c       	mov	r12,	r8	;
    851e:	09 4d       	mov	r13,	r9	;
    8520:	82 4c 56 24 	mov	r12,	&0x2456	;
    8524:	82 4d 58 24 	mov	r13,	&0x2458	;
    8528:	3c 40 50 01 	mov	#336,	r12	;#0x0150
    852c:	b0 12 d8 a0 	call	#41176		;#0xa0d8
    8530:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8532:	b0 12 d8 af 	call	#45016		;#0xafd8
    8536:	b0 12 4e 84 	call	#33870		;#0x844e
    853a:	0c 48       	mov	r8,	r12	;
    853c:	0d 49       	mov	r9,	r13	;
    853e:	b0 12 dc 84 	call	#34012		;#0x84dc
    8542:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8544:	4d 4c       	mov.b	r12,	r13	;
    8546:	b0 12 a6 94 	call	#38054		;#0x94a6
    854a:	32 d2       	eint			
    854c:	03 43       	nop			
    854e:	18 17       	popm	#2,	r9	;16-bit words
    8550:	30 41       	ret			

00008552 <UNMI_ISR>:
    8552:	bf 15       	pushm	#12,	r15	;16-bit words
    8554:	1c 42 9a 01 	mov	&0x019a,r12	;0x019a
    8558:	2c 92       	cmp	#4,	r12	;r2 As==10
    855a:	12 24       	jz	$+38     	;abs 0x8580
    855c:	2d 42       	mov	#4,	r13	;r2 As==10
    855e:	0d 9c       	cmp	r12,	r13	;
    8560:	05 28       	jnc	$+12     	;abs 0x856c
    8562:	0c 93       	cmp	#0,	r12	;r3 As==00
    8564:	17 24       	jz	$+48     	;abs 0x8594
    8566:	2c 93       	cmp	#2,	r12	;r3 As==10
    8568:	15 24       	jz	$+44     	;abs 0x8594
    856a:	15 3c       	jmp	$+44     	;abs 0x8596
    856c:	3c 90 06 00 	cmp	#6,	r12	;
    8570:	11 24       	jz	$+36     	;abs 0x8594
    8572:	3c 92       	cmp	#8,	r12	;r2 As==11
    8574:	10 20       	jnz	$+34     	;abs 0x8596
    8576:	82 43 98 01 	mov	#0,	&0x0198	;r3 As==00
    857a:	b0 12 4c 8b 	call	#35660		;#0x8b4c
    857e:	0b 3c       	jmp	$+24     	;abs 0x8596
    8580:	3a 40 0e ab 	mov	#43790,	r10	;#0xab0e
    8584:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8586:	8a 12       	call	r10		;
    8588:	5c 43       	mov.b	#1,	r12	;r3 As==01
    858a:	8a 12       	call	r10		;
    858c:	6c 43       	mov.b	#2,	r12	;r3 As==10
    858e:	b0 12 9a a4 	call	#42138		;#0xa49a
    8592:	01 3c       	jmp	$+4      	;abs 0x8596
    8594:	03 43       	nop			
    8596:	b4 17       	popm	#12,	r15	;16-bit words
    8598:	00 13       	reti			

0000859a <checkUSB>:
    859a:	0a 15       	pushm	#1,	r10	;16-bit words
    859c:	21 83       	decd	r1		;
    859e:	0a 4c       	mov	r12,	r10	;
    85a0:	b0 12 48 8d 	call	#36168		;#0x8d48
    85a4:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    85a8:	14 20       	jnz	$+42     	;abs 0x85d2
    85aa:	5c 42 5a 24 	mov.b	&0x245a,r12	;0x245a
    85ae:	0c 93       	cmp	#0,	r12	;r3 As==00
    85b0:	10 24       	jz	$+34     	;abs 0x85d2
    85b2:	c2 43 5a 24 	mov.b	#0,	&0x245a	;r3 As==00
    85b6:	0c 4a       	mov	r10,	r12	;
    85b8:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    85bc:	4e 43       	clr.b	r14		;
    85be:	b0 12 50 87 	call	#34640		;#0x8750
    85c2:	0d 4c       	mov	r12,	r13	;
    85c4:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    85c8:	1f 43       	mov	#1,	r15	;r3 As==01
    85ca:	0c 4a       	mov	r10,	r12	;
    85cc:	4e 43       	clr.b	r14		;
    85ce:	b0 12 c2 86 	call	#34498		;#0x86c2
    85d2:	21 53       	incd	r1		;
    85d4:	0a 17       	popm	#1,	r10	;16-bit words
    85d6:	30 41       	ret			

000085d8 <SendBuffer>:
    85d8:	0a 15       	pushm	#1,	r10	;16-bit words
    85da:	21 82       	sub	#4,	r1	;r2 As==10
    85dc:	0a 4c       	mov	r12,	r10	;
    85de:	81 4d 02 00 	mov	r13,	2(r1)	;
    85e2:	b0 12 48 8d 	call	#36168		;#0x8d48
    85e6:	1d 41 02 00 	mov	2(r1),	r13	;
    85ea:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    85ee:	07 20       	jnz	$+16     	;abs 0x85fe
    85f0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    85f4:	1f 43       	mov	#1,	r15	;r3 As==01
    85f6:	0c 4a       	mov	r10,	r12	;
    85f8:	4e 43       	clr.b	r14		;
    85fa:	b0 12 38 86 	call	#34360		;#0x8638
    85fe:	0c 43       	clr	r12		;
    8600:	21 52       	add	#4,	r1	;r2 As==10
    8602:	0a 17       	popm	#1,	r10	;16-bit words
    8604:	30 41       	ret			

00008606 <ReceiveBuffer>:
    8606:	0a 15       	pushm	#1,	r10	;16-bit words
    8608:	0a 4c       	mov	r12,	r10	;
    860a:	b0 12 48 8d 	call	#36168		;#0x8d48
    860e:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    8612:	0d 20       	jnz	$+28     	;abs 0x862e
    8614:	5d 42 5a 24 	mov.b	&0x245a,r13	;0x245a
    8618:	0d 93       	cmp	#0,	r13	;r3 As==00
    861a:	0b 24       	jz	$+24     	;abs 0x8632
    861c:	c2 43 5a 24 	mov.b	#0,	&0x245a	;r3 As==00
    8620:	0c 4a       	mov	r10,	r12	;
    8622:	3d 40 40 00 	mov	#64,	r13	;#0x0040
    8626:	4e 43       	clr.b	r14		;
    8628:	b0 12 50 87 	call	#34640		;#0x8750
    862c:	03 3c       	jmp	$+8      	;abs 0x8634
    862e:	0c 43       	clr	r12		;
    8630:	01 3c       	jmp	$+4      	;abs 0x8634
    8632:	0c 4d       	mov	r13,	r12	;
    8634:	0a 17       	popm	#1,	r10	;16-bit words
    8636:	30 41       	ret			

00008638 <USBCDC_sendDataAndWaitTillDone>:
    8638:	21 83       	decd	r1		;
    863a:	91 41 02 00 	mov	2(r1),	0(r1)	;
    863e:	00 00 
    8640:	5a 15       	pushm	#6,	r10	;16-bit words
    8642:	21 82       	sub	#4,	r1	;r2 As==10
    8644:	47 4e       	mov.b	r14,	r7	;
    8646:	81 4f 12 00 	mov	r15,	18(r1)	; 0x0012
    864a:	08 4f       	mov	r15,	r8	;
    864c:	19 41 14 00 	mov	20(r1),	r9	;0x00014
    8650:	4e 47       	mov.b	r7,	r14	;
    8652:	b0 12 f2 95 	call	#38386		;#0x95f2
    8656:	4d 4c       	mov.b	r12,	r13	;
    8658:	7c 90 07 00 	cmp.b	#7,	r12	;
    865c:	0a 24       	jz	$+22     	;abs 0x8672
    865e:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    8660:	28 24       	jz	$+82     	;abs 0x86b2
    8662:	7c 90 03 00 	cmp.b	#3,	r12	;
    8666:	26 24       	jz	$+78     	;abs 0x86b4
    8668:	0a 43       	clr	r10		;
    866a:	05 4a       	mov	r10,	r5	;
    866c:	36 40 08 9d 	mov	#40200,	r6	;#0x9d08
    8670:	12 3c       	jmp	$+38     	;abs 0x8696
    8672:	2d 42       	mov	#4,	r13	;r2 As==10
    8674:	1f 3c       	jmp	$+64     	;abs 0x86b4
    8676:	0d 4c       	mov	r12,	r13	;
    8678:	1d f3       	and	#1,	r13	;r3 As==01
    867a:	0d 93       	cmp	#0,	r13	;r3 As==00
    867c:	1b 24       	jz	$+56     	;abs 0x86b4
    867e:	0c 48       	mov	r8,	r12	;
    8680:	0c d9       	bis	r9,	r12	;
    8682:	0c 93       	cmp	#0,	r12	;r3 As==00
    8684:	08 24       	jz	$+18     	;abs 0x8696
    8686:	0c 4a       	mov	r10,	r12	;
    8688:	1c 53       	inc	r12		;
    868a:	0d 45       	mov	r5,	r13	;
    868c:	0d 63       	adc	r13		;
    868e:	05 99       	cmp	r9,	r5	;
    8690:	0a 2c       	jc	$+22     	;abs 0x86a6
    8692:	0a 4c       	mov	r12,	r10	;
    8694:	05 4d       	mov	r13,	r5	;
    8696:	4c 47       	mov.b	r7,	r12	;
    8698:	0d 41       	mov	r1,	r13	;
    869a:	0e 41       	mov	r1,	r14	;
    869c:	2e 53       	incd	r14		;
    869e:	86 12       	call	r6		;
    86a0:	3c b2       	bit	#8,	r12	;r2 As==11
    86a2:	e9 27       	jz	$-44     	;abs 0x8676
    86a4:	06 3c       	jmp	$+14     	;abs 0x86b2
    86a6:	09 95       	cmp	r5,	r9	;
    86a8:	02 20       	jnz	$+6      	;abs 0x86ae
    86aa:	0a 98       	cmp	r8,	r10	;
    86ac:	f2 2b       	jnc	$-26     	;abs 0x8692
    86ae:	1d 43       	mov	#1,	r13	;r3 As==01
    86b0:	01 3c       	jmp	$+4      	;abs 0x86b4
    86b2:	2d 43       	mov	#2,	r13	;r3 As==10
    86b4:	4c 4d       	mov.b	r13,	r12	;
    86b6:	21 52       	add	#4,	r1	;r2 As==10
    86b8:	55 17       	popm	#6,	r10	;16-bit words
    86ba:	a1 41 02 00 	mov	@r1,	2(r1)	;
    86be:	21 53       	incd	r1		;
    86c0:	30 41       	ret			

000086c2 <USBCDC_sendDataInBackground>:
    86c2:	21 83       	decd	r1		;
    86c4:	91 41 02 00 	mov	2(r1),	0(r1)	;
    86c8:	00 00 
    86ca:	6a 15       	pushm	#7,	r10	;16-bit words
    86cc:	31 82       	sub	#8,	r1	;r2 As==11
    86ce:	05 4c       	mov	r12,	r5	;
    86d0:	81 4d 02 00 	mov	r13,	2(r1)	;
    86d4:	46 4e       	mov.b	r14,	r6	;
    86d6:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018
    86da:	17 41 1a 00 	mov	26(r1),	r7	;0x0001a
    86de:	08 43       	clr	r8		;
    86e0:	0a 48       	mov	r8,	r10	;
    86e2:	34 40 08 9d 	mov	#40200,	r4	;#0x9d08
    86e6:	4c 46       	mov.b	r6,	r12	;
    86e8:	0d 41       	mov	r1,	r13	;
    86ea:	2d 52       	add	#4,	r13	;r2 As==10
    86ec:	0e 41       	mov	r1,	r14	;
    86ee:	3e 50 06 00 	add	#6,	r14	;
    86f2:	81 4f 00 00 	mov	r15,	0(r1)	;
    86f6:	84 12       	call	r4		;
    86f8:	09 4c       	mov	r12,	r9	;
    86fa:	19 f3       	and	#1,	r9	;r3 As==01
    86fc:	2f 41       	mov	@r1,	r15	;
    86fe:	09 93       	cmp	#0,	r9	;r3 As==00
    8700:	11 24       	jz	$+36     	;abs 0x8724
    8702:	0c 4f       	mov	r15,	r12	;
    8704:	0c d7       	bis	r7,	r12	;
    8706:	0c 93       	cmp	#0,	r12	;r3 As==00
    8708:	ee 27       	jz	$-34     	;abs 0x86e6
    870a:	0d 48       	mov	r8,	r13	;
    870c:	1d 53       	inc	r13		;
    870e:	0c 4a       	mov	r10,	r12	;
    8710:	0c 63       	adc	r12		;
    8712:	07 9a       	cmp	r10,	r7	;
    8714:	15 28       	jnc	$+44     	;abs 0x8740
    8716:	0a 97       	cmp	r7,	r10	;
    8718:	02 20       	jnz	$+6      	;abs 0x871e
    871a:	0f 98       	cmp	r8,	r15	;
    871c:	11 28       	jnc	$+36     	;abs 0x8740
    871e:	08 4d       	mov	r13,	r8	;
    8720:	0a 4c       	mov	r12,	r10	;
    8722:	e1 3f       	jmp	$-60     	;abs 0x86e6
    8724:	0c 45       	mov	r5,	r12	;
    8726:	1d 41 02 00 	mov	2(r1),	r13	;
    872a:	4e 46       	mov.b	r6,	r14	;
    872c:	b0 12 f2 95 	call	#38386		;#0x95f2
    8730:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    8732:	07 24       	jz	$+16     	;abs 0x8742
    8734:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    8736:	02 20       	jnz	$+6      	;abs 0x873c
    8738:	29 43       	mov	#2,	r9	;r3 As==10
    873a:	03 3c       	jmp	$+8      	;abs 0x8742
    873c:	29 42       	mov	#4,	r9	;r2 As==10
    873e:	01 3c       	jmp	$+4      	;abs 0x8742
    8740:	19 43       	mov	#1,	r9	;r3 As==01
    8742:	4c 49       	mov.b	r9,	r12	;
    8744:	31 52       	add	#8,	r1	;r2 As==11
    8746:	64 17       	popm	#7,	r10	;16-bit words
    8748:	a1 41 02 00 	mov	@r1,	2(r1)	;
    874c:	21 53       	incd	r1		;
    874e:	30 41       	ret			

00008750 <USBCDC_receiveDataInBuffer>:
    8750:	6a 15       	pushm	#7,	r10	;16-bit words
    8752:	08 4c       	mov	r12,	r8	;
    8754:	06 4d       	mov	r13,	r6	;
    8756:	47 4e       	mov.b	r14,	r7	;
    8758:	09 4c       	mov	r12,	r9	;
    875a:	35 40 b8 9d 	mov	#40376,	r5	;#0x9db8
    875e:	34 40 c8 98 	mov	#39112,	r4	;#0x98c8
    8762:	4c 47       	mov.b	r7,	r12	;
    8764:	85 12       	call	r5		;
    8766:	4a 4c       	mov.b	r12,	r10	;
    8768:	0f 49       	mov	r9,	r15	;
    876a:	0f 88       	sub	r8,	r15	;
    876c:	0c 4f       	mov	r15,	r12	;
    876e:	0a 93       	cmp	#0,	r10	;r3 As==00
    8770:	15 24       	jz	$+44     	;abs 0x879c
    8772:	0c 5a       	add	r10,	r12	;
    8774:	06 9c       	cmp	r12,	r6	;
    8776:	06 28       	jnc	$+14     	;abs 0x8784
    8778:	0c 49       	mov	r9,	r12	;
    877a:	0d 4a       	mov	r10,	r13	;
    877c:	4e 47       	mov.b	r7,	r14	;
    877e:	84 12       	call	r4		;
    8780:	09 5a       	add	r10,	r9	;
    8782:	ef 3f       	jmp	$-32     	;abs 0x8762
    8784:	0f 48       	mov	r8,	r15	;
    8786:	0f 89       	sub	r9,	r15	;
    8788:	0a 4f       	mov	r15,	r10	;
    878a:	0a 56       	add	r6,	r10	;
    878c:	0c 49       	mov	r9,	r12	;
    878e:	0d 4a       	mov	r10,	r13	;
    8790:	4e 47       	mov.b	r7,	r14	;
    8792:	b0 12 c8 98 	call	#39112		;#0x98c8
    8796:	0a 59       	add	r9,	r10	;
    8798:	0c 4a       	mov	r10,	r12	;
    879a:	0c 88       	sub	r8,	r12	;
    879c:	64 17       	popm	#7,	r10	;16-bit words
    879e:	30 41       	ret			

000087a0 <USB_handleClockEvent>:
    87a0:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87a2:	30 41       	ret			

000087a4 <USB_handleVbusOnEvent>:
    87a4:	b0 12 c4 93 	call	#37828		;#0x93c4
    87a8:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    87aa:	04 20       	jnz	$+10     	;abs 0x87b4
    87ac:	b0 12 7c 8b 	call	#35708		;#0x8b7c
    87b0:	b0 12 b4 8c 	call	#36020		;#0x8cb4
    87b4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87b6:	30 41       	ret			

000087b8 <USB_handleVbusOffEvent>:
    87b8:	b0 12 ca a9 	call	#43466		;#0xa9ca
    87bc:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87be:	30 41       	ret			

000087c0 <USB_handleResetEvent>:
    87c0:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87c2:	30 41       	ret			

000087c4 <USB_handleSuspendEvent>:
    87c4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87c6:	30 41       	ret			

000087c8 <USB_handleResumeEvent>:
    87c8:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87ca:	30 41       	ret			

000087cc <USB_handleEnumerationCompleteEvent>:
    87cc:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87ce:	30 41       	ret			

000087d0 <USBCDC_handleDataReceived>:
    87d0:	d2 43 5a 24 	mov.b	#1,	&0x245a	;r3 As==01
    87d4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    87d6:	30 41       	ret			

000087d8 <USBCDC_handleSendCompleted>:
    87d8:	4c 43       	clr.b	r12		;
    87da:	30 41       	ret			

000087dc <USBCDC_handleReceiveCompleted>:
    87dc:	4c 43       	clr.b	r12		;
    87de:	30 41       	ret			

000087e0 <USBCDC_handleSetLineCoding>:
    87e0:	4c 43       	clr.b	r12		;
    87e2:	30 41       	ret			

000087e4 <USBCDC_handleSetControlLineState>:
    87e4:	4c 43       	clr.b	r12		;
    87e6:	30 41       	ret			

000087e8 <SetupPacketInterruptHandler>:
    87e8:	0a 15       	pushm	#1,	r10	;16-bit words
    87ea:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    87ee:	3c 09 
    87f0:	3a 40 b4 91 	mov	#37300,	r10	;#0x91b4
    87f4:	c2 93 80 23 	cmp.b	#0,	&0x2380	;r3 As==00
    87f8:	03 34       	jge	$+8      	;abs 0x8800
    87fa:	d2 d3 3c 09 	bis.b	#1,	&0x093c	;r3 As==01
    87fe:	02 3c       	jmp	$+6      	;abs 0x8804
    8800:	d2 c3 3c 09 	bic.b	#1,	&0x093c	;r3 As==01
    8804:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8808:	0c 43       	clr	r12		;
    880a:	cc 43 98 24 	mov.b	#0,	9368(r12);r3 As==00, 0x2498
    880e:	1c 53       	inc	r12		;
    8810:	3c 92       	cmp	#8,	r12	;r2 As==11
    8812:	fb 23       	jnz	$-8      	;abs 0x880a
    8814:	8a 12       	call	r10		;
    8816:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    881a:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    881e:	04 24       	jz	$+10     	;abs 0x8828
    8820:	f2 f0 fa ff 	and.b	#65530,	&0x093e	;#0xfffa
    8824:	3e 09 
    8826:	e6 3f       	jmp	$-50     	;abs 0x87f4
    8828:	0a 17       	popm	#1,	r10	;16-bit words
    882a:	30 41       	ret			

0000882c <PWRVBUSoffHandler>:
    882c:	21 82       	sub	#4,	r1	;r2 As==10
    882e:	b0 12 76 92 	call	#37494		;#0x9276
    8832:	0e 4c       	mov	r12,	r14	;
    8834:	5e 0f       	rrum	#4,	r14	;
    8836:	5e 0b       	rrum	#3,	r14	;
    8838:	0d 4c       	mov	r12,	r13	;
    883a:	5d 0f       	rrum	#4,	r13	;
    883c:	5d 07       	rrum	#2,	r13	;
    883e:	0d 5e       	add	r14,	r13	;
    8840:	5c 03       	rrum	#1,	r12	;
    8842:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    8846:	0c 5d       	add	r13,	r12	;
    8848:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    884c:	1d 41 02 00 	mov	2(r1),	r13	;
    8850:	3e 40 03 00 	mov	#3,	r14	;
    8854:	0e 9d       	cmp	r13,	r14	;
    8856:	0c 28       	jnc	$+26     	;abs 0x8870
    8858:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    885c:	2d 41       	mov	@r1,	r13	;
    885e:	0d 9c       	cmp	r12,	r13	;
    8860:	04 2c       	jc	$+10     	;abs 0x886a
    8862:	03 43       	nop			
    8864:	91 53 00 00 	inc	0(r1)		;
    8868:	f9 3f       	jmp	$-12     	;abs 0x885c
    886a:	91 53 02 00 	inc	2(r1)		;
    886e:	ee 3f       	jmp	$-34     	;abs 0x884c
    8870:	1c 42 08 09 	mov	&0x0908,r12	;0x0908
    8874:	3c f2       	and	#8,	r12	;r2 As==11
    8876:	0c 93       	cmp	#0,	r12	;r3 As==00
    8878:	12 20       	jnz	$+38     	;abs 0x889e
    887a:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    887e:	00 09 
    8880:	c2 4c 5c 24 	mov.b	r12,	&0x245c	;
    8884:	c2 4c 5d 24 	mov.b	r12,	&0x245d	;
    8888:	82 4c 02 09 	mov	r12,	&0x0902	;
    888c:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8890:	10 09 
    8892:	b2 f0 fb eb 	and	#60411,	&0x0908	;#0xebfb
    8896:	08 09 
    8898:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    889c:	00 09 
    889e:	21 52       	add	#4,	r1	;r2 As==10
    88a0:	30 41       	ret			

000088a2 <PWRVBUSonHandler>:
    88a2:	21 82       	sub	#4,	r1	;r2 As==10
    88a4:	b0 12 76 92 	call	#37494		;#0x9276
    88a8:	0e 4c       	mov	r12,	r14	;
    88aa:	5e 0f       	rrum	#4,	r14	;
    88ac:	5e 0b       	rrum	#3,	r14	;
    88ae:	0d 4c       	mov	r12,	r13	;
    88b0:	5d 0f       	rrum	#4,	r13	;
    88b2:	5d 07       	rrum	#2,	r13	;
    88b4:	0d 5e       	add	r14,	r13	;
    88b6:	5c 03       	rrum	#1,	r12	;
    88b8:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    88bc:	0c 5d       	add	r13,	r12	;
    88be:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    88c2:	1d 41 02 00 	mov	2(r1),	r13	;
    88c6:	3e 40 03 00 	mov	#3,	r14	;
    88ca:	0e 9d       	cmp	r13,	r14	;
    88cc:	0c 28       	jnc	$+26     	;abs 0x88e6
    88ce:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    88d2:	2d 41       	mov	@r1,	r13	;
    88d4:	0d 9c       	cmp	r12,	r13	;
    88d6:	04 2c       	jc	$+10     	;abs 0x88e0
    88d8:	03 43       	nop			
    88da:	91 53 00 00 	inc	0(r1)		;
    88de:	f9 3f       	jmp	$-12     	;abs 0x88d2
    88e0:	91 53 02 00 	inc	2(r1)		;
    88e4:	ee 3f       	jmp	$-34     	;abs 0x88c2
    88e6:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    88ea:	0c 24       	jz	$+26     	;abs 0x8904
    88ec:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    88f0:	00 09 
    88f2:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    88f6:	08 09 
    88f8:	b2 f0 f9 ff 	and	#65529,	&0x0908	;#0xfff9
    88fc:	08 09 
    88fe:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8902:	00 09 
    8904:	21 52       	add	#4,	r1	;r2 As==10
    8906:	30 41       	ret			

00008908 <IEP0InterruptHandler>:
    8908:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    890c:	3c 09 
    890e:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8912:	d2 93 c8 24 	cmp.b	#1,	&0x24c8	;r3 As==01
    8916:	03 20       	jnz	$+8      	;abs 0x891e
    8918:	b0 12 2c 8e 	call	#36396		;#0x8e2c
    891c:	02 3c       	jmp	$+6      	;abs 0x8922
    891e:	f2 d2 20 09 	bis.b	#8,	&0x0920	;r2 As==11
    8922:	30 41       	ret			

00008924 <OEP0InterruptHandler>:
    8924:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8928:	3c 09 
    892a:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    892e:	e2 93 c8 24 	cmp.b	#2,	&0x24c8	;r3 As==10
    8932:	0e 20       	jnz	$+30     	;abs 0x8950
    8934:	b0 12 b6 8e 	call	#36534		;#0x8eb6
    8938:	c2 93 c8 24 	cmp.b	#0,	&0x24c8	;r3 As==00
    893c:	0b 20       	jnz	$+24     	;abs 0x8954
    893e:	f2 90 20 00 	cmp.b	#32,	&0x2381	;#0x0020
    8942:	81 23 
    8944:	07 20       	jnz	$+16     	;abs 0x8954
    8946:	b0 12 d4 9e 	call	#40660		;#0x9ed4
    894a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    894e:	03 3c       	jmp	$+8      	;abs 0x8956
    8950:	f2 d2 22 09 	bis.b	#8,	&0x0922	;r2 As==11
    8954:	0c 43       	clr	r12		;
    8956:	30 41       	ret			

00008958 <iUsbInterruptHandler>:
    8958:	bf 15       	pushm	#12,	r15	;16-bit words
    895a:	e2 b2 3e 09 	bit.b	#4,	&0x093e	;r2 As==10
    895e:	06 24       	jz	$+14     	;abs 0x896c
    8960:	b0 12 e8 87 	call	#34792		;#0x87e8
    8964:	4a 4c       	mov.b	r12,	r10	;
    8966:	e2 c2 3e 09 	bic.b	#4,	&0x093e	;r2 As==10
    896a:	01 3c       	jmp	$+4      	;abs 0x896e
    896c:	0a 43       	clr	r10		;
    896e:	1d 42 32 09 	mov	&0x0932,r13	;0x0932
    8972:	3d f0 3f 00 	and	#63,	r13	;#0x003f
    8976:	3d 90 14 00 	cmp	#20,	r13	;#0x0014
    897a:	51 24       	jz	$+164    	;abs 0x8a1e
    897c:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    8980:	0c 9d       	cmp	r13,	r12	;
    8982:	15 28       	jnc	$+44     	;abs 0x89ae
    8984:	3d 90 0a 00 	cmp	#10,	r13	;#0x000a
    8988:	3a 24       	jz	$+118    	;abs 0x89fe
    898a:	3c 40 0a 00 	mov	#10,	r12	;#0x000a
    898e:	0c 9d       	cmp	r13,	r12	;
    8990:	05 28       	jnc	$+12     	;abs 0x899c
    8992:	2d 93       	cmp	#2,	r13	;r3 As==10
    8994:	2c 24       	jz	$+90     	;abs 0x89ee
    8996:	3d 92       	cmp	#8,	r13	;r2 As==11
    8998:	2c 24       	jz	$+90     	;abs 0x89f2
    899a:	78 3c       	jmp	$+242    	;abs 0x8a8c
    899c:	3d 90 0c 00 	cmp	#12,	r13	;#0x000c
    89a0:	36 24       	jz	$+110    	;abs 0x8a0e
    89a2:	3d 90 12 00 	cmp	#18,	r13	;#0x0012
    89a6:	72 20       	jnz	$+230    	;abs 0x8a8c
    89a8:	b0 12 08 89 	call	#35080		;#0x8908
    89ac:	6f 3c       	jmp	$+224    	;abs 0x8a8c
    89ae:	3d 90 1a 00 	cmp	#26,	r13	;#0x001a
    89b2:	49 24       	jz	$+148    	;abs 0x8a46
    89b4:	3c 40 1a 00 	mov	#26,	r12	;#0x001a
    89b8:	0c 9d       	cmp	r13,	r12	;
    89ba:	07 28       	jnc	$+16     	;abs 0x89ca
    89bc:	3d 90 16 00 	cmp	#22,	r13	;#0x0016
    89c0:	31 24       	jz	$+100    	;abs 0x8a24
    89c2:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    89c6:	36 24       	jz	$+110    	;abs 0x8a34
    89c8:	61 3c       	jmp	$+196    	;abs 0x8a8c
    89ca:	3d 90 26 00 	cmp	#38,	r13	;#0x0026
    89ce:	44 24       	jz	$+138    	;abs 0x8a58
    89d0:	3d 90 34 00 	cmp	#52,	r13	;#0x0034
    89d4:	45 24       	jz	$+140    	;abs 0x8a60
    89d6:	3d 90 20 00 	cmp	#32,	r13	;#0x0020
    89da:	58 20       	jnz	$+178    	;abs 0x8a8c
    89dc:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    89e0:	21 09 
    89e2:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    89e6:	23 09 
    89e8:	b0 12 e8 87 	call	#34792		;#0x87e8
    89ec:	4f 3c       	jmp	$+160    	;abs 0x8a8c
    89ee:	03 43       	nop			
    89f0:	4d 3c       	jmp	$+156    	;abs 0x8a8c
    89f2:	d2 b3 c2 24 	bit.b	#1,	&0x24c2	;r3 As==01
    89f6:	4a 24       	jz	$+150    	;abs 0x8a8c
    89f8:	b0 12 a0 87 	call	#34720		;#0x87a0
    89fc:	46 3c       	jmp	$+142    	;abs 0x8a8a
    89fe:	b0 12 a2 88 	call	#34978		;#0x88a2
    8a02:	e2 b3 c2 24 	bit.b	#2,	&0x24c2	;r3 As==10
    8a06:	42 24       	jz	$+134    	;abs 0x8a8c
    8a08:	b0 12 a4 87 	call	#34724		;#0x87a4
    8a0c:	3e 3c       	jmp	$+126    	;abs 0x8a8a
    8a0e:	b0 12 2c 88 	call	#34860		;#0x882c
    8a12:	e2 b2 c2 24 	bit.b	#4,	&0x24c2	;r2 As==10
    8a16:	3a 24       	jz	$+118    	;abs 0x8a8c
    8a18:	b0 12 b8 87 	call	#34744		;#0x87b8
    8a1c:	36 3c       	jmp	$+110    	;abs 0x8a8a
    8a1e:	b0 12 24 89 	call	#35108		;#0x8924
    8a22:	34 3c       	jmp	$+106    	;abs 0x8a8c
    8a24:	b0 12 7c 8b 	call	#35708		;#0x8b7c
    8a28:	f2 b2 c2 24 	bit.b	#8,	&0x24c2	;r2 As==11
    8a2c:	2f 24       	jz	$+96     	;abs 0x8a8c
    8a2e:	b0 12 c0 87 	call	#34752		;#0x87c0
    8a32:	2b 3c       	jmp	$+88     	;abs 0x8a8a
    8a34:	b0 12 de 8d 	call	#36318		;#0x8dde
    8a38:	f2 b0 10 00 	bit.b	#16,	&0x24c2	;#0x0010
    8a3c:	c2 24 
    8a3e:	26 24       	jz	$+78     	;abs 0x8a8c
    8a40:	b0 12 c4 87 	call	#34756		;#0x87c4
    8a44:	22 3c       	jmp	$+70     	;abs 0x8a8a
    8a46:	b0 12 de 94 	call	#38110		;#0x94de
    8a4a:	f2 b0 20 00 	bit.b	#32,	&0x24c2	;#0x0020
    8a4e:	c2 24 
    8a50:	1f 24       	jz	$+64     	;abs 0x8a90
    8a52:	b0 12 c8 87 	call	#34760		;#0x87c8
    8a56:	1c 3c       	jmp	$+58     	;abs 0x8a90
    8a58:	4c 43       	clr.b	r12		;
    8a5a:	b0 12 7e 96 	call	#38526		;#0x967e
    8a5e:	15 3c       	jmp	$+44     	;abs 0x8a8a
    8a60:	4c 43       	clr.b	r12		;
    8a62:	b0 12 1a 9c 	call	#39962		;#0x9c1a
    8a66:	09 4c       	mov	r12,	r9	;
    8a68:	0c 93       	cmp	#0,	r12	;r3 As==00
    8a6a:	0c 20       	jnz	$+26     	;abs 0x8a84
    8a6c:	b0 12 b8 9d 	call	#40376		;#0x9db8
    8a70:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8a72:	08 24       	jz	$+18     	;abs 0x8a84
    8a74:	f2 b0 40 00 	bit.b	#64,	&0x24c2	;#0x0040
    8a78:	c2 24 
    8a7a:	08 24       	jz	$+18     	;abs 0x8a8c
    8a7c:	4c 49       	mov.b	r9,	r12	;
    8a7e:	b0 12 d0 87 	call	#34768		;#0x87d0
    8a82:	03 3c       	jmp	$+8      	;abs 0x8a8a
    8a84:	4c 43       	clr.b	r12		;
    8a86:	b0 12 f0 9a 	call	#39664		;#0x9af0
    8a8a:	4a 4c       	mov.b	r12,	r10	;
    8a8c:	0a 93       	cmp	#0,	r10	;r3 As==00
    8a8e:	04 24       	jz	$+10     	;abs 0x8a98
    8a90:	b1 c0 d0 00 	bic	#208,	24(r1)	;#0x00d0, 0x0018
    8a94:	18 00 
    8a96:	03 43       	nop			
    8a98:	b4 17       	popm	#12,	r15	;16-bit words
    8a9a:	00 13       	reti			

00008a9c <USB_getVersion>:
    8a9c:	3c 40 02 24 	mov	#9218,	r12	;#0x2402
    8aa0:	30 41       	ret			

00008aa2 <USB_InitSerialStringDescriptor>:
    8aa2:	0a 15       	pushm	#1,	r10	;16-bit words
    8aa4:	21 82       	sub	#4,	r1	;r2 As==10
    8aa6:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8aaa:	f2 40 03 00 	mov.b	#3,	&0x24a1	;
    8aae:	a1 24 
    8ab0:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8ab2:	4d 43       	clr.b	r13		;
    8ab4:	0e 41       	mov	r1,	r14	;
    8ab6:	1e 53       	inc	r14		;
    8ab8:	0f 41       	mov	r1,	r15	;
    8aba:	2f 53       	incd	r15		;
    8abc:	b0 12 56 9f 	call	#40790		;#0x9f56
    8ac0:	5c 41 01 00 	mov.b	1(r1),	r12	;
    8ac4:	0c 93       	cmp	#0,	r12	;r3 As==00
    8ac6:	04 24       	jz	$+10     	;abs 0x8ad0
    8ac8:	3d 40 a4 24 	mov	#9380,	r13	;#0x24a4
    8acc:	0f 43       	clr	r15		;
    8ace:	07 3c       	jmp	$+16     	;abs 0x8ade
    8ad0:	e2 42 a0 24 	mov.b	#4,	&0x24a0	;r2 As==10
    8ad4:	c2 4c a2 24 	mov.b	r12,	&0x24a2	;
    8ad8:	c2 4c a3 24 	mov.b	r12,	&0x24a3	;
    8adc:	34 3c       	jmp	$+106    	;abs 0x8b46
    8ade:	1b 41 02 00 	mov	2(r1),	r11	;
    8ae2:	6e 4b       	mov.b	@r11,	r14	;
    8ae4:	5e 0f       	rrum	#4,	r14	;
    8ae6:	7a 40 09 00 	mov.b	#9,	r10	;
    8aea:	4a 9e       	cmp.b	r14,	r10	;
    8aec:	03 28       	jnc	$+8      	;abs 0x8af4
    8aee:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8af2:	02 3c       	jmp	$+6      	;abs 0x8af8
    8af4:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8af8:	cd 4e fe ff 	mov.b	r14,	-2(r13)	; 0xfffe
    8afc:	cd 43 ff ff 	mov.b	#0,	-1(r13)	;r3 As==00, 0xffff
    8b00:	6e 4b       	mov.b	@r11,	r14	;
    8b02:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    8b06:	7a 40 09 00 	mov.b	#9,	r10	;
    8b0a:	4a 9e       	cmp.b	r14,	r10	;
    8b0c:	03 28       	jnc	$+8      	;abs 0x8b14
    8b0e:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    8b12:	02 3c       	jmp	$+6      	;abs 0x8b18
    8b14:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    8b18:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    8b1c:	cd 43 01 00 	mov.b	#0,	1(r13)	;r3 As==00
    8b20:	4e 4f       	mov.b	r15,	r14	;
    8b22:	5e 53       	inc.b	r14		;
    8b24:	4f 4e       	mov.b	r14,	r15	;
    8b26:	1b 53       	inc	r11		;
    8b28:	81 4b 02 00 	mov	r11,	2(r1)	;
    8b2c:	2d 52       	add	#4,	r13	;r2 As==10
    8b2e:	4e 9c       	cmp.b	r12,	r14	;
    8b30:	06 20       	jnz	$+14     	;abs 0x8b3e
    8b32:	41 18 0c 5c 	rpt #2 { rlax.w	r12		;
    8b36:	6c 53       	incd.b	r12		;
    8b38:	c2 4c a0 24 	mov.b	r12,	&0x24a0	;
    8b3c:	04 3c       	jmp	$+10     	;abs 0x8b46
    8b3e:	7e 92       	cmp.b	#8,	r14	;r2 As==11
    8b40:	ce 23       	jnz	$-98     	;abs 0x8ade
    8b42:	0c 4f       	mov	r15,	r12	;
    8b44:	f6 3f       	jmp	$-18     	;abs 0x8b32
    8b46:	21 52       	add	#4,	r1	;r2 As==10
    8b48:	0a 17       	popm	#1,	r10	;16-bit words
    8b4a:	30 41       	ret			

00008b4c <USB_disable>:
    8b4c:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8b50:	00 09 
    8b52:	82 43 02 09 	mov	#0,	&0x0902	;r3 As==00
    8b56:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8b5a:	10 09 
    8b5c:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8b60:	00 09 
    8b62:	c2 43 5c 24 	mov.b	#0,	&0x245c	;r3 As==00
    8b66:	c2 43 5d 24 	mov.b	#0,	&0x245d	;r3 As==00
    8b6a:	4c 43       	clr.b	r12		;
    8b6c:	30 41       	ret			

00008b6e <USB_setEnabledEvents>:
    8b6e:	82 4c c2 24 	mov	r12,	&0x24c2	;
    8b72:	4c 43       	clr.b	r12		;
    8b74:	30 41       	ret			

00008b76 <USB_getEnabledEvents>:
    8b76:	1c 42 c2 24 	mov	&0x24c2,r12	;0x24c2
    8b7a:	30 41       	ret			

00008b7c <USB_reset>:
    8b7c:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8b80:	00 09 
    8b82:	c2 43 5c 24 	mov.b	#0,	&0x245c	;r3 As==00
    8b86:	c2 43 5d 24 	mov.b	#0,	&0x245d	;r3 As==00
    8b8a:	c2 43 5b 24 	mov.b	#0,	&0x245b	;r3 As==00
    8b8e:	c2 43 65 24 	mov.b	#0,	&0x2465	;r3 As==00
    8b92:	c2 43 64 24 	mov.b	#0,	&0x2464	;r3 As==00
    8b96:	c2 43 3c 09 	mov.b	#0,	&0x093c	;r3 As==00
    8b9a:	b2 43 c4 24 	mov	#-1,	&0x24c4	;r3 As==11
    8b9e:	b2 43 c6 24 	mov	#-1,	&0x24c6	;r3 As==11
    8ba2:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8ba6:	c2 43 3f 09 	mov.b	#0,	&0x093f	;r3 As==00
    8baa:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8bae:	21 09 
    8bb0:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    8bb4:	23 09 
    8bb6:	f2 40 8c ff 	mov.b	#65420,	&0x0920	;#0xff8c
    8bba:	20 09 
    8bbc:	f2 40 8c ff 	mov.b	#65420,	&0x0922	;#0xff8c
    8bc0:	22 09 
    8bc2:	f2 40 05 00 	mov.b	#5,	&0x092f	;
    8bc6:	2f 09 
    8bc8:	f2 40 07 00 	mov.b	#7,	&0x092e	;
    8bcc:	2e 09 
    8bce:	5c 42 ea 80 	mov.b	&0x80ea,r12	;0x80ea
    8bd2:	0d 4c       	mov	r12,	r13	;
    8bd4:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    8bd8:	0e 4d       	mov	r13,	r14	;
    8bda:	3e 50 c8 23 	add	#9160,	r14	;#0x23c8
    8bde:	fe 40 94 ff 	mov.b	#65428,	0(r14)	;#0xff94
    8be2:	00 00 
    8be4:	1f 42 f4 80 	mov	&0x80f4,r15	;0x80f4
    8be8:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8bec:	5f 0b       	rrum	#3,	r15	;
    8bee:	ce 4f 01 00 	mov.b	r15,	1(r14)	;
    8bf2:	1f 42 f6 80 	mov	&0x80f6,r15	;0x80f6
    8bf6:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8bfa:	5f 0b       	rrum	#3,	r15	;
    8bfc:	ce 4f 05 00 	mov.b	r15,	5(r14)	;
    8c00:	fe 40 80 ff 	mov.b	#65408,	2(r14)	;#0xff80
    8c04:	02 00 
    8c06:	3e 50 06 00 	add	#6,	r14	;
    8c0a:	fe 40 80 ff 	mov.b	#65408,	0(r14)	;#0xff80
    8c0e:	00 00 
    8c10:	fe 40 40 00 	mov.b	#64,	1(r14)	;#0x0040
    8c14:	01 00 
    8c16:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    8c1a:	fd 40 94 ff 	mov.b	#65428,	0(r13)	;#0xff94
    8c1e:	00 00 
    8c20:	1e 42 f0 80 	mov	&0x80f0,r14	;0x80f0
    8c24:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8c28:	5e 0b       	rrum	#3,	r14	;
    8c2a:	cd 4e 01 00 	mov.b	r14,	1(r13)	;
    8c2e:	1e 42 f2 80 	mov	&0x80f2,r14	;0x80f2
    8c32:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8c36:	5e 0b       	rrum	#3,	r14	;
    8c38:	cd 4e 05 00 	mov.b	r14,	5(r13)	;
    8c3c:	cd 43 02 00 	mov.b	#0,	2(r13)	;r3 As==00
    8c40:	3d 50 06 00 	add	#6,	r13	;
    8c44:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    8c48:	fd 40 40 00 	mov.b	#64,	1(r13)	;#0x0040
    8c4c:	01 00 
    8c4e:	e2 93 eb 80 	cmp.b	#2,	&0x80eb	;r3 As==10
    8c52:	21 20       	jnz	$+68     	;abs 0x8c96
    8c54:	3c 53       	add	#-1,	r12	;r3 As==11
    8c56:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8c5a:	3c 50 c8 23 	add	#9160,	r12	;#0x23c8
    8c5e:	fc 40 94 ff 	mov.b	#65428,	0(r12)	;#0xff94
    8c62:	00 00 
    8c64:	1d 42 ec 80 	mov	&0x80ec,r13	;0x80ec
    8c68:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8c6c:	5d 0b       	rrum	#3,	r13	;
    8c6e:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    8c72:	1d 42 ee 80 	mov	&0x80ee,r13	;0x80ee
    8c76:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8c7a:	5d 0b       	rrum	#3,	r13	;
    8c7c:	cc 4d 05 00 	mov.b	r13,	5(r12)	;
    8c80:	fc 40 80 ff 	mov.b	#65408,	2(r12)	;#0xff80
    8c84:	02 00 
    8c86:	3c 50 06 00 	add	#6,	r12	;
    8c8a:	fc 40 80 ff 	mov.b	#65408,	0(r12)	;#0xff80
    8c8e:	00 00 
    8c90:	fc 40 40 00 	mov.b	#64,	1(r12)	;#0x0040
    8c94:	01 00 
    8c96:	b0 12 c2 95 	call	#38338		;#0x95c2
    8c9a:	f2 40 40 00 	mov.b	#64,	&0x093c	;#0x0040
    8c9e:	3c 09 
    8ca0:	c2 43 3e 09 	mov.b	#0,	&0x093e	;r3 As==00
    8ca4:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    8ca8:	3d 09 
    8caa:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8cae:	00 09 
    8cb0:	4c 43       	clr.b	r12		;
    8cb2:	30 41       	ret			

00008cb4 <USB_connect>:
    8cb4:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8cb8:	00 09 
    8cba:	a2 d3 02 09 	bis	#2,	&0x0902	;r3 As==10
    8cbe:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    8cc2:	08 09 
    8cc4:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8cc8:	00 09 
    8cca:	4c 43       	clr.b	r12		;
    8ccc:	30 41       	ret			

00008cce <USB_disconnect>:
    8cce:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8cd2:	00 09 
    8cd4:	a2 c3 02 09 	bic	#2,	&0x0902	;r3 As==10
    8cd8:	b2 f0 ff fb 	and	#64511,	&0x0908	;#0xfbff
    8cdc:	08 09 
    8cde:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8ce2:	00 09 
    8ce4:	c2 43 5c 24 	mov.b	#0,	&0x245c	;r3 As==00
    8ce8:	c2 43 5d 24 	mov.b	#0,	&0x245d	;r3 As==00
    8cec:	4c 43       	clr.b	r12		;
    8cee:	30 41       	ret			

00008cf0 <USB_forceRemoteWakeup>:
    8cf0:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    8cf4:	08 24       	jz	$+18     	;abs 0x8d06
    8cf6:	d2 93 5b 24 	cmp.b	#1,	&0x245b	;r3 As==01
    8cfa:	08 20       	jnz	$+18     	;abs 0x8d0c
    8cfc:	f2 d0 20 00 	bis.b	#32,	&0x093c	;#0x0020
    8d00:	3c 09 
    8d02:	0c 43       	clr	r12		;
    8d04:	04 3c       	jmp	$+10     	;abs 0x8d0e
    8d06:	3c 40 10 00 	mov	#16,	r12	;#0x0010
    8d0a:	01 3c       	jmp	$+4      	;abs 0x8d0e
    8d0c:	1c 43       	mov	#1,	r12	;r3 As==01
    8d0e:	30 41       	ret			

00008d10 <USB_getConnectionInformation>:
    8d10:	1d 42 08 09 	mov	&0x0908,r13	;0x0908
    8d14:	5d 0b       	rrum	#3,	r13	;
    8d16:	5d f3       	and.b	#1,	r13	;r3 As==01
    8d18:	4c 4d       	mov.b	r13,	r12	;
    8d1a:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    8d1e:	03 20       	jnz	$+8      	;abs 0x8d26
    8d20:	7d d0 20 00 	bis.b	#32,	r13	;#0x0020
    8d24:	4c 4d       	mov.b	r13,	r12	;
    8d26:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d2a:	04 24       	jz	$+10     	;abs 0x8d34
    8d2c:	7c d0 40 00 	bis.b	#64,	r12	;#0x0040
    8d30:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8d34:	d2 93 5d 24 	cmp.b	#1,	&0x245d	;r3 As==01
    8d38:	02 20       	jnz	$+6      	;abs 0x8d3e
    8d3a:	7c d2       	bis.b	#8,	r12	;r2 As==11
    8d3c:	02 3c       	jmp	$+6      	;abs 0x8d42
    8d3e:	7c d0 10 00 	bis.b	#16,	r12	;#0x0010
    8d42:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8d46:	30 41       	ret			

00008d48 <USB_getConnectionState>:
    8d48:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8d4c:	36 24       	jz	$+110    	;abs 0x8dba
    8d4e:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8d52:	03 24       	jz	$+8      	;abs 0x8d5a
    8d54:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d58:	33 24       	jz	$+104    	;abs 0x8dc0
    8d5a:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8d5e:	09 24       	jz	$+20     	;abs 0x8d72
    8d60:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d64:	06 24       	jz	$+14     	;abs 0x8d72
    8d66:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    8d6a:	03 20       	jnz	$+8      	;abs 0x8d72
    8d6c:	d2 93 5d 24 	cmp.b	#1,	&0x245d	;r3 As==01
    8d70:	2a 20       	jnz	$+86     	;abs 0x8dc6
    8d72:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8d76:	09 24       	jz	$+20     	;abs 0x8d8a
    8d78:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d7c:	06 24       	jz	$+14     	;abs 0x8d8a
    8d7e:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    8d82:	03 24       	jz	$+8      	;abs 0x8d8a
    8d84:	d2 93 5d 24 	cmp.b	#1,	&0x245d	;r3 As==01
    8d88:	21 24       	jz	$+68     	;abs 0x8dcc
    8d8a:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8d8e:	09 24       	jz	$+20     	;abs 0x8da2
    8d90:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8d94:	06 24       	jz	$+14     	;abs 0x8da2
    8d96:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    8d9a:	03 20       	jnz	$+8      	;abs 0x8da2
    8d9c:	d2 93 5d 24 	cmp.b	#1,	&0x245d	;r3 As==01
    8da0:	18 24       	jz	$+50     	;abs 0x8dd2
    8da2:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8da6:	18 24       	jz	$+50     	;abs 0x8dd8
    8da8:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8dac:	15 24       	jz	$+44     	;abs 0x8dd8
    8dae:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    8db2:	12 24       	jz	$+38     	;abs 0x8dd8
    8db4:	3c 40 82 00 	mov	#130,	r12	;#0x0082
    8db8:	11 3c       	jmp	$+36     	;abs 0x8ddc
    8dba:	3c 40 80 00 	mov	#128,	r12	;#0x0080
    8dbe:	0e 3c       	jmp	$+30     	;abs 0x8ddc
    8dc0:	3c 40 81 00 	mov	#129,	r12	;#0x0081
    8dc4:	0b 3c       	jmp	$+24     	;abs 0x8ddc
    8dc6:	3c 40 83 00 	mov	#131,	r12	;#0x0083
    8dca:	08 3c       	jmp	$+18     	;abs 0x8ddc
    8dcc:	3c 40 87 00 	mov	#135,	r12	;#0x0087
    8dd0:	05 3c       	jmp	$+12     	;abs 0x8ddc
    8dd2:	3c 40 84 00 	mov	#132,	r12	;#0x0084
    8dd6:	02 3c       	jmp	$+6      	;abs 0x8ddc
    8dd8:	3c 40 86 00 	mov	#134,	r12	;#0x0086
    8ddc:	30 41       	ret			

00008dde <USB_suspend>:
    8dde:	d2 43 5d 24 	mov.b	#1,	&0x245d	;r3 As==01
    8de2:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8de6:	00 09 
    8de8:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8dec:	3c 09 
    8dee:	f2 f0 bf ff 	and.b	#65471,	&0x093e	;#0xffbf
    8df2:	3e 09 
    8df4:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8df8:	10 09 
    8dfa:	b0 12 ca a9 	call	#43466		;#0xa9ca
    8dfe:	f2 40 20 00 	mov.b	#32,	&0x093d	;#0x0020
    8e02:	3d 09 
    8e04:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8e08:	00 09 
    8e0a:	4c 43       	clr.b	r12		;
    8e0c:	30 41       	ret			

00008e0e <usbStallEndpoint0>:
    8e0e:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8e12:	fc d2 00 00 	bis.b	#8,	0(r12)	;r2 As==11
    8e16:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8e1a:	30 41       	ret			

00008e1c <usbClearOEP0ByteCount>:
    8e1c:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e20:	30 41       	ret			

00008e22 <usbStallOEP0>:
    8e22:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8e26:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8e2a:	30 41       	ret			

00008e2c <usbSendNextPacketOnIEP0>:
    8e2c:	1c 42 c4 24 	mov	&0x24c4,r12	;0x24c4
    8e30:	3c 93       	cmp	#-1,	r12	;r3 As==11
    8e32:	2d 24       	jz	$+92     	;abs 0x8e8e
    8e34:	3d 42       	mov	#8,	r13	;r2 As==11
    8e36:	0d 9c       	cmp	r12,	r13	;
    8e38:	08 2c       	jc	$+18     	;abs 0x8e4a
    8e3a:	3c 50 f8 ff 	add	#65528,	r12	;#0xfff8
    8e3e:	82 4c c4 24 	mov	r12,	&0x24c4	;
    8e42:	d2 43 c8 24 	mov.b	#1,	&0x24c8	;r3 As==01
    8e46:	0c 4d       	mov	r13,	r12	;
    8e48:	11 3c       	jmp	$+36     	;abs 0x8e6c
    8e4a:	3c 92       	cmp	#8,	r12	;r2 As==11
    8e4c:	03 24       	jz	$+8      	;abs 0x8e54
    8e4e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8e52:	08 3c       	jmp	$+18     	;abs 0x8e64
    8e54:	d2 93 5e 24 	cmp.b	#1,	&0x245e	;r3 As==01
    8e58:	05 20       	jnz	$+12     	;abs 0x8e64
    8e5a:	82 43 c4 24 	mov	#0,	&0x24c4	;r3 As==00
    8e5e:	d2 43 c8 24 	mov.b	#1,	&0x24c8	;r3 As==01
    8e62:	04 3c       	jmp	$+10     	;abs 0x8e6c
    8e64:	b2 43 c4 24 	mov	#-1,	&0x24c4	;r3 As==11
    8e68:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8e6c:	1e 42 62 24 	mov	&0x2462,r14	;0x2462
    8e70:	0d 43       	clr	r13		;
    8e72:	4d 9c       	cmp.b	r12,	r13	;
    8e74:	06 2c       	jc	$+14     	;abs 0x8e82
    8e76:	0f 4e       	mov	r14,	r15	;
    8e78:	0f 5d       	add	r13,	r15	;
    8e7a:	ed 4f 78 23 	mov.b	@r15,	9080(r13); 0x2378
    8e7e:	1d 53       	inc	r13		;
    8e80:	f8 3f       	jmp	$-14     	;abs 0x8e72
    8e82:	0e 5c       	add	r12,	r14	;
    8e84:	82 4e 62 24 	mov	r14,	&0x2462	;
    8e88:	c2 4c 21 09 	mov.b	r12,	&0x0921	;
    8e8c:	02 3c       	jmp	$+6      	;abs 0x8e92
    8e8e:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8e92:	30 41       	ret			

00008e94 <usbSendDataPacketOnEP0>:
    8e94:	82 4c 62 24 	mov	r12,	&0x2462	;
    8e98:	1c 42 86 23 	mov	&0x2386,r12	;0x2386
    8e9c:	82 9c c4 24 	cmp	r12,	&0x24c4	;
    8ea0:	05 28       	jnc	$+12     	;abs 0x8eac
    8ea2:	82 4c c4 24 	mov	r12,	&0x24c4	;
    8ea6:	c2 43 5e 24 	mov.b	#0,	&0x245e	;r3 As==00
    8eaa:	02 3c       	jmp	$+6      	;abs 0x8eb0
    8eac:	d2 43 5e 24 	mov.b	#1,	&0x245e	;r3 As==01
    8eb0:	b0 12 2c 8e 	call	#36396		;#0x8e2c
    8eb4:	30 41       	ret			

00008eb6 <usbReceiveNextPacketOnOEP0>:
    8eb6:	5d 42 23 09 	mov.b	&0x0923,r13	;0x0923
    8eba:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    8ebe:	82 9d c6 24 	cmp	r13,	&0x24c6	;
    8ec2:	1b 28       	jnc	$+56     	;abs 0x8efa
    8ec4:	1e 42 60 24 	mov	&0x2460,r14	;0x2460
    8ec8:	0c 43       	clr	r12		;
    8eca:	4c 9d       	cmp.b	r13,	r12	;
    8ecc:	07 2c       	jc	$+16     	;abs 0x8edc
    8ece:	0f 4e       	mov	r14,	r15	;
    8ed0:	0f 5c       	add	r12,	r15	;
    8ed2:	df 4c 70 23 	mov.b	9072(r12),0(r15)	;0x02370
    8ed6:	00 00 
    8ed8:	1c 53       	inc	r12		;
    8eda:	f7 3f       	jmp	$-16     	;abs 0x8eca
    8edc:	0e 5d       	add	r13,	r14	;
    8ede:	82 4e 60 24 	mov	r14,	&0x2460	;
    8ee2:	1c 42 c6 24 	mov	&0x24c6,r12	;0x24c6
    8ee6:	0c 8d       	sub	r13,	r12	;
    8ee8:	82 4c c6 24 	mov	r12,	&0x24c6	;
    8eec:	0c 93       	cmp	#0,	r12	;r3 As==00
    8eee:	05 24       	jz	$+12     	;abs 0x8efa
    8ef0:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ef4:	e2 43 c8 24 	mov.b	#2,	&0x24c8	;r3 As==10
    8ef8:	04 3c       	jmp	$+10     	;abs 0x8f02
    8efa:	b0 12 22 8e 	call	#36386		;#0x8e22
    8efe:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8f02:	30 41       	ret			

00008f04 <usbReceiveDataPacketOnEP0>:
    8f04:	82 4c 60 24 	mov	r12,	&0x2460	;
    8f08:	92 42 86 23 	mov	&0x2386,&0x24c6	;0x2386
    8f0c:	c6 24 
    8f0e:	e2 43 c8 24 	mov.b	#2,	&0x24c8	;r3 As==10
    8f12:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f16:	30 41       	ret			

00008f18 <usbSendZeroLengthPacketOnIEP0>:
    8f18:	b2 43 c4 24 	mov	#-1,	&0x24c4	;r3 As==11
    8f1c:	c2 43 c8 24 	mov.b	#0,	&0x24c8	;r3 As==00
    8f20:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8f24:	30 41       	ret			

00008f26 <usbClearEndpointFeature>:
    8f26:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8f2a:	4d 4e       	mov.b	r14,	r13	;
    8f2c:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    8f30:	4c 4d       	mov.b	r13,	r12	;
    8f32:	0c 93       	cmp	#0,	r12	;r3 As==00
    8f34:	03 20       	jnz	$+8      	;abs 0x8f3c
    8f36:	b0 12 18 8f 	call	#36632		;#0x8f18
    8f3a:	13 3c       	jmp	$+40     	;abs 0x8f62
    8f3c:	7d 53       	add.b	#-1,	r13	;r3 As==11
    8f3e:	4c 4d       	mov.b	r13,	r12	;
    8f40:	7f 40 06 00 	mov.b	#6,	r15	;
    8f44:	4f 9d       	cmp.b	r13,	r15	;
    8f46:	0d 28       	jnc	$+28     	;abs 0x8f62
    8f48:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8f4c:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8f50:	04 24       	jz	$+10     	;abs 0x8f5a
    8f52:	fc f0 d7 ff 	and.b	#65495,	9160(r12);#0xffd7, 0x23c8
    8f56:	c8 23 
    8f58:	ee 3f       	jmp	$-34     	;abs 0x8f36
    8f5a:	fc f0 d7 ff 	and.b	#65495,	9096(r12);#0xffd7, 0x2388
    8f5e:	88 23 
    8f60:	ea 3f       	jmp	$-42     	;abs 0x8f36
    8f62:	4c 43       	clr.b	r12		;
    8f64:	30 41       	ret			

00008f66 <usbGetConfiguration>:
    8f66:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f6a:	92 43 c4 24 	mov	#1,	&0x24c4	;r3 As==01
    8f6e:	3c 40 65 24 	mov	#9317,	r12	;#0x2465
    8f72:	b0 12 94 8e 	call	#36500		;#0x8e94
    8f76:	4c 43       	clr.b	r12		;
    8f78:	30 41       	ret			

00008f7a <usbGetDeviceDescriptor>:
    8f7a:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f7e:	b2 40 12 00 	mov	#18,	&0x24c4	;#0x0012
    8f82:	c4 24 
    8f84:	3c 40 c5 81 	mov	#33221,	r12	;#0x81c5
    8f88:	b0 12 94 8e 	call	#36500		;#0x8e94
    8f8c:	4c 43       	clr.b	r12		;
    8f8e:	30 41       	ret			

00008f90 <usbGetConfigurationDescriptor>:
    8f90:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f94:	b2 40 43 00 	mov	#67,	&0x24c4	;#0x0043
    8f98:	c4 24 
    8f9a:	3c 40 82 81 	mov	#33154,	r12	;#0x8182
    8f9e:	b0 12 94 8e 	call	#36500		;#0x8e94
    8fa2:	4c 43       	clr.b	r12		;
    8fa4:	30 41       	ret			

00008fa6 <usbGetStringDescriptor>:
    8fa6:	5d 42 82 23 	mov.b	&0x2382,r13	;0x2382
    8faa:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8fae:	7c 40 05 00 	mov.b	#5,	r12	;
    8fb2:	4c 9d       	cmp.b	r13,	r12	;
    8fb4:	1d 28       	jnc	$+60     	;abs 0x8ff0
    8fb6:	3d 90 03 00 	cmp	#3,	r13	;
    8fba:	02 24       	jz	$+6      	;abs 0x8fc0
    8fbc:	0e 43       	clr	r14		;
    8fbe:	07 3c       	jmp	$+16     	;abs 0x8fce
    8fc0:	5d 42 a0 24 	mov.b	&0x24a0,r13	;0x24a0
    8fc4:	82 4d c4 24 	mov	r13,	&0x24c4	;
    8fc8:	3c 40 a0 24 	mov	#9376,	r12	;#0x24a0
    8fcc:	0e 3c       	jmp	$+30     	;abs 0x8fea
    8fce:	4f 4d       	mov.b	r13,	r15	;
    8fd0:	7f 53       	add.b	#-1,	r15	;r3 As==11
    8fd2:	4d 4f       	mov.b	r15,	r13	;
    8fd4:	0c 4e       	mov	r14,	r12	;
    8fd6:	3c 50 f8 80 	add	#33016,	r12	;#0x80f8
    8fda:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    8fdc:	03 24       	jz	$+8      	;abs 0x8fe4
    8fde:	6c 4c       	mov.b	@r12,	r12	;
    8fe0:	0e 5c       	add	r12,	r14	;
    8fe2:	f5 3f       	jmp	$-20     	;abs 0x8fce
    8fe4:	6d 4c       	mov.b	@r12,	r13	;
    8fe6:	82 4d c4 24 	mov	r13,	&0x24c4	;
    8fea:	b0 12 94 8e 	call	#36500		;#0x8e94
    8fee:	02 3c       	jmp	$+6      	;abs 0x8ff4
    8ff0:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    8ff4:	4c 43       	clr.b	r12		;
    8ff6:	30 41       	ret			

00008ff8 <usbGetInterface>:
    8ff8:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8ffc:	a2 43 c4 24 	mov	#2,	&0x24c4	;r3 As==10
    9000:	3c 40 98 24 	mov	#9368,	r12	;#0x2498
    9004:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9008:	dc 42 64 24 	mov.b	&0x2464,1(r12)	;0x2464
    900c:	01 00 
    900e:	b0 12 94 8e 	call	#36500		;#0x8e94
    9012:	4c 43       	clr.b	r12		;
    9014:	30 41       	ret			

00009016 <usbGetDeviceStatus>:
    9016:	f2 b0 40 00 	bit.b	#64,	&0x8189	;#0x0040
    901a:	89 81 
    901c:	02 24       	jz	$+6      	;abs 0x9022
    901e:	d2 43 98 24 	mov.b	#1,	&0x2498	;r3 As==01
    9022:	d2 93 5b 24 	cmp.b	#1,	&0x245b	;r3 As==01
    9026:	02 20       	jnz	$+6      	;abs 0x902c
    9028:	e2 d3 98 24 	bis.b	#2,	&0x2498	;r3 As==10
    902c:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9030:	a2 43 c4 24 	mov	#2,	&0x24c4	;r3 As==10
    9034:	3c 40 98 24 	mov	#9368,	r12	;#0x2498
    9038:	b0 12 94 8e 	call	#36500		;#0x8e94
    903c:	4c 43       	clr.b	r12		;
    903e:	30 41       	ret			

00009040 <usbGetInterfaceStatus>:
    9040:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9044:	a2 43 c4 24 	mov	#2,	&0x24c4	;r3 As==10
    9048:	3c 40 98 24 	mov	#9368,	r12	;#0x2498
    904c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9050:	dc 42 64 24 	mov.b	&0x2464,1(r12)	;0x2464
    9054:	01 00 
    9056:	b0 12 94 8e 	call	#36500		;#0x8e94
    905a:	4c 43       	clr.b	r12		;
    905c:	30 41       	ret			

0000905e <usbGetEndpointStatus>:
    905e:	0a 15       	pushm	#1,	r10	;16-bit words
    9060:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9064:	4c 4e       	mov.b	r14,	r12	;
    9066:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    906a:	4d 4c       	mov.b	r12,	r13	;
    906c:	3f 40 94 8e 	mov	#36500,	r15	;#0x8e94
    9070:	0d 93       	cmp	#0,	r13	;r3 As==00
    9072:	0c 20       	jnz	$+26     	;abs 0x908c
    9074:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    9078:	06 24       	jz	$+14     	;abs 0x9086
    907a:	5a 42 20 09 	mov.b	&0x0920,r10	;0x0920
    907e:	7a f2       	and.b	#8,	r10	;r2 As==11
    9080:	c2 4a 98 24 	mov.b	r10,	&0x2498	;
    9084:	17 3c       	jmp	$+48     	;abs 0x90b4
    9086:	5c 42 22 09 	mov.b	&0x0922,r12	;0x0922
    908a:	11 3c       	jmp	$+36     	;abs 0x90ae
    908c:	7c 53       	add.b	#-1,	r12	;r3 As==11
    908e:	4d 4c       	mov.b	r12,	r13	;
    9090:	7a 40 06 00 	mov.b	#6,	r10	;
    9094:	4a 9c       	cmp.b	r12,	r10	;
    9096:	0e 28       	jnc	$+30     	;abs 0x90b4
    9098:	0c 4d       	mov	r13,	r12	;
    909a:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    909e:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    90a2:	03 24       	jz	$+8      	;abs 0x90aa
    90a4:	5c 4c c8 23 	mov.b	9160(r12),r12	;0x023c8
    90a8:	02 3c       	jmp	$+6      	;abs 0x90ae
    90aa:	5c 4c 88 23 	mov.b	9096(r12),r12	;0x02388
    90ae:	7c f2       	and.b	#8,	r12	;r2 As==11
    90b0:	c2 4c 98 24 	mov.b	r12,	&0x2498	;
    90b4:	5c 42 98 24 	mov.b	&0x2498,r12	;0x2498
    90b8:	5c 0b       	rrum	#3,	r12	;
    90ba:	c2 4c 98 24 	mov.b	r12,	&0x2498	;
    90be:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    90c2:	a2 43 c4 24 	mov	#2,	&0x24c4	;r3 As==10
    90c6:	3c 40 98 24 	mov	#9368,	r12	;#0x2498
    90ca:	8f 12       	call	r15		;
    90cc:	4c 43       	clr.b	r12		;
    90ce:	0a 17       	popm	#1,	r10	;16-bit words
    90d0:	30 41       	ret			

000090d2 <usbSetAddress>:
    90d2:	b0 12 22 8e 	call	#36386		;#0x8e22
    90d6:	1c 42 82 23 	mov	&0x2382,r12	;0x2382
    90da:	3d 40 7f 00 	mov	#127,	r13	;#0x007f
    90de:	0d 9c       	cmp	r12,	r13	;
    90e0:	05 28       	jnc	$+12     	;abs 0x90ec
    90e2:	c2 4c 3f 09 	mov.b	r12,	&0x093f	;
    90e6:	b0 12 18 8f 	call	#36632		;#0x8f18
    90ea:	02 3c       	jmp	$+6      	;abs 0x90f0
    90ec:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    90f0:	4c 43       	clr.b	r12		;
    90f2:	30 41       	ret			

000090f4 <usbSetConfiguration>:
    90f4:	b0 12 22 8e 	call	#36386		;#0x8e22
    90f8:	d2 42 82 23 	mov.b	&0x2382,&0x2465	;0x2382
    90fc:	65 24 
    90fe:	b0 12 18 8f 	call	#36632		;#0x8f18
    9102:	d2 93 65 24 	cmp.b	#1,	&0x2465	;r3 As==01
    9106:	07 20       	jnz	$+16     	;abs 0x9116
    9108:	d2 43 5c 24 	mov.b	#1,	&0x245c	;r3 As==01
    910c:	b0 12 cc 87 	call	#34764		;#0x87cc
    9110:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9114:	03 3c       	jmp	$+8      	;abs 0x911c
    9116:	c2 43 5c 24 	mov.b	#0,	&0x245c	;r3 As==00
    911a:	0c 43       	clr	r12		;
    911c:	30 41       	ret			

0000911e <usbClearDeviceFeature>:
    911e:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9122:	05 20       	jnz	$+12     	;abs 0x912e
    9124:	c2 43 5b 24 	mov.b	#0,	&0x245b	;r3 As==00
    9128:	b0 12 18 8f 	call	#36632		;#0x8f18
    912c:	02 3c       	jmp	$+6      	;abs 0x9132
    912e:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    9132:	4c 43       	clr.b	r12		;
    9134:	30 41       	ret			

00009136 <usbSetDeviceFeature>:
    9136:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    913a:	05 20       	jnz	$+12     	;abs 0x9146
    913c:	d2 43 5b 24 	mov.b	#1,	&0x245b	;r3 As==01
    9140:	b0 12 18 8f 	call	#36632		;#0x8f18
    9144:	02 3c       	jmp	$+6      	;abs 0x914a
    9146:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    914a:	4c 43       	clr.b	r12		;
    914c:	30 41       	ret			

0000914e <usbSetEndpointFeature>:
    914e:	82 93 82 23 	cmp	#0,	&0x2382	;r3 As==00
    9152:	1c 20       	jnz	$+58     	;abs 0x918c
    9154:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9158:	4d 4e       	mov.b	r14,	r13	;
    915a:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    915e:	4c 4d       	mov.b	r13,	r12	;
    9160:	0c 93       	cmp	#0,	r12	;r3 As==00
    9162:	03 20       	jnz	$+8      	;abs 0x916a
    9164:	b0 12 18 8f 	call	#36632		;#0x8f18
    9168:	13 3c       	jmp	$+40     	;abs 0x9190
    916a:	7d 53       	add.b	#-1,	r13	;r3 As==11
    916c:	4c 4d       	mov.b	r13,	r12	;
    916e:	7f 40 06 00 	mov.b	#6,	r15	;
    9172:	4f 9d       	cmp.b	r13,	r15	;
    9174:	0d 28       	jnc	$+28     	;abs 0x9190
    9176:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    917a:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    917e:	03 24       	jz	$+8      	;abs 0x9186
    9180:	fc d2 c8 23 	bis.b	#8,	9160(r12);r2 As==11, 0x23c8
    9184:	ef 3f       	jmp	$-32     	;abs 0x9164
    9186:	fc d2 88 23 	bis.b	#8,	9096(r12);r2 As==11, 0x2388
    918a:	ec 3f       	jmp	$-38     	;abs 0x9164
    918c:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    9190:	4c 43       	clr.b	r12		;
    9192:	30 41       	ret			

00009194 <usbSetInterface>:
    9194:	b0 12 22 8e 	call	#36386		;#0x8e22
    9198:	d2 42 84 23 	mov.b	&0x2384,&0x2464	;0x2384
    919c:	64 24 
    919e:	b0 12 18 8f 	call	#36632		;#0x8f18
    91a2:	4c 43       	clr.b	r12		;
    91a4:	30 41       	ret			

000091a6 <usbInvalidRequest>:
    91a6:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    91aa:	02 20       	jnz	$+6      	;abs 0x91b0
    91ac:	b0 12 0e 8e 	call	#36366		;#0x8e0e
    91b0:	4c 43       	clr.b	r12		;
    91b2:	30 41       	ret			

000091b4 <usbDecodeAndProcessUsbRequest>:
    91b4:	3a 15       	pushm	#4,	r10	;16-bit words
    91b6:	5b 42 80 23 	mov.b	&0x2380,r11	;0x2380
    91ba:	5a 42 81 23 	mov.b	&0x2381,r10	;0x2381
    91be:	3c 40 04 80 	mov	#32772,	r12	;#0x8004
    91c2:	49 4b       	mov.b	r11,	r9	;
    91c4:	79 f0 7f 00 	and.b	#127,	r9	;#0x007f
    91c8:	6e 4c       	mov.b	@r12,	r14	;
    91ca:	5d 4c 01 00 	mov.b	1(r12),	r13	;
    91ce:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    91d0:	02 20       	jnz	$+6      	;abs 0x91d6
    91d2:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    91d4:	24 24       	jz	$+74     	;abs 0x921e
    91d6:	79 90 40 00 	cmp.b	#64,	r9	;#0x0040
    91da:	21 24       	jz	$+68     	;abs 0x921e
    91dc:	0e 9b       	cmp	r11,	r14	;
    91de:	1c 20       	jnz	$+58     	;abs 0x9218
    91e0:	0d 9a       	cmp	r10,	r13	;
    91e2:	1a 20       	jnz	$+54     	;abs 0x9218
    91e4:	08 4c       	mov	r12,	r8	;
    91e6:	28 53       	incd	r8		;
    91e8:	0e 43       	clr	r14		;
    91ea:	3d 40 c0 00 	mov	#192,	r13	;#0x00c0
    91ee:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    91f2:	07 48       	mov	r8,	r7	;
    91f4:	07 5e       	add	r14,	r7	;
    91f6:	ee 97 82 23 	cmp.b	@r7,	9090(r14); 0x2382
    91fa:	03 20       	jnz	$+8      	;abs 0x9202
    91fc:	4d df       	bis.b	r15,	r13	;
    91fe:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9202:	12 c3       	clrc			
    9204:	0f 10       	rrc	r15		;
    9206:	1e 53       	inc	r14		;
    9208:	3e 90 06 00 	cmp	#6,	r14	;
    920c:	f2 23       	jnz	$-26     	;abs 0x91f2
    920e:	5d fc 08 00 	and.b	8(r12),	r13	;
    9212:	5d 9c 08 00 	cmp.b	8(r12),	r13	;
    9216:	03 24       	jz	$+8      	;abs 0x921e
    9218:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    921c:	d5 3f       	jmp	$-84     	;abs 0x91c8
    921e:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9222:	06 20       	jnz	$+14     	;abs 0x9230
    9224:	1c 4c 0a 00 	mov	10(r12),r12	;0x0000a
    9228:	8c 12       	call	r12		;
    922a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    922e:	01 3c       	jmp	$+4      	;abs 0x9232
    9230:	0c 43       	clr	r12		;
    9232:	37 17       	popm	#4,	r10	;16-bit words
    9234:	30 41       	ret			

00009236 <usbDisableInEndpointInterrupt>:
    9236:	0a 15       	pushm	#1,	r10	;16-bit words
    9238:	4d 4c       	mov.b	r12,	r13	;
    923a:	5a 42 2e 09 	mov.b	&0x092e,r10	;0x092e
    923e:	1c 43       	mov	#1,	r12	;r3 As==01
    9240:	0d 5c       	add	r12,	r13	;
    9242:	b0 12 d6 b1 	call	#45526		;#0xb1d6
    9246:	c2 cc 2e 09 	bic.b	r12,	&0x092e	;
    924a:	0c fa       	and	r10,	r12	;
    924c:	0a 17       	popm	#1,	r10	;16-bit words
    924e:	30 41       	ret			

00009250 <usbRestoreInEndpointInterrupt>:
    9250:	c2 dc 2e 09 	bis.b	r12,	&0x092e	;
    9254:	30 41       	ret			

00009256 <usbDisableOutEndpointInterrupt>:
    9256:	0a 15       	pushm	#1,	r10	;16-bit words
    9258:	4d 4c       	mov.b	r12,	r13	;
    925a:	5a 42 2f 09 	mov.b	&0x092f,r10	;0x092f
    925e:	1c 43       	mov	#1,	r12	;r3 As==01
    9260:	0d 5c       	add	r12,	r13	;
    9262:	b0 12 d6 b1 	call	#45526		;#0xb1d6
    9266:	c2 cc 2f 09 	bic.b	r12,	&0x092f	;
    926a:	0c fa       	and	r10,	r12	;
    926c:	0a 17       	popm	#1,	r10	;16-bit words
    926e:	30 41       	ret			

00009270 <usbRestoreOutEndpointInterrupt>:
    9270:	c2 dc 2f 09 	bis.b	r12,	&0x092f	;
    9274:	30 41       	ret			

00009276 <USB_determineFreq>:
    9276:	2a 15       	pushm	#3,	r10	;16-bit words
    9278:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    927c:	7c f0 07 00 	and.b	#7,	r12	;
    9280:	6d 42       	mov.b	#4,	r13	;r2 As==10
    9282:	4d 9c       	cmp.b	r12,	r13	;
    9284:	52 28       	jnc	$+166    	;abs 0x932a
    9286:	5d 42 66 01 	mov.b	&0x0166,r13	;0x0166
    928a:	7d f0 70 00 	and.b	#112,	r13	;#0x0070
    928e:	7e 40 4f 00 	mov.b	#79,	r14	;#0x004f
    9292:	4e 9d       	cmp.b	r13,	r14	;
    9294:	03 2c       	jc	$+8      	;abs 0x929c
    9296:	38 40 c0 5d 	mov	#24000,	r8	;#0x5dc0
    929a:	02 3c       	jmp	$+6      	;abs 0x92a0
    929c:	38 40 21 00 	mov	#33,	r8	;#0x0021
    92a0:	1a 42 64 01 	mov	&0x0164,r10	;0x0164
    92a4:	3a f0 ff 03 	and	#1023,	r10	;#0x03ff
    92a8:	1a 53       	inc	r10		;
    92aa:	7c 90 03 00 	cmp.b	#3,	r12	;
    92ae:	0b 20       	jnz	$+24     	;abs 0x92c6
    92b0:	1d 42 64 01 	mov	&0x0164,r13	;0x0164
    92b4:	3d f0 00 70 	and	#28672,	r13	;#0x7000
    92b8:	0c 4a       	mov	r10,	r12	;
    92ba:	5d 03       	rrum	#1,	r13	;
    92bc:	4a 18 0d 11 	rpt #11 { rrax.w	r13		;
    92c0:	b0 12 d6 b1 	call	#45526		;#0xb1d6
    92c4:	0a 4c       	mov	r12,	r10	;
    92c6:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    92ca:	7c f0 07 00 	and.b	#7,	r12	;
    92ce:	4d 4c       	mov.b	r12,	r13	;
    92d0:	0d 93       	cmp	#0,	r13	;r3 As==00
    92d2:	03 20       	jnz	$+8      	;abs 0x92da
    92d4:	0c 4a       	mov	r10,	r12	;
    92d6:	0d 48       	mov	r8,	r13	;
    92d8:	1d 3c       	jmp	$+60     	;abs 0x9314
    92da:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    92dc:	05 20       	jnz	$+12     	;abs 0x92e8
    92de:	0c 4a       	mov	r10,	r12	;
    92e0:	0d 48       	mov	r8,	r13	;
    92e2:	12 c3       	clrc			
    92e4:	0d 10       	rrc	r13		;
    92e6:	16 3c       	jmp	$+46     	;abs 0x9314
    92e8:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    92ea:	04 20       	jnz	$+10     	;abs 0x92f4
    92ec:	0c 4a       	mov	r10,	r12	;
    92ee:	0d 48       	mov	r8,	r13	;
    92f0:	5d 07       	rrum	#2,	r13	;
    92f2:	10 3c       	jmp	$+34     	;abs 0x9314
    92f4:	7c 90 03 00 	cmp.b	#3,	r12	;
    92f8:	04 20       	jnz	$+10     	;abs 0x9302
    92fa:	0c 4a       	mov	r10,	r12	;
    92fc:	0d 48       	mov	r8,	r13	;
    92fe:	5d 0b       	rrum	#3,	r13	;
    9300:	09 3c       	jmp	$+20     	;abs 0x9314
    9302:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    9304:	0b 20       	jnz	$+24     	;abs 0x931c
    9306:	0c 48       	mov	r8,	r12	;
    9308:	3d 40 0c 00 	mov	#12,	r13	;#0x000c
    930c:	b0 12 aa b0 	call	#45226		;#0xb0aa
    9310:	0d 4c       	mov	r12,	r13	;
    9312:	0c 4a       	mov	r10,	r12	;
    9314:	b0 12 dc b2 	call	#45788		;#0xb2dc
    9318:	09 4c       	mov	r12,	r9	;
    931a:	09 3c       	jmp	$+20     	;abs 0x932e
    931c:	7c 90 05 00 	cmp.b	#5,	r12	;
    9320:	06 20       	jnz	$+14     	;abs 0x932e
    9322:	0c 4a       	mov	r10,	r12	;
    9324:	0d 48       	mov	r8,	r13	;
    9326:	5d 0f       	rrum	#4,	r13	;
    9328:	f5 3f       	jmp	$-20     	;abs 0x9314
    932a:	39 40 c0 5d 	mov	#24000,	r9	;#0x5dc0
    932e:	5d 42 6a 01 	mov.b	&0x016a,r13	;0x016a
    9332:	7d f0 07 00 	and.b	#7,	r13	;
    9336:	0c 49       	mov	r9,	r12	;
    9338:	3d f0 07 00 	and	#7,	r13	;
    933c:	b0 12 6a b2 	call	#45674		;#0xb26a
    9340:	28 17       	popm	#3,	r10	;16-bit words
    9342:	30 41       	ret			

00009344 <USB_init>:
    9344:	0a 15       	pushm	#1,	r10	;16-bit words
    9346:	21 82       	sub	#4,	r1	;r2 As==10
    9348:	0a 42       	mov	r2,	r10	;
    934a:	3a f2       	and	#8,	r10	;r2 As==11
    934c:	b0 12 76 92 	call	#37494		;#0x9276
    9350:	0e 4c       	mov	r12,	r14	;
    9352:	5e 0f       	rrum	#4,	r14	;
    9354:	5e 0b       	rrum	#3,	r14	;
    9356:	0d 4c       	mov	r12,	r13	;
    9358:	5d 0f       	rrum	#4,	r13	;
    935a:	5d 07       	rrum	#2,	r13	;
    935c:	0d 5e       	add	r14,	r13	;
    935e:	5c 03       	rrum	#1,	r12	;
    9360:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9364:	0c 5d       	add	r13,	r12	;
    9366:	32 c2       	dint			
    9368:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    936c:	00 09 
    936e:	b2 40 80 00 	mov	#128,	&0x0904	;#0x0080
    9372:	04 09 
    9374:	b2 40 40 08 	mov	#2112,	&0x0908	;#0x0840
    9378:	08 09 
    937a:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    937e:	1d 41 02 00 	mov	2(r1),	r13	;
    9382:	3e 40 13 00 	mov	#19,	r14	;#0x0013
    9386:	0e 9d       	cmp	r13,	r14	;
    9388:	0c 28       	jnc	$+26     	;abs 0x93a2
    938a:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    938e:	2d 41       	mov	@r1,	r13	;
    9390:	0d 9c       	cmp	r12,	r13	;
    9392:	04 2c       	jc	$+10     	;abs 0x939c
    9394:	03 43       	nop			
    9396:	91 53 00 00 	inc	0(r1)		;
    939a:	f9 3f       	jmp	$-12     	;abs 0x938e
    939c:	91 53 02 00 	inc	2(r1)		;
    93a0:	ee 3f       	jmp	$-34     	;abs 0x937e
    93a2:	b2 d0 00 02 	bis	#512,	&0x0908	;#0x0200
    93a6:	08 09 
    93a8:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    93ac:	00 09 
    93ae:	82 43 c2 24 	mov	#0,	&0x24c2	;r3 As==00
    93b2:	b0 12 a2 8a 	call	#35490		;#0x8aa2
    93b6:	b0 12 7c 95 	call	#38268		;#0x957c
    93ba:	02 da       	bis	r10,	r2	;
    93bc:	4c 43       	clr.b	r12		;
    93be:	21 52       	add	#4,	r1	;r2 As==10
    93c0:	0a 17       	popm	#1,	r10	;16-bit words
    93c2:	30 41       	ret			

000093c4 <USB_enable>:
    93c4:	1a 15       	pushm	#2,	r10	;16-bit words
    93c6:	31 80 06 00 	sub	#6,	r1	;
    93ca:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    93ce:	b0 12 76 92 	call	#37494		;#0x9276
    93d2:	0a 4c       	mov	r12,	r10	;
    93d4:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    93d8:	55 24       	jz	$+172    	;abs 0x9484
    93da:	92 b3 02 09 	bit	#1,	&0x0902	;r3 As==01
    93de:	04 24       	jz	$+10     	;abs 0x93e8
    93e0:	b2 b0 00 01 	bit	#256,	&0x0910	;#0x0100
    93e4:	10 09 
    93e6:	5a 20       	jnz	$+182    	;abs 0x949c
    93e8:	39 40 82 a1 	mov	#41346,	r9	;#0xa182
    93ec:	7c 40 05 00 	mov.b	#5,	r12	;
    93f0:	2d 42       	mov	#4,	r13	;r2 As==10
    93f2:	89 12       	call	r9		;
    93f4:	7c 40 05 00 	mov.b	#5,	r12	;
    93f8:	3d 42       	mov	#8,	r13	;r2 As==11
    93fa:	89 12       	call	r9		;
    93fc:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9400:	00 09 
    9402:	3c 40 00 c0 	mov	#49152,	r12	;#0xc000
    9406:	3d 40 50 c3 	mov	#50000,	r13	;#0xc350
    940a:	b0 12 56 a9 	call	#43350		;#0xa956
    940e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9410:	39 24       	jz	$+116    	;abs 0x9484
    9412:	b2 40 0f 05 	mov	#1295,	&0x0912	;#0x050f
    9416:	12 09 
    9418:	b2 40 00 03 	mov	#768,	&0x0910	;#0x0300
    941c:	10 09 
    941e:	5d 42 5d 24 	mov.b	&0x245d,r13	;0x245d
    9422:	0e 4a       	mov	r10,	r14	;
    9424:	5e 0f       	rrum	#4,	r14	;
    9426:	5e 0b       	rrum	#3,	r14	;
    9428:	0c 4a       	mov	r10,	r12	;
    942a:	5c 03       	rrum	#1,	r12	;
    942c:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9430:	0c 5e       	add	r14,	r12	;
    9432:	5a 0f       	rrum	#4,	r10	;
    9434:	5a 07       	rrum	#2,	r10	;
    9436:	0a 5c       	add	r12,	r10	;
    9438:	82 43 14 09 	mov	#0,	&0x0914	;r3 As==00
    943c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    943e:	4c 9d       	cmp.b	r13,	r12	;
    9440:	0e 2c       	jc	$+30     	;abs 0x945e
    9442:	1c 41 04 00 	mov	4(r1),	r12	;
    9446:	0e 4c       	mov	r12,	r14	;
    9448:	1e 53       	inc	r14		;
    944a:	81 4e 04 00 	mov	r14,	4(r1)	;
    944e:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9452:	0e 9c       	cmp	r12,	r14	;
    9454:	19 2c       	jc	$+52     	;abs 0x9488
    9456:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    945a:	00 09 
    945c:	13 3c       	jmp	$+40     	;abs 0x9484
    945e:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9462:	1c 41 02 00 	mov	2(r1),	r12	;
    9466:	1e 43       	mov	#1,	r14	;r3 As==01
    9468:	0e 9c       	cmp	r12,	r14	;
    946a:	eb 2b       	jnc	$-40     	;abs 0x9442
    946c:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    9470:	2c 41       	mov	@r1,	r12	;
    9472:	0c 9a       	cmp	r10,	r12	;
    9474:	04 2c       	jc	$+10     	;abs 0x947e
    9476:	03 43       	nop			
    9478:	91 53 00 00 	inc	0(r1)		;
    947c:	f9 3f       	jmp	$-12     	;abs 0x9470
    947e:	91 53 02 00 	inc	2(r1)		;
    9482:	ef 3f       	jmp	$-32     	;abs 0x9462
    9484:	1c 43       	mov	#1,	r12	;r3 As==01
    9486:	0b 3c       	jmp	$+24     	;abs 0x949e
    9488:	1c 42 14 09 	mov	&0x0914,r12	;0x0914
    948c:	0c 93       	cmp	#0,	r12	;r3 As==00
    948e:	d4 23       	jnz	$-86     	;abs 0x9438
    9490:	92 d3 02 09 	bis	#1,	&0x0902	;r3 As==01
    9494:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9498:	00 09 
    949a:	01 3c       	jmp	$+4      	;abs 0x949e
    949c:	0c 43       	clr	r12		;
    949e:	31 50 06 00 	add	#6,	r1	;
    94a2:	19 17       	popm	#2,	r10	;16-bit words
    94a4:	30 41       	ret			

000094a6 <USB_setup>:
    94a6:	2a 15       	pushm	#3,	r10	;16-bit words
    94a8:	49 4c       	mov.b	r12,	r9	;
    94aa:	48 4d       	mov.b	r13,	r8	;
    94ac:	b0 12 44 93 	call	#37700		;#0x9344
    94b0:	4a 4c       	mov.b	r12,	r10	;
    94b2:	08 93       	cmp	#0,	r8	;r3 As==00
    94b4:	03 24       	jz	$+8      	;abs 0x94bc
    94b6:	b2 40 ff 01 	mov	#511,	&0x24c2	;#0x01ff
    94ba:	c2 24 
    94bc:	09 93       	cmp	#0,	r9	;r3 As==00
    94be:	0c 24       	jz	$+26     	;abs 0x94d8
    94c0:	b0 12 10 8d 	call	#36112		;#0x8d10
    94c4:	1c b3       	bit	#1,	r12	;r3 As==01
    94c6:	08 24       	jz	$+18     	;abs 0x94d8
    94c8:	b0 12 c4 93 	call	#37828		;#0x93c4
    94cc:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    94ce:	04 20       	jnz	$+10     	;abs 0x94d8
    94d0:	b0 12 7c 8b 	call	#35708		;#0x8b7c
    94d4:	b0 12 b4 8c 	call	#36020		;#0x8cb4
    94d8:	4c 4a       	mov.b	r10,	r12	;
    94da:	28 17       	popm	#3,	r10	;16-bit words
    94dc:	30 41       	ret			

000094de <USB_resume>:
    94de:	b0 12 c4 93 	call	#37828		;#0x93c4
    94e2:	f2 f0 9f ff 	and.b	#65439,	&0x093e	;#0xff9f
    94e6:	3e 09 
    94e8:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    94ec:	3d 09 
    94ee:	c2 43 5d 24 	mov.b	#0,	&0x245d	;r3 As==00
    94f2:	4c 43       	clr.b	r12		;
    94f4:	30 41       	ret			

000094f6 <memcpyV>:
    94f6:	21 83       	decd	r1		;
    94f8:	0f 43       	clr	r15		;
    94fa:	0f 9e       	cmp	r14,	r15	;
    94fc:	0b 24       	jz	$+24     	;abs 0x9514
    94fe:	0b 4d       	mov	r13,	r11	;
    9500:	0b 5f       	add	r15,	r11	;
    9502:	e1 4b 01 00 	mov.b	@r11,	1(r1)	;
    9506:	0b 4c       	mov	r12,	r11	;
    9508:	0b 5f       	add	r15,	r11	;
    950a:	db 41 01 00 	mov.b	1(r1),	0(r11)	;
    950e:	00 00 
    9510:	1f 53       	inc	r15		;
    9512:	f3 3f       	jmp	$-24     	;abs 0x94fa
    9514:	21 53       	incd	r1		;
    9516:	30 41       	ret			

00009518 <memcpyDMA>:
    9518:	2a 15       	pushm	#3,	r10	;16-bit words
    951a:	0a 4c       	mov	r12,	r10	;
    951c:	08 4d       	mov	r13,	r8	;
    951e:	09 4e       	mov	r14,	r9	;
    9520:	0e 93       	cmp	#0,	r14	;r3 As==00
    9522:	29 24       	jz	$+84     	;abs 0x9576
    9524:	b0 12 64 a4 	call	#42084		;#0xa464
    9528:	4c 43       	clr.b	r12		;
    952a:	0d 48       	mov	r8,	r13	;
    952c:	0e 48       	mov	r8,	r14	;
    952e:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9532:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9536:	b0 12 a6 a3 	call	#41894		;#0xa3a6
    953a:	4c 43       	clr.b	r12		;
    953c:	0d 4a       	mov	r10,	r13	;
    953e:	0e 4a       	mov	r10,	r14	;
    9540:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9544:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9548:	b0 12 d2 a3 	call	#41938		;#0xa3d2
    954c:	b0 12 6a a4 	call	#42090		;#0xa46a
    9550:	4c 43       	clr.b	r12		;
    9552:	0d 49       	mov	r9,	r13	;
    9554:	b0 12 92 a3 	call	#41874		;#0xa392
    9558:	4c 43       	clr.b	r12		;
    955a:	b0 12 02 a4 	call	#41986		;#0xa402
    955e:	4c 43       	clr.b	r12		;
    9560:	b0 12 1a a4 	call	#42010		;#0xa41a
    9564:	39 40 38 a4 	mov	#42040,	r9	;#0xa438
    9568:	4c 43       	clr.b	r12		;
    956a:	89 12       	call	r9		;
    956c:	0c 93       	cmp	#0,	r12	;r3 As==00
    956e:	fc 27       	jz	$-6      	;abs 0x9568
    9570:	4c 43       	clr.b	r12		;
    9572:	b0 12 0e a4 	call	#41998		;#0xa40e
    9576:	0c 4a       	mov	r10,	r12	;
    9578:	28 17       	popm	#3,	r10	;16-bit words
    957a:	30 41       	ret			

0000957c <USB_initMemcpy>:
    957c:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    9580:	0c 41       	mov	r1,	r12	;
    9582:	0d 43       	clr	r13		;
    9584:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9588:	b0 12 10 b3 	call	#45840		;#0xb310
    958c:	b1 40 00 10 	mov	#4096,	2(r1)	;#0x1000
    9590:	02 00 
    9592:	f1 40 c0 ff 	mov.b	#65472,	7(r1)	;#0xffc0
    9596:	07 00 
    9598:	f1 40 20 00 	mov.b	#32,	8(r1)	;#0x0020
    959c:	08 00 
    959e:	b2 40 f6 94 	mov	#38134,	&0x24cc	;#0x94f6
    95a2:	cc 24 
    95a4:	b2 40 f6 94 	mov	#38134,	&0x24ca	;#0x94f6
    95a8:	ca 24 
    95aa:	0c 41       	mov	r1,	r12	;
    95ac:	b0 12 40 a3 	call	#41792		;#0xa340
    95b0:	b2 40 18 95 	mov	#38168,	&0x24cc	;#0x9518
    95b4:	cc 24 
    95b6:	b2 40 18 95 	mov	#38168,	&0x24ca	;#0x9518
    95ba:	ca 24 
    95bc:	31 50 0a 00 	add	#10,	r1	;#0x000a
    95c0:	30 41       	ret			

000095c2 <CdcResetData>:
    95c2:	0a 15       	pushm	#1,	r10	;16-bit words
    95c4:	3a 40 10 b3 	mov	#45840,	r10	;#0xb310
    95c8:	3c 40 76 24 	mov	#9334,	r12	;#0x2476
    95cc:	0d 43       	clr	r13		;
    95ce:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    95d2:	8a 12       	call	r10		;
    95d4:	3c 40 66 24 	mov	#9318,	r12	;#0x2466
    95d8:	0d 43       	clr	r13		;
    95da:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    95de:	8a 12       	call	r10		;
    95e0:	3c 40 80 24 	mov	#9344,	r12	;#0x2480
    95e4:	0d 43       	clr	r13		;
    95e6:	3e 42       	mov	#8,	r14	;r2 As==11
    95e8:	8a 12       	call	r10		;
    95ea:	f2 42 84 24 	mov.b	#8,	&0x2484	;r2 As==11
    95ee:	0a 17       	popm	#1,	r10	;16-bit words
    95f0:	30 41       	ret			

000095f2 <USBCDC_sendData>:
    95f2:	6a 15       	pushm	#7,	r10	;16-bit words
    95f4:	4a 4e       	mov.b	r14,	r10	;
    95f6:	0e 4a       	mov	r10,	r14	;
    95f8:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    95fc:	3e 50 e8 80 	add	#33000,	r14	;#0x80e8
    9600:	54 4e 02 00 	mov.b	2(r14),	r4	;
    9604:	0d 93       	cmp	#0,	r13	;r3 As==00
    9606:	36 24       	jz	$+110    	;abs 0x9674
    9608:	08 4d       	mov	r13,	r8	;
    960a:	07 4c       	mov	r12,	r7	;
    960c:	4c 44       	mov.b	r4,	r12	;
    960e:	b0 12 36 92 	call	#37430		;#0x9236
    9612:	05 4c       	mov	r12,	r5	;
    9614:	36 40 50 92 	mov	#37456,	r6	;#0x9250
    9618:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    961c:	04 20       	jnz	$+10     	;abs 0x9626
    961e:	59 42 5c 24 	mov.b	&0x245c,r9	;0x245c
    9622:	19 93       	cmp	#1,	r9	;r3 As==01
    9624:	04 24       	jz	$+10     	;abs 0x962e
    9626:	0c 45       	mov	r5,	r12	;
    9628:	86 12       	call	r6		;
    962a:	39 42       	mov	#8,	r9	;r2 As==11
    962c:	25 3c       	jmp	$+76     	;abs 0x9678
    962e:	0e 4a       	mov	r10,	r14	;
    9630:	0e 5a       	add	r10,	r14	;
    9632:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9636:	0a 5e       	add	r14,	r10	;
    9638:	3a 50 76 24 	add	#9334,	r10	;#0x2476
    963c:	0d 4a       	mov	r10,	r13	;
    963e:	2d 53       	incd	r13		;
    9640:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9644:	04 24       	jz	$+10     	;abs 0x964e
    9646:	86 12       	call	r6		;
    9648:	39 40 03 00 	mov	#3,	r9	;
    964c:	15 3c       	jmp	$+44     	;abs 0x9678
    964e:	8a 48 00 00 	mov	r8,	0(r10)	;
    9652:	8d 48 00 00 	mov	r8,	0(r13)	;
    9656:	8a 47 04 00 	mov	r7,	4(r10)	;
    965a:	5a 42 30 09 	mov.b	&0x0930,r10	;0x0930
    965e:	1c 43       	mov	#1,	r12	;r3 As==01
    9660:	0d 44       	mov	r4,	r13	;
    9662:	0d 5c       	add	r12,	r13	;
    9664:	b0 12 d6 b1 	call	#45526		;#0xb1d6
    9668:	4c da       	bis.b	r10,	r12	;
    966a:	c2 4c 30 09 	mov.b	r12,	&0x0930	;
    966e:	0c 45       	mov	r5,	r12	;
    9670:	86 12       	call	r6		;
    9672:	02 3c       	jmp	$+6      	;abs 0x9678
    9674:	39 40 07 00 	mov	#7,	r9	;
    9678:	4c 49       	mov.b	r9,	r12	;
    967a:	64 17       	popm	#7,	r10	;16-bit words
    967c:	30 41       	ret			

0000967e <CdcToHostFromBuffer>:
    967e:	6a 15       	pushm	#7,	r10	;16-bit words
    9680:	21 83       	decd	r1		;
    9682:	4a 4c       	mov.b	r12,	r10	;
    9684:	0c 4a       	mov	r10,	r12	;
    9686:	43 18 0c 5c 	rpt #4 { rlax.w	r12		;
    968a:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    968e:	5f 4c 02 00 	mov.b	2(r12),	r15	;
    9692:	06 4a       	mov	r10,	r6	;
    9694:	06 5a       	add	r10,	r6	;
    9696:	0e 4a       	mov	r10,	r14	;
    9698:	42 18 0e 5e 	rpt #3 { rlax.w	r14		;
    969c:	08 46       	mov	r6,	r8	;
    969e:	08 5e       	add	r14,	r8	;
    96a0:	38 50 76 24 	add	#9334,	r8	;#0x2476
    96a4:	1d 48 02 00 	mov	2(r8),	r13	;
    96a8:	09 48       	mov	r8,	r9	;
    96aa:	39 50 06 00 	add	#6,	r9	;
    96ae:	0d 93       	cmp	#0,	r13	;r3 As==00
    96b0:	32 20       	jnz	$+102    	;abs 0x9716
    96b2:	c9 93 01 00 	cmp.b	#0,	1(r9)	;r3 As==00
    96b6:	aa 20       	jnz	$+342    	;abs 0x980c
    96b8:	d9 43 01 00 	mov.b	#1,	1(r9)	;r3 As==01
    96bc:	f8 90 40 00 	cmp.b	#64,	8(r8)	;#0x0040
    96c0:	08 00 
    96c2:	19 20       	jnz	$+52     	;abs 0x96f6
    96c4:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    96c8:	0c 4f       	mov	r15,	r12	;
    96ca:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    96ce:	0a 20       	jnz	$+22     	;abs 0x96e4
    96d0:	3c 50 ca 23 	add	#9162,	r12	;#0x23ca
    96d4:	cf 93 ca 23 	cmp.b	#0,	9162(r15);r3 As==00, 0x23ca
    96d8:	0e 34       	jge	$+30     	;abs 0x96f6
    96da:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    96de:	d9 43 00 00 	mov.b	#1,	0(r9)	;r3 As==01
    96e2:	09 3c       	jmp	$+20     	;abs 0x96f6
    96e4:	3c 50 ce 23 	add	#9166,	r12	;#0x23ce
    96e8:	cf 93 ce 23 	cmp.b	#0,	9166(r15);r3 As==00, 0x23ce
    96ec:	04 34       	jge	$+10     	;abs 0x96f6
    96ee:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    96f2:	c9 4d 00 00 	mov.b	r13,	0(r9)	;
    96f6:	0e 46       	mov	r6,	r14	;
    96f8:	41 18 0e 5e 	rpt #2 { rlax.w	r14		;
    96fc:	06 5e       	add	r14,	r6	;
    96fe:	86 43 76 24 	mov	#0,	9334(r6);r3 As==00, 0x2476
    9702:	f2 b0 80 00 	bit.b	#128,	&0x24c2	;#0x0080
    9706:	c2 24 
    9708:	81 24       	jz	$+260    	;abs 0x980c
    970a:	4c 4a       	mov.b	r10,	r12	;
    970c:	b0 12 d8 87 	call	#34776		;#0x87d8
    9710:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9714:	7c 3c       	jmp	$+250    	;abs 0x980e
    9716:	c9 43 01 00 	mov.b	#0,	1(r9)	;r3 As==00
    971a:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    971e:	08 4c       	mov	r12,	r8	;
    9720:	38 50 0c 00 	add	#12,	r8	;#0x000c
    9724:	07 4c       	mov	r12,	r7	;
    9726:	37 50 0e 00 	add	#14,	r7	;#0x000e
    972a:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    972e:	10 20       	jnz	$+34     	;abs 0x9750
    9730:	2c 48       	mov	@r8,	r12	;
    9732:	09 4f       	mov	r15,	r9	;
    9734:	29 53       	incd	r9		;
    9736:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    973a:	25 47       	mov	@r7,	r5	;
    973c:	07 4f       	mov	r15,	r7	;
    973e:	37 50 06 00 	add	#6,	r7	;
    9742:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    9746:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    974a:	5f 4f 02 00 	mov.b	2(r15),	r15	;
    974e:	0f 3c       	jmp	$+32     	;abs 0x976e
    9750:	2c 47       	mov	@r7,	r12	;
    9752:	09 4f       	mov	r15,	r9	;
    9754:	39 50 06 00 	add	#6,	r9	;
    9758:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    975c:	25 48       	mov	@r8,	r5	;
    975e:	07 4f       	mov	r15,	r7	;
    9760:	27 53       	incd	r7		;
    9762:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    9766:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    976a:	5f 4f 06 00 	mov.b	6(r15),	r15	;
    976e:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    9770:	4d 34       	jge	$+156    	;abs 0x980c
    9772:	08 4d       	mov	r13,	r8	;
    9774:	3b 40 40 00 	mov	#64,	r11	;#0x0040
    9778:	0b 9d       	cmp	r13,	r11	;
    977a:	01 2c       	jc	$+4      	;abs 0x977e
    977c:	08 4b       	mov	r11,	r8	;
    977e:	44 48       	mov.b	r8,	r4	;
    9780:	06 5e       	add	r14,	r6	;
    9782:	36 50 76 24 	add	#9334,	r6	;#0x2476
    9786:	0f 46       	mov	r6,	r15	;
    9788:	2f 52       	add	#4,	r15	;r2 As==10
    978a:	2d 4f       	mov	@r15,	r13	;
    978c:	0e 48       	mov	r8,	r14	;
    978e:	81 4f 00 00 	mov	r15,	0(r1)	;
    9792:	1b 42 cc 24 	mov	&0x24cc,r11	;0x24cc
    9796:	8b 12       	call	r11		;
    9798:	c9 44 00 00 	mov.b	r4,	0(r9)	;
    979c:	5c 46 06 00 	mov.b	6(r6),	r12	;
    97a0:	5c 53       	inc.b	r12		;
    97a2:	5c f3       	and.b	#1,	r12	;r3 As==01
    97a4:	c6 4c 06 00 	mov.b	r12,	6(r6)	;
    97a8:	0c 46       	mov	r6,	r12	;
    97aa:	2c 53       	incd	r12		;
    97ac:	29 4c       	mov	@r12,	r9	;
    97ae:	09 88       	sub	r8,	r9	;
    97b0:	8c 49 00 00 	mov	r9,	0(r12)	;
    97b4:	2f 41       	mov	@r1,	r15	;
    97b6:	2d 4f       	mov	@r15,	r13	;
    97b8:	0d 58       	add	r8,	r13	;
    97ba:	8f 4d 00 00 	mov	r13,	0(r15)	;
    97be:	c6 44 08 00 	mov.b	r4,	8(r6)	;
    97c2:	6c 47       	mov.b	@r7,	r12	;
    97c4:	09 93       	cmp	#0,	r9	;r3 As==00
    97c6:	22 24       	jz	$+70     	;abs 0x980c
    97c8:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    97ca:	20 34       	jge	$+66     	;abs 0x980c
    97cc:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    97d0:	0f 99       	cmp	r9,	r15	;
    97d2:	01 2c       	jc	$+4      	;abs 0x97d6
    97d4:	09 4f       	mov	r15,	r9	;
    97d6:	48 49       	mov.b	r9,	r8	;
    97d8:	0c 45       	mov	r5,	r12	;
    97da:	0e 49       	mov	r9,	r14	;
    97dc:	1b 42 cc 24 	mov	&0x24cc,r11	;0x24cc
    97e0:	8b 12       	call	r11		;
    97e2:	c7 48 00 00 	mov.b	r8,	0(r7)	;
    97e6:	0c 4a       	mov	r10,	r12	;
    97e8:	0c 5a       	add	r10,	r12	;
    97ea:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    97ee:	0a 5c       	add	r12,	r10	;
    97f0:	3a 50 76 24 	add	#9334,	r10	;#0x2476
    97f4:	5c 4a 06 00 	mov.b	6(r10),	r12	;
    97f8:	5c 53       	inc.b	r12		;
    97fa:	5c f3       	and.b	#1,	r12	;r3 As==01
    97fc:	ca 4c 06 00 	mov.b	r12,	6(r10)	;
    9800:	8a 89 02 00 	sub	r9,	2(r10)	;
    9804:	8a 59 04 00 	add	r9,	4(r10)	;
    9808:	ca 48 08 00 	mov.b	r8,	8(r10)	;
    980c:	0c 43       	clr	r12		;
    980e:	21 53       	incd	r1		;
    9810:	64 17       	popm	#7,	r10	;16-bit words
    9812:	30 41       	ret			

00009814 <USBCDC_abortSend>:
    9814:	1a 15       	pushm	#2,	r10	;16-bit words
    9816:	09 4c       	mov	r12,	r9	;
    9818:	4a 4d       	mov.b	r13,	r10	;
    981a:	0d 4a       	mov	r10,	r13	;
    981c:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9820:	3d 50 e8 80 	add	#33000,	r13	;#0x80e8
    9824:	5c 4d 02 00 	mov.b	2(r13),	r12	;
    9828:	b0 12 36 92 	call	#37430		;#0x9236
    982c:	0d 4a       	mov	r10,	r13	;
    982e:	0d 5a       	add	r10,	r13	;
    9830:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9834:	0a 5d       	add	r13,	r10	;
    9836:	3a 50 76 24 	add	#9334,	r10	;#0x2476
    983a:	0d 4a       	mov	r10,	r13	;
    983c:	2d 53       	incd	r13		;
    983e:	2e 4a       	mov	@r10,	r14	;
    9840:	2e 8d       	sub	@r13,	r14	;
    9842:	89 4e 00 00 	mov	r14,	0(r9)	;
    9846:	8a 43 00 00 	mov	#0,	0(r10)	;r3 As==00
    984a:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    984e:	b0 12 50 92 	call	#37456		;#0x9250
    9852:	4c 43       	clr.b	r12		;
    9854:	19 17       	popm	#2,	r10	;16-bit words
    9856:	30 41       	ret			

00009858 <CopyUsbToBuff>:
    9858:	4a 15       	pushm	#5,	r10	;16-bit words
    985a:	08 4c       	mov	r12,	r8	;
    985c:	07 4d       	mov	r13,	r7	;
    985e:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9862:	0a 4e       	mov	r14,	r10	;
    9864:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9868:	0d 4a       	mov	r10,	r13	;
    986a:	3d 50 66 24 	add	#9318,	r13	;#0x2466
    986e:	1c 4d 06 00 	mov	6(r13),	r12	;
    9872:	59 4d 0e 00 	mov.b	14(r13),r9	;0x0000e
    9876:	0c 99       	cmp	r9,	r12	;
    9878:	01 2c       	jc	$+4      	;abs 0x987c
    987a:	09 4c       	mov	r12,	r9	;
    987c:	46 49       	mov.b	r9,	r6	;
    987e:	3a 50 66 24 	add	#9318,	r10	;#0x2466
    9882:	2c 4a       	mov	@r10,	r12	;
    9884:	0d 48       	mov	r8,	r13	;
    9886:	0e 49       	mov	r9,	r14	;
    9888:	1f 42 ca 24 	mov	&0x24ca,r15	;0x24ca
    988c:	8f 12       	call	r15		;
    988e:	8a 89 06 00 	sub	r9,	6(r10)	;
    9892:	8a 59 00 00 	add	r9,	0(r10)	;
    9896:	0e 4a       	mov	r10,	r14	;
    9898:	3e 50 0e 00 	add	#14,	r14	;#0x000e
    989c:	6c 4e       	mov.b	@r14,	r12	;
    989e:	06 9c       	cmp	r12,	r6	;
    98a0:	0b 20       	jnz	$+24     	;abs 0x98b8
    98a2:	5c 4e 01 00 	mov.b	1(r14),	r12	;
    98a6:	5c 53       	inc.b	r12		;
    98a8:	5c f3       	and.b	#1,	r12	;r3 As==01
    98aa:	ce 4c 01 00 	mov.b	r12,	1(r14)	;
    98ae:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    98b2:	c7 43 00 00 	mov.b	#0,	0(r7)	;r3 As==00
    98b6:	06 3c       	jmp	$+14     	;abs 0x98c4
    98b8:	4c 86       	sub.b	r6,	r12	;
    98ba:	ce 4c 00 00 	mov.b	r12,	0(r14)	;
    98be:	08 59       	add	r9,	r8	;
    98c0:	8a 48 02 00 	mov	r8,	2(r10)	;
    98c4:	46 17       	popm	#5,	r10	;16-bit words
    98c6:	30 41       	ret			

000098c8 <USBCDC_receiveData>:
    98c8:	6a 15       	pushm	#7,	r10	;16-bit words
    98ca:	31 82       	sub	#8,	r1	;r2 As==11
    98cc:	48 4e       	mov.b	r14,	r8	;
    98ce:	09 48       	mov	r8,	r9	;
    98d0:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    98d4:	04 49       	mov	r9,	r4	;
    98d6:	34 50 e8 80 	add	#33000,	r4	;#0x80e8
    98da:	5a 44 02 00 	mov.b	2(r4),	r10	;
    98de:	0d 93       	cmp	#0,	r13	;r3 As==00
    98e0:	02 25       	jz	$+518    	;abs 0x9ae6
    98e2:	0c 93       	cmp	#0,	r12	;r3 As==00
    98e4:	00 25       	jz	$+514    	;abs 0x9ae6
    98e6:	05 4d       	mov	r13,	r5	;
    98e8:	81 4c 06 00 	mov	r12,	6(r1)	;
    98ec:	4c 4a       	mov.b	r10,	r12	;
    98ee:	b0 12 56 92 	call	#37462		;#0x9256
    98f2:	06 4c       	mov	r12,	r6	;
    98f4:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    98f8:	03 20       	jnz	$+8      	;abs 0x9900
    98fa:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    98fe:	05 24       	jz	$+12     	;abs 0x990a
    9900:	0c 46       	mov	r6,	r12	;
    9902:	b0 12 70 92 	call	#37488		;#0x9270
    9906:	3c 42       	mov	#8,	r12	;r2 As==11
    9908:	f0 3c       	jmp	$+482    	;abs 0x9aea
    990a:	07 49       	mov	r9,	r7	;
    990c:	37 50 66 24 	add	#9318,	r7	;#0x2466
    9910:	87 93 00 00 	cmp	#0,	0(r7)	;r3 As==00
    9914:	05 24       	jz	$+12     	;abs 0x9920
    9916:	b0 12 70 92 	call	#37488		;#0x9270
    991a:	3c 40 03 00 	mov	#3,	r12	;
    991e:	e5 3c       	jmp	$+460    	;abs 0x9aea
    9920:	87 45 04 00 	mov	r5,	4(r7)	;
    9924:	0c 47       	mov	r7,	r12	;
    9926:	3c 50 06 00 	add	#6,	r12	;
    992a:	81 4c 04 00 	mov	r12,	4(r1)	;
    992e:	8c 45 00 00 	mov	r5,	0(r12)	;
    9932:	97 41 06 00 	mov	6(r1),	0(r7)	;
    9936:	00 00 
    9938:	c7 93 0e 00 	cmp.b	#0,	14(r7)	;r3 As==00, 0x000e
    993c:	54 24       	jz	$+170    	;abs 0x99e6
    993e:	0b 47       	mov	r7,	r11	;
    9940:	2b 53       	incd	r11		;
    9942:	0f 47       	mov	r7,	r15	;
    9944:	3f 52       	add	#8,	r15	;r2 As==11
    9946:	35 40 58 98 	mov	#39000,	r5	;#0x9858
    994a:	2c 4b       	mov	@r11,	r12	;
    994c:	2d 4f       	mov	@r15,	r13	;
    994e:	4e 48       	mov.b	r8,	r14	;
    9950:	81 4b 02 00 	mov	r11,	2(r1)	;
    9954:	81 4f 00 00 	mov	r15,	0(r1)	;
    9958:	85 12       	call	r5		;
    995a:	1b 41 02 00 	mov	2(r1),	r11	;
    995e:	2f 41       	mov	@r1,	r15	;
    9960:	1c 41 04 00 	mov	4(r1),	r12	;
    9964:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    9968:	03 20       	jnz	$+8      	;abs 0x9970
    996a:	87 43 00 00 	mov	#0,	0(r7)	;r3 As==00
    996e:	31 3c       	jmp	$+100    	;abs 0x99d2
    9970:	0d 4a       	mov	r10,	r13	;
    9972:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9976:	0c 4d       	mov	r13,	r12	;
    9978:	2c 53       	incd	r12		;
    997a:	3c 50 88 23 	add	#9096,	r12	;#0x2388
    997e:	8f 9c 00 00 	cmp	r12,	0(r15)	;
    9982:	0a 20       	jnz	$+22     	;abs 0x9998
    9984:	3d 50 06 00 	add	#6,	r13	;
    9988:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    998c:	8f 4d 00 00 	mov	r13,	0(r15)	;
    9990:	9b 44 0a 00 	mov	10(r4),	0(r11)	;0x0000a
    9994:	00 00 
    9996:	05 3c       	jmp	$+12     	;abs 0x99a2
    9998:	8f 4c 00 00 	mov	r12,	0(r15)	;
    999c:	9b 44 08 00 	mov	8(r4),	0(r11)	;
    99a0:	00 00 
    99a2:	0c 49       	mov	r9,	r12	;
    99a4:	3c 50 66 24 	add	#9318,	r12	;#0x2466
    99a8:	1d 4c 08 00 	mov	8(r12),	r13	;
    99ac:	6e 4d       	mov.b	@r13,	r14	;
    99ae:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    99b0:	08 34       	jge	$+18     	;abs 0x99c2
    99b2:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    99b6:	cc 4e 0e 00 	mov.b	r14,	14(r12)	; 0x000e
    99ba:	1c 4c 02 00 	mov	2(r12),	r12	;
    99be:	4e 48       	mov.b	r8,	r14	;
    99c0:	85 12       	call	r5		;
    99c2:	0c 49       	mov	r9,	r12	;
    99c4:	3c 50 66 24 	add	#9318,	r12	;#0x2466
    99c8:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    99cc:	0c 20       	jnz	$+26     	;abs 0x99e6
    99ce:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    99d2:	d2 b3 c3 24 	bit.b	#1,	&0x24c3	;r3 As==01
    99d6:	03 24       	jz	$+8      	;abs 0x99de
    99d8:	4c 48       	mov.b	r8,	r12	;
    99da:	b0 12 dc 87 	call	#34780		;#0x87dc
    99de:	0c 46       	mov	r6,	r12	;
    99e0:	b0 12 70 92 	call	#37488		;#0x9270
    99e4:	79 3c       	jmp	$+244    	;abs 0x9ad8
    99e6:	0c 49       	mov	r9,	r12	;
    99e8:	3c 50 66 24 	add	#9318,	r12	;#0x2466
    99ec:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    99f0:	0d 4a       	mov	r10,	r13	;
    99f2:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    99f6:	cc 93 0f 00 	cmp.b	#0,	15(r12)	;r3 As==00, 0x000f
    99fa:	15 20       	jnz	$+44     	;abs 0x9a26
    99fc:	cd 93 02 00 	cmp.b	#0,	2(r13)	;r3 As==00
    9a00:	5a 34       	jge	$+182    	;abs 0x9ab6
    9a02:	0d 49       	mov	r9,	r13	;
    9a04:	3d 50 e8 80 	add	#33000,	r13	;#0x80e8
    9a08:	9c 4d 08 00 	mov	8(r13),	2(r12)	;
    9a0c:	02 00 
    9a0e:	0e 4a       	mov	r10,	r14	;
    9a10:	2e 53       	incd	r14		;
    9a12:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    9a16:	8c 4e 08 00 	mov	r14,	8(r12)	;
    9a1a:	9c 4d 0a 00 	mov	10(r13),12(r12)	;0x0000a, 0x000c
    9a1e:	0c 00 
    9a20:	3a 50 06 00 	add	#6,	r10	;
    9a24:	14 3c       	jmp	$+42     	;abs 0x9a4e
    9a26:	cd 93 06 00 	cmp.b	#0,	6(r13)	;r3 As==00
    9a2a:	45 34       	jge	$+140    	;abs 0x9ab6
    9a2c:	0d 49       	mov	r9,	r13	;
    9a2e:	3d 50 e8 80 	add	#33000,	r13	;#0x80e8
    9a32:	9c 4d 0a 00 	mov	10(r13),2(r12)	;0x0000a
    9a36:	02 00 
    9a38:	0e 4a       	mov	r10,	r14	;
    9a3a:	3e 50 06 00 	add	#6,	r14	;
    9a3e:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    9a42:	8c 4e 08 00 	mov	r14,	8(r12)	;
    9a46:	9c 4d 08 00 	mov	8(r13),	12(r12)	; 0x000c
    9a4a:	0c 00 
    9a4c:	2a 53       	incd	r10		;
    9a4e:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9a52:	8c 4a 0a 00 	mov	r10,	10(r12)	; 0x000a
    9a56:	0a 49       	mov	r9,	r10	;
    9a58:	3a 50 66 24 	add	#9318,	r10	;#0x2466
    9a5c:	07 4a       	mov	r10,	r7	;
    9a5e:	37 52       	add	#8,	r7	;r2 As==11
    9a60:	2d 47       	mov	@r7,	r13	;
    9a62:	6c 4d       	mov.b	@r13,	r12	;
    9a64:	0c 93       	cmp	#0,	r12	;r3 As==00
    9a66:	01 20       	jnz	$+4      	;abs 0x9a6a
    9a68:	ff 3f       	jmp	$+0      	;abs 0x9a68
    9a6a:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9a6c:	24 34       	jge	$+74     	;abs 0x9ab6
    9a6e:	04 4a       	mov	r10,	r4	;
    9a70:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9a74:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9a78:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9a7c:	3f 40 58 98 	mov	#39000,	r15	;#0x9858
    9a80:	1c 4a 02 00 	mov	2(r10),	r12	;
    9a84:	4e 48       	mov.b	r8,	r14	;
    9a86:	81 4f 00 00 	mov	r15,	0(r1)	;
    9a8a:	8f 12       	call	r15		;
    9a8c:	05 4a       	mov	r10,	r5	;
    9a8e:	35 50 0a 00 	add	#10,	r5	;#0x000a
    9a92:	2d 45       	mov	@r5,	r13	;
    9a94:	6c 4d       	mov.b	@r13,	r12	;
    9a96:	2f 41       	mov	@r1,	r15	;
    9a98:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    9a9c:	0c 24       	jz	$+26     	;abs 0x9ab6
    9a9e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9aa0:	0a 34       	jge	$+22     	;abs 0x9ab6
    9aa2:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9aa6:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9aaa:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9aae:	4e 48       	mov.b	r8,	r14	;
    9ab0:	8f 12       	call	r15		;
    9ab2:	a7 45 00 00 	mov	@r5,	0(r7)	;
    9ab6:	39 50 66 24 	add	#9318,	r9	;#0x2466
    9aba:	3a 40 70 92 	mov	#37488,	r10	;#0x9270
    9abe:	89 93 06 00 	cmp	#0,	6(r9)	;r3 As==00
    9ac2:	0d 20       	jnz	$+28     	;abs 0x9ade
    9ac4:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9ac8:	d2 b3 c3 24 	bit.b	#1,	&0x24c3	;r3 As==01
    9acc:	03 24       	jz	$+8      	;abs 0x9ad4
    9ace:	4c 48       	mov.b	r8,	r12	;
    9ad0:	b0 12 dc 87 	call	#34780		;#0x87dc
    9ad4:	0c 46       	mov	r6,	r12	;
    9ad6:	8a 12       	call	r10		;
    9ad8:	3c 40 05 00 	mov	#5,	r12	;
    9adc:	06 3c       	jmp	$+14     	;abs 0x9aea
    9ade:	0c 46       	mov	r6,	r12	;
    9ae0:	8a 12       	call	r10		;
    9ae2:	2c 42       	mov	#4,	r12	;r2 As==10
    9ae4:	02 3c       	jmp	$+6      	;abs 0x9aea
    9ae6:	3c 40 07 00 	mov	#7,	r12	;
    9aea:	31 52       	add	#8,	r1	;r2 As==11
    9aec:	64 17       	popm	#7,	r10	;16-bit words
    9aee:	30 41       	ret			

00009af0 <CdcToBufferFromHost>:
    9af0:	6a 15       	pushm	#7,	r10	;16-bit words
    9af2:	48 4c       	mov.b	r12,	r8	;
    9af4:	09 48       	mov	r8,	r9	;
    9af6:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9afa:	0c 49       	mov	r9,	r12	;
    9afc:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    9b00:	5d 4c 02 00 	mov.b	2(r12),	r13	;
    9b04:	0f 49       	mov	r9,	r15	;
    9b06:	3f 50 66 24 	add	#9318,	r15	;#0x2466
    9b0a:	8f 93 06 00 	cmp	#0,	6(r15)	;r3 As==00
    9b0e:	03 20       	jnz	$+8      	;abs 0x9b16
    9b10:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9b14:	7f 3c       	jmp	$+256    	;abs 0x9c14
    9b16:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9b1a:	5e 4d 8e 23 	mov.b	9102(r13),r14	;0x0238e
    9b1e:	5e dd 8a 23 	bis.b	9098(r13),r14	;0x0238a
    9b22:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9b24:	77 34       	jge	$+240    	;abs 0x9c14
    9b26:	06 4c       	mov	r12,	r6	;
    9b28:	36 52       	add	#8,	r6	;r2 As==11
    9b2a:	05 4f       	mov	r15,	r5	;
    9b2c:	35 52       	add	#8,	r5	;r2 As==11
    9b2e:	0a 4d       	mov	r13,	r10	;
    9b30:	2a 53       	incd	r10		;
    9b32:	07 4f       	mov	r15,	r7	;
    9b34:	37 50 0c 00 	add	#12,	r7	;#0x000c
    9b38:	0e 4c       	mov	r12,	r14	;
    9b3a:	3e 50 0a 00 	add	#10,	r14	;#0x000a
    9b3e:	04 4f       	mov	r15,	r4	;
    9b40:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9b44:	3d 50 06 00 	add	#6,	r13	;
    9b48:	cf 93 0f 00 	cmp.b	#0,	15(r15)	;r3 As==00, 0x000f
    9b4c:	0c 20       	jnz	$+26     	;abs 0x9b66
    9b4e:	2c 46       	mov	@r6,	r12	;
    9b50:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9b54:	85 4a 00 00 	mov	r10,	0(r5)	;
    9b58:	a7 4e 00 00 	mov	@r14,	0(r7)	;
    9b5c:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9b60:	84 4d 00 00 	mov	r13,	0(r4)	;
    9b64:	0b 3c       	jmp	$+24     	;abs 0x9b7c
    9b66:	2c 4e       	mov	@r14,	r12	;
    9b68:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9b6c:	85 4d 00 00 	mov	r13,	0(r5)	;
    9b70:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9b74:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9b78:	84 4a 00 00 	mov	r10,	0(r4)	;
    9b7c:	0a 49       	mov	r9,	r10	;
    9b7e:	3a 50 66 24 	add	#9318,	r10	;#0x2466
    9b82:	07 4a       	mov	r10,	r7	;
    9b84:	37 52       	add	#8,	r7	;r2 As==11
    9b86:	2d 47       	mov	@r7,	r13	;
    9b88:	6e 4d       	mov.b	@r13,	r14	;
    9b8a:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9b8c:	1f 34       	jge	$+64     	;abs 0x9bcc
    9b8e:	04 4a       	mov	r10,	r4	;
    9b90:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9b94:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    9b98:	c4 4e 00 00 	mov.b	r14,	0(r4)	;
    9b9c:	35 40 58 98 	mov	#39000,	r5	;#0x9858
    9ba0:	4e 48       	mov.b	r8,	r14	;
    9ba2:	85 12       	call	r5		;
    9ba4:	06 4a       	mov	r10,	r6	;
    9ba6:	36 50 0a 00 	add	#10,	r6	;#0x000a
    9baa:	2d 46       	mov	@r6,	r13	;
    9bac:	6c 4d       	mov.b	@r13,	r12	;
    9bae:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    9bb2:	0c 24       	jz	$+26     	;abs 0x9bcc
    9bb4:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9bb6:	0a 34       	jge	$+22     	;abs 0x9bcc
    9bb8:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9bbc:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9bc0:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9bc4:	4e 48       	mov.b	r8,	r14	;
    9bc6:	85 12       	call	r5		;
    9bc8:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9bcc:	0c 49       	mov	r9,	r12	;
    9bce:	3c 50 66 24 	add	#9318,	r12	;#0x2466
    9bd2:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9bd6:	1b 20       	jnz	$+56     	;abs 0x9c0e
    9bd8:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9bdc:	1a 42 c2 24 	mov	&0x24c2,r10	;0x24c2
    9be0:	3a f0 00 01 	and	#256,	r10	;#0x0100
    9be4:	0a 93       	cmp	#0,	r10	;r3 As==00
    9be6:	04 24       	jz	$+10     	;abs 0x9bf0
    9be8:	4c 48       	mov.b	r8,	r12	;
    9bea:	b0 12 dc 87 	call	#34780		;#0x87dc
    9bee:	4a 4c       	mov.b	r12,	r10	;
    9bf0:	39 50 66 24 	add	#9318,	r9	;#0x2466
    9bf4:	c9 93 0e 00 	cmp.b	#0,	14(r9)	;r3 As==00, 0x000e
    9bf8:	0b 24       	jz	$+24     	;abs 0x9c10
    9bfa:	f2 b0 40 00 	bit.b	#64,	&0x24c2	;#0x0040
    9bfe:	c2 24 
    9c00:	07 24       	jz	$+16     	;abs 0x9c10
    9c02:	4c 48       	mov.b	r8,	r12	;
    9c04:	b0 12 d0 87 	call	#34768		;#0x87d0
    9c08:	4c da       	bis.b	r10,	r12	;
    9c0a:	4a 4c       	mov.b	r12,	r10	;
    9c0c:	01 3c       	jmp	$+4      	;abs 0x9c10
    9c0e:	0a 43       	clr	r10		;
    9c10:	0c 4a       	mov	r10,	r12	;
    9c12:	01 3c       	jmp	$+4      	;abs 0x9c16
    9c14:	0c 43       	clr	r12		;
    9c16:	64 17       	popm	#7,	r10	;16-bit words
    9c18:	30 41       	ret			

00009c1a <CdcIsReceiveInProgress>:
    9c1a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9c1e:	0d 4c       	mov	r12,	r13	;
    9c20:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9c24:	3d 50 66 24 	add	#9318,	r13	;#0x2466
    9c28:	0c 43       	clr	r12		;
    9c2a:	2c 8d       	sub	@r13,	r12	;
    9c2c:	2c dd       	bis	@r13,	r12	;
    9c2e:	5c 03       	rrum	#1,	r12	;
    9c30:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    9c34:	30 41       	ret			

00009c36 <USBCDC_abortReceive>:
    9c36:	1a 15       	pushm	#2,	r10	;16-bit words
    9c38:	09 4c       	mov	r12,	r9	;
    9c3a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9c3e:	0a 4d       	mov	r13,	r10	;
    9c40:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9c44:	0c 4a       	mov	r10,	r12	;
    9c46:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    9c4a:	5c 4c 02 00 	mov.b	2(r12),	r12	;
    9c4e:	b0 12 56 92 	call	#37462		;#0x9256
    9c52:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9c56:	0d 4a       	mov	r10,	r13	;
    9c58:	3d 50 66 24 	add	#9318,	r13	;#0x2466
    9c5c:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9c60:	0e 24       	jz	$+30     	;abs 0x9c7e
    9c62:	0e 4d       	mov	r13,	r14	;
    9c64:	3e 50 06 00 	add	#6,	r14	;
    9c68:	1f 4d 04 00 	mov	4(r13),	r15	;
    9c6c:	2f 8e       	sub	@r14,	r15	;
    9c6e:	89 4f 00 00 	mov	r15,	0(r9)	;
    9c72:	cd 43 0e 00 	mov.b	#0,	14(r13)	;r3 As==00, 0x000e
    9c76:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9c7a:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9c7e:	b0 12 70 92 	call	#37488		;#0x9270
    9c82:	4c 43       	clr.b	r12		;
    9c84:	19 17       	popm	#2,	r10	;16-bit words
    9c86:	30 41       	ret			

00009c88 <USBCDC_rejectData>:
    9c88:	3a 15       	pushm	#4,	r10	;16-bit words
    9c8a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9c8e:	09 4c       	mov	r12,	r9	;
    9c90:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9c94:	0c 49       	mov	r9,	r12	;
    9c96:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    9c9a:	5a 4c 02 00 	mov.b	2(r12),	r10	;
    9c9e:	4c 4a       	mov.b	r10,	r12	;
    9ca0:	b0 12 56 92 	call	#37462		;#0x9256
    9ca4:	0b 4c       	mov	r12,	r11	;
    9ca6:	58 42 5d 24 	mov.b	&0x245d,r8	;0x245d
    9caa:	3e 40 70 92 	mov	#37488,	r14	;#0x9270
    9cae:	08 93       	cmp	#0,	r8	;r3 As==00
    9cb0:	03 24       	jz	$+8      	;abs 0x9cb8
    9cb2:	8e 12       	call	r14		;
    9cb4:	38 42       	mov	#8,	r8	;r2 As==11
    9cb6:	25 3c       	jmp	$+76     	;abs 0x9d02
    9cb8:	0d 49       	mov	r9,	r13	;
    9cba:	3d 50 66 24 	add	#9318,	r13	;#0x2466
    9cbe:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9cc2:	1d 20       	jnz	$+60     	;abs 0x9cfe
    9cc4:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9cc8:	0f 4a       	mov	r10,	r15	;
    9cca:	3f 50 88 23 	add	#9096,	r15	;#0x2388
    9cce:	57 4f 02 00 	mov.b	2(r15),	r7	;
    9cd2:	77 f0 80 ff 	and.b	#65408,	r7	;#0xff80
    9cd6:	5c 4f 06 00 	mov.b	6(r15),	r12	;
    9cda:	7c f0 80 ff 	and.b	#65408,	r12	;#0xff80
    9cde:	47 9c       	cmp.b	r12,	r7	;
    9ce0:	06 24       	jz	$+14     	;abs 0x9cee
    9ce2:	5c 4d 0f 00 	mov.b	15(r13),r12	;0x0000f
    9ce6:	5c 53       	inc.b	r12		;
    9ce8:	5c f3       	and.b	#1,	r12	;r3 As==01
    9cea:	cd 4c 0f 00 	mov.b	r12,	15(r13)	; 0x000f
    9cee:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9cf2:	ca 43 02 00 	mov.b	#0,	2(r10)	;r3 As==00
    9cf6:	ca 43 06 00 	mov.b	#0,	6(r10)	;r3 As==00
    9cfa:	c9 43 74 24 	mov.b	#0,	9332(r9);r3 As==00, 0x2474
    9cfe:	0c 4b       	mov	r11,	r12	;
    9d00:	8e 12       	call	r14		;
    9d02:	4c 48       	mov.b	r8,	r12	;
    9d04:	37 17       	popm	#4,	r10	;16-bit words
    9d06:	30 41       	ret			

00009d08 <USBCDC_getInterfaceStatus>:
    9d08:	6a 15       	pushm	#7,	r10	;16-bit words
    9d0a:	4a 4c       	mov.b	r12,	r10	;
    9d0c:	04 4d       	mov	r13,	r4	;
    9d0e:	05 4e       	mov	r14,	r5	;
    9d10:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9d14:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9d18:	06 4a       	mov	r10,	r6	;
    9d1a:	43 18 06 56 	rpt #4 { rlax.w	r6		;
    9d1e:	0c 46       	mov	r6,	r12	;
    9d20:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    9d24:	57 4c 02 00 	mov.b	2(r12),	r7	;
    9d28:	4c 47       	mov.b	r7,	r12	;
    9d2a:	b0 12 36 92 	call	#37430		;#0x9236
    9d2e:	08 4c       	mov	r12,	r8	;
    9d30:	4c 47       	mov.b	r7,	r12	;
    9d32:	b0 12 56 92 	call	#37462		;#0x9256
    9d36:	09 4c       	mov	r12,	r9	;
    9d38:	0c 4a       	mov	r10,	r12	;
    9d3a:	0c 5a       	add	r10,	r12	;
    9d3c:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9d40:	0c 5a       	add	r10,	r12	;
    9d42:	3c 50 76 24 	add	#9334,	r12	;#0x2476
    9d46:	1a 4c 02 00 	mov	2(r12),	r10	;
    9d4a:	0a 93       	cmp	#0,	r10	;r3 As==00
    9d4c:	05 24       	jz	$+12     	;abs 0x9d58
    9d4e:	2c 4c       	mov	@r12,	r12	;
    9d50:	0c 8a       	sub	r10,	r12	;
    9d52:	84 4c 00 00 	mov	r12,	0(r4)	;
    9d56:	1a 43       	mov	#1,	r10	;r3 As==01
    9d58:	36 50 66 24 	add	#9318,	r6	;#0x2466
    9d5c:	86 93 00 00 	cmp	#0,	0(r6)	;r3 As==00
    9d60:	0a 24       	jz	$+22     	;abs 0x9d76
    9d62:	6a d3       	bis.b	#2,	r10	;r3 As==10
    9d64:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9d68:	1c 46 04 00 	mov	4(r6),	r12	;
    9d6c:	1c 86 06 00 	sub	6(r6),	r12	;
    9d70:	85 4c 00 00 	mov	r12,	0(r5)	;
    9d74:	10 3c       	jmp	$+34     	;abs 0x9d96
    9d76:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    9d7a:	13 20       	jnz	$+40     	;abs 0x9da2
    9d7c:	42 18 07 57 	rpt #3 { rlax.w	r7		;
    9d80:	37 50 88 23 	add	#9096,	r7	;#0x2388
    9d84:	5c 47 06 00 	mov.b	6(r7),	r12	;
    9d88:	5c d7 02 00 	bis.b	2(r7),	r12	;
    9d8c:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9d8e:	03 34       	jge	$+8      	;abs 0x9d96
    9d90:	6a d2       	bis.b	#4,	r10	;r2 As==10
    9d92:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9d96:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    9d9a:	03 20       	jnz	$+8      	;abs 0x9da2
    9d9c:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    9da0:	01 24       	jz	$+4      	;abs 0x9da4
    9da2:	3a 42       	mov	#8,	r10	;r2 As==11
    9da4:	0c 48       	mov	r8,	r12	;
    9da6:	b0 12 50 92 	call	#37456		;#0x9250
    9daa:	0c 49       	mov	r9,	r12	;
    9dac:	b0 12 70 92 	call	#37488		;#0x9270
    9db0:	03 43       	nop			
    9db2:	4c 4a       	mov.b	r10,	r12	;
    9db4:	64 17       	popm	#7,	r10	;16-bit words
    9db6:	30 41       	ret			

00009db8 <USBCDC_getBytesInUSBBuffer>:
    9db8:	1a 15       	pushm	#2,	r10	;16-bit words
    9dba:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9dbe:	0a 4c       	mov	r12,	r10	;
    9dc0:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9dc4:	0c 4a       	mov	r10,	r12	;
    9dc6:	3c 50 e8 80 	add	#33000,	r12	;#0x80e8
    9dca:	59 4c 02 00 	mov.b	2(r12),	r9	;
    9dce:	4c 49       	mov.b	r9,	r12	;
    9dd0:	b0 12 56 92 	call	#37462		;#0x9256
    9dd4:	3e 40 70 92 	mov	#37488,	r14	;#0x9270
    9dd8:	c2 93 5d 24 	cmp.b	#0,	&0x245d	;r3 As==00
    9ddc:	03 20       	jnz	$+8      	;abs 0x9de4
    9dde:	d2 93 5c 24 	cmp.b	#1,	&0x245c	;r3 As==01
    9de2:	03 24       	jz	$+8      	;abs 0x9dea
    9de4:	8e 12       	call	r14		;
    9de6:	0c 43       	clr	r12		;
    9de8:	24 3c       	jmp	$+74     	;abs 0x9e32
    9dea:	0d 4a       	mov	r10,	r13	;
    9dec:	3d 50 66 24 	add	#9318,	r13	;#0x2466
    9df0:	5a 4d 0e 00 	mov.b	14(r13),r10	;0x0000e
    9df4:	0a 93       	cmp	#0,	r10	;r3 As==00
    9df6:	04 24       	jz	$+10     	;abs 0x9e00
    9df8:	1d 4d 0a 00 	mov	10(r13),r13	;0x0000a
    9dfc:	6d 4d       	mov.b	@r13,	r13	;
    9dfe:	10 3c       	jmp	$+34     	;abs 0x9e20
    9e00:	42 18 09 59 	rpt #3 { rlax.w	r9		;
    9e04:	0d 49       	mov	r9,	r13	;
    9e06:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9e0a:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9e0e:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9e10:	03 34       	jge	$+8      	;abs 0x9e18
    9e12:	0a 4d       	mov	r13,	r10	;
    9e14:	3a f0 7f 00 	and	#127,	r10	;#0x007f
    9e18:	39 50 88 23 	add	#9096,	r9	;#0x2388
    9e1c:	5d 49 06 00 	mov.b	6(r9),	r13	;
    9e20:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9e22:	05 34       	jge	$+12     	;abs 0x9e2e
    9e24:	7d f0 7f 00 	and.b	#127,	r13	;#0x007f
    9e28:	4a 5d       	add.b	r13,	r10	;
    9e2a:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9e2e:	8e 12       	call	r14		;
    9e30:	0c 4a       	mov	r10,	r12	;
    9e32:	19 17       	popm	#2,	r10	;16-bit words
    9e34:	30 41       	ret			

00009e36 <usbGetLineCoding>:
    9e36:	1a 15       	pushm	#2,	r10	;16-bit words
    9e38:	1d 42 84 23 	mov	&0x2384,r13	;0x2384
    9e3c:	1d b3       	bit	#1,	r13	;r3 As==01
    9e3e:	01 24       	jz	$+4      	;abs 0x9e42
    9e40:	3d 53       	add	#-1,	r13	;r3 As==11
    9e42:	12 c3       	clrc			
    9e44:	0d 10       	rrc	r13		;
    9e46:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9e4a:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9e4e:	3d 50 80 24 	add	#9344,	r13	;#0x2480
    9e52:	0c 4d       	mov	r13,	r12	;
    9e54:	2c 52       	add	#4,	r12	;r2 As==10
    9e56:	e2 4c 9e 24 	mov.b	@r12,	&0x249e	;
    9e5a:	d2 4d 06 00 	mov.b	6(r13),	&0x249d	;
    9e5e:	9d 24 
    9e60:	d2 4c 01 00 	mov.b	1(r12),	&0x249c	;
    9e64:	9c 24 
    9e66:	2a 4d       	mov	@r13,	r10	;
    9e68:	19 4d 02 00 	mov	2(r13),	r9	;
    9e6c:	0c 4a       	mov	r10,	r12	;
    9e6e:	0d 49       	mov	r9,	r13	;
    9e70:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9e74:	b0 12 d4 b2 	call	#45780		;#0xb2d4
    9e78:	c2 4c 9b 24 	mov.b	r12,	&0x249b	;
    9e7c:	0c 4a       	mov	r10,	r12	;
    9e7e:	0d 49       	mov	r9,	r13	;
    9e80:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9e84:	b0 12 d4 b2 	call	#45780		;#0xb2d4
    9e88:	c2 4c 9a 24 	mov.b	r12,	&0x249a	;
    9e8c:	0c 4a       	mov	r10,	r12	;
    9e8e:	0d 49       	mov	r9,	r13	;
    9e90:	b0 12 9a b2 	call	#45722		;#0xb29a
    9e94:	c2 4c 99 24 	mov.b	r12,	&0x2499	;
    9e98:	c2 4a 98 24 	mov.b	r10,	&0x2498	;
    9e9c:	b2 40 07 00 	mov	#7,	&0x24c4	;
    9ea0:	c4 24 
    9ea2:	3c 40 98 24 	mov	#9368,	r12	;#0x2498
    9ea6:	b0 12 94 8e 	call	#36500		;#0x8e94
    9eaa:	4c 43       	clr.b	r12		;
    9eac:	19 17       	popm	#2,	r10	;16-bit words
    9eae:	30 41       	ret			

00009eb0 <usbSetLineCoding>:
    9eb0:	3c 40 90 24 	mov	#9360,	r12	;#0x2490
    9eb4:	b0 12 04 8f 	call	#36612		;#0x8f04
    9eb8:	4c 43       	clr.b	r12		;
    9eba:	30 41       	ret			

00009ebc <usbSetControlLineState>:
    9ebc:	3d 40 80 23 	mov	#9088,	r13	;#0x2380
    9ec0:	5c 4d 04 00 	mov.b	4(r13),	r12	;
    9ec4:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9ec8:	b0 12 e4 87 	call	#34788		;#0x87e4
    9ecc:	b0 12 18 8f 	call	#36632		;#0x8f18
    9ed0:	4c 43       	clr.b	r12		;
    9ed2:	30 41       	ret			

00009ed4 <Handler_SetLineCoding>:
    9ed4:	3a 15       	pushm	#4,	r10	;16-bit words
    9ed6:	21 83       	decd	r1		;
    9ed8:	19 42 84 23 	mov	&0x2384,r9	;0x2384
    9edc:	0c 49       	mov	r9,	r12	;
    9ede:	19 b3       	bit	#1,	r9	;r3 As==01
    9ee0:	01 24       	jz	$+4      	;abs 0x9ee4
    9ee2:	3c 53       	add	#-1,	r12	;r3 As==11
    9ee4:	12 c3       	clrc			
    9ee6:	0c 10       	rrc	r12		;
    9ee8:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    9eec:	5a 41 01 00 	mov.b	1(r1),	r10	;
    9ef0:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9ef4:	3a 50 80 24 	add	#9344,	r10	;#0x2480
    9ef8:	5c 42 93 24 	mov.b	&0x2493,r12	;0x2493
    9efc:	0d 43       	clr	r13		;
    9efe:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9f02:	b0 12 20 b2 	call	#45600		;#0xb220
    9f06:	07 4c       	mov	r12,	r7	;
    9f08:	08 4d       	mov	r13,	r8	;
    9f0a:	5c 42 92 24 	mov.b	&0x2492,r12	;0x2492
    9f0e:	0d 43       	clr	r13		;
    9f10:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9f14:	b0 12 20 b2 	call	#45600		;#0xb220
    9f18:	0c d7       	bis	r7,	r12	;
    9f1a:	08 dd       	bis	r13,	r8	;
    9f1c:	5d 42 90 24 	mov.b	&0x2490,r13	;0x2490
    9f20:	07 4c       	mov	r12,	r7	;
    9f22:	07 dd       	bis	r13,	r7	;
    9f24:	5c 42 91 24 	mov.b	&0x2491,r12	;0x2491
    9f28:	0d 43       	clr	r13		;
    9f2a:	b0 12 f8 b1 	call	#45560		;#0xb1f8
    9f2e:	07 dc       	bis	r12,	r7	;
    9f30:	8a 47 00 00 	mov	r7,	0(r10)	;
    9f34:	08 dd       	bis	r13,	r8	;
    9f36:	8a 48 02 00 	mov	r8,	2(r10)	;
    9f3a:	5d 41 01 00 	mov.b	1(r1),	r13	;
    9f3e:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9f42:	4c 49       	mov.b	r9,	r12	;
    9f44:	1e 4d 82 24 	mov	9346(r13),r14	;0x02482
    9f48:	1d 4d 80 24 	mov	9344(r13),r13	;0x02480
    9f4c:	b0 12 e0 87 	call	#34784		;#0x87e0
    9f50:	21 53       	incd	r1		;
    9f52:	37 17       	popm	#4,	r10	;16-bit words
    9f54:	30 41       	ret			

00009f56 <TLV_getInfo>:
    9f56:	0a 15       	pushm	#1,	r10	;16-bit words
    9f58:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9f5c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9f60:	3b 40 08 1a 	mov	#6664,	r11	;#0x1a08
    9f64:	6a 4b       	mov.b	@r11,	r10	;
    9f66:	4a 9c       	cmp.b	r12,	r10	;
    9f68:	1f 20       	jnz	$+64     	;abs 0x9fa8
    9f6a:	0d 93       	cmp	#0,	r13	;r3 As==00
    9f6c:	0f 20       	jnz	$+32     	;abs 0x9f8c
    9f6e:	cb 9c 00 00 	cmp.b	r12,	0(r11)	;
    9f72:	07 20       	jnz	$+16     	;abs 0x9f82
    9f74:	de 4b 01 00 	mov.b	1(r11),	0(r14)	;
    9f78:	00 00 
    9f7a:	2b 53       	incd	r11		;
    9f7c:	8f 4b 00 00 	mov	r11,	0(r15)	;
    9f80:	16 3c       	jmp	$+46     	;abs 0x9fae
    9f82:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9f86:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9f8a:	11 3c       	jmp	$+36     	;abs 0x9fae
    9f8c:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9f8e:	ef 27       	jz	$-32     	;abs 0x9f6e
    9f90:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9f92:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9f96:	5a 4b 01 00 	mov.b	1(r11),	r10	;
    9f9a:	2a 53       	incd	r10		;
    9f9c:	0b 5a       	add	r10,	r11	;
    9f9e:	3a 40 fe 1a 	mov	#6910,	r10	;#0x1afe
    9fa2:	0a 9b       	cmp	r11,	r10	;
    9fa4:	df 2f       	jc	$-64     	;abs 0x9f64
    9fa6:	e3 3f       	jmp	$-56     	;abs 0x9f6e
    9fa8:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9faa:	f5 23       	jnz	$-20     	;abs 0x9f96
    9fac:	e0 3f       	jmp	$-62     	;abs 0x9f6e
    9fae:	0a 17       	popm	#1,	r10	;16-bit words
    9fb0:	30 41       	ret			

00009fb2 <TLV_getDeviceType>:
    9fb2:	1c 42 04 1a 	mov	&0x1a04,r12	;0x1a04
    9fb6:	30 41       	ret			

00009fb8 <TLV_getMemory>:
    9fb8:	0a 15       	pushm	#1,	r10	;16-bit words
    9fba:	21 82       	sub	#4,	r1	;r2 As==10
    9fbc:	0c 5c       	rla	r12		;
    9fbe:	4a 4c       	mov.b	r12,	r10	;
    9fc0:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9fc2:	4d 43       	clr.b	r13		;
    9fc4:	0e 41       	mov	r1,	r14	;
    9fc6:	1e 53       	inc	r14		;
    9fc8:	0f 41       	mov	r1,	r15	;
    9fca:	2f 53       	incd	r15		;
    9fcc:	b0 12 56 9f 	call	#40790		;#0x9f56
    9fd0:	1f 41 02 00 	mov	2(r1),	r15	;
    9fd4:	0d 43       	clr	r13		;
    9fd6:	0a 9d       	cmp	r13,	r10	;
    9fd8:	0f 28       	jnc	$+32     	;abs 0x9ff8
    9fda:	0e 4f       	mov	r15,	r14	;
    9fdc:	0e 5d       	add	r13,	r14	;
    9fde:	6c 4e       	mov.b	@r14,	r12	;
    9fe0:	0c 93       	cmp	#0,	r12	;r3 As==00
    9fe2:	0b 24       	jz	$+24     	;abs 0x9ffa
    9fe4:	0d 9a       	cmp	r10,	r13	;
    9fe6:	06 20       	jnz	$+14     	;abs 0x9ff4
    9fe8:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    9fec:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    9ff0:	0c dd       	bis	r13,	r12	;
    9ff2:	03 3c       	jmp	$+8      	;abs 0x9ffa
    9ff4:	2d 53       	incd	r13		;
    9ff6:	ef 3f       	jmp	$-32     	;abs 0x9fd6
    9ff8:	0c 43       	clr	r12		;
    9ffa:	21 52       	add	#4,	r1	;r2 As==10
    9ffc:	0a 17       	popm	#1,	r10	;16-bit words
    9ffe:	30 41       	ret			

0000a000 <TLV_getPeripheral>:
    a000:	3a 15       	pushm	#4,	r10	;16-bit words
    a002:	21 82       	sub	#4,	r1	;r2 As==10
    a004:	48 4c       	mov.b	r12,	r8	;
    a006:	49 4d       	mov.b	r13,	r9	;
    a008:	6c 43       	mov.b	#2,	r12	;r3 As==10
    a00a:	4d 43       	clr.b	r13		;
    a00c:	0e 41       	mov	r1,	r14	;
    a00e:	1e 53       	inc	r14		;
    a010:	0f 41       	mov	r1,	r15	;
    a012:	2f 53       	incd	r15		;
    a014:	b0 12 56 9f 	call	#40790		;#0x9f56
    a018:	0a 43       	clr	r10		;
    a01a:	37 40 b8 9f 	mov	#40888,	r7	;#0x9fb8
    a01e:	4c 4a       	mov.b	r10,	r12	;
    a020:	87 12       	call	r7		;
    a022:	0c 93       	cmp	#0,	r12	;r3 As==00
    a024:	02 24       	jz	$+6      	;abs 0xa02a
    a026:	1a 53       	inc	r10		;
    a028:	fa 3f       	jmp	$-10     	;abs 0xa01e
    a02a:	1e 41 02 00 	mov	2(r1),	r14	;
    a02e:	0a 5a       	rla	r10		;
    a030:	0d 4e       	mov	r14,	r13	;
    a032:	0d 5a       	add	r10,	r13	;
    a034:	5d 4d 01 00 	mov.b	1(r13),	r13	;
    a038:	2a 53       	incd	r10		;
    a03a:	0a 5e       	add	r14,	r10	;
    a03c:	81 4a 02 00 	mov	r10,	2(r1)	;
    a040:	0e 4d       	mov	r13,	r14	;
    a042:	0e 5d       	add	r13,	r14	;
    a044:	0f 4a       	mov	r10,	r15	;
    a046:	1f 53       	inc	r15		;
    a048:	0d 4c       	mov	r12,	r13	;
    a04a:	cf 98 00 00 	cmp.b	r8,	0(r15)	;
    a04e:	0c 20       	jnz	$+26     	;abs 0xa068
    a050:	09 93       	cmp	#0,	r9	;r3 As==00
    a052:	04 24       	jz	$+10     	;abs 0xa05c
    a054:	79 53       	add.b	#-1,	r9	;r3 As==11
    a056:	39 f0 ff 00 	and	#255,	r9	;#0x00ff
    a05a:	06 3c       	jmp	$+14     	;abs 0xa068
    a05c:	0a 5d       	add	r13,	r10	;
    a05e:	6c 4a       	mov.b	@r10,	r12	;
    a060:	47 18 08 58 	rpt #8 { rlax.w	r8		;
    a064:	0c d8       	bis	r8,	r12	;
    a066:	04 3c       	jmp	$+10     	;abs 0xa070
    a068:	2d 53       	incd	r13		;
    a06a:	2f 53       	incd	r15		;
    a06c:	0e 9d       	cmp	r13,	r14	;
    a06e:	ed 2f       	jc	$-36     	;abs 0xa04a
    a070:	21 52       	add	#4,	r1	;r2 As==10
    a072:	37 17       	popm	#4,	r10	;16-bit words
    a074:	30 41       	ret			

0000a076 <TLV_getInterrupt>:
    a076:	2a 15       	pushm	#3,	r10	;16-bit words
    a078:	21 82       	sub	#4,	r1	;r2 As==10
    a07a:	49 4c       	mov.b	r12,	r9	;
    a07c:	6c 43       	mov.b	#2,	r12	;r3 As==10
    a07e:	4d 43       	clr.b	r13		;
    a080:	0e 41       	mov	r1,	r14	;
    a082:	1e 53       	inc	r14		;
    a084:	0f 41       	mov	r1,	r15	;
    a086:	2f 53       	incd	r15		;
    a088:	b0 12 56 9f 	call	#40790		;#0x9f56
    a08c:	0a 43       	clr	r10		;
    a08e:	38 40 b8 9f 	mov	#40888,	r8	;#0x9fb8
    a092:	4c 4a       	mov.b	r10,	r12	;
    a094:	88 12       	call	r8		;
    a096:	0f 4a       	mov	r10,	r15	;
    a098:	1f 53       	inc	r15		;
    a09a:	0c 93       	cmp	#0,	r12	;r3 As==00
    a09c:	02 24       	jz	$+6      	;abs 0xa0a2
    a09e:	0a 4f       	mov	r15,	r10	;
    a0a0:	f8 3f       	jmp	$-14     	;abs 0xa092
    a0a2:	1d 41 02 00 	mov	2(r1),	r13	;
    a0a6:	0a 5a       	rla	r10		;
    a0a8:	0a 5d       	add	r13,	r10	;
    a0aa:	5e 4a 01 00 	mov.b	1(r10),	r14	;
    a0ae:	0e 5f       	add	r15,	r14	;
    a0b0:	0e 5e       	rla	r14		;
    a0b2:	0d 5e       	add	r14,	r13	;
    a0b4:	81 4d 02 00 	mov	r13,	2(r1)	;
    a0b8:	0e 4c       	mov	r12,	r14	;
    a0ba:	09 9e       	cmp	r14,	r9	;
    a0bc:	09 28       	jnc	$+20     	;abs 0xa0d0
    a0be:	0c 4d       	mov	r13,	r12	;
    a0c0:	0c 5e       	add	r14,	r12	;
    a0c2:	6c 4c       	mov.b	@r12,	r12	;
    a0c4:	0c 93       	cmp	#0,	r12	;r3 As==00
    a0c6:	05 24       	jz	$+12     	;abs 0xa0d2
    a0c8:	0e 99       	cmp	r9,	r14	;
    a0ca:	03 24       	jz	$+8      	;abs 0xa0d2
    a0cc:	2e 53       	incd	r14		;
    a0ce:	f5 3f       	jmp	$-20     	;abs 0xa0ba
    a0d0:	0c 43       	clr	r12		;
    a0d2:	21 52       	add	#4,	r1	;r2 As==10
    a0d4:	28 17       	popm	#3,	r10	;16-bit words
    a0d6:	30 41       	ret			

0000a0d8 <WDT_A_hold>:
    a0d8:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a0dc:	2d 4c       	mov	@r12,	r13	;
    a0de:	7d d0 80 ff 	bis.b	#65408,	r13	;#0xff80
    a0e2:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a0e6:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a0ea:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a0ee:	30 41       	ret			

0000a0f0 <WDT_A_start>:
    a0f0:	1d 4c 0c 00 	mov	12(r12),r13	;0x0000c
    a0f4:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    a0f8:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a0fc:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a100:	30 41       	ret			

0000a102 <WDT_A_resetTimer>:
    a102:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    a106:	2d 4c       	mov	@r12,	r13	;
    a108:	7d d2       	bis.b	#8,	r13	;r2 As==11
    a10a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a10e:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    a112:	8c 4d 00 00 	mov	r13,	0(r12)	;
    a116:	30 41       	ret			

0000a118 <WDT_A_initWatchdogTimer>:
    a118:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a11c:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a120:	3d 50 88 5a 	add	#23176,	r13	;#0x5a88
    a124:	0d 5e       	add	r14,	r13	;
    a126:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a12a:	30 41       	ret			

0000a12c <WDT_A_initIntervalTimer>:
    a12c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a130:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a134:	3d 50 98 5a 	add	#23192,	r13	;#0x5a98
    a138:	0d 5e       	add	r14,	r13	;
    a13a:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a13e:	30 41       	ret			

0000a140 <GPIO_setAsOutputPin>:
    a140:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a144:	0e 4c       	mov	r12,	r14	;
    a146:	0e 5c       	add	r12,	r14	;
    a148:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a14c:	1c b3       	bit	#1,	r12	;r3 As==01
    a14e:	02 20       	jnz	$+6      	;abs 0xa154
    a150:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a154:	8e cd 0a 00 	bic	r13,	10(r14)	; 0x000a
    a158:	8e dd 04 00 	bis	r13,	4(r14)	;
    a15c:	30 41       	ret			

0000a15e <GPIO_setAsInputPin>:
    a15e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a162:	0e 4c       	mov	r12,	r14	;
    a164:	0e 5c       	add	r12,	r14	;
    a166:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a16a:	1c b3       	bit	#1,	r12	;r3 As==01
    a16c:	02 20       	jnz	$+6      	;abs 0xa172
    a16e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a172:	3d e3       	inv	r13		;
    a174:	8e fd 0a 00 	and	r13,	10(r14)	; 0x000a
    a178:	8e fd 04 00 	and	r13,	4(r14)	;
    a17c:	8e fd 06 00 	and	r13,	6(r14)	;
    a180:	30 41       	ret			

0000a182 <GPIO_setAsPeripheralModuleFunctionOutputPin>:
    a182:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a186:	0e 4c       	mov	r12,	r14	;
    a188:	0e 5c       	add	r12,	r14	;
    a18a:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a18e:	1c b3       	bit	#1,	r12	;r3 As==01
    a190:	02 20       	jnz	$+6      	;abs 0xa196
    a192:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a196:	8e dd 04 00 	bis	r13,	4(r14)	;
    a19a:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a19e:	30 41       	ret			

0000a1a0 <GPIO_setAsPeripheralModuleFunctionInputPin>:
    a1a0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1a4:	0e 4c       	mov	r12,	r14	;
    a1a6:	0e 5c       	add	r12,	r14	;
    a1a8:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a1ac:	1c b3       	bit	#1,	r12	;r3 As==01
    a1ae:	02 20       	jnz	$+6      	;abs 0xa1b4
    a1b0:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1b4:	8e cd 04 00 	bic	r13,	4(r14)	;
    a1b8:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a1bc:	30 41       	ret			

0000a1be <GPIO_setOutputHighOnPin>:
    a1be:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1c2:	0e 4c       	mov	r12,	r14	;
    a1c4:	0e 5c       	add	r12,	r14	;
    a1c6:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a1ca:	1c b3       	bit	#1,	r12	;r3 As==01
    a1cc:	02 20       	jnz	$+6      	;abs 0xa1d2
    a1ce:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1d2:	8e dd 02 00 	bis	r13,	2(r14)	;
    a1d6:	30 41       	ret			

0000a1d8 <GPIO_setOutputLowOnPin>:
    a1d8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1dc:	0e 4c       	mov	r12,	r14	;
    a1de:	0e 5c       	add	r12,	r14	;
    a1e0:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a1e4:	1c b3       	bit	#1,	r12	;r3 As==01
    a1e6:	02 20       	jnz	$+6      	;abs 0xa1ec
    a1e8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1ec:	8e cd 02 00 	bic	r13,	2(r14)	;
    a1f0:	30 41       	ret			

0000a1f2 <GPIO_toggleOutputOnPin>:
    a1f2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1f6:	0e 4c       	mov	r12,	r14	;
    a1f8:	0e 5c       	add	r12,	r14	;
    a1fa:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a1fe:	1c b3       	bit	#1,	r12	;r3 As==01
    a200:	02 20       	jnz	$+6      	;abs 0xa206
    a202:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a206:	8e ed 02 00 	xor	r13,	2(r14)	;
    a20a:	30 41       	ret			

0000a20c <GPIO_setAsInputPinWithPullDownResistor>:
    a20c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a210:	0e 4c       	mov	r12,	r14	;
    a212:	0e 5c       	add	r12,	r14	;
    a214:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a218:	1c b3       	bit	#1,	r12	;r3 As==01
    a21a:	02 20       	jnz	$+6      	;abs 0xa220
    a21c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a220:	0c 4d       	mov	r13,	r12	;
    a222:	3c e3       	inv	r12		;
    a224:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a228:	8e fc 04 00 	and	r12,	4(r14)	;
    a22c:	8e dd 06 00 	bis	r13,	6(r14)	;
    a230:	8e fc 02 00 	and	r12,	2(r14)	;
    a234:	30 41       	ret			

0000a236 <GPIO_setAsInputPinWithPullUpResistor>:
    a236:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a23a:	0e 4c       	mov	r12,	r14	;
    a23c:	0e 5c       	add	r12,	r14	;
    a23e:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a242:	1c b3       	bit	#1,	r12	;r3 As==01
    a244:	02 20       	jnz	$+6      	;abs 0xa24a
    a246:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a24a:	0c 4d       	mov	r13,	r12	;
    a24c:	3c e3       	inv	r12		;
    a24e:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a252:	8e fc 04 00 	and	r12,	4(r14)	;
    a256:	8e dd 06 00 	bis	r13,	6(r14)	;
    a25a:	8e dd 02 00 	bis	r13,	2(r14)	;
    a25e:	30 41       	ret			

0000a260 <GPIO_getInputPinValue>:
    a260:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a264:	0e 4c       	mov	r12,	r14	;
    a266:	0e 5c       	add	r12,	r14	;
    a268:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a26c:	1c b3       	bit	#1,	r12	;r3 As==01
    a26e:	02 20       	jnz	$+6      	;abs 0xa274
    a270:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a274:	2d fe       	and	@r14,	r13	;
    a276:	0c 43       	clr	r12		;
    a278:	0c 8d       	sub	r13,	r12	;
    a27a:	0c dd       	bis	r13,	r12	;
    a27c:	5c 03       	rrum	#1,	r12	;
    a27e:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a282:	30 41       	ret			

0000a284 <GPIO_enableInterrupt>:
    a284:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a288:	0e 4c       	mov	r12,	r14	;
    a28a:	0e 5c       	add	r12,	r14	;
    a28c:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a290:	1c b3       	bit	#1,	r12	;r3 As==01
    a292:	02 20       	jnz	$+6      	;abs 0xa298
    a294:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a298:	8e dd 1a 00 	bis	r13,	26(r14)	; 0x001a
    a29c:	30 41       	ret			

0000a29e <GPIO_disableInterrupt>:
    a29e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2a2:	0e 4c       	mov	r12,	r14	;
    a2a4:	0e 5c       	add	r12,	r14	;
    a2a6:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a2aa:	1c b3       	bit	#1,	r12	;r3 As==01
    a2ac:	02 20       	jnz	$+6      	;abs 0xa2b2
    a2ae:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a2b2:	8e cd 1a 00 	bic	r13,	26(r14)	; 0x001a
    a2b6:	30 41       	ret			

0000a2b8 <GPIO_getInterruptStatus>:
    a2b8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2bc:	0e 4c       	mov	r12,	r14	;
    a2be:	0e 5c       	add	r12,	r14	;
    a2c0:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a2c4:	1c b3       	bit	#1,	r12	;r3 As==01
    a2c6:	02 20       	jnz	$+6      	;abs 0xa2cc
    a2c8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a2cc:	0c 4d       	mov	r13,	r12	;
    a2ce:	1c fe 1c 00 	and	28(r14),r12	;0x0001c
    a2d2:	30 41       	ret			

0000a2d4 <GPIO_clearInterrupt>:
    a2d4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2d8:	0e 4c       	mov	r12,	r14	;
    a2da:	0e 5c       	add	r12,	r14	;
    a2dc:	1e 4e f6 81 	mov	-32266(r14),r14	;0xffff81f6
    a2e0:	1c b3       	bit	#1,	r12	;r3 As==01
    a2e2:	02 20       	jnz	$+6      	;abs 0xa2e8
    a2e4:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a2e8:	8e cd 1c 00 	bic	r13,	28(r14)	; 0x001c
    a2ec:	30 41       	ret			

0000a2ee <GPIO_selectInterruptEdge>:
    a2ee:	4f 4c       	mov.b	r12,	r15	;
    a2f0:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a2f4:	0c 4f       	mov	r15,	r12	;
    a2f6:	0c 5f       	add	r15,	r12	;
    a2f8:	1c 4c f6 81 	mov	-32266(r12),r12	;0xffff81f6
    a2fc:	1f b3       	bit	#1,	r15	;r3 As==01
    a2fe:	02 20       	jnz	$+6      	;abs 0xa304
    a300:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a304:	3c 50 18 00 	add	#24,	r12	;#0x0018
    a308:	0e 93       	cmp	#0,	r14	;r3 As==00
    a30a:	03 20       	jnz	$+8      	;abs 0xa312
    a30c:	8c cd 00 00 	bic	r13,	0(r12)	;
    a310:	02 3c       	jmp	$+6      	;abs 0xa316
    a312:	8c dd 00 00 	bis	r13,	0(r12)	;
    a316:	30 41       	ret			

0000a318 <GPIO_setDriveStrength>:
    a318:	4f 4c       	mov.b	r12,	r15	;
    a31a:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a31e:	0c 4f       	mov	r15,	r12	;
    a320:	0c 5f       	add	r15,	r12	;
    a322:	1c 4c f6 81 	mov	-32266(r12),r12	;0xffff81f6
    a326:	1f b3       	bit	#1,	r15	;r3 As==01
    a328:	02 20       	jnz	$+6      	;abs 0xa32e
    a32a:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a32e:	3c 52       	add	#8,	r12	;r2 As==11
    a330:	0e 93       	cmp	#0,	r14	;r3 As==00
    a332:	03 20       	jnz	$+8      	;abs 0xa33a
    a334:	8c cd 00 00 	bic	r13,	0(r12)	;
    a338:	02 3c       	jmp	$+6      	;abs 0xa33e
    a33a:	8c dd 00 00 	bis	r13,	0(r12)	;
    a33e:	30 41       	ret			

0000a340 <DMA_init>:
    a340:	6f 4c       	mov.b	@r12,	r15	;
    a342:	0e 4f       	mov	r15,	r14	;
    a344:	5e 0f       	rrum	#4,	r14	;
    a346:	5b 4c 07 00 	mov.b	7(r12),	r11	;
    a34a:	5d 4c 08 00 	mov.b	8(r12),	r13	;
    a34e:	0d 5b       	add	r11,	r13	;
    a350:	1d 5c 02 00 	add	2(r12),	r13	;
    a354:	8f 4d 10 05 	mov	r13,	1296(r15); 0x0510
    a358:	6d 4c       	mov.b	@r12,	r13	;
    a35a:	9d 4c 04 00 	mov	4(r12),	1306(r13); 0x051a
    a35e:	1a 05 
    a360:	4d 4e       	mov.b	r14,	r13	;
    a362:	7d f0 0e 00 	and.b	#14,	r13	;#0x000e
    a366:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a36a:	3d 50 00 05 	add	#1280,	r13	;#0x0500
    a36e:	1e b3       	bit	#1,	r14	;r3 As==01
    a370:	08 24       	jz	$+18     	;abs 0xa382
    a372:	bd f0 ff 00 	and	#255,	0(r13)	;#0x00ff
    a376:	00 00 
    a378:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a37c:	47 18 0c 5c 	rpt #8 { rlax.w	r12		;
    a380:	05 3c       	jmp	$+12     	;abs 0xa38c
    a382:	bd f0 00 ff 	and	#65280,	0(r13)	;#0xff00
    a386:	00 00 
    a388:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a38c:	8d dc 00 00 	bis	r12,	0(r13)	;
    a390:	30 41       	ret			

0000a392 <DMA_setTransferSize>:
    a392:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a396:	8c 4d 1a 05 	mov	r13,	1306(r12); 0x051a
    a39a:	30 41       	ret			

0000a39c <DMA_getTransferSize>:
    a39c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a3a0:	1c 4c 1a 05 	mov	1306(r12),r12	;0x0051a
    a3a4:	30 41       	ret			

0000a3a6 <DMA_setSrcAddress>:
    a3a6:	21 82       	sub	#4,	r1	;r2 As==10
    a3a8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a3ac:	81 4d 00 00 	mov	r13,	0(r1)	;
    a3b0:	81 4e 02 00 	mov	r14,	2(r1)	;
    a3b4:	0d 4c       	mov	r12,	r13	;
    a3b6:	3d 50 12 05 	add	#1298,	r13	;#0x0512
    a3ba:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a3be:	00 00 
    a3c0:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a3c4:	bc f0 ff fc 	and	#64767,	0(r12)	;#0xfcff
    a3c8:	00 00 
    a3ca:	8c df 00 00 	bis	r15,	0(r12)	;
    a3ce:	21 52       	add	#4,	r1	;r2 As==10
    a3d0:	30 41       	ret			

0000a3d2 <DMA_setDstAddress>:
    a3d2:	21 82       	sub	#4,	r1	;r2 As==10
    a3d4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a3d8:	81 4d 00 00 	mov	r13,	0(r1)	;
    a3dc:	81 4e 02 00 	mov	r14,	2(r1)	;
    a3e0:	0d 4c       	mov	r12,	r13	;
    a3e2:	3d 50 16 05 	add	#1302,	r13	;#0x0516
    a3e6:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a3ea:	00 00 
    a3ec:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a3f0:	bc f0 ff f3 	and	#62463,	0(r12)	;#0xf3ff
    a3f4:	00 00 
    a3f6:	41 18 0f 5f 	rpt #2 { rlax.w	r15		;
    a3fa:	8c df 00 00 	bis	r15,	0(r12)	;
    a3fe:	21 52       	add	#4,	r1	;r2 As==10
    a400:	30 41       	ret			

0000a402 <DMA_enableTransfers>:
    a402:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a406:	bc d0 10 00 	bis	#16,	1296(r12);#0x0010, 0x0510
    a40a:	10 05 
    a40c:	30 41       	ret			

0000a40e <DMA_disableTransfers>:
    a40e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a412:	bc f0 ef ff 	and	#65519,	1296(r12);#0xffef, 0x0510
    a416:	10 05 
    a418:	30 41       	ret			

0000a41a <DMA_startTransfer>:
    a41a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a41e:	9c d3 10 05 	bis	#1,	1296(r12);r3 As==01, 0x0510
    a422:	30 41       	ret			

0000a424 <DMA_enableInterrupt>:
    a424:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a428:	ac d2 10 05 	bis	#4,	1296(r12);r2 As==10, 0x0510
    a42c:	30 41       	ret			

0000a42e <DMA_disableInterrupt>:
    a42e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a432:	ac c2 10 05 	bic	#4,	1296(r12);r2 As==10, 0x0510
    a436:	30 41       	ret			

0000a438 <DMA_getInterruptStatus>:
    a438:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a43c:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a440:	3c f2       	and	#8,	r12	;r2 As==11
    a442:	30 41       	ret			

0000a444 <DMA_clearInterrupt>:
    a444:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a448:	bc c2 10 05 	bic	#8,	1296(r12);r2 As==11, 0x0510
    a44c:	30 41       	ret			

0000a44e <DMA_getNMIAbortStatus>:
    a44e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a452:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a456:	2c f3       	and	#2,	r12	;r3 As==10
    a458:	30 41       	ret			

0000a45a <DMA_clearNMIAbort>:
    a45a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a45e:	ac c3 10 05 	bic	#2,	1296(r12);r3 As==10, 0x0510
    a462:	30 41       	ret			

0000a464 <DMA_disableTransferDuringReadModifyWrite>:
    a464:	a2 d2 08 05 	bis	#4,	&0x0508	;r2 As==10
    a468:	30 41       	ret			

0000a46a <DMA_enableTransferDuringReadModifyWrite>:
    a46a:	a2 c2 08 05 	bic	#4,	&0x0508	;r2 As==10
    a46e:	30 41       	ret			

0000a470 <DMA_enableRoundRobinPriority>:
    a470:	a2 d3 08 05 	bis	#2,	&0x0508	;r3 As==10
    a474:	30 41       	ret			

0000a476 <DMA_disableRoundRobinPriority>:
    a476:	a2 c3 08 05 	bic	#2,	&0x0508	;r3 As==10
    a47a:	30 41       	ret			

0000a47c <DMA_enableNMIAbort>:
    a47c:	92 d3 08 05 	bis	#1,	&0x0508	;r3 As==01
    a480:	30 41       	ret			

0000a482 <DMA_disableNMIAbort>:
    a482:	92 c3 08 05 	bic	#1,	&0x0508	;r3 As==01
    a486:	30 41       	ret			

0000a488 <SFR_enableInterrupt>:
    a488:	c2 dc 00 01 	bis.b	r12,	&0x0100	;
    a48c:	30 41       	ret			

0000a48e <SFR_disableInterrupt>:
    a48e:	c2 cc 00 01 	bic.b	r12,	&0x0100	;
    a492:	30 41       	ret			

0000a494 <SFR_getInterruptStatus>:
    a494:	5c f2 02 01 	and.b	&0x0102,r12	;0x0102
    a498:	30 41       	ret			

0000a49a <SFR_clearInterrupt>:
    a49a:	c2 cc 02 01 	bic.b	r12,	&0x0102	;
    a49e:	30 41       	ret			

0000a4a0 <SFR_setResetPinPullResistor>:
    a4a0:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a4a4:	fd f0 f3 ff 	and.b	#65523,	0(r13)	;#0xfff3
    a4a8:	00 00 
    a4aa:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a4ae:	30 41       	ret			

0000a4b0 <SFR_setNMIEdge>:
    a4b0:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a4b4:	ed c3 00 00 	bic.b	#2,	0(r13)	;r3 As==10
    a4b8:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a4bc:	30 41       	ret			

0000a4be <SFR_setResetNMIPinFunction>:
    a4be:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a4c2:	dd c3 00 00 	bic.b	#1,	0(r13)	;r3 As==01
    a4c6:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a4ca:	30 41       	ret			

0000a4cc <privateUCSSourceClockFromDCO>:
    a4cc:	5a 15       	pushm	#6,	r10	;16-bit words
    a4ce:	07 4c       	mov	r12,	r7	;
    a4d0:	16 42 64 01 	mov	&0x0164,r6	;0x0164
    a4d4:	36 f0 ff 03 	and	#1023,	r6	;#0x03ff
    a4d8:	5f 42 66 01 	mov.b	&0x0166,r15	;0x0166
    a4dc:	7f f0 07 00 	and.b	#7,	r15	;
    a4e0:	4d 4f       	mov.b	r15,	r13	;
    a4e2:	7c 40 03 00 	mov.b	#3,	r12	;
    a4e6:	4c 9f       	cmp.b	r15,	r12	;
    a4e8:	05 28       	jnc	$+12     	;abs 0xa4f4
    a4ea:	1c 43       	mov	#1,	r12	;r3 As==01
    a4ec:	b0 12 d6 b1 	call	#45526		;#0xb1d6
    a4f0:	0a 4c       	mov	r12,	r10	;
    a4f2:	0c 3c       	jmp	$+26     	;abs 0xa50c
    a4f4:	6f 92       	cmp.b	#4,	r15	;r2 As==10
    a4f6:	06 24       	jz	$+14     	;abs 0xa504
    a4f8:	7f 90 05 00 	cmp.b	#5,	r15	;
    a4fc:	06 20       	jnz	$+14     	;abs 0xa50a
    a4fe:	3a 40 10 00 	mov	#16,	r10	;#0x0010
    a502:	04 3c       	jmp	$+10     	;abs 0xa50c
    a504:	3a 40 0c 00 	mov	#12,	r10	;#0x000c
    a508:	01 3c       	jmp	$+4      	;abs 0xa50c
    a50a:	1a 43       	mov	#1,	r10	;r3 As==01
    a50c:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    a510:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    a514:	7c 90 20 00 	cmp.b	#32,	r12	;#0x0020
    a518:	17 24       	jz	$+48     	;abs 0xa548
    a51a:	7c 90 50 00 	cmp.b	#80,	r12	;#0x0050
    a51e:	23 24       	jz	$+72     	;abs 0xa566
    a520:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a522:	2f 20       	jnz	$+96     	;abs 0xa582
    a524:	18 42 8c 24 	mov	&0x248c,r8	;0x248c
    a528:	19 42 8e 24 	mov	&0x248e,r9	;0x248e
    a52c:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a530:	6c 01 
    a532:	0e 20       	jnz	$+30     	;abs 0xa550
    a534:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a538:	24 24       	jz	$+74     	;abs 0xa582
    a53a:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a53e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a542:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a546:	1d 24       	jz	$+60     	;abs 0xa582
    a548:	38 40 00 80 	mov	#32768,	r8	;#0x8000
    a54c:	09 43       	clr	r9		;
    a54e:	19 3c       	jmp	$+52     	;abs 0xa582
    a550:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a554:	16 24       	jz	$+46     	;abs 0xa582
    a556:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a55a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a55e:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a562:	f2 23       	jnz	$-26     	;abs 0xa548
    a564:	0e 3c       	jmp	$+30     	;abs 0xa582
    a566:	18 42 88 24 	mov	&0x2488,r8	;0x2488
    a56a:	19 42 8a 24 	mov	&0x248a,r9	;0x248a
    a56e:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a572:	07 24       	jz	$+16     	;abs 0xa582
    a574:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a578:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a57c:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a580:	e3 23       	jnz	$-56     	;abs 0xa548
    a582:	0e 46       	mov	r6,	r14	;
    a584:	1e 53       	inc	r14		;
    a586:	35 40 f0 b2 	mov	#45808,	r5	;#0xb2f0
    a58a:	0c 48       	mov	r8,	r12	;
    a58c:	0d 49       	mov	r9,	r13	;
    a58e:	0f 43       	clr	r15		;
    a590:	85 12       	call	r5		;
    a592:	0e 4a       	mov	r10,	r14	;
    a594:	0f 43       	clr	r15		;
    a596:	b0 12 a4 b1 	call	#45476		;#0xb1a4
    a59a:	08 4c       	mov	r12,	r8	;
    a59c:	09 4d       	mov	r13,	r9	;
    a59e:	0b 45       	mov	r5,	r11	;
    a5a0:	37 90 03 00 	cmp	#3,	r7	;
    a5a4:	16 20       	jnz	$+46     	;abs 0xa5d2
    a5a6:	1c 42 64 01 	mov	&0x0164,r12	;0x0164
    a5aa:	3c f0 00 70 	and	#28672,	r12	;#0x7000
    a5ae:	5c 03       	rrum	#1,	r12	;
    a5b0:	4a 18 0c 11 	rpt #11 { rrax.w	r12		;
    a5b4:	0d 43       	clr	r13		;
    a5b6:	1e 43       	mov	#1,	r14	;r3 As==01
    a5b8:	0d 9c       	cmp	r12,	r13	;
    a5ba:	05 2c       	jc	$+12     	;abs 0xa5c6
    a5bc:	0e 5e       	rla	r14		;
    a5be:	5d 53       	inc.b	r13		;
    a5c0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a5c4:	f9 3f       	jmp	$-12     	;abs 0xa5b8
    a5c6:	0c 48       	mov	r8,	r12	;
    a5c8:	0d 49       	mov	r9,	r13	;
    a5ca:	0f 43       	clr	r15		;
    a5cc:	8b 12       	call	r11		;
    a5ce:	08 4c       	mov	r12,	r8	;
    a5d0:	09 4d       	mov	r13,	r9	;
    a5d2:	0c 48       	mov	r8,	r12	;
    a5d4:	0d 49       	mov	r9,	r13	;
    a5d6:	55 17       	popm	#6,	r10	;16-bit words
    a5d8:	30 41       	ret			

0000a5da <privateUCSComputeCLKFrequency>:
    a5da:	0a 15       	pushm	#1,	r10	;16-bit words
    a5dc:	0b 43       	clr	r11		;
    a5de:	1a 43       	mov	#1,	r10	;r3 As==01
    a5e0:	0b 9d       	cmp	r13,	r11	;
    a5e2:	07 2c       	jc	$+16     	;abs 0xa5f2
    a5e4:	4a 5a       	rla.b	r10		;
    a5e6:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a5ea:	5b 53       	inc.b	r11		;
    a5ec:	3b f0 ff 00 	and	#255,	r11	;#0x00ff
    a5f0:	f7 3f       	jmp	$-16     	;abs 0xa5e0
    a5f2:	2c 93       	cmp	#2,	r12	;r3 As==10
    a5f4:	3f 24       	jz	$+128    	;abs 0xa674
    a5f6:	2d 43       	mov	#2,	r13	;r3 As==10
    a5f8:	0d 9c       	cmp	r12,	r13	;
    a5fa:	0e 28       	jnc	$+30     	;abs 0xa618
    a5fc:	0c 93       	cmp	#0,	r12	;r3 As==00
    a5fe:	13 24       	jz	$+40     	;abs 0xa626
    a600:	1c 93       	cmp	#1,	r12	;r3 As==01
    a602:	5a 20       	jnz	$+182    	;abs 0xa6b8
    a604:	3c 40 10 27 	mov	#10000,	r12	;#0x2710
    a608:	0d 4a       	mov	r10,	r13	;
    a60a:	b0 12 64 b0 	call	#45156		;#0xb064
    a60e:	0e 4c       	mov	r12,	r14	;
    a610:	0f 4c       	mov	r12,	r15	;
    a612:	4e 18 0f 11 	rpt #15 { rrax.w	r15		;
    a616:	50 3c       	jmp	$+162    	;abs 0xa6b8
    a618:	2d 42       	mov	#4,	r13	;r2 As==10
    a61a:	0d 9c       	cmp	r12,	r13	;
    a61c:	45 2c       	jc	$+140    	;abs 0xa6a8
    a61e:	3c 90 05 00 	cmp	#5,	r12	;
    a622:	30 24       	jz	$+98     	;abs 0xa684
    a624:	49 3c       	jmp	$+148    	;abs 0xa6b8
    a626:	1c 42 8c 24 	mov	&0x248c,r12	;0x248c
    a62a:	1d 42 8e 24 	mov	&0x248e,r13	;0x248e
    a62e:	0e 4a       	mov	r10,	r14	;
    a630:	0f 43       	clr	r15		;
    a632:	b0 12 a4 b1 	call	#45476		;#0xb1a4
    a636:	0e 4c       	mov	r12,	r14	;
    a638:	0f 4d       	mov	r13,	r15	;
    a63a:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a63e:	6c 01 
    a640:	0e 20       	jnz	$+30     	;abs 0xa65e
    a642:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a646:	38 24       	jz	$+114    	;abs 0xa6b8
    a648:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a64c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a650:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a654:	31 24       	jz	$+100    	;abs 0xa6b8
    a656:	3e 40 00 80 	mov	#32768,	r14	;#0x8000
    a65a:	0f 43       	clr	r15		;
    a65c:	2d 3c       	jmp	$+92     	;abs 0xa6b8
    a65e:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a662:	2a 24       	jz	$+86     	;abs 0xa6b8
    a664:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a668:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a66c:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a670:	f2 23       	jnz	$-26     	;abs 0xa656
    a672:	22 3c       	jmp	$+70     	;abs 0xa6b8
    a674:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    a678:	0d 43       	clr	r13		;
    a67a:	0e 4a       	mov	r10,	r14	;
    a67c:	0f 43       	clr	r15		;
    a67e:	b0 12 30 b1 	call	#45360		;#0xb130
    a682:	18 3c       	jmp	$+50     	;abs 0xa6b4
    a684:	1c 42 88 24 	mov	&0x2488,r12	;0x2488
    a688:	1d 42 8a 24 	mov	&0x248a,r13	;0x248a
    a68c:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a690:	04 24       	jz	$+10     	;abs 0xa69a
    a692:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a696:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a69a:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a69e:	06 24       	jz	$+14     	;abs 0xa6ac
    a6a0:	2c 42       	mov	#4,	r12	;r2 As==10
    a6a2:	b0 12 cc a4 	call	#42188		;#0xa4cc
    a6a6:	06 3c       	jmp	$+14     	;abs 0xa6b4
    a6a8:	b0 12 cc a4 	call	#42188		;#0xa4cc
    a6ac:	0e 4a       	mov	r10,	r14	;
    a6ae:	0f 43       	clr	r15		;
    a6b0:	b0 12 a4 b1 	call	#45476		;#0xb1a4
    a6b4:	0e 4c       	mov	r12,	r14	;
    a6b6:	0f 4d       	mov	r13,	r15	;
    a6b8:	0c 4e       	mov	r14,	r12	;
    a6ba:	0d 4f       	mov	r15,	r13	;
    a6bc:	0a 17       	popm	#1,	r10	;16-bit words
    a6be:	30 41       	ret			

0000a6c0 <UCS_setExternalClockSource>:
    a6c0:	82 4c 8c 24 	mov	r12,	&0x248c	;
    a6c4:	82 4d 8e 24 	mov	r13,	&0x248e	;
    a6c8:	82 4e 88 24 	mov	r14,	&0x2488	;
    a6cc:	82 4f 8a 24 	mov	r15,	&0x248a	;
    a6d0:	30 41       	ret			

0000a6d2 <UCS_initClockSignal>:
    a6d2:	0a 15       	pushm	#1,	r10	;16-bit words
    a6d4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a6d8:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    a6da:	26 24       	jz	$+78     	;abs 0xa728
    a6dc:	6a 43       	mov.b	#2,	r10	;r3 As==10
    a6de:	4a 9c       	cmp.b	r12,	r10	;
    a6e0:	0f 28       	jnc	$+32     	;abs 0xa700
    a6e2:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    a6e4:	42 20       	jnz	$+134    	;abs 0xa76a
    a6e6:	b2 f0 ff f8 	and	#63743,	&0x0168	;#0xf8ff
    a6ea:	68 01 
    a6ec:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a6f0:	82 dd 68 01 	bis	r13,	&0x0168	;
    a6f4:	b2 f0 ff f8 	and	#63743,	&0x016a	;#0xf8ff
    a6f8:	6a 01 
    a6fa:	47 18 0e 5e 	rpt #8 { rlax.w	r14		;
    a6fe:	11 3c       	jmp	$+36     	;abs 0xa722
    a700:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    a702:	03 24       	jz	$+8      	;abs 0xa70a
    a704:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    a706:	19 24       	jz	$+52     	;abs 0xa73a
    a708:	30 3c       	jmp	$+98     	;abs 0xa76a
    a70a:	b2 f0 8f ff 	and	#65423,	&0x0168	;#0xff8f
    a70e:	68 01 
    a710:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a714:	82 dd 68 01 	bis	r13,	&0x0168	;
    a718:	b2 f0 8f ff 	and	#65423,	&0x016a	;#0xff8f
    a71c:	6a 01 
    a71e:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    a722:	82 de 6a 01 	bis	r14,	&0x016a	;
    a726:	21 3c       	jmp	$+68     	;abs 0xa76a
    a728:	b2 f0 f8 ff 	and	#65528,	&0x0168	;#0xfff8
    a72c:	68 01 
    a72e:	82 dd 68 01 	bis	r13,	&0x0168	;
    a732:	b2 f0 f8 ff 	and	#65528,	&0x016a	;#0xfff8
    a736:	6a 01 
    a738:	f4 3f       	jmp	$-22     	;abs 0xa722
    a73a:	f2 f0 8f ff 	and.b	#65423,	&0x0166	;#0xff8f
    a73e:	66 01 
    a740:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a744:	c2 dd 66 01 	bis.b	r13,	&0x0166	;
    a748:	f2 f0 f8 ff 	and.b	#65528,	&0x0166	;#0xfff8
    a74c:	66 01 
    a74e:	2e 92       	cmp	#4,	r14	;r2 As==10
    a750:	06 24       	jz	$+14     	;abs 0xa75e
    a752:	3e 90 05 00 	cmp	#5,	r14	;
    a756:	07 20       	jnz	$+16     	;abs 0xa766
    a758:	e2 d2 66 01 	bis.b	#4,	&0x0166	;r2 As==10
    a75c:	06 3c       	jmp	$+14     	;abs 0xa76a
    a75e:	f2 d0 05 00 	bis.b	#5,	&0x0166	;
    a762:	66 01 
    a764:	02 3c       	jmp	$+6      	;abs 0xa76a
    a766:	c2 de 66 01 	bis.b	r14,	&0x0166	;
    a76a:	0a 17       	popm	#1,	r10	;16-bit words
    a76c:	30 41       	ret			

0000a76e <UCS_turnOnLFXT1>:
    a76e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a772:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a776:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a77a:	6c 01 
    a77c:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a780:	6c 01 
    a782:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a786:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a78a:	05 24       	jz	$+12     	;abs 0xa796
    a78c:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a790:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a794:	f8 3f       	jmp	$-14     	;abs 0xa786
    a796:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a79a:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a79e:	0c dd       	bis	r13,	r12	;
    a7a0:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a7a4:	30 41       	ret			

0000a7a6 <UCS_turnOnHFXT1>:
    a7a6:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a7aa:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a7ae:	3d f0 c0 00 	and	#192,	r13	;#0x00c0
    a7b2:	0d 9c       	cmp	r12,	r13	;
    a7b4:	05 24       	jz	$+12     	;abs 0xa7c0
    a7b6:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a7ba:	6c 01 
    a7bc:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7c0:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a7c4:	6c 01 
    a7c6:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a7ca:	6c 01 
    a7cc:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a7d0:	05 24       	jz	$+12     	;abs 0xa7dc
    a7d2:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a7d6:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a7da:	f8 3f       	jmp	$-14     	;abs 0xa7cc
    a7dc:	30 41       	ret			

0000a7de <UCS_bypassXT1>:
    a7de:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a7e2:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a7e6:	6c 01 
    a7e8:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7ec:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a7f0:	6c 01 
    a7f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    a7f4:	08 20       	jnz	$+18     	;abs 0xa806
    a7f6:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a7fa:	0d 24       	jz	$+28     	;abs 0xa816
    a7fc:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a800:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a804:	f8 3f       	jmp	$-14     	;abs 0xa7f6
    a806:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a80a:	05 24       	jz	$+12     	;abs 0xa816
    a80c:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a810:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a814:	f8 3f       	jmp	$-14     	;abs 0xa806
    a816:	30 41       	ret			

0000a818 <UCS_turnOnLFXT1WithTimeout>:
    a818:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a81c:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a820:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a824:	6c 01 
    a826:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a82a:	6c 01 
    a82c:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a830:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a834:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a838:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a83c:	04 24       	jz	$+10     	;abs 0xa846
    a83e:	3e 53       	add	#-1,	r14	;r3 As==11
    a840:	0e 93       	cmp	#0,	r14	;r3 As==00
    a842:	f6 23       	jnz	$-18     	;abs 0xa830
    a844:	0b 3c       	jmp	$+24     	;abs 0xa85c
    a846:	0e 93       	cmp	#0,	r14	;r3 As==00
    a848:	09 24       	jz	$+20     	;abs 0xa85c
    a84a:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a84e:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a852:	0c dd       	bis	r13,	r12	;
    a854:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a858:	1c 43       	mov	#1,	r12	;r3 As==01
    a85a:	01 3c       	jmp	$+4      	;abs 0xa85e
    a85c:	0c 4e       	mov	r14,	r12	;
    a85e:	30 41       	ret			

0000a860 <UCS_turnOnHFXT1WithTimeout>:
    a860:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a864:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a868:	3e f0 c0 00 	and	#192,	r14	;#0x00c0
    a86c:	0e 9c       	cmp	r12,	r14	;
    a86e:	05 24       	jz	$+12     	;abs 0xa87a
    a870:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a874:	6c 01 
    a876:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a87a:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a87e:	6c 01 
    a880:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a884:	6c 01 
    a886:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a88a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a88e:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a892:	05 24       	jz	$+12     	;abs 0xa89e
    a894:	3d 53       	add	#-1,	r13	;r3 As==11
    a896:	0d 93       	cmp	#0,	r13	;r3 As==00
    a898:	f6 23       	jnz	$-18     	;abs 0xa886
    a89a:	0c 4d       	mov	r13,	r12	;
    a89c:	07 3c       	jmp	$+16     	;abs 0xa8ac
    a89e:	0c 43       	clr	r12		;
    a8a0:	0c 8d       	sub	r13,	r12	;
    a8a2:	0d dc       	bis	r12,	r13	;
    a8a4:	0c 4d       	mov	r13,	r12	;
    a8a6:	5c 03       	rrum	#1,	r12	;
    a8a8:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a8ac:	30 41       	ret			

0000a8ae <UCS_bypassXT1WithTimeout>:
    a8ae:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a8b2:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a8b6:	6c 01 
    a8b8:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a8bc:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a8c0:	6c 01 
    a8c2:	0c 93       	cmp	#0,	r12	;r3 As==00
    a8c4:	0e 20       	jnz	$+30     	;abs 0xa8e2
    a8c6:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a8ca:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8ce:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a8d2:	0e 24       	jz	$+30     	;abs 0xa8f0
    a8d4:	3d 53       	add	#-1,	r13	;r3 As==11
    a8d6:	0d 93       	cmp	#0,	r13	;r3 As==00
    a8d8:	f6 23       	jnz	$-18     	;abs 0xa8c6
    a8da:	12 3c       	jmp	$+38     	;abs 0xa900
    a8dc:	3d 53       	add	#-1,	r13	;r3 As==11
    a8de:	0d 93       	cmp	#0,	r13	;r3 As==00
    a8e0:	0f 24       	jz	$+32     	;abs 0xa900
    a8e2:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a8e6:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a8ea:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a8ee:	f6 23       	jnz	$-18     	;abs 0xa8dc
    a8f0:	0c 43       	clr	r12		;
    a8f2:	0c 8d       	sub	r13,	r12	;
    a8f4:	0d dc       	bis	r12,	r13	;
    a8f6:	0c 4d       	mov	r13,	r12	;
    a8f8:	5c 03       	rrum	#1,	r12	;
    a8fa:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a8fe:	01 3c       	jmp	$+4      	;abs 0xa902
    a900:	0c 43       	clr	r12		;
    a902:	30 41       	ret			

0000a904 <UCS_turnOffXT1>:
    a904:	92 d3 6c 01 	bis	#1,	&0x016c	;r3 As==01
    a908:	30 41       	ret			

0000a90a <UCS_turnOnXT2>:
    a90a:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a90e:	3d f0 00 c0 	and	#49152,	r13	;#0xc000
    a912:	0d 9c       	cmp	r12,	r13	;
    a914:	05 24       	jz	$+12     	;abs 0xa920
    a916:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a91a:	6c 01 
    a91c:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a920:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a924:	6c 01 
    a926:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a92a:	6c 01 
    a92c:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a930:	05 24       	jz	$+12     	;abs 0xa93c
    a932:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a936:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a93a:	f8 3f       	jmp	$-14     	;abs 0xa92c
    a93c:	30 41       	ret			

0000a93e <UCS_bypassXT2>:
    a93e:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a942:	6c 01 
    a944:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a948:	05 24       	jz	$+12     	;abs 0xa954
    a94a:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a94e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a952:	f8 3f       	jmp	$-14     	;abs 0xa944
    a954:	30 41       	ret			

0000a956 <UCS_turnOnXT2WithTimeout>:
    a956:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a95a:	3e f0 00 c0 	and	#49152,	r14	;#0xc000
    a95e:	0e 9c       	cmp	r12,	r14	;
    a960:	05 24       	jz	$+12     	;abs 0xa96c
    a962:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a966:	6c 01 
    a968:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a96c:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a970:	6c 01 
    a972:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a976:	6c 01 
    a978:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a97c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a980:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a984:	05 24       	jz	$+12     	;abs 0xa990
    a986:	3d 53       	add	#-1,	r13	;r3 As==11
    a988:	0d 93       	cmp	#0,	r13	;r3 As==00
    a98a:	f6 23       	jnz	$-18     	;abs 0xa978
    a98c:	0c 4d       	mov	r13,	r12	;
    a98e:	07 3c       	jmp	$+16     	;abs 0xa99e
    a990:	0c 43       	clr	r12		;
    a992:	0c 8d       	sub	r13,	r12	;
    a994:	0d dc       	bis	r12,	r13	;
    a996:	0c 4d       	mov	r13,	r12	;
    a998:	5c 03       	rrum	#1,	r12	;
    a99a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a99e:	30 41       	ret			

0000a9a0 <UCS_bypassXT2WithTimeout>:
    a9a0:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a9a4:	6c 01 
    a9a6:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a9aa:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a9ae:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a9b2:	04 24       	jz	$+10     	;abs 0xa9bc
    a9b4:	3c 53       	add	#-1,	r12	;r3 As==11
    a9b6:	0c 93       	cmp	#0,	r12	;r3 As==00
    a9b8:	f6 23       	jnz	$-18     	;abs 0xa9a6
    a9ba:	06 3c       	jmp	$+14     	;abs 0xa9c8
    a9bc:	0d 43       	clr	r13		;
    a9be:	0d 8c       	sub	r12,	r13	;
    a9c0:	0c dd       	bis	r13,	r12	;
    a9c2:	5c 03       	rrum	#1,	r12	;
    a9c4:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a9c8:	30 41       	ret			

0000a9ca <UCS_turnOffXT2>:
    a9ca:	b2 d0 00 01 	bis	#256,	&0x016c	;#0x0100
    a9ce:	6c 01 
    a9d0:	30 41       	ret			

0000a9d2 <UCS_initFLL>:
    a9d2:	0a 15       	pushm	#1,	r10	;16-bit words
    a9d4:	0e 42       	mov	r2,	r14	;
    a9d6:	3e f0 40 00 	and	#64,	r14	;#0x0040
    a9da:	3a 40 80 3e 	mov	#16000,	r10	;#0x3e80
    a9de:	0a 9c       	cmp	r12,	r10	;
    a9e0:	06 2c       	jc	$+14     	;abs 0xa9ee
    a9e2:	12 c3       	clrc			
    a9e4:	0d 10       	rrc	r13		;
    a9e6:	1b 43       	mov	#1,	r11	;r3 As==01
    a9e8:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    a9ec:	03 3c       	jmp	$+8      	;abs 0xa9f4
    a9ee:	0c 5c       	rla	r12		;
    a9f0:	0b 43       	clr	r11		;
    a9f2:	fa 3f       	jmp	$-10     	;abs 0xa9e8
    a9f4:	3a 40 00 02 	mov	#512,	r10	;#0x0200
    a9f8:	0a 9d       	cmp	r13,	r10	;
    a9fa:	05 2c       	jc	$+12     	;abs 0xaa06
    a9fc:	3f 50 00 10 	add	#4096,	r15	;#0x1000
    aa00:	12 c3       	clrc			
    aa02:	0d 10       	rrc	r13		;
    aa04:	f7 3f       	jmp	$-16     	;abs 0xa9f4
    aa06:	32 d0 40 00 	bis	#64,	r2	;#0x0040
    aa0a:	c2 43 61 01 	mov.b	#0,	&0x0161	;r3 As==00
    aa0e:	b2 f0 00 fc 	and	#64512,	&0x0164	;#0xfc00
    aa12:	64 01 
    aa14:	3d 53       	add	#-1,	r13	;r3 As==11
    aa16:	0d df       	bis	r15,	r13	;
    aa18:	82 4d 64 01 	mov	r13,	&0x0164	;
    aa1c:	3d 40 76 02 	mov	#630,	r13	;#0x0276
    aa20:	0d 9c       	cmp	r12,	r13	;
    aa22:	03 28       	jnc	$+8      	;abs 0xaa2a
    aa24:	c2 43 62 01 	mov.b	#0,	&0x0162	;r3 As==00
    aa28:	33 3c       	jmp	$+104    	;abs 0xaa90
    aa2a:	3f 40 e1 04 	mov	#1249,	r15	;#0x04e1
    aa2e:	0f 9c       	cmp	r12,	r15	;
    aa30:	04 28       	jnc	$+10     	;abs 0xaa3a
    aa32:	f2 40 10 00 	mov.b	#16,	&0x0162	;#0x0010
    aa36:	62 01 
    aa38:	2b 3c       	jmp	$+88     	;abs 0xaa90
    aa3a:	3a 40 c3 09 	mov	#2499,	r10	;#0x09c3
    aa3e:	0a 9c       	cmp	r12,	r10	;
    aa40:	04 28       	jnc	$+10     	;abs 0xaa4a
    aa42:	f2 40 20 00 	mov.b	#32,	&0x0162	;#0x0020
    aa46:	62 01 
    aa48:	23 3c       	jmp	$+72     	;abs 0xaa90
    aa4a:	3d 40 87 13 	mov	#4999,	r13	;#0x1387
    aa4e:	0d 9c       	cmp	r12,	r13	;
    aa50:	04 28       	jnc	$+10     	;abs 0xaa5a
    aa52:	f2 40 30 00 	mov.b	#48,	&0x0162	;#0x0030
    aa56:	62 01 
    aa58:	1b 3c       	jmp	$+56     	;abs 0xaa90
    aa5a:	3f 40 0f 27 	mov	#9999,	r15	;#0x270f
    aa5e:	0f 9c       	cmp	r12,	r15	;
    aa60:	04 28       	jnc	$+10     	;abs 0xaa6a
    aa62:	f2 40 40 00 	mov.b	#64,	&0x0162	;#0x0040
    aa66:	62 01 
    aa68:	13 3c       	jmp	$+40     	;abs 0xaa90
    aa6a:	3a 40 1f 4e 	mov	#19999,	r10	;#0x4e1f
    aa6e:	0a 9c       	cmp	r12,	r10	;
    aa70:	04 28       	jnc	$+10     	;abs 0xaa7a
    aa72:	f2 40 50 00 	mov.b	#80,	&0x0162	;#0x0050
    aa76:	62 01 
    aa78:	0b 3c       	jmp	$+24     	;abs 0xaa90
    aa7a:	3d 40 3f 9c 	mov	#39999,	r13	;#0x9c3f
    aa7e:	0d 9c       	cmp	r12,	r13	;
    aa80:	04 28       	jnc	$+10     	;abs 0xaa8a
    aa82:	f2 40 60 00 	mov.b	#96,	&0x0162	;#0x0060
    aa86:	62 01 
    aa88:	03 3c       	jmp	$+8      	;abs 0xaa90
    aa8a:	f2 40 70 00 	mov.b	#112,	&0x0162	;#0x0070
    aa8e:	62 01 
    aa90:	32 c0 40 00 	bic	#64,	r2	;#0x0040
    aa94:	d2 b3 6e 01 	bit.b	#1,	&0x016e	;r3 As==01
    aa98:	05 24       	jz	$+12     	;abs 0xaaa4
    aa9a:	d2 c3 6e 01 	bic.b	#1,	&0x016e	;r3 As==01
    aa9e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    aaa2:	f8 3f       	jmp	$-14     	;abs 0xaa94
    aaa4:	02 de       	bis	r14,	r2	;
    aaa6:	b2 f0 88 ff 	and	#65416,	&0x0168	;#0xff88
    aaaa:	68 01 
    aaac:	1b 93       	cmp	#1,	r11	;r3 As==01
    aaae:	04 20       	jnz	$+10     	;abs 0xaab8
    aab0:	b2 d0 33 00 	bis	#51,	&0x0168	;#0x0033
    aab4:	68 01 
    aab6:	03 3c       	jmp	$+8      	;abs 0xaabe
    aab8:	b2 d0 44 00 	bis	#68,	&0x0168	;#0x0044
    aabc:	68 01 
    aabe:	0a 17       	popm	#1,	r10	;16-bit words
    aac0:	30 41       	ret			

0000aac2 <UCS_initFLLSettle>:
    aac2:	21 82       	sub	#4,	r1	;r2 As==10
    aac4:	0e 4d       	mov	r13,	r14	;
    aac6:	44 18 0e 5e 	rpt #5 { rlax.w	r14		;
    aaca:	81 4e 00 00 	mov	r14,	0(r1)	;
    aace:	b0 12 d2 a9 	call	#43474		;#0xa9d2
    aad2:	2c 41       	mov	@r1,	r12	;
    aad4:	0d 4c       	mov	r12,	r13	;
    aad6:	3d 53       	add	#-1,	r13	;r3 As==11
    aad8:	81 4d 00 00 	mov	r13,	0(r1)	;
    aadc:	0c 93       	cmp	#0,	r12	;r3 As==00
    aade:	0c 24       	jz	$+26     	;abs 0xaaf8
    aae0:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    aae4:	1c 41 02 00 	mov	2(r1),	r12	;
    aae8:	3d 40 1d 00 	mov	#29,	r13	;#0x001d
    aaec:	0d 9c       	cmp	r12,	r13	;
    aaee:	f1 2b       	jnc	$-28     	;abs 0xaad2
    aaf0:	03 43       	nop			
    aaf2:	91 53 02 00 	inc	2(r1)		;
    aaf6:	f6 3f       	jmp	$-18     	;abs 0xaae4
    aaf8:	21 52       	add	#4,	r1	;r2 As==10
    aafa:	30 41       	ret			

0000aafc <UCS_enableClockRequest>:
    aafc:	c2 dc 70 01 	bis.b	r12,	&0x0170	;
    ab00:	30 41       	ret			

0000ab02 <UCS_disableClockRequest>:
    ab02:	c2 cc 70 01 	bic.b	r12,	&0x0170	;
    ab06:	30 41       	ret			

0000ab08 <UCS_getFaultFlagStatus>:
    ab08:	5c f2 6e 01 	and.b	&0x016e,r12	;0x016e
    ab0c:	30 41       	ret			

0000ab0e <UCS_clearFaultFlag>:
    ab0e:	c2 cc 6e 01 	bic.b	r12,	&0x016e	;
    ab12:	30 41       	ret			

0000ab14 <UCS_turnOffSMCLK>:
    ab14:	a2 d3 6c 01 	bis	#2,	&0x016c	;r3 As==10
    ab18:	30 41       	ret			

0000ab1a <UCS_turnOnSMCLK>:
    ab1a:	a2 c3 6c 01 	bic	#2,	&0x016c	;r3 As==10
    ab1e:	30 41       	ret			

0000ab20 <UCS_getACLK>:
    ab20:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    ab24:	3c f0 00 07 	and	#1792,	r12	;#0x0700
    ab28:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    ab2c:	3d f0 00 07 	and	#1792,	r13	;#0x0700
    ab30:	5c 0f       	rrum	#4,	r12	;
    ab32:	5c 0f       	rrum	#4,	r12	;
    ab34:	5d 0f       	rrum	#4,	r13	;
    ab36:	5d 0f       	rrum	#4,	r13	;
    ab38:	b0 12 da a5 	call	#42458		;#0xa5da
    ab3c:	30 41       	ret			

0000ab3e <UCS_getSMCLK>:
    ab3e:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    ab42:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    ab46:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ab4a:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    ab4e:	3d f0 70 00 	and	#112,	r13	;#0x0070
    ab52:	5c 0f       	rrum	#4,	r12	;
    ab54:	5d 0f       	rrum	#4,	r13	;
    ab56:	b0 12 da a5 	call	#42458		;#0xa5da
    ab5a:	30 41       	ret			

0000ab5c <UCS_getMCLK>:
    ab5c:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    ab60:	3c f0 07 00 	and	#7,	r12	;
    ab64:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    ab68:	3d f0 07 00 	and	#7,	r13	;
    ab6c:	b0 12 da a5 	call	#42458		;#0xa5da
    ab70:	30 41       	ret			

0000ab72 <UCS_clearAllOscFlagsWithTimeout>:
    ab72:	f2 f0 f0 ff 	and.b	#65520,	&0x016e	;#0xfff0
    ab76:	6e 01 
    ab78:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    ab7c:	e2 b3 02 01 	bit.b	#2,	&0x0102	;r3 As==10
    ab80:	03 24       	jz	$+8      	;abs 0xab88
    ab82:	3c 53       	add	#-1,	r12	;r3 As==11
    ab84:	0c 93       	cmp	#0,	r12	;r3 As==00
    ab86:	f5 23       	jnz	$-20     	;abs 0xab72
    ab88:	5c 42 6e 01 	mov.b	&0x016e,r12	;0x016e
    ab8c:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    ab90:	3c f0 0f 00 	and	#15,	r12	;#0x000f
    ab94:	30 41       	ret			

0000ab96 <PMM_enableSvsL>:
    ab96:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab9a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab9e:	00 00 
    aba0:	b2 d0 00 04 	bis	#1024,	&0x0126	;#0x0400
    aba4:	26 01 
    aba6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abaa:	30 41       	ret			

0000abac <PMM_disableSvsL>:
    abac:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abb0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abb4:	00 00 
    abb6:	b2 f0 ff fb 	and	#64511,	&0x0126	;#0xfbff
    abba:	26 01 
    abbc:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abc0:	30 41       	ret			

0000abc2 <PMM_enableSvmL>:
    abc2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abc6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abca:	00 00 
    abcc:	b2 d0 00 40 	bis	#16384,	&0x0126	;#0x4000
    abd0:	26 01 
    abd2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abd6:	30 41       	ret			

0000abd8 <PMM_disableSvmL>:
    abd8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abdc:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abe0:	00 00 
    abe2:	b2 f0 ff bf 	and	#49151,	&0x0126	;#0xbfff
    abe6:	26 01 
    abe8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abec:	30 41       	ret			

0000abee <PMM_enableSvsH>:
    abee:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abf2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abf6:	00 00 
    abf8:	b2 d0 00 04 	bis	#1024,	&0x0124	;#0x0400
    abfc:	24 01 
    abfe:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac02:	30 41       	ret			

0000ac04 <PMM_disableSvsH>:
    ac04:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac08:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac0c:	00 00 
    ac0e:	b2 f0 ff fb 	and	#64511,	&0x0124	;#0xfbff
    ac12:	24 01 
    ac14:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac18:	30 41       	ret			

0000ac1a <PMM_enableSvmH>:
    ac1a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac1e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac22:	00 00 
    ac24:	b2 d0 00 40 	bis	#16384,	&0x0124	;#0x4000
    ac28:	24 01 
    ac2a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac2e:	30 41       	ret			

0000ac30 <PMM_disableSvmH>:
    ac30:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac34:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac38:	00 00 
    ac3a:	b2 f0 ff bf 	and	#49151,	&0x0124	;#0xbfff
    ac3e:	24 01 
    ac40:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac44:	30 41       	ret			

0000ac46 <PMM_enableSvsLSvmL>:
    ac46:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac4a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac4e:	00 00 
    ac50:	b2 d0 00 44 	bis	#17408,	&0x0126	;#0x4400
    ac54:	26 01 
    ac56:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac5a:	30 41       	ret			

0000ac5c <PMM_disableSvsLSvmL>:
    ac5c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac60:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac64:	00 00 
    ac66:	b2 f0 ff bb 	and	#48127,	&0x0126	;#0xbbff
    ac6a:	26 01 
    ac6c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac70:	30 41       	ret			

0000ac72 <PMM_enableSvsHSvmH>:
    ac72:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac76:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac7a:	00 00 
    ac7c:	b2 d0 00 44 	bis	#17408,	&0x0124	;#0x4400
    ac80:	24 01 
    ac82:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac86:	30 41       	ret			

0000ac88 <PMM_disableSvsHSvmH>:
    ac88:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac8c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac90:	00 00 
    ac92:	b2 f0 ff bb 	and	#48127,	&0x0124	;#0xbbff
    ac96:	24 01 
    ac98:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac9c:	30 41       	ret			

0000ac9e <PMM_enableSvsLReset>:
    ac9e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aca2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aca6:	00 00 
    aca8:	b2 d0 00 01 	bis	#256,	&0x012e	;#0x0100
    acac:	2e 01 
    acae:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acb2:	30 41       	ret			

0000acb4 <PMM_disableSvsLReset>:
    acb4:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    acb8:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    acbc:	00 00 
    acbe:	b2 f0 ff fe 	and	#65279,	&0x012e	;#0xfeff
    acc2:	2e 01 
    acc4:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acc8:	30 41       	ret			

0000acca <PMM_enableSvmLInterrupt>:
    acca:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    acce:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    acd2:	00 00 
    acd4:	a2 d3 2e 01 	bis	#2,	&0x012e	;r3 As==10
    acd8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acdc:	30 41       	ret			

0000acde <PMM_disableSvmLInterrupt>:
    acde:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ace2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ace6:	00 00 
    ace8:	a2 c3 2e 01 	bic	#2,	&0x012e	;r3 As==10
    acec:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acf0:	30 41       	ret			

0000acf2 <PMM_enableSvsHReset>:
    acf2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    acf6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    acfa:	00 00 
    acfc:	b2 d0 00 10 	bis	#4096,	&0x012e	;#0x1000
    ad00:	2e 01 
    ad02:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad06:	30 41       	ret			

0000ad08 <PMM_disableSvsHReset>:
    ad08:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad0c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad10:	00 00 
    ad12:	b2 f0 ff ef 	and	#61439,	&0x012e	;#0xefff
    ad16:	2e 01 
    ad18:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad1c:	30 41       	ret			

0000ad1e <PMM_enableSvmHInterrupt>:
    ad1e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad22:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad26:	00 00 
    ad28:	b2 d0 20 00 	bis	#32,	&0x012e	;#0x0020
    ad2c:	2e 01 
    ad2e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad32:	30 41       	ret			

0000ad34 <PMM_disableSvmHInterrupt>:
    ad34:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad38:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad3c:	00 00 
    ad3e:	b2 f0 df ff 	and	#65503,	&0x012e	;#0xffdf
    ad42:	2e 01 
    ad44:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad48:	30 41       	ret			

0000ad4a <PMM_clearPMMIFGS>:
    ad4a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad4e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad52:	00 00 
    ad54:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    ad58:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad5c:	30 41       	ret			

0000ad5e <PMM_enableSvsLInLPMFastWake>:
    ad5e:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad62:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad66:	00 00 
    ad68:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ad6c:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    ad70:	00 00 
    ad72:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    ad76:	00 00 
    ad78:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad7c:	30 41       	ret			

0000ad7e <PMM_enableSvsLInLPMSlowWake>:
    ad7e:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ad82:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad86:	00 00 
    ad88:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ad8c:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ad90:	00 00 
    ad92:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    ad96:	00 00 
    ad98:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad9c:	30 41       	ret			

0000ad9e <PMM_disableSvsLInLPMFastWake>:
    ad9e:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ada2:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ada6:	00 00 
    ada8:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    adac:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    adb0:	00 00 
    adb2:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    adb6:	00 00 
    adb8:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    adbc:	30 41       	ret			

0000adbe <PMM_disableSvsLInLPMSlowWake>:
    adbe:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    adc2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    adc6:	00 00 
    adc8:	b2 f0 6f f7 	and	#63343,	&0x0126	;#0xf76f
    adcc:	26 01 
    adce:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    add2:	30 41       	ret			

0000add4 <PMM_enableSvsHInLPMNormPerf>:
    add4:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    add8:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    addc:	00 00 
    adde:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ade2:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ade6:	00 00 
    ade8:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    adec:	00 00 
    adee:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    adf2:	30 41       	ret			

0000adf4 <PMM_enableSvsHInLPMFullPerf>:
    adf4:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    adf8:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    adfc:	00 00 
    adfe:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ae02:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    ae06:	00 00 
    ae08:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    ae0c:	00 00 
    ae0e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ae12:	30 41       	ret			

0000ae14 <PMM_disableSvsHInLPMNormPerf>:
    ae14:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ae18:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ae1c:	00 00 
    ae1e:	b2 f0 6f f7 	and	#63343,	&0x0124	;#0xf76f
    ae22:	24 01 
    ae24:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ae28:	30 41       	ret			

0000ae2a <PMM_disableSvsHInLPMFullPerf>:
    ae2a:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ae2e:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ae32:	00 00 
    ae34:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ae38:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ae3c:	00 00 
    ae3e:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ae42:	00 00 
    ae44:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ae48:	30 41       	ret			

0000ae4a <PMM_optimizeSvsLInLPMFastWake>:
    ae4a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ae4e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ae52:	00 00 
    ae54:	b2 d0 90 08 	bis	#2192,	&0x0126	;#0x0890
    ae58:	26 01 
    ae5a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ae5e:	30 41       	ret			

0000ae60 <PMM_optimizeSvsHInLPMFullPerf>:
    ae60:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ae64:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ae68:	00 00 
    ae6a:	b2 d0 90 08 	bis	#2192,	&0x0124	;#0x0890
    ae6e:	24 01 
    ae70:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ae74:	30 41       	ret			

0000ae76 <PMM_setVCoreUp>:
    ae76:	0a 15       	pushm	#1,	r10	;16-bit words
    ae78:	4e 4c       	mov.b	r12,	r14	;
    ae7a:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    ae7e:	21 01 
    ae80:	1f 42 2e 01 	mov	&0x012e,r15	;0x012e
    ae84:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    ae88:	2e 01 
    ae8a:	1d 42 24 01 	mov	&0x0124,r13	;0x0124
    ae8e:	1c 42 26 01 	mov	&0x0126,r12	;0x0126
    ae92:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    ae96:	0b 4e       	mov	r14,	r11	;
    ae98:	3b d0 00 44 	bis	#17408,	r11	;#0x4400
    ae9c:	82 4b 24 01 	mov	r11,	&0x0124	;
    aea0:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aea4:	2c 01 
    aea6:	fc 27       	jz	$-6      	;abs 0xaea0
    aea8:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    aeac:	2c 01 
    aeae:	b2 b0 20 00 	bit	#32,	&0x012c	;#0x0020
    aeb2:	2c 01 
    aeb4:	12 24       	jz	$+38     	;abs 0xaeda
    aeb6:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    aeba:	2c 01 
    aebc:	82 4d 24 01 	mov	r13,	&0x0124	;
    aec0:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aec4:	2c 01 
    aec6:	fc 27       	jz	$-6      	;abs 0xaec0
    aec8:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    aecc:	2c 01 
    aece:	82 4f 2e 01 	mov	r15,	&0x012e	;
    aed2:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    aed6:	0c 43       	clr	r12		;
    aed8:	33 3c       	jmp	$+104    	;abs 0xaf40
    aeda:	0a 4e       	mov	r14,	r10	;
    aedc:	47 18 0a 5a 	rpt #8 { rlax.w	r10		;
    aee0:	82 da 24 01 	bis	r10,	&0x0124	;
    aee4:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    aee8:	2c 01 
    aeea:	fc 27       	jz	$-6      	;abs 0xaee4
    aeec:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    aef0:	2c 01 
    aef2:	c2 4e 20 01 	mov.b	r14,	&0x0120	;
    aef6:	0a db       	bis	r11,	r10	;
    aef8:	82 4a 26 01 	mov	r10,	&0x0126	;
    aefc:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    af00:	fd 27       	jz	$-4      	;abs 0xaefc
    af02:	92 c3 2c 01 	bic	#1,	&0x012c	;r3 As==01
    af06:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    af0a:	26 01 
    af0c:	3c f0 f8 fc 	and	#64760,	r12	;#0xfcf8
    af10:	82 dc 26 01 	bis	r12,	&0x0126	;
    af14:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    af18:	24 01 
    af1a:	3d f0 f8 fc 	and	#64760,	r13	;#0xfcf8
    af1e:	82 dd 24 01 	bis	r13,	&0x0124	;
    af22:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    af26:	fd 27       	jz	$-4      	;abs 0xaf22
    af28:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    af2c:	2c 01 
    af2e:	f9 27       	jz	$-12     	;abs 0xaf22
    af30:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    af34:	2c 01 
    af36:	82 4f 2e 01 	mov	r15,	&0x012e	;
    af3a:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    af3e:	1c 43       	mov	#1,	r12	;r3 As==01
    af40:	0a 17       	popm	#1,	r10	;16-bit words
    af42:	30 41       	ret			

0000af44 <PMM_setVCoreDown>:
    af44:	2a 15       	pushm	#3,	r10	;16-bit words
    af46:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    af4a:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    af4e:	21 01 
    af50:	19 42 2e 01 	mov	&0x012e,r9	;0x012e
    af54:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    af58:	2e 01 
    af5a:	1e 42 24 01 	mov	&0x0124,r14	;0x0124
    af5e:	0f 43       	clr	r15		;
    af60:	1a 42 26 01 	mov	&0x0126,r10	;0x0126
    af64:	0b 43       	clr	r11		;
    af66:	b2 f0 cc ff 	and	#65484,	&0x012c	;#0xffcc
    af6a:	2c 01 
    af6c:	08 4c       	mov	r12,	r8	;
    af6e:	38 d0 00 44 	bis	#17408,	r8	;#0x4400
    af72:	0d 4c       	mov	r12,	r13	;
    af74:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    af78:	0d d8       	bis	r8,	r13	;
    af7a:	82 4d 24 01 	mov	r13,	&0x0124	;
    af7e:	82 4d 26 01 	mov	r13,	&0x0126	;
    af82:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    af86:	2c 01 
    af88:	fc 27       	jz	$-6      	;abs 0xaf82
    af8a:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    af8e:	f9 27       	jz	$-12     	;abs 0xaf82
    af90:	b2 f0 ee ff 	and	#65518,	&0x012c	;#0xffee
    af94:	2c 01 
    af96:	c2 4c 20 01 	mov.b	r12,	&0x0120	;
    af9a:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    af9e:	26 01 
    afa0:	3a f0 f8 fc 	and	#64760,	r10	;#0xfcf8
    afa4:	82 da 26 01 	bis	r10,	&0x0126	;
    afa8:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    afac:	24 01 
    afae:	3e f0 f8 fc 	and	#64760,	r14	;#0xfcf8
    afb2:	82 de 24 01 	bis	r14,	&0x0124	;
    afb6:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    afba:	fd 27       	jz	$-4      	;abs 0xafb6
    afbc:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    afc0:	2c 01 
    afc2:	f9 27       	jz	$-12     	;abs 0xafb6
    afc4:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    afc8:	2c 01 
    afca:	82 49 2e 01 	mov	r9,	&0x012e	;
    afce:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    afd2:	1c 43       	mov	#1,	r12	;r3 As==01
    afd4:	28 17       	popm	#3,	r10	;16-bit words
    afd6:	30 41       	ret			

0000afd8 <PMM_setVCore>:
    afd8:	4a 15       	pushm	#5,	r10	;16-bit words
    afda:	0a 4c       	mov	r12,	r10	;
    afdc:	3a f0 03 00 	and	#3,	r10	;
    afe0:	16 42 20 01 	mov	&0x0120,r6	;0x0120
    afe4:	36 f0 03 00 	and	#3,	r6	;
    afe8:	1c 43       	mov	#1,	r12	;r3 As==01
    afea:	49 4a       	mov.b	r10,	r9	;
    afec:	38 40 44 af 	mov	#44868,	r8	;#0xaf44
    aff0:	37 40 76 ae 	mov	#44662,	r7	;#0xae76
    aff4:	49 96       	cmp.b	r6,	r9	;
    aff6:	13 24       	jz	$+40     	;abs 0xb01e
    aff8:	0c 93       	cmp	#0,	r12	;r3 As==00
    affa:	11 24       	jz	$+36     	;abs 0xb01e
    affc:	4c 46       	mov.b	r6,	r12	;
    affe:	46 9a       	cmp.b	r10,	r6	;
    b000:	04 2c       	jc	$+10     	;abs 0xb00a
    b002:	5c 53       	inc.b	r12		;
    b004:	46 4c       	mov.b	r12,	r6	;
    b006:	87 12       	call	r7		;
    b008:	03 3c       	jmp	$+8      	;abs 0xb010
    b00a:	7c 53       	add.b	#-1,	r12	;r3 As==11
    b00c:	46 4c       	mov.b	r12,	r6	;
    b00e:	88 12       	call	r8		;
    b010:	0d 43       	clr	r13		;
    b012:	0d 8c       	sub	r12,	r13	;
    b014:	0c dd       	bis	r13,	r12	;
    b016:	5c 03       	rrum	#1,	r12	;
    b018:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    b01c:	eb 3f       	jmp	$-40     	;abs 0xaff4
    b01e:	46 17       	popm	#5,	r10	;16-bit words
    b020:	30 41       	ret			

0000b022 <PMM_getInterruptStatus>:
    b022:	1c f2 2c 01 	and	&0x012c,r12	;0x012c
    b026:	30 41       	ret			

0000b028 <udivmodhi4>:
    b028:	3b 40 11 00 	mov	#17,	r11	;#0x0011
    b02c:	1f 43       	mov	#1,	r15	;r3 As==01
    b02e:	0d 9c       	cmp	r12,	r13	;
    b030:	09 2c       	jc	$+20     	;abs 0xb044
    b032:	3b 53       	add	#-1,	r11	;r3 As==11
    b034:	0b 93       	cmp	#0,	r11	;r3 As==00
    b036:	05 24       	jz	$+12     	;abs 0xb042
    b038:	0d 93       	cmp	#0,	r13	;r3 As==00
    b03a:	04 38       	jl	$+10     	;abs 0xb044
    b03c:	0d 5d       	rla	r13		;
    b03e:	0f 5f       	rla	r15		;
    b040:	f6 3f       	jmp	$-18     	;abs 0xb02e
    b042:	0f 4b       	mov	r11,	r15	;
    b044:	0b 43       	clr	r11		;
    b046:	0f 93       	cmp	#0,	r15	;r3 As==00
    b048:	09 24       	jz	$+20     	;abs 0xb05c
    b04a:	0c 9d       	cmp	r13,	r12	;
    b04c:	02 28       	jnc	$+6      	;abs 0xb052
    b04e:	0c 8d       	sub	r13,	r12	;
    b050:	0b df       	bis	r15,	r11	;
    b052:	12 c3       	clrc			
    b054:	0f 10       	rrc	r15		;
    b056:	12 c3       	clrc			
    b058:	0d 10       	rrc	r13		;
    b05a:	f5 3f       	jmp	$-20     	;abs 0xb046
    b05c:	0e 93       	cmp	#0,	r14	;r3 As==00
    b05e:	01 20       	jnz	$+4      	;abs 0xb062
    b060:	0c 4b       	mov	r11,	r12	;
    b062:	30 41       	ret			

0000b064 <__mspabi_divi>:
    b064:	0a 15       	pushm	#1,	r10	;16-bit words
    b066:	0e 4c       	mov	r12,	r14	;
    b068:	0f 4d       	mov	r13,	r15	;
    b06a:	3b 40 28 b0 	mov	#45096,	r11	;#0xb028
    b06e:	0c 93       	cmp	#0,	r12	;r3 As==00
    b070:	07 34       	jge	$+16     	;abs 0xb080
    b072:	0c 43       	clr	r12		;
    b074:	0c 8e       	sub	r14,	r12	;
    b076:	0e 4c       	mov	r12,	r14	;
    b078:	0d 93       	cmp	#0,	r13	;r3 As==00
    b07a:	10 34       	jge	$+34     	;abs 0xb09c
    b07c:	1a 43       	mov	#1,	r10	;r3 As==01
    b07e:	03 3c       	jmp	$+8      	;abs 0xb086
    b080:	0d 93       	cmp	#0,	r13	;r3 As==00
    b082:	0f 34       	jge	$+32     	;abs 0xb0a2
    b084:	0a 43       	clr	r10		;
    b086:	0d 43       	clr	r13		;
    b088:	0d 8f       	sub	r15,	r13	;
    b08a:	0c 4e       	mov	r14,	r12	;
    b08c:	0e 43       	clr	r14		;
    b08e:	8b 12       	call	r11		;
    b090:	1a 93       	cmp	#1,	r10	;r3 As==01
    b092:	09 24       	jz	$+20     	;abs 0xb0a6
    b094:	0d 43       	clr	r13		;
    b096:	0d 8c       	sub	r12,	r13	;
    b098:	0c 4d       	mov	r13,	r12	;
    b09a:	05 3c       	jmp	$+12     	;abs 0xb0a6
    b09c:	0e 43       	clr	r14		;
    b09e:	8b 12       	call	r11		;
    b0a0:	f9 3f       	jmp	$-12     	;abs 0xb094
    b0a2:	0e 43       	clr	r14		;
    b0a4:	8b 12       	call	r11		;
    b0a6:	0a 17       	popm	#1,	r10	;16-bit words
    b0a8:	30 41       	ret			

0000b0aa <__mspabi_divu>:
    b0aa:	0e 43       	clr	r14		;
    b0ac:	b0 12 28 b0 	call	#45096		;#0xb028
    b0b0:	30 41       	ret			

0000b0b2 <udivmodsi4>:
    b0b2:	4a 15       	pushm	#5,	r10	;16-bit words
    b0b4:	0a 4c       	mov	r12,	r10	;
    b0b6:	0b 4d       	mov	r13,	r11	;
    b0b8:	3c 40 21 00 	mov	#33,	r12	;#0x0021
    b0bc:	18 43       	mov	#1,	r8	;r3 As==01
    b0be:	09 43       	clr	r9		;
    b0c0:	0f 9b       	cmp	r11,	r15	;
    b0c2:	04 28       	jnc	$+10     	;abs 0xb0cc
    b0c4:	0d 9f       	cmp	r15,	r13	;
    b0c6:	16 20       	jnz	$+46     	;abs 0xb0f4
    b0c8:	0e 9a       	cmp	r10,	r14	;
    b0ca:	14 2c       	jc	$+42     	;abs 0xb0f4
    b0cc:	3c 53       	add	#-1,	r12	;r3 As==11
    b0ce:	0c 93       	cmp	#0,	r12	;r3 As==00
    b0d0:	0f 24       	jz	$+32     	;abs 0xb0f0
    b0d2:	0f 93       	cmp	#0,	r15	;r3 As==00
    b0d4:	0f 38       	jl	$+32     	;abs 0xb0f4
    b0d6:	06 4e       	mov	r14,	r6	;
    b0d8:	07 4f       	mov	r15,	r7	;
    b0da:	06 5e       	add	r14,	r6	;
    b0dc:	07 6f       	addc	r15,	r7	;
    b0de:	0e 46       	mov	r6,	r14	;
    b0e0:	0f 47       	mov	r7,	r15	;
    b0e2:	06 48       	mov	r8,	r6	;
    b0e4:	07 49       	mov	r9,	r7	;
    b0e6:	06 58       	add	r8,	r6	;
    b0e8:	07 69       	addc	r9,	r7	;
    b0ea:	08 46       	mov	r6,	r8	;
    b0ec:	09 47       	mov	r7,	r9	;
    b0ee:	e8 3f       	jmp	$-46     	;abs 0xb0c0
    b0f0:	08 43       	clr	r8		;
    b0f2:	09 43       	clr	r9		;
    b0f4:	0c 43       	clr	r12		;
    b0f6:	0d 4c       	mov	r12,	r13	;
    b0f8:	07 48       	mov	r8,	r7	;
    b0fa:	07 d9       	bis	r9,	r7	;
    b0fc:	07 93       	cmp	#0,	r7	;r3 As==00
    b0fe:	11 24       	jz	$+36     	;abs 0xb122
    b100:	0b 9f       	cmp	r15,	r11	;
    b102:	08 28       	jnc	$+18     	;abs 0xb114
    b104:	0f 9b       	cmp	r11,	r15	;
    b106:	02 20       	jnz	$+6      	;abs 0xb10c
    b108:	0a 9e       	cmp	r14,	r10	;
    b10a:	04 28       	jnc	$+10     	;abs 0xb114
    b10c:	0a 8e       	sub	r14,	r10	;
    b10e:	0b 7f       	subc	r15,	r11	;
    b110:	0c d8       	bis	r8,	r12	;
    b112:	0d d9       	bis	r9,	r13	;
    b114:	12 c3       	clrc			
    b116:	09 10       	rrc	r9		;
    b118:	08 10       	rrc	r8		;
    b11a:	12 c3       	clrc			
    b11c:	0f 10       	rrc	r15		;
    b11e:	0e 10       	rrc	r14		;
    b120:	eb 3f       	jmp	$-40     	;abs 0xb0f8
    b122:	81 93 0c 00 	cmp	#0,	12(r1)	;r3 As==00, 0x000c
    b126:	02 24       	jz	$+6      	;abs 0xb12c
    b128:	0c 4a       	mov	r10,	r12	;
    b12a:	0d 4b       	mov	r11,	r13	;
    b12c:	46 17       	popm	#5,	r10	;16-bit words
    b12e:	30 41       	ret			

0000b130 <__mspabi_divli>:
    b130:	5a 15       	pushm	#6,	r10	;16-bit words
    b132:	21 83       	decd	r1		;
    b134:	0a 4c       	mov	r12,	r10	;
    b136:	0b 4d       	mov	r13,	r11	;
    b138:	08 4e       	mov	r14,	r8	;
    b13a:	09 4f       	mov	r15,	r9	;
    b13c:	37 40 b2 b0 	mov	#45234,	r7	;#0xb0b2
    b140:	0d 93       	cmp	#0,	r13	;r3 As==00
    b142:	0c 34       	jge	$+26     	;abs 0xb15c
    b144:	0c 43       	clr	r12		;
    b146:	0d 43       	clr	r13		;
    b148:	05 4c       	mov	r12,	r5	;
    b14a:	06 4d       	mov	r13,	r6	;
    b14c:	05 8a       	sub	r10,	r5	;
    b14e:	06 7b       	subc	r11,	r6	;
    b150:	0a 45       	mov	r5,	r10	;
    b152:	0b 46       	mov	r6,	r11	;
    b154:	0f 93       	cmp	#0,	r15	;r3 As==00
    b156:	1a 34       	jge	$+54     	;abs 0xb18c
    b158:	16 43       	mov	#1,	r6	;r3 As==01
    b15a:	04 3c       	jmp	$+10     	;abs 0xb164
    b15c:	06 4f       	mov	r15,	r6	;
    b15e:	0f 93       	cmp	#0,	r15	;r3 As==00
    b160:	1b 34       	jge	$+56     	;abs 0xb198
    b162:	06 43       	clr	r6		;
    b164:	0e 43       	clr	r14		;
    b166:	0f 43       	clr	r15		;
    b168:	0e 88       	sub	r8,	r14	;
    b16a:	0f 79       	subc	r9,	r15	;
    b16c:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b170:	0c 4a       	mov	r10,	r12	;
    b172:	0d 4b       	mov	r11,	r13	;
    b174:	87 12       	call	r7		;
    b176:	16 93       	cmp	#1,	r6	;r3 As==01
    b178:	12 24       	jz	$+38     	;abs 0xb19e
    b17a:	0e 43       	clr	r14		;
    b17c:	0f 43       	clr	r15		;
    b17e:	0a 4e       	mov	r14,	r10	;
    b180:	0b 4f       	mov	r15,	r11	;
    b182:	0a 8c       	sub	r12,	r10	;
    b184:	0b 7d       	subc	r13,	r11	;
    b186:	0c 4a       	mov	r10,	r12	;
    b188:	0d 4b       	mov	r11,	r13	;
    b18a:	09 3c       	jmp	$+20     	;abs 0xb19e
    b18c:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b190:	0c 45       	mov	r5,	r12	;
    b192:	0d 46       	mov	r6,	r13	;
    b194:	87 12       	call	r7		;
    b196:	f1 3f       	jmp	$-28     	;abs 0xb17a
    b198:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b19c:	87 12       	call	r7		;
    b19e:	21 53       	incd	r1		;
    b1a0:	55 17       	popm	#6,	r10	;16-bit words
    b1a2:	30 41       	ret			

0000b1a4 <__mspabi_divlu>:
    b1a4:	21 83       	decd	r1		;
    b1a6:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b1aa:	b0 12 b2 b0 	call	#45234		;#0xb0b2
    b1ae:	21 53       	incd	r1		;
    b1b0:	30 41       	ret			

0000b1b2 <__mspabi_slli_15>:
    b1b2:	0c 5c       	rla	r12		;

0000b1b4 <__mspabi_slli_14>:
    b1b4:	0c 5c       	rla	r12		;

0000b1b6 <__mspabi_slli_13>:
    b1b6:	0c 5c       	rla	r12		;

0000b1b8 <__mspabi_slli_12>:
    b1b8:	0c 5c       	rla	r12		;

0000b1ba <__mspabi_slli_11>:
    b1ba:	0c 5c       	rla	r12		;

0000b1bc <__mspabi_slli_10>:
    b1bc:	0c 5c       	rla	r12		;

0000b1be <__mspabi_slli_9>:
    b1be:	0c 5c       	rla	r12		;

0000b1c0 <__mspabi_slli_8>:
    b1c0:	0c 5c       	rla	r12		;

0000b1c2 <__mspabi_slli_7>:
    b1c2:	0c 5c       	rla	r12		;

0000b1c4 <__mspabi_slli_6>:
    b1c4:	0c 5c       	rla	r12		;

0000b1c6 <__mspabi_slli_5>:
    b1c6:	0c 5c       	rla	r12		;

0000b1c8 <__mspabi_slli_4>:
    b1c8:	0c 5c       	rla	r12		;

0000b1ca <__mspabi_slli_3>:
    b1ca:	0c 5c       	rla	r12		;

0000b1cc <__mspabi_slli_2>:
    b1cc:	0c 5c       	rla	r12		;

0000b1ce <__mspabi_slli_1>:
    b1ce:	0c 5c       	rla	r12		;
    b1d0:	30 41       	ret			
    b1d2:	3d 53       	add	#-1,	r13	;r3 As==11
    b1d4:	0c 5c       	rla	r12		;

0000b1d6 <__mspabi_slli>:
    b1d6:	0d 93       	cmp	#0,	r13	;r3 As==00
    b1d8:	fc 23       	jnz	$-6      	;abs 0xb1d2
    b1da:	30 41       	ret			

0000b1dc <__mspabi_slll_15>:
    b1dc:	0c 5c       	rla	r12		;
    b1de:	0d 6d       	rlc	r13		;

0000b1e0 <__mspabi_slll_14>:
    b1e0:	0c 5c       	rla	r12		;
    b1e2:	0d 6d       	rlc	r13		;

0000b1e4 <__mspabi_slll_13>:
    b1e4:	0c 5c       	rla	r12		;
    b1e6:	0d 6d       	rlc	r13		;

0000b1e8 <__mspabi_slll_12>:
    b1e8:	0c 5c       	rla	r12		;
    b1ea:	0d 6d       	rlc	r13		;

0000b1ec <__mspabi_slll_11>:
    b1ec:	0c 5c       	rla	r12		;
    b1ee:	0d 6d       	rlc	r13		;

0000b1f0 <__mspabi_slll_10>:
    b1f0:	0c 5c       	rla	r12		;
    b1f2:	0d 6d       	rlc	r13		;

0000b1f4 <__mspabi_slll_9>:
    b1f4:	0c 5c       	rla	r12		;
    b1f6:	0d 6d       	rlc	r13		;

0000b1f8 <__mspabi_slll_8>:
    b1f8:	0c 5c       	rla	r12		;
    b1fa:	0d 6d       	rlc	r13		;

0000b1fc <__mspabi_slll_7>:
    b1fc:	0c 5c       	rla	r12		;
    b1fe:	0d 6d       	rlc	r13		;

0000b200 <__mspabi_slll_6>:
    b200:	0c 5c       	rla	r12		;
    b202:	0d 6d       	rlc	r13		;

0000b204 <__mspabi_slll_5>:
    b204:	0c 5c       	rla	r12		;
    b206:	0d 6d       	rlc	r13		;

0000b208 <__mspabi_slll_4>:
    b208:	0c 5c       	rla	r12		;
    b20a:	0d 6d       	rlc	r13		;

0000b20c <__mspabi_slll_3>:
    b20c:	0c 5c       	rla	r12		;
    b20e:	0d 6d       	rlc	r13		;

0000b210 <__mspabi_slll_2>:
    b210:	0c 5c       	rla	r12		;
    b212:	0d 6d       	rlc	r13		;

0000b214 <__mspabi_slll_1>:
    b214:	0c 5c       	rla	r12		;
    b216:	0d 6d       	rlc	r13		;
    b218:	30 41       	ret			
    b21a:	3e 53       	add	#-1,	r14	;r3 As==11
    b21c:	0c 5c       	rla	r12		;
    b21e:	0d 6d       	rlc	r13		;

0000b220 <__mspabi_slll>:
    b220:	0e 93       	cmp	#0,	r14	;r3 As==00
    b222:	fb 23       	jnz	$-8      	;abs 0xb21a
    b224:	30 41       	ret			

0000b226 <__mspabi_srli_15>:
    b226:	12 c3       	clrc			
    b228:	0c 10       	rrc	r12		;

0000b22a <__mspabi_srli_14>:
    b22a:	12 c3       	clrc			
    b22c:	0c 10       	rrc	r12		;

0000b22e <__mspabi_srli_13>:
    b22e:	12 c3       	clrc			
    b230:	0c 10       	rrc	r12		;

0000b232 <__mspabi_srli_12>:
    b232:	12 c3       	clrc			
    b234:	0c 10       	rrc	r12		;

0000b236 <__mspabi_srli_11>:
    b236:	12 c3       	clrc			
    b238:	0c 10       	rrc	r12		;

0000b23a <__mspabi_srli_10>:
    b23a:	12 c3       	clrc			
    b23c:	0c 10       	rrc	r12		;

0000b23e <__mspabi_srli_9>:
    b23e:	12 c3       	clrc			
    b240:	0c 10       	rrc	r12		;

0000b242 <__mspabi_srli_8>:
    b242:	12 c3       	clrc			
    b244:	0c 10       	rrc	r12		;

0000b246 <__mspabi_srli_7>:
    b246:	12 c3       	clrc			
    b248:	0c 10       	rrc	r12		;

0000b24a <__mspabi_srli_6>:
    b24a:	12 c3       	clrc			
    b24c:	0c 10       	rrc	r12		;

0000b24e <__mspabi_srli_5>:
    b24e:	12 c3       	clrc			
    b250:	0c 10       	rrc	r12		;

0000b252 <__mspabi_srli_4>:
    b252:	12 c3       	clrc			
    b254:	0c 10       	rrc	r12		;

0000b256 <__mspabi_srli_3>:
    b256:	12 c3       	clrc			
    b258:	0c 10       	rrc	r12		;

0000b25a <__mspabi_srli_2>:
    b25a:	12 c3       	clrc			
    b25c:	0c 10       	rrc	r12		;

0000b25e <__mspabi_srli_1>:
    b25e:	12 c3       	clrc			
    b260:	0c 10       	rrc	r12		;
    b262:	30 41       	ret			
    b264:	3d 53       	add	#-1,	r13	;r3 As==11
    b266:	12 c3       	clrc			
    b268:	0c 10       	rrc	r12		;

0000b26a <__mspabi_srli>:
    b26a:	0d 93       	cmp	#0,	r13	;r3 As==00
    b26c:	fb 23       	jnz	$-8      	;abs 0xb264
    b26e:	30 41       	ret			

0000b270 <__mspabi_srll_15>:
    b270:	12 c3       	clrc			
    b272:	0d 10       	rrc	r13		;
    b274:	0c 10       	rrc	r12		;

0000b276 <__mspabi_srll_14>:
    b276:	12 c3       	clrc			
    b278:	0d 10       	rrc	r13		;
    b27a:	0c 10       	rrc	r12		;

0000b27c <__mspabi_srll_13>:
    b27c:	12 c3       	clrc			
    b27e:	0d 10       	rrc	r13		;
    b280:	0c 10       	rrc	r12		;

0000b282 <__mspabi_srll_12>:
    b282:	12 c3       	clrc			
    b284:	0d 10       	rrc	r13		;
    b286:	0c 10       	rrc	r12		;

0000b288 <__mspabi_srll_11>:
    b288:	12 c3       	clrc			
    b28a:	0d 10       	rrc	r13		;
    b28c:	0c 10       	rrc	r12		;

0000b28e <__mspabi_srll_10>:
    b28e:	12 c3       	clrc			
    b290:	0d 10       	rrc	r13		;
    b292:	0c 10       	rrc	r12		;

0000b294 <__mspabi_srll_9>:
    b294:	12 c3       	clrc			
    b296:	0d 10       	rrc	r13		;
    b298:	0c 10       	rrc	r12		;

0000b29a <__mspabi_srll_8>:
    b29a:	12 c3       	clrc			
    b29c:	0d 10       	rrc	r13		;
    b29e:	0c 10       	rrc	r12		;

0000b2a0 <__mspabi_srll_7>:
    b2a0:	12 c3       	clrc			
    b2a2:	0d 10       	rrc	r13		;
    b2a4:	0c 10       	rrc	r12		;

0000b2a6 <__mspabi_srll_6>:
    b2a6:	12 c3       	clrc			
    b2a8:	0d 10       	rrc	r13		;
    b2aa:	0c 10       	rrc	r12		;

0000b2ac <__mspabi_srll_5>:
    b2ac:	12 c3       	clrc			
    b2ae:	0d 10       	rrc	r13		;
    b2b0:	0c 10       	rrc	r12		;

0000b2b2 <__mspabi_srll_4>:
    b2b2:	12 c3       	clrc			
    b2b4:	0d 10       	rrc	r13		;
    b2b6:	0c 10       	rrc	r12		;

0000b2b8 <__mspabi_srll_3>:
    b2b8:	12 c3       	clrc			
    b2ba:	0d 10       	rrc	r13		;
    b2bc:	0c 10       	rrc	r12		;

0000b2be <__mspabi_srll_2>:
    b2be:	12 c3       	clrc			
    b2c0:	0d 10       	rrc	r13		;
    b2c2:	0c 10       	rrc	r12		;

0000b2c4 <__mspabi_srll_1>:
    b2c4:	12 c3       	clrc			
    b2c6:	0d 10       	rrc	r13		;
    b2c8:	0c 10       	rrc	r12		;
    b2ca:	30 41       	ret			
    b2cc:	3e 53       	add	#-1,	r14	;r3 As==11
    b2ce:	12 c3       	clrc			
    b2d0:	0d 10       	rrc	r13		;
    b2d2:	0c 10       	rrc	r12		;

0000b2d4 <__mspabi_srll>:
    b2d4:	0e 93       	cmp	#0,	r14	;r3 As==00
    b2d6:	fa 23       	jnz	$-10     	;abs 0xb2cc
    b2d8:	30 41       	ret			
	...

0000b2dc <__mulhi2_f5>:
    b2dc:	02 12       	push	r2		;
    b2de:	32 c2       	dint			
    b2e0:	03 43       	nop			
    b2e2:	82 4c c0 04 	mov	r12,	&0x04c0	;
    b2e6:	82 4d c8 04 	mov	r13,	&0x04c8	;
    b2ea:	1c 42 ca 04 	mov	&0x04ca,r12	;0x04ca
    b2ee:	00 13       	reti			

0000b2f0 <__mulsi2_f5>:
    b2f0:	02 12       	push	r2		;
    b2f2:	32 c2       	dint			
    b2f4:	03 43       	nop			
    b2f6:	82 4c d0 04 	mov	r12,	&0x04d0	;
    b2fa:	82 4d d2 04 	mov	r13,	&0x04d2	;
    b2fe:	82 4e e0 04 	mov	r14,	&0x04e0	;
    b302:	82 4f e2 04 	mov	r15,	&0x04e2	;
    b306:	1c 42 e4 04 	mov	&0x04e4,r12	;0x04e4
    b30a:	1d 42 e6 04 	mov	&0x04e6,r13	;0x04e6
    b30e:	00 13       	reti			

0000b310 <memset>:
    b310:	0f 4c       	mov	r12,	r15	;
    b312:	0e 5c       	add	r12,	r14	;
    b314:	0f 9e       	cmp	r14,	r15	;
    b316:	04 24       	jz	$+10     	;abs 0xb320
    b318:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    b31c:	1f 53       	inc	r15		;
    b31e:	fa 3f       	jmp	$-10     	;abs 0xb314
    b320:	30 41       	ret			

0000b322 <memmove>:
    b322:	0a 15       	pushm	#1,	r10	;16-bit words
    b324:	0d 9c       	cmp	r12,	r13	;
    b326:	10 2c       	jc	$+34     	;abs 0xb348
    b328:	0b 4d       	mov	r13,	r11	;
    b32a:	0b 5e       	add	r14,	r11	;
    b32c:	0c 9b       	cmp	r11,	r12	;
    b32e:	0c 2c       	jc	$+26     	;abs 0xb348
    b330:	0d 4e       	mov	r14,	r13	;
    b332:	3d 53       	add	#-1,	r13	;r3 As==11
    b334:	3d 93       	cmp	#-1,	r13	;r3 As==11
    b336:	13 24       	jz	$+40     	;abs 0xb35e
    b338:	0f 4d       	mov	r13,	r15	;
    b33a:	0f 8e       	sub	r14,	r15	;
    b33c:	0f 5b       	add	r11,	r15	;
    b33e:	0a 4c       	mov	r12,	r10	;
    b340:	0a 5d       	add	r13,	r10	;
    b342:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    b346:	f5 3f       	jmp	$-20     	;abs 0xb332
    b348:	0f 43       	clr	r15		;
    b34a:	0f 9e       	cmp	r14,	r15	;
    b34c:	08 24       	jz	$+18     	;abs 0xb35e
    b34e:	0a 4d       	mov	r13,	r10	;
    b350:	0a 5f       	add	r15,	r10	;
    b352:	0b 4c       	mov	r12,	r11	;
    b354:	0b 5f       	add	r15,	r11	;
    b356:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    b35a:	1f 53       	inc	r15		;
    b35c:	f6 3f       	jmp	$-18     	;abs 0xb34a
    b35e:	0a 17       	popm	#1,	r10	;16-bit words
    b360:	30 41       	ret			

0000b362 <__do_global_ctors_aux>:
    b362:	0a 15       	pushm	#1,	r10	;16-bit words
    b364:	1c 42 1c 82 	mov	&0x821c,r12	;0x821c
    b368:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b36a:	08 24       	jz	$+18     	;abs 0xb37c
    b36c:	3a 40 1c 82 	mov	#33308,	r10	;#0x821c
    b370:	8c 12       	call	r12		;
    b372:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    b376:	2c 4a       	mov	@r10,	r12	;
    b378:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b37a:	fa 23       	jnz	$-10     	;abs 0xb370
    b37c:	0a 17       	popm	#1,	r10	;16-bit words
    b37e:	30 41       	ret			

0000b380 <call___do_global_ctors_aux>:
    b380:	30 41       	ret			

0000b382 <__msp430_init>:
    b382:	b0 12 20 83 	call	#33568		;#0x8320
    b386:	b0 12 62 b3 	call	#45922		;#0xb362
    b38a:	b0 12 60 82 	call	#33376		;#0x8260
    b38e:	b0 12 54 82 	call	#33364		;#0x8254
    b392:	30 41       	ret			

0000b394 <__msp430_fini>:
    b394:	b0 12 6c 82 	call	#33388		;#0x826c
    b398:	b0 12 d2 82 	call	#33490		;#0x82d2
    b39c:	30 41       	ret			
