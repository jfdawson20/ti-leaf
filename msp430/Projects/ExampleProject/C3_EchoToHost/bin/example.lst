
../bin/example.elf:     file format elf32-msp430

SYMBOL TABLE:
0000ffe6 l    d  __interrupt_vector_52	00000000 __interrupt_vector_52
0000fffa l    d  __interrupt_vector_62	00000000 __interrupt_vector_62
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008220 l    d  .text	00000000 .text
00002400 l    d  .data	00000000 .data
00002404 l    d  .bss	00000000 .bss
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line.text.udivmodhi4	00000000 .debug_line.text.udivmodhi4
00000000 l    d  .debug_line.text.__divhi3	00000000 .debug_line.text.__divhi3
00000000 l    d  .debug_line.text.__udivhi3	00000000 .debug_line.text.__udivhi3
00000000 l    d  .debug_line.text.udivmodsi4	00000000 .debug_line.text.udivmodsi4
00000000 l    d  .debug_line.text.__divsi3	00000000 .debug_line.text.__divsi3
00000000 l    d  .debug_line.text.__udivsi3	00000000 .debug_line.text.__udivsi3
00000000 l    d  .debug_line.text.memset	00000000 .debug_line.text.memset
00000000 l    d  .debug_line.text.memmove	00000000 .debug_line.text.memmove
00000000 l    df *ABS*	00000000 UsbIsr.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00008276 l       .text	00000000 _msp430_run_array
00008284 l       .text	00000000 _msp430_run_done
00000000 l       .debug_line	00000000 L0
00008224 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b264 l       .text	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b260 l       .text	00000000 L0
0000b264 l       .text	00000000 L0
00000000 l       .debug_aranges	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000b260 l       .text	00000000 L0
0000b264 l       .text	00000000 L0
00000000 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 descriptors.c
00000000 l    df *ABS*	00000000 usb.c
00002517 l     O .bss	00000001 bRemoteWakeup
00002521 l     O .bss	00000001 bConfigurationNumber
00002520 l     O .bss	00000001 bInterfaceNumber
0000251a l     O .bss	00000001 bHostAskMoreDataThanAvailable
0000251e l     O .bss	00000002 pbIEP0Buffer
0000251c l     O .bss	00000002 pbOEP0Buffer
00000000 l    df *ABS*	00000000 gpio.c
000081f2 l     O .rodata	0000001c GPIO_PORT_TO_BASE
00000000 l    df *ABS*	00000000 crtstuff.c
00008218 l     O .rodata	00000000 __CTOR_LIST__
0000821c l     O .rodata	00000000 __DTOR_LIST__
00008210 l     O .rodata	00000000 __EH_FRAME_BEGIN__
00002400 l     O .data	00000000 __JCR_LIST__
0000b26a l     O .text	00000000 __TMC_LIST__
00008286 l       .text	00000000 deregister_tm_clones
000082a4 l       .text	00000000 register_tm_clones
000082ce l       .text	00000000 __do_global_dtors_aux
00002404 l     O .bss	00000001 completed.2761
00002406 l     O .bss	00000002 dtor_idx.2763
0000831a l       .text	00000000 call___do_global_dtors_aux
0000831c l       .text	00000000 frame_dummy
00002408 l     O .bss	0000000e object.2776
0000834a l       .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 crtstuff.c
0000821a l     O .rodata	00000000 __CTOR_END__
00008210 l     O .rodata	00000000 __FRAME_END__
00002400 l     O .data	00000000 __JCR_END__
0000b22e l       .text	00000000 __do_global_ctors_aux
0000b24c l       .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000312 l       .debug_line	00000000 L0
00008232 l       .text	00000000 L0
000000d0 l       .debug_aranges	00000000 L0
00008224 l       .text	00000000 L0
00008232 l       .text	00000000 L0
00000653 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_movedata.o
00000396 l       .debug_line	00000000 L0
00008246 l       .text	00000000 L0
000000f0 l       .debug_aranges	00000000 L0
00008232 l       .text	00000000 L0
00008246 l       .text	00000000 L0
00000725 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_main.o
00000426 l       .debug_line	00000000 L0
00008250 l       .text	00000000 L0
00000110 l       .debug_aranges	00000000 L0
00008246 l       .text	00000000 L0
00008250 l       .text	00000000 L0
000007f7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 usbConstructs.c
00000000 l    df *ABS*	00000000 usbEventHandling.c
00000000 l    df *ABS*	00000000 usbdma.c
00000000 l    df *ABS*	00000000 UsbCdc.c
00002532 l     O .bss	0000000a CdcWriteCtrl
00002522 l     O .bss	00000010 CdcReadCtrl
0000253c l     O .bss	00000008 CdcControl
00000000 l    df *ABS*	00000000 tlv.c
00000000 l    df *ABS*	00000000 wdt_a.c
00000000 l    df *ABS*	00000000 dma.c
00000000 l    df *ABS*	00000000 sfr.c
00000000 l    df *ABS*	00000000 ucs.c
0000a39a l       .text	0000011a privateUCSSourceClockFromDCO
00002548 l     O .bss	00000004 privateXT1ClockFrequency
00002544 l     O .bss	00000004 privateXT2ClockFrequency
0000a4a8 l       .text	000000f4 privateUCSComputeCLKFrequency
00000000 l    df *ABS*	00000000 pmm.c
00000000 l    df *ABS*	00000000 lib2divHI.c
0000af36 l       .text	00000000 L0
0000af7e l       .text	00000000 L0
0000af80 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 lib2divSI.c
0000b002 l       .text	00000000 L0
0000b078 l       .text	00000000 L0
0000b080 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib2hw_mul.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memset.c
0000b1f0 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 memmove.c
0000b232 l       .text	00000000 L0
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crtn.o
000005bc l       .debug_line	00000000 L0
0000b260 l       .text	00000000 L0
0000b26a l       .text	00000000 L0
0000b256 l       .text	00000000 L0
0000b260 l       .text	00000000 L0
0000b268 l       .text	00000000 L0
0000b26a l       .text	00000000 L0
00000150 l       .debug_aranges	00000000 L0
0000b256 l       .text	00000000 L0
0000b260 l       .text	00000000 L0
0000b268 l       .text	00000000 L0
0000b26a l       .text	00000000 L0
000009c7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 system_pre_init.c
00000000 l    df *ABS*	00000000 
00002180 l       *ABS*	00000000 pbXBufferAddressEp86
00001ec0 l       *ABS*	00000000 pbYBufferAddressEp83
00002000 l       *ABS*	00000000 pbXBufferAddressEp5
00002080 l       *ABS*	00000000 pbXBufferAddressEp85
00001c40 l       *ABS*	00000000 pbYBufferAddressEp1
00001d00 l       *ABS*	00000000 pbXBufferAddressEp2
000021c0 l       *ABS*	00000000 pbYBufferAddressEp86
00001d80 l       *ABS*	00000000 pbXBufferAddressEp82
000022c0 l       *ABS*	00000000 pbYBufferAddressEp87
00002040 l       *ABS*	00000000 pbYBufferAddressEp5
00002280 l       *ABS*	00000000 pbXBufferAddressEp87
00001dc0 l       *ABS*	00000000 pbYBufferAddressEp82
00002140 l       *ABS*	00000000 pbYBufferAddressEp6
00001d40 l       *ABS*	00000000 pbYBufferAddressEp2
00008220 l       .text	00000000 _start
00002200 l       *ABS*	00000000 pbXBufferAddressEp7
00001c00 l       *ABS*	00000000 pbXBufferAddressEp1
00002100 l       *ABS*	00000000 pbXBufferAddressEp6
000020c0 l       *ABS*	00000000 pbYBufferAddressEp85
00001fc0 l       *ABS*	00000000 pbYBufferAddressEp84
00002240 l       *ABS*	00000000 pbYBufferAddressEp7
00001c80 l       *ABS*	00000000 pbXBufferAddressEp81
00001f40 l       *ABS*	00000000 pbYBufferAddressEp4
00001f80 l       *ABS*	00000000 pbXBufferAddressEp84
00001cc0 l       *ABS*	00000000 pbYBufferAddressEp81
00001f00 l       *ABS*	00000000 pbXBufferAddressEp4
00001e00 l       *ABS*	00000000 pbXBufferAddressEp3
00001e40 l       *ABS*	00000000 pbYBufferAddressEp3
00001e80 l       *ABS*	00000000 pbXBufferAddressEp83
0000901c g       .text	0000004c usbSetEndpointFeature
0000abec g       .text	00000016 PMM_enableSvmHInterrupt
00002378 g       *ABS*	00000000 abIEP0Buffer
0000b0c2 g       .text	00000000 .hidden __mspabi_slll_9
0000a2d0 g       .text	0000000c DMA_enableTransfers
0000b0b2 g       .text	00000000 .hidden __mspabi_slll_13
0000a7d2 g       .text	00000006 UCS_turnOffXT1
0000ab40 g       .text	00000016 PMM_enableSvsHSvmH
00008cac g       .text	00000030 USB_suspend
0000ab2a g       .text	00000016 PMM_disableSvsLSvmL
0000b10c g       .text	00000000 .hidden __mspabi_srli_9
0000a37e g       .text	0000000e SFR_setNMIEdge
00002388 g       *ABS*	00000000 tOutputEndPointDescriptorBlock
0000a31c g       .text	0000000c DMA_getNMIAbortStatus
0000b15c g       .text	00000000 .hidden __mspabi_srll_10
00008cf0 g       .text	0000000a usbStallOEP0
0000ad44 g       .text	000000d0 PMM_setVCoreUp
00009004 g       .text	0000001a usbSetDeviceFeature
0000a104 g       .text	0000002a GPIO_setAsInputPinWithPullUpResistor
00008c16 g       .text	000000a2 USB_getConnectionState
0000a152 g       .text	0000001a GPIO_enableInterrupt
00008b9c g       .text	00000022 USB_disconnect
0000a2a0 g       .text	00000030 DMA_setDstAddress
0000254c g     O .bss	00000008 abUsbRequestIncomingData
0000a362 g       .text	00000006 SFR_getInterruptStatus
0000b108 g       .text	00000000 .hidden __mspabi_srli_10
0000a72e g       .text	00000050 UCS_turnOnHFXT1WithTimeout
0000b08c g       .text	00000000 .hidden __mspabi_slli_9
00008f2c g       .text	0000007a usbGetEndpointStatus
0000b0f4 g       .text	00000000 .hidden __mspabi_srli_15
000087f2 g       .text	00000036 OEP0InterruptHandler
000084c8 g       .text	0000003e USBHAL_initClocks
0000b1ee g       .text	00000044 memmove
00009ffa g       .text	00000014 WDT_A_initIntervalTimer
0000a16c g       .text	0000001a GPIO_disableInterrupt
0000a38c g       .text	0000000e SFR_setResetNMIPinFunction
0000868e g       .text	00000004 USB_handleResetEvent
0000a1bc g       .text	0000002c GPIO_selectInterruptEdge
0000a9e8 g       .text	00000006 UCS_turnOnSMCLK
00008df4 g       .text	00000046 usbClearEndpointFeature
000093c4 g       .text	00000024 memcpyV
0000b120 g       .text	00000000 .hidden __mspabi_srli_4
0000b086 g       .text	00000000 .hidden __mspabi_slli_12
0000a8a0 g       .text	00000108 UCS_initFLL
0000a260 g       .text	0000000a DMA_setTransferSize
0000aef6 g       .text	00000040 .hidden udivmodhi4
00008d84 g       .text	00000052 usbReceiveNextPacketOnOEP0
0000843a g       .text	0000008e USBHAL_initPorts
00009e24 g       .text	00000064 TLV_getInfo
0000a08c g       .text	0000001a GPIO_setOutputHighOnPin
00009490 g       .text	00000030 CdcResetData
0000869e g       .text	00000008 USBCDC_handleDataReceived
0000b114 g       .text	00000000 .hidden __mspabi_srli_7
0000b16e g       .text	00000000 .hidden __mspabi_srll_7
0000b186 g       .text	00000000 .hidden __mspabi_srll_3
0000861e g       .text	00000052 USBCDC_receiveDataInBuffer
0000896a g       .text	00000006 USB_getVersion
0000a898 g       .text	00000008 UCS_turnOffXT2
0000aafe g       .text	00000016 PMM_disableSvmH
00009fd0 g       .text	00000016 WDT_A_resetTimer
0000b26a g     O .text	00000000 .hidden __TMC_END__
0000b14a g       .text	00000000 .hidden __mspabi_srll_13
00002554 g     O .bss	00000008 abUsbRequestReturnData
0000821e g     O .rodata	00000000 .hidden __DTOR_END__
00002516 g     O .bss	00000001 bCDCDataReceived_event
0000a00e g       .text	0000001e GPIO_setAsOutputPin
00008214 g       .rodata	00000000 __fini_array_end
0000aa64 g       .text	00000016 PMM_enableSvsL
0000b100 g       .text	00000000 .hidden __mspabi_srli_12
0000a312 g       .text	0000000a DMA_clearInterrupt
000099be g       .text	00000132 CdcToBufferFromHost
00008220 g     F .text	00000004 __crt0_start
0000a356 g       .text	00000006 SFR_enableInterrupt
00002370 g       *ABS*	00000000 abOEP0Buffer
0000b0ba g       .text	00000000 .hidden __mspabi_slll_11
0000b0aa g       .text	00000000 .hidden __mspabi_slll_15
00008fc2 g       .text	0000002c usbSetConfiguration
0000b082 g       .text	00000000 .hidden __mspabi_slli_14
0000abc0 g       .text	00000016 PMM_enableSvsHReset
0000ac18 g       .text	00000014 PMM_clearPMMIFGS
0000b096 g       .text	00000000 .hidden __mspabi_slli_4
00008224 g     F .text	0000000e __crt0_init_bss
00009374 g       .text	00000038 USB_setup
00000186 g       *ABS*	00000000 __bsssize
0000b0de g       .text	00000000 .hidden __mspabi_slll_2
00008672 g       .text	00000014 USB_handleVbusOnEvent
0000b1a8 g     F .text	00000014 .hidden __mulhi2_f5
000086aa g       .text	00000004 USBCDC_handleReceiveCompleted
0000aad2 g       .text	00000016 PMM_disableSvsH
00008fa0 g       .text	00000024 usbSetAddress
00008ec6 g       .text	0000001e usbGetInterface
00008cfa g       .text	00000072 usbSendNextPacketOnIEP0
00008246 g     F .text	0000000a __crt0_call_init_then_main
00009124 g       .text	0000001a usbDisableOutEndpointInterrupt
00009b56 g       .text	00000082 USBCDC_rejectData
0000b0a4 g       .text	00000000 .hidden __mspabi_slli
0000ab14 g       .text	00000016 PMM_enableSvsLSvmL
0000a2dc g       .text	0000000c DMA_disableTransfers
0000ab6c g       .text	00000016 PMM_enableSvsLReset
00008e48 g       .text	00000016 usbGetDeviceDescriptor
000087d6 g       .text	0000001e IEP0InterruptHandler
00009144 g       .text	000000dc USB_determineFreq
0000b17a g       .text	00000000 .hidden __mspabi_srll_5
0000aa0c g       .text	0000001e UCS_getSMCLK
0000aef0 g       .text	00000006 PMM_getInterruptStatus
0000b138 g       .text	00000000 .hidden __mspabi_srli
0000ac6c g       .text	00000020 PMM_disableSvsLInLPMFastWake
0000a58e g       .text	00000012 UCS_setExternalClockSource
00002402 g     O .data	00000002 VERSION
0000944a g       .text	00000046 USB_initMemcpy
0000a2e8 g       .text	0000000a DMA_startTransfer
0000aae8 g       .text	00000016 PMM_enableSvmH
000096e2 g       .text	00000044 USBCDC_abortSend
0000a6ac g       .text	0000003e UCS_bypassXT1
0000a0c0 g       .text	0000001a GPIO_toggleOutputOnPin
0000b156 g       .text	00000000 .hidden __mspabi_srll_11
0000a86e g       .text	0000002c UCS_bypassXT2WithTimeout
00009082 g       .text	00000086 usbDecodeAndProcessUsbRequest
0000b0d2 g       .text	00000000 .hidden __mspabi_slll_5
00009bd6 g       .text	000000b2 USBCDC_getInterfaceStatus
0000a5a0 g       .text	000000a8 UCS_initClockSignal
0000b088 g       .text	00000000 .hidden __mspabi_slli_11
000086b6 g       .text	00000048 SetupPacketInterruptHandler
0000ace2 g       .text	00000016 PMM_disableSvsHInLPMNormPerf
0000b098 g       .text	00000000 .hidden __mspabi_slli_3
0000255c g     O .bss	00000022 abramSerialStringDescriptor
0000b1bc g     F .text	00000020 .hidden __mulsi2_f5
0000b11c g       .text	00000000 .hidden __mspabi_srli_5
00009e86 g       .text	0000004c TLV_getMemory
00008bde g       .text	0000003a USB_getConnectionInformation
0000257e g     O .bss	00000002 wUsbEventMask
0000a328 g       .text	0000000a DMA_clearNMIAbort
00000000  w      *UND*	00000000 __deregister_frame_info
0000a6e6 g       .text	0000004c UCS_turnOnLFXT1WithTimeout
0000258a g       .MP430.attributes	00000000 end
00008f0e g       .text	0000001e usbGetInterfaceStatus
00008a4a g       .text	00000138 USB_reset
00008e74 g       .text	0000005a usbGetStringDescriptor
0000817e g     O .rodata	00000043 abromConfigurationDescriptorGroup
0000a1e6 g       .text	0000002a GPIO_setDriveStrength
0000a050 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionOutputPin
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000a77c g       .text	0000005a UCS_bypassXT1WithTimeout
0000b09a g       .text	00000000 .hidden __mspabi_slli_2
00009f44 g       .text	00000066 TLV_getInterrupt
0000a63c g       .text	0000003a UCS_turnOnLFXT1
00008fec g       .text	0000001a usbClearDeviceFeature
0000a2fc g       .text	0000000a DMA_disableInterrupt
0000b174 g       .text	00000000 .hidden __mspabi_srll_6
0000a9ca g       .text	00000006 UCS_enableClockRequest
000081c1 g     O .rodata	00000012 abromDeviceDescriptor
00008cdc g       .text	0000000e usbStallEndpoint0
0000af80 g       .text	00000082 .hidden udivmodsi4
00009fa6 g       .text	00000018 WDT_A_hold
0000a350 g       .text	00000006 DMA_disableNMIAbort
00002580 g     O .bss	00000002 wBytesRemainingOnIEP0
0000ab98 g       .text	00000014 PMM_enableSvmLInterrupt
0000a338 g       .text	00000006 DMA_enableTransferDuringReadModifyWrite
0000a7d8 g       .text	00000036 UCS_turnOnXT2
0000b0ce g       .text	00000000 .hidden __mspabi_slll_6
0000ad2e g       .text	00000016 PMM_optimizeSvsHInLPMFullPerf
00008000 g     O .rodata	000000e4 tUsbRequestList
0000a9e2 g       .text	00000006 UCS_turnOffSMCLK
0000aa7a g       .text	00000016 PMM_disableSvsL
0000b0d6 g       .text	00000000 .hidden __mspabi_slll_4
0000954c g       .text	0000019c CdcToHostFromBuffer
0000b0c6 g       .text	00000000 .hidden __mspabi_slll_8
00008268 g     F .text	00000000 _msp430_run_fini_array
00002582 g     O .bss	00000002 wBytesRemainingOnOEP0
0000b12c g       .text	00000000 .hidden __mspabi_srli_1
00008696 g       .text	00000004 USB_handleResumeEvent
0000b144 g       .text	00000000 .hidden __mspabi_srll_14
0000b092 g       .text	00000000 .hidden __mspabi_slli_6
00009212 g       .text	00000084 USB_init
00008cea g       .text	00000006 usbClearOEP0ByteCount
00008770 g       .text	0000006a PWRVBUSonHandler
0000a33e g       .text	00000006 DMA_enableRoundRobinPriority
00009074 g       .text	0000000e usbInvalidRequest
0000b0f8 g       .text	00000000 .hidden __mspabi_srli_14
0000aaa6 g       .text	00000016 PMM_disableSvmL
00000004 g       *ABS*	00000000 __romdatacopysize
0000a9dc g       .text	00000006 UCS_clearFaultFlag
00009b04 g       .text	00000052 USBCDC_abortReceive
000083f2 g       .text	0000004e UNMI_ISR
0000a368 g       .text	00000006 SFR_clearInterrupt
00002416 g     O .bss	00000100 dataBuffer
000023c8 g       *ABS*	00000000 tInputEndPointDescriptorBlock
00000920 g       *ABS*	00000000 tEndPoint0DescriptorBlock
0000a344 g       .text	00000006 DMA_disableRoundRobinPriority
000086a6 g       .text	00000004 USBCDC_handleSendCompleted
0000b0ae g       .text	00000000 .hidden __mspabi_slll_14
00009ece g       .text	0000007c TLV_getPeripheral
00009ae8 g       .text	0000001c CdcIsReceiveInProgress
0000b104 g       .text	00000000 .hidden __mspabi_srli_11
0000b0ca g       .text	00000000 .hidden __mspabi_slll_7
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008214 g       .rodata	00000000 __fini_array_start
0000a186 g       .text	0000001c GPIO_getInterruptStatus
000093e6 g       .text	00000064 memcpyDMA
00008590 g       .text	00000094 USBCDC_sendDataInBackground
0000a36e g       .text	00000010 SFR_setResetPinPullResistor
00008826 g       .text	00000162 iUsbInterruptHandler
0000af32 g       .text	0000004c .hidden __mspabi_divi
00009796 g       .text	0000023a USBCDC_receiveData
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000a274 g       .text	0000002c DMA_setSrcAddress
000080f4 g     O .rodata	0000008a abromStringDescriptor
0000b24e g       .text	00000000 __msp430_init
0000ad18 g       .text	00000016 PMM_optimizeSvsLInLPMFastWake
0000b1dc g       .text	00000014 memset
0000b0b6 g       .text	00000000 .hidden __mspabi_slll_12
0000834c g       .text	000000ae main
0000a674 g       .text	0000003a UCS_turnOnHFXT1
00009fe6 g       .text	00000014 WDT_A_initWatchdogTimer
0000a06e g       .text	0000001e GPIO_setAsPeripheralModuleFunctionInputPin
0000affe g       .text	0000007a .hidden __mspabi_divli
00009062 g       .text	00000012 usbSetInterface
0000b180 g       .text	00000000 .hidden __mspabi_srll_4
00008214 g       .rodata	00000000 __init_array_end
0000b128 g       .text	00000000 .hidden __mspabi_srli_2
0000aa2a g       .text	00000016 UCS_getMCLK
0000b09c g       .text	00000000 .hidden __mspabi_slli_1
0000a990 g       .text	0000003c UCS_initFLLSettle
00009da2 g       .text	00000082 Handler_SetLineCoding
0000af78 g       .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
00008e5e g       .text	00000016 usbGetConfigurationDescriptor
0000a306 g       .text	0000000c DMA_getInterruptStatus
0000a1a2 g       .text	0000001a GPIO_clearInterrupt
0000b0da g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000b26a g       .text	00000000 __msp430_fini_end
0000913e g       .text	00000006 usbRestoreOutEndpointInterrupt
00002584 g     O .bss	00000001 bStatusAction
00008686 g       .text	00000008 USB_handleVbusOffEvent
0000b150 g       .text	00000000 .hidden __mspabi_srll_12
00008b82 g       .text	0000001a USB_connect
0000b094 g       .text	00000000 .hidden __mspabi_slli_5
00008ee4 g       .text	0000002a usbGetDeviceStatus
0000b26a g       *ABS*	00000000 __romdatastart
00008d62 g       .text	00000024 usbSendDataPacketOnEP0
00002586 g     O .bss	00000002 USB_RX_memcpy
0000b084 g       .text	00000000 .hidden __mspabi_slli_13
00009e80 g       .text	00000006 TLV_getDeviceType
0000a20e g       .text	00000054 DMA_init
00002518 g     O .bss	00000001 bEnumerationStatus
00008250 g     F .text	00000000 _msp430_run_init_array
0000b118 g       .text	00000000 .hidden __mspabi_srli_6
0000aa90 g       .text	00000016 PMM_enableSvmL
0000a34a g       .text	00000006 DMA_enableNMIAbort
00008214 g       .rodata	00000000 __preinit_array_end
00008dd2 g       .text	00000014 usbReceiveDataPacketOnEP0
0000b08a g       .text	00000000 .hidden __mspabi_slli_10
00008a3c g       .text	00000008 USB_setEnabledEvents
0000ac02 g       .text	00000016 PMM_disableSvmHInterrupt
0000aea6 g       .text	0000004e PMM_setVCore
0000b124 g       .text	00000000 .hidden __mspabi_srli_3
00009292 g       .text	000000ec USB_enable
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
0000ae12 g       .text	00000094 PMM_setVCoreDown
00002404 g       .bss	00000000 __bssstart
00002380 g       *ABS*	00000000 tSetupPacket
0000aabc g       .text	00000016 PMM_enableSvsH
0000a9ee g       .text	0000001e UCS_getACLK
00002519 g     O .bss	00000001 bFunctionSuspended
0000b0ee g       .text	00000000 .hidden __mspabi_slll
0000ac8c g       .text	00000016 PMM_disableSvsLInLPMSlowWake
0000ac4c g       .text	00000020 PMM_enableSvsLInLPMSlowWake
00008e34 g       .text	00000014 usbGetConfiguration
00003400 g       .MP430.attributes	00000000 __stack
0000b162 g       .text	00000000 .hidden __mspabi_srll_9
0000a824 g       .text	0000004c UCS_turnOnXT2WithTimeout
0000a0da g       .text	0000002a GPIO_setAsInputPinWithPullDownResistor
000086b2 g       .text	00000004 USBCDC_handleSetControlLineState
000094c0 g       .text	00000092 USBCDC_sendData
00002404 g       .data	00000000 _edata
0000abd6 g       .text	00000016 PMM_disableSvsHReset
0000b260 g       .text	00000000 __msp430_init_end
000086fa g       .text	0000007a PWRVBUSoffHandler
0000b1a2 g       .text	00000000 .hidden __mspabi_srll
0000acf8 g       .text	00000020 PMM_disableSvsHInLPMFullPerf
000086ae g       .text	00000004 USBCDC_handleSetLineCoding
0000ab56 g       .text	00000016 PMM_disableSvsHSvmH
00009c86 g       .text	00000082 USBCDC_getBytesInUSBBuffer
00000000  w      *ABS*	00000000 __high_bssstart
0000b08e g       .text	00000000 .hidden __mspabi_slli_8
0000b13e g       .text	00000000 .hidden __mspabi_srll_15
000093ac g       .text	00000018 USB_resume
0000a2f2 g       .text	0000000a DMA_enableInterrupt
0000a12e g       .text	00000024 GPIO_getInputPinValue
0000acc2 g       .text	00000020 PMM_enableSvsHInLPMFullPerf
0000abac g       .text	00000014 PMM_disableSvmLInterrupt
00009d7e g       .text	0000000c usbSetLineCoding
0000a9d0 g       .text	00000006 UCS_disableClockRequest
0000b0be g       .text	00000000 .hidden __mspabi_slll_10
00008a44 g       .text	00000006 USB_getEnabledEvents
0000b080 g       .text	00000000 .hidden __mspabi_slli_15
0000aca2 g       .text	00000020 PMM_enableSvsHInLPMNormPerf
00009fbe g       .text	00000012 WDT_A_start
00008214 g       .rodata	00000000 __init_array_start
000080e4 g     O .rodata	00000010 stUsbHandle
00008bbe g       .text	00000024 USB_forceRemoteWakeup
00009726 g       .text	00000072 CopyUsbToBuff
0000a35c g       .text	00000006 SFR_disableInterrupt
0000a80c g       .text	0000001a UCS_bypassXT2
0000869a g       .text	00000004 USB_handleEnumerationCompleteEvent
0000ab82 g       .text	00000016 PMM_disableSvsLReset
0000ac2c g       .text	00000020 PMM_enableSvsLInLPMFastWake
00009104 g       .text	0000001a usbDisableInEndpointInterrupt
0000b072 g       .text	0000000e .hidden __mspabi_divlu
0000a02c g       .text	00000024 GPIO_setAsInputPin
0000b0fc g       .text	00000000 .hidden __mspabi_srli_13
0000911e g       .text	00000006 usbRestoreInEndpointInterrupt
00002400 g       .data	00000000 __datastart
0000b0e2 g       .text	00000000 .hidden __mspabi_slll_1
0000aa40 g       .text	00000024 UCS_clearAllOscFlagsWithTimeout
0000b168 g       .text	00000000 .hidden __mspabi_srll_8
00009d04 g       .text	0000007a usbGetLineCoding
0000b192 g       .text	00000000 .hidden __mspabi_srll_1
0000a9d6 g       .text	00000006 UCS_getFaultFlagStatus
00000000  w      *UND*	00000000 _Jv_RegisterClasses
0000a0a6 g       .text	0000001a GPIO_setOutputLowOnPin
0000b090 g       .text	00000000 .hidden __mspabi_slli_7
00008214 g       .rodata	00000000 __preinit_array_start
00008232 g     F .text	00000014 __crt0_movedata
0000a26a g       .text	0000000a DMA_getTransferSize
00000000  w      *UND*	00000000 __register_frame_info
00008970 g       .text	000000b6 USB_InitSerialStringDescriptor
0000825c g     F .text	00000000 _msp430_run_preinit_array
00008a1a g       .text	00000022 USB_disable
00008692 g       .text	00000004 USB_handleSuspendEvent
0000b18c g       .text	00000000 .hidden __mspabi_srll_2
00002588 g     O .bss	00000002 USB_TX_memcpy
0000866e g       .text	00000004 USB_handleClockEvent
00009d8a g       .text	00000018 usbSetControlLineState
0000b260 g       .text	00000000 __msp430_fini
0000b110 g       .text	00000000 .hidden __mspabi_srli_8
00008506 g       .text	00000092 USBCDC_sendDataAndWaitTillDone
00008de6 g       .text	0000000e usbSendZeroLengthPacketOnIEP0
0000a332 g       .text	00000006 DMA_disableTransferDuringReadModifyWrite



Disassembly of section __interrupt_vector_52:

0000ffe6 <__interrupt_vector_52>:
    ffe6:	26 88       	interrupt service routine at 0x8826

Disassembly of section __interrupt_vector_62:

0000fffa <__interrupt_vector_62>:
    fffa:	f2 83       	interrupt service routine at 0x83f2

Disassembly of section .text:

00008220 <__crt0_start>:
    8220:	31 40 00 34 	mov	#13312,	r1	;#0x3400

00008224 <__crt0_init_bss>:
    8224:	3c 40 04 24 	mov	#9220,	r12	;#0x2404
    8228:	0d 43       	clr	r13		;
    822a:	3e 40 86 01 	mov	#390,	r14	;#0x0186
    822e:	b0 12 dc b1 	call	#45532		;#0xb1dc

00008232 <__crt0_movedata>:
    8232:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8236:	3d 40 6a b2 	mov	#45674,	r13	;#0xb26a
    823a:	0d 9c       	cmp	r12,	r13	;
    823c:	04 24       	jz	$+10     	;abs 0x8246
    823e:	3e 40 04 00 	mov	#4,	r14	;
    8242:	b0 12 ee b1 	call	#45550		;#0xb1ee

00008246 <__crt0_call_init_then_main>:
    8246:	b0 12 4e b2 	call	#45646		;#0xb24e
    824a:	0c 43       	clr	r12		;
    824c:	b0 12 4c 83 	call	#33612		;#0x834c

00008250 <_msp430_run_init_array>:
    8250:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8254:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8258:	26 43       	mov	#2,	r6	;r3 As==10
    825a:	0d 3c       	jmp	$+28     	;abs 0x8276

0000825c <_msp430_run_preinit_array>:
    825c:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8260:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8264:	26 43       	mov	#2,	r6	;r3 As==10
    8266:	07 3c       	jmp	$+16     	;abs 0x8276

00008268 <_msp430_run_fini_array>:
    8268:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    826c:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8270:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    8274:	00 3c       	jmp	$+2      	;abs 0x8276

00008276 <_msp430_run_array>:
    8276:	05 94       	cmp	r4,	r5	;
    8278:	05 24       	jz	$+12     	;abs 0x8284
    827a:	27 44       	mov	@r4,	r7	;
    827c:	04 56       	add	r6,	r4	;
    827e:	a7 12       	call	@r7		;
    8280:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x8276

00008284 <_msp430_run_done>:
    8284:	30 41       	ret			

00008286 <deregister_tm_clones>:
    8286:	3c 40 6a b2 	mov	#45674,	r12	;#0xb26a
    828a:	3c 80 69 b2 	sub	#45673,	r12	;#0xb269
    828e:	2d 43       	mov	#2,	r13	;r3 As==10
    8290:	0d 9c       	cmp	r12,	r13	;
    8292:	07 2c       	jc	$+16     	;abs 0x82a2
    8294:	3d 40 00 00 	mov	#0,	r13	;
    8298:	0d 93       	cmp	#0,	r13	;r3 As==00
    829a:	03 24       	jz	$+8      	;abs 0x82a2
    829c:	3c 40 6a b2 	mov	#45674,	r12	;#0xb26a
    82a0:	8d 12       	call	r13		;
    82a2:	30 41       	ret			

000082a4 <register_tm_clones>:
    82a4:	3d 40 6a b2 	mov	#45674,	r13	;#0xb26a
    82a8:	3d 80 6a b2 	sub	#45674,	r13	;#0xb26a
    82ac:	0d 11       	rra	r13		;
    82ae:	0c 4d       	mov	r13,	r12	;
    82b0:	5c 03       	rrum	#1,	r12	;
    82b2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    82b6:	0d 5c       	add	r12,	r13	;
    82b8:	0d 11       	rra	r13		;
    82ba:	0d 93       	cmp	#0,	r13	;r3 As==00
    82bc:	07 24       	jz	$+16     	;abs 0x82cc
    82be:	3e 40 00 00 	mov	#0,	r14	;
    82c2:	0e 93       	cmp	#0,	r14	;r3 As==00
    82c4:	03 24       	jz	$+8      	;abs 0x82cc
    82c6:	3c 40 6a b2 	mov	#45674,	r12	;#0xb26a
    82ca:	8e 12       	call	r14		;
    82cc:	30 41       	ret			

000082ce <__do_global_dtors_aux>:
    82ce:	0a 15       	pushm	#1,	r10	;16-bit words
    82d0:	c2 93 04 24 	cmp.b	#0,	&0x2404	;r3 As==00
    82d4:	20 20       	jnz	$+66     	;abs 0x8316
    82d6:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82da:	3a 40 1e 82 	mov	#33310,	r10	;#0x821e
    82de:	3a 80 1c 82 	sub	#33308,	r10	;#0x821c
    82e2:	0a 11       	rra	r10		;
    82e4:	3a 53       	add	#-1,	r10	;r3 As==11
    82e6:	0c 9a       	cmp	r10,	r12	;
    82e8:	0b 2c       	jc	$+24     	;abs 0x8300
    82ea:	1c 53       	inc	r12		;
    82ec:	82 4c 06 24 	mov	r12,	&0x2406	;
    82f0:	0c 5c       	rla	r12		;
    82f2:	1c 4c 1c 82 	mov	-32228(r12),r12	;0xffff821c
    82f6:	8c 12       	call	r12		;
    82f8:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82fc:	0c 9a       	cmp	r10,	r12	;
    82fe:	f5 2b       	jnc	$-20     	;abs 0x82ea
    8300:	b0 12 86 82 	call	#33414		;#0x8286
    8304:	3d 40 00 00 	mov	#0,	r13	;
    8308:	0d 93       	cmp	#0,	r13	;r3 As==00
    830a:	03 24       	jz	$+8      	;abs 0x8312
    830c:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8310:	8d 12       	call	r13		;
    8312:	d2 43 04 24 	mov.b	#1,	&0x2404	;r3 As==01
    8316:	0a 17       	popm	#1,	r10	;16-bit words
    8318:	30 41       	ret			

0000831a <call___do_global_dtors_aux>:
    831a:	30 41       	ret			

0000831c <frame_dummy>:
    831c:	3e 40 00 00 	mov	#0,	r14	;
    8320:	0e 93       	cmp	#0,	r14	;r3 As==00
    8322:	05 24       	jz	$+12     	;abs 0x832e
    8324:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8328:	3d 40 08 24 	mov	#9224,	r13	;#0x2408
    832c:	8e 12       	call	r14		;
    832e:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8332:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    8336:	03 20       	jnz	$+8      	;abs 0x833e
    8338:	b0 12 a4 82 	call	#33444		;#0x82a4
    833c:	30 41       	ret			
    833e:	3d 40 00 00 	mov	#0,	r13	;
    8342:	0d 93       	cmp	#0,	r13	;r3 As==00
    8344:	f9 27       	jz	$-12     	;abs 0x8338
    8346:	8d 12       	call	r13		;
    8348:	f7 3f       	jmp	$-16     	;abs 0x8338

0000834a <call_frame_dummy>:
    834a:	30 41       	ret			

0000834c <main>:
    834c:	2a 15       	pushm	#3,	r10	;16-bit words
    834e:	21 83       	decd	r1		;
    8350:	3c 40 50 01 	mov	#336,	r12	;#0x0150
    8354:	b0 12 a6 9f 	call	#40870		;#0x9fa6
    8358:	6c 43       	mov.b	#2,	r12	;r3 As==10
    835a:	b0 12 a6 ae 	call	#44710		;#0xaea6
    835e:	b0 12 3a 84 	call	#33850		;#0x843a
    8362:	3c 40 00 36 	mov	#13824,	r12	;#0x3600
    8366:	3d 40 6e 01 	mov	#366,	r13	;#0x016e
    836a:	b0 12 c8 84 	call	#33992		;#0x84c8
    836e:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8370:	4d 4c       	mov.b	r12,	r13	;
    8372:	b0 12 74 93 	call	#37748		;#0x9374
    8376:	32 d2       	eint			
    8378:	03 43       	nop			
    837a:	3a 40 16 8c 	mov	#35862,	r10	;#0x8c16
    837e:	39 40 86 9c 	mov	#40070,	r9	;#0x9c86
    8382:	38 40 1e 86 	mov	#34334,	r8	;#0x861e
    8386:	8a 12       	call	r10		;
    8388:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    838c:	0f 24       	jz	$+32     	;abs 0x83ac
    838e:	7d 40 83 ff 	mov.b	#65411,	r13	;#0xff83
    8392:	4d 9c       	cmp.b	r12,	r13	;
    8394:	04 28       	jnc	$+10     	;abs 0x839e
    8396:	7c 90 80 ff 	cmp.b	#65408,	r12	;#0xff80
    839a:	f5 23       	jnz	$-20     	;abs 0x8386
    839c:	26 3c       	jmp	$+78     	;abs 0x83ea
    839e:	7c 90 84 ff 	cmp.b	#65412,	r12	;#0xff84
    83a2:	23 24       	jz	$+72     	;abs 0x83ea
    83a4:	7c 90 87 ff 	cmp.b	#65415,	r12	;#0xff87
    83a8:	ee 23       	jnz	$-34     	;abs 0x8386
    83aa:	1f 3c       	jmp	$+64     	;abs 0x83ea
    83ac:	32 c2       	dint			
    83ae:	4c 43       	clr.b	r12		;
    83b0:	89 12       	call	r9		;
    83b2:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    83b4:	02 20       	jnz	$+6      	;abs 0x83ba
    83b6:	32 d0 18 00 	bis	#24,	r2	;#0x0018
    83ba:	32 d2       	eint			
    83bc:	03 43       	nop			
    83be:	5c 42 16 25 	mov.b	&0x2516,r12	;0x2516
    83c2:	0c 93       	cmp	#0,	r12	;r3 As==00
    83c4:	e0 27       	jz	$-62     	;abs 0x8386
    83c6:	c2 43 16 25 	mov.b	#0,	&0x2516	;r3 As==00
    83ca:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    83ce:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    83d2:	4e 43       	clr.b	r14		;
    83d4:	88 12       	call	r8		;
    83d6:	0d 4c       	mov	r12,	r13	;
    83d8:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    83dc:	1f 43       	mov	#1,	r15	;r3 As==01
    83de:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    83e2:	4e 43       	clr.b	r14		;
    83e4:	b0 12 90 85 	call	#34192		;#0x8590
    83e8:	ce 3f       	jmp	$-98     	;abs 0x8386
    83ea:	32 d0 d8 00 	bis	#216,	r2	;#0x00d8
    83ee:	03 43       	nop			
    83f0:	ca 3f       	jmp	$-106    	;abs 0x8386

000083f2 <UNMI_ISR>:
    83f2:	bf 15       	pushm	#12,	r15	;16-bit words
    83f4:	1c 42 9a 01 	mov	&0x019a,r12	;0x019a
    83f8:	2c 92       	cmp	#4,	r12	;r2 As==10
    83fa:	12 24       	jz	$+38     	;abs 0x8420
    83fc:	2d 42       	mov	#4,	r13	;r2 As==10
    83fe:	0d 9c       	cmp	r12,	r13	;
    8400:	05 28       	jnc	$+12     	;abs 0x840c
    8402:	0c 93       	cmp	#0,	r12	;r3 As==00
    8404:	17 24       	jz	$+48     	;abs 0x8434
    8406:	2c 93       	cmp	#2,	r12	;r3 As==10
    8408:	15 24       	jz	$+44     	;abs 0x8434
    840a:	15 3c       	jmp	$+44     	;abs 0x8436
    840c:	3c 90 06 00 	cmp	#6,	r12	;
    8410:	11 24       	jz	$+36     	;abs 0x8434
    8412:	3c 92       	cmp	#8,	r12	;r2 As==11
    8414:	10 20       	jnz	$+34     	;abs 0x8436
    8416:	82 43 98 01 	mov	#0,	&0x0198	;r3 As==00
    841a:	b0 12 1a 8a 	call	#35354		;#0x8a1a
    841e:	0b 3c       	jmp	$+24     	;abs 0x8436
    8420:	3a 40 dc a9 	mov	#43484,	r10	;#0xa9dc
    8424:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8426:	8a 12       	call	r10		;
    8428:	5c 43       	mov.b	#1,	r12	;r3 As==01
    842a:	8a 12       	call	r10		;
    842c:	6c 43       	mov.b	#2,	r12	;r3 As==10
    842e:	b0 12 68 a3 	call	#41832		;#0xa368
    8432:	01 3c       	jmp	$+4      	;abs 0x8436
    8434:	03 43       	nop			
    8436:	b4 17       	popm	#12,	r15	;16-bit words
    8438:	00 13       	reti			

0000843a <USBHAL_initPorts>:
    843a:	1a 15       	pushm	#2,	r10	;16-bit words
    843c:	39 40 a6 a0 	mov	#41126,	r9	;#0xa0a6
    8440:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8442:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8446:	89 12       	call	r9		;
    8448:	3a 40 0e a0 	mov	#40974,	r10	;#0xa00e
    844c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    844e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8452:	8a 12       	call	r10		;
    8454:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8456:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    845a:	89 12       	call	r9		;
    845c:	6c 43       	mov.b	#2,	r12	;r3 As==10
    845e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8462:	8a 12       	call	r10		;
    8464:	7c 40 03 00 	mov.b	#3,	r12	;
    8468:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    846c:	89 12       	call	r9		;
    846e:	7c 40 03 00 	mov.b	#3,	r12	;
    8472:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8476:	8a 12       	call	r10		;
    8478:	6c 42       	mov.b	#4,	r12	;r2 As==10
    847a:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    847e:	89 12       	call	r9		;
    8480:	6c 42       	mov.b	#4,	r12	;r2 As==10
    8482:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8486:	8a 12       	call	r10		;
    8488:	7c 40 05 00 	mov.b	#5,	r12	;
    848c:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8490:	89 12       	call	r9		;
    8492:	7c 40 05 00 	mov.b	#5,	r12	;
    8496:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    849a:	8a 12       	call	r10		;
    849c:	7c 40 06 00 	mov.b	#6,	r12	;
    84a0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84a4:	89 12       	call	r9		;
    84a6:	7c 40 06 00 	mov.b	#6,	r12	;
    84aa:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84ae:	8a 12       	call	r10		;
    84b0:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    84b4:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84b8:	89 12       	call	r9		;
    84ba:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    84be:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    84c2:	8a 12       	call	r10		;
    84c4:	19 17       	popm	#2,	r10	;16-bit words
    84c6:	30 41       	ret			

000084c8 <USBHAL_initClocks>:
    84c8:	2a 15       	pushm	#3,	r10	;16-bit words
    84ca:	08 4c       	mov	r12,	r8	;
    84cc:	09 4d       	mov	r13,	r9	;
    84ce:	3a 40 a0 a5 	mov	#42400,	r10	;#0xa5a0
    84d2:	7c 42       	mov.b	#8,	r12	;r2 As==11
    84d4:	2d 43       	mov	#2,	r13	;r3 As==10
    84d6:	0e 43       	clr	r14		;
    84d8:	8a 12       	call	r10		;
    84da:	5c 43       	mov.b	#1,	r12	;r3 As==01
    84dc:	2d 43       	mov	#2,	r13	;r3 As==10
    84de:	0e 43       	clr	r14		;
    84e0:	8a 12       	call	r10		;
    84e2:	0c 48       	mov	r8,	r12	;
    84e4:	0d 49       	mov	r9,	r13	;
    84e6:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    84ea:	0f 43       	clr	r15		;
    84ec:	b0 12 72 b0 	call	#45170		;#0xb072
    84f0:	0a 4c       	mov	r12,	r10	;
    84f2:	0c 48       	mov	r8,	r12	;
    84f4:	0d 49       	mov	r9,	r13	;
    84f6:	b0 12 3e b1 	call	#45374		;#0xb13e
    84fa:	0d 4c       	mov	r12,	r13	;
    84fc:	0c 4a       	mov	r10,	r12	;
    84fe:	b0 12 90 a9 	call	#43408		;#0xa990
    8502:	28 17       	popm	#3,	r10	;16-bit words
    8504:	30 41       	ret			

00008506 <USBCDC_sendDataAndWaitTillDone>:
    8506:	21 83       	decd	r1		;
    8508:	91 41 02 00 	mov	2(r1),	0(r1)	;
    850c:	00 00 
    850e:	5a 15       	pushm	#6,	r10	;16-bit words
    8510:	21 82       	sub	#4,	r1	;r2 As==10
    8512:	47 4e       	mov.b	r14,	r7	;
    8514:	81 4f 12 00 	mov	r15,	18(r1)	; 0x0012
    8518:	08 4f       	mov	r15,	r8	;
    851a:	19 41 14 00 	mov	20(r1),	r9	;0x00014
    851e:	4e 47       	mov.b	r7,	r14	;
    8520:	b0 12 c0 94 	call	#38080		;#0x94c0
    8524:	4d 4c       	mov.b	r12,	r13	;
    8526:	7c 90 07 00 	cmp.b	#7,	r12	;
    852a:	0a 24       	jz	$+22     	;abs 0x8540
    852c:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    852e:	28 24       	jz	$+82     	;abs 0x8580
    8530:	7c 90 03 00 	cmp.b	#3,	r12	;
    8534:	26 24       	jz	$+78     	;abs 0x8582
    8536:	0a 43       	clr	r10		;
    8538:	05 4a       	mov	r10,	r5	;
    853a:	36 40 d6 9b 	mov	#39894,	r6	;#0x9bd6
    853e:	12 3c       	jmp	$+38     	;abs 0x8564
    8540:	2d 42       	mov	#4,	r13	;r2 As==10
    8542:	1f 3c       	jmp	$+64     	;abs 0x8582
    8544:	0d 4c       	mov	r12,	r13	;
    8546:	1d f3       	and	#1,	r13	;r3 As==01
    8548:	0d 93       	cmp	#0,	r13	;r3 As==00
    854a:	1b 24       	jz	$+56     	;abs 0x8582
    854c:	0c 48       	mov	r8,	r12	;
    854e:	0c d9       	bis	r9,	r12	;
    8550:	0c 93       	cmp	#0,	r12	;r3 As==00
    8552:	08 24       	jz	$+18     	;abs 0x8564
    8554:	0c 4a       	mov	r10,	r12	;
    8556:	1c 53       	inc	r12		;
    8558:	0d 45       	mov	r5,	r13	;
    855a:	0d 63       	adc	r13		;
    855c:	05 99       	cmp	r9,	r5	;
    855e:	0a 2c       	jc	$+22     	;abs 0x8574
    8560:	0a 4c       	mov	r12,	r10	;
    8562:	05 4d       	mov	r13,	r5	;
    8564:	4c 47       	mov.b	r7,	r12	;
    8566:	0d 41       	mov	r1,	r13	;
    8568:	0e 41       	mov	r1,	r14	;
    856a:	2e 53       	incd	r14		;
    856c:	86 12       	call	r6		;
    856e:	3c b2       	bit	#8,	r12	;r2 As==11
    8570:	e9 27       	jz	$-44     	;abs 0x8544
    8572:	06 3c       	jmp	$+14     	;abs 0x8580
    8574:	09 95       	cmp	r5,	r9	;
    8576:	02 20       	jnz	$+6      	;abs 0x857c
    8578:	0a 98       	cmp	r8,	r10	;
    857a:	f2 2b       	jnc	$-26     	;abs 0x8560
    857c:	1d 43       	mov	#1,	r13	;r3 As==01
    857e:	01 3c       	jmp	$+4      	;abs 0x8582
    8580:	2d 43       	mov	#2,	r13	;r3 As==10
    8582:	4c 4d       	mov.b	r13,	r12	;
    8584:	21 52       	add	#4,	r1	;r2 As==10
    8586:	55 17       	popm	#6,	r10	;16-bit words
    8588:	a1 41 02 00 	mov	@r1,	2(r1)	;
    858c:	21 53       	incd	r1		;
    858e:	30 41       	ret			

00008590 <USBCDC_sendDataInBackground>:
    8590:	21 83       	decd	r1		;
    8592:	91 41 02 00 	mov	2(r1),	0(r1)	;
    8596:	00 00 
    8598:	6a 15       	pushm	#7,	r10	;16-bit words
    859a:	31 82       	sub	#8,	r1	;r2 As==11
    859c:	05 4c       	mov	r12,	r5	;
    859e:	81 4d 02 00 	mov	r13,	2(r1)	;
    85a2:	46 4e       	mov.b	r14,	r6	;
    85a4:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018
    85a8:	17 41 1a 00 	mov	26(r1),	r7	;0x0001a
    85ac:	08 43       	clr	r8		;
    85ae:	0a 48       	mov	r8,	r10	;
    85b0:	34 40 d6 9b 	mov	#39894,	r4	;#0x9bd6
    85b4:	4c 46       	mov.b	r6,	r12	;
    85b6:	0d 41       	mov	r1,	r13	;
    85b8:	2d 52       	add	#4,	r13	;r2 As==10
    85ba:	0e 41       	mov	r1,	r14	;
    85bc:	3e 50 06 00 	add	#6,	r14	;
    85c0:	81 4f 00 00 	mov	r15,	0(r1)	;
    85c4:	84 12       	call	r4		;
    85c6:	09 4c       	mov	r12,	r9	;
    85c8:	19 f3       	and	#1,	r9	;r3 As==01
    85ca:	2f 41       	mov	@r1,	r15	;
    85cc:	09 93       	cmp	#0,	r9	;r3 As==00
    85ce:	11 24       	jz	$+36     	;abs 0x85f2
    85d0:	0c 4f       	mov	r15,	r12	;
    85d2:	0c d7       	bis	r7,	r12	;
    85d4:	0c 93       	cmp	#0,	r12	;r3 As==00
    85d6:	ee 27       	jz	$-34     	;abs 0x85b4
    85d8:	0d 48       	mov	r8,	r13	;
    85da:	1d 53       	inc	r13		;
    85dc:	0c 4a       	mov	r10,	r12	;
    85de:	0c 63       	adc	r12		;
    85e0:	07 9a       	cmp	r10,	r7	;
    85e2:	15 28       	jnc	$+44     	;abs 0x860e
    85e4:	0a 97       	cmp	r7,	r10	;
    85e6:	02 20       	jnz	$+6      	;abs 0x85ec
    85e8:	0f 98       	cmp	r8,	r15	;
    85ea:	11 28       	jnc	$+36     	;abs 0x860e
    85ec:	08 4d       	mov	r13,	r8	;
    85ee:	0a 4c       	mov	r12,	r10	;
    85f0:	e1 3f       	jmp	$-60     	;abs 0x85b4
    85f2:	0c 45       	mov	r5,	r12	;
    85f4:	1d 41 02 00 	mov	2(r1),	r13	;
    85f8:	4e 46       	mov.b	r6,	r14	;
    85fa:	b0 12 c0 94 	call	#38080		;#0x94c0
    85fe:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    8600:	07 24       	jz	$+16     	;abs 0x8610
    8602:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    8604:	02 20       	jnz	$+6      	;abs 0x860a
    8606:	29 43       	mov	#2,	r9	;r3 As==10
    8608:	03 3c       	jmp	$+8      	;abs 0x8610
    860a:	29 42       	mov	#4,	r9	;r2 As==10
    860c:	01 3c       	jmp	$+4      	;abs 0x8610
    860e:	19 43       	mov	#1,	r9	;r3 As==01
    8610:	4c 49       	mov.b	r9,	r12	;
    8612:	31 52       	add	#8,	r1	;r2 As==11
    8614:	64 17       	popm	#7,	r10	;16-bit words
    8616:	a1 41 02 00 	mov	@r1,	2(r1)	;
    861a:	21 53       	incd	r1		;
    861c:	30 41       	ret			

0000861e <USBCDC_receiveDataInBuffer>:
    861e:	6a 15       	pushm	#7,	r10	;16-bit words
    8620:	08 4c       	mov	r12,	r8	;
    8622:	06 4d       	mov	r13,	r6	;
    8624:	47 4e       	mov.b	r14,	r7	;
    8626:	09 4c       	mov	r12,	r9	;
    8628:	35 40 86 9c 	mov	#40070,	r5	;#0x9c86
    862c:	34 40 96 97 	mov	#38806,	r4	;#0x9796
    8630:	4c 47       	mov.b	r7,	r12	;
    8632:	85 12       	call	r5		;
    8634:	4a 4c       	mov.b	r12,	r10	;
    8636:	0f 49       	mov	r9,	r15	;
    8638:	0f 88       	sub	r8,	r15	;
    863a:	0c 4f       	mov	r15,	r12	;
    863c:	0a 93       	cmp	#0,	r10	;r3 As==00
    863e:	15 24       	jz	$+44     	;abs 0x866a
    8640:	0c 5a       	add	r10,	r12	;
    8642:	06 9c       	cmp	r12,	r6	;
    8644:	06 28       	jnc	$+14     	;abs 0x8652
    8646:	0c 49       	mov	r9,	r12	;
    8648:	0d 4a       	mov	r10,	r13	;
    864a:	4e 47       	mov.b	r7,	r14	;
    864c:	84 12       	call	r4		;
    864e:	09 5a       	add	r10,	r9	;
    8650:	ef 3f       	jmp	$-32     	;abs 0x8630
    8652:	0f 48       	mov	r8,	r15	;
    8654:	0f 89       	sub	r9,	r15	;
    8656:	0a 4f       	mov	r15,	r10	;
    8658:	0a 56       	add	r6,	r10	;
    865a:	0c 49       	mov	r9,	r12	;
    865c:	0d 4a       	mov	r10,	r13	;
    865e:	4e 47       	mov.b	r7,	r14	;
    8660:	b0 12 96 97 	call	#38806		;#0x9796
    8664:	0a 59       	add	r9,	r10	;
    8666:	0c 4a       	mov	r10,	r12	;
    8668:	0c 88       	sub	r8,	r12	;
    866a:	64 17       	popm	#7,	r10	;16-bit words
    866c:	30 41       	ret			

0000866e <USB_handleClockEvent>:
    866e:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8670:	30 41       	ret			

00008672 <USB_handleVbusOnEvent>:
    8672:	b0 12 92 92 	call	#37522		;#0x9292
    8676:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8678:	04 20       	jnz	$+10     	;abs 0x8682
    867a:	b0 12 4a 8a 	call	#35402		;#0x8a4a
    867e:	b0 12 82 8b 	call	#35714		;#0x8b82
    8682:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8684:	30 41       	ret			

00008686 <USB_handleVbusOffEvent>:
    8686:	b0 12 98 a8 	call	#43160		;#0xa898
    868a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    868c:	30 41       	ret			

0000868e <USB_handleResetEvent>:
    868e:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8690:	30 41       	ret			

00008692 <USB_handleSuspendEvent>:
    8692:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8694:	30 41       	ret			

00008696 <USB_handleResumeEvent>:
    8696:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8698:	30 41       	ret			

0000869a <USB_handleEnumerationCompleteEvent>:
    869a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    869c:	30 41       	ret			

0000869e <USBCDC_handleDataReceived>:
    869e:	d2 43 16 25 	mov.b	#1,	&0x2516	;r3 As==01
    86a2:	5c 43       	mov.b	#1,	r12	;r3 As==01
    86a4:	30 41       	ret			

000086a6 <USBCDC_handleSendCompleted>:
    86a6:	4c 43       	clr.b	r12		;
    86a8:	30 41       	ret			

000086aa <USBCDC_handleReceiveCompleted>:
    86aa:	4c 43       	clr.b	r12		;
    86ac:	30 41       	ret			

000086ae <USBCDC_handleSetLineCoding>:
    86ae:	4c 43       	clr.b	r12		;
    86b0:	30 41       	ret			

000086b2 <USBCDC_handleSetControlLineState>:
    86b2:	4c 43       	clr.b	r12		;
    86b4:	30 41       	ret			

000086b6 <SetupPacketInterruptHandler>:
    86b6:	0a 15       	pushm	#1,	r10	;16-bit words
    86b8:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    86bc:	3c 09 
    86be:	3a 40 82 90 	mov	#36994,	r10	;#0x9082
    86c2:	c2 93 80 23 	cmp.b	#0,	&0x2380	;r3 As==00
    86c6:	03 34       	jge	$+8      	;abs 0x86ce
    86c8:	d2 d3 3c 09 	bis.b	#1,	&0x093c	;r3 As==01
    86cc:	02 3c       	jmp	$+6      	;abs 0x86d2
    86ce:	d2 c3 3c 09 	bic.b	#1,	&0x093c	;r3 As==01
    86d2:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    86d6:	0c 43       	clr	r12		;
    86d8:	cc 43 54 25 	mov.b	#0,	9556(r12);r3 As==00, 0x2554
    86dc:	1c 53       	inc	r12		;
    86de:	3c 92       	cmp	#8,	r12	;r2 As==11
    86e0:	fb 23       	jnz	$-8      	;abs 0x86d8
    86e2:	8a 12       	call	r10		;
    86e4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    86e8:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    86ec:	04 24       	jz	$+10     	;abs 0x86f6
    86ee:	f2 f0 fa ff 	and.b	#65530,	&0x093e	;#0xfffa
    86f2:	3e 09 
    86f4:	e6 3f       	jmp	$-50     	;abs 0x86c2
    86f6:	0a 17       	popm	#1,	r10	;16-bit words
    86f8:	30 41       	ret			

000086fa <PWRVBUSoffHandler>:
    86fa:	21 82       	sub	#4,	r1	;r2 As==10
    86fc:	b0 12 44 91 	call	#37188		;#0x9144
    8700:	0e 4c       	mov	r12,	r14	;
    8702:	5e 0f       	rrum	#4,	r14	;
    8704:	5e 0b       	rrum	#3,	r14	;
    8706:	0d 4c       	mov	r12,	r13	;
    8708:	5d 0f       	rrum	#4,	r13	;
    870a:	5d 07       	rrum	#2,	r13	;
    870c:	0d 5e       	add	r14,	r13	;
    870e:	5c 03       	rrum	#1,	r12	;
    8710:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    8714:	0c 5d       	add	r13,	r12	;
    8716:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    871a:	1d 41 02 00 	mov	2(r1),	r13	;
    871e:	3e 40 03 00 	mov	#3,	r14	;
    8722:	0e 9d       	cmp	r13,	r14	;
    8724:	0c 28       	jnc	$+26     	;abs 0x873e
    8726:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    872a:	2d 41       	mov	@r1,	r13	;
    872c:	0d 9c       	cmp	r12,	r13	;
    872e:	04 2c       	jc	$+10     	;abs 0x8738
    8730:	03 43       	nop			
    8732:	91 53 00 00 	inc	0(r1)		;
    8736:	f9 3f       	jmp	$-12     	;abs 0x872a
    8738:	91 53 02 00 	inc	2(r1)		;
    873c:	ee 3f       	jmp	$-34     	;abs 0x871a
    873e:	1c 42 08 09 	mov	&0x0908,r12	;0x0908
    8742:	3c f2       	and	#8,	r12	;r2 As==11
    8744:	0c 93       	cmp	#0,	r12	;r3 As==00
    8746:	12 20       	jnz	$+38     	;abs 0x876c
    8748:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    874c:	00 09 
    874e:	c2 4c 18 25 	mov.b	r12,	&0x2518	;
    8752:	c2 4c 19 25 	mov.b	r12,	&0x2519	;
    8756:	82 4c 02 09 	mov	r12,	&0x0902	;
    875a:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    875e:	10 09 
    8760:	b2 f0 fb eb 	and	#60411,	&0x0908	;#0xebfb
    8764:	08 09 
    8766:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    876a:	00 09 
    876c:	21 52       	add	#4,	r1	;r2 As==10
    876e:	30 41       	ret			

00008770 <PWRVBUSonHandler>:
    8770:	21 82       	sub	#4,	r1	;r2 As==10
    8772:	b0 12 44 91 	call	#37188		;#0x9144
    8776:	0e 4c       	mov	r12,	r14	;
    8778:	5e 0f       	rrum	#4,	r14	;
    877a:	5e 0b       	rrum	#3,	r14	;
    877c:	0d 4c       	mov	r12,	r13	;
    877e:	5d 0f       	rrum	#4,	r13	;
    8780:	5d 07       	rrum	#2,	r13	;
    8782:	0d 5e       	add	r14,	r13	;
    8784:	5c 03       	rrum	#1,	r12	;
    8786:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    878a:	0c 5d       	add	r13,	r12	;
    878c:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8790:	1d 41 02 00 	mov	2(r1),	r13	;
    8794:	3e 40 03 00 	mov	#3,	r14	;
    8798:	0e 9d       	cmp	r13,	r14	;
    879a:	0c 28       	jnc	$+26     	;abs 0x87b4
    879c:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    87a0:	2d 41       	mov	@r1,	r13	;
    87a2:	0d 9c       	cmp	r12,	r13	;
    87a4:	04 2c       	jc	$+10     	;abs 0x87ae
    87a6:	03 43       	nop			
    87a8:	91 53 00 00 	inc	0(r1)		;
    87ac:	f9 3f       	jmp	$-12     	;abs 0x87a0
    87ae:	91 53 02 00 	inc	2(r1)		;
    87b2:	ee 3f       	jmp	$-34     	;abs 0x8790
    87b4:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    87b8:	0c 24       	jz	$+26     	;abs 0x87d2
    87ba:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    87be:	00 09 
    87c0:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    87c4:	08 09 
    87c6:	b2 f0 f9 ff 	and	#65529,	&0x0908	;#0xfff9
    87ca:	08 09 
    87cc:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    87d0:	00 09 
    87d2:	21 52       	add	#4,	r1	;r2 As==10
    87d4:	30 41       	ret			

000087d6 <IEP0InterruptHandler>:
    87d6:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    87da:	3c 09 
    87dc:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    87e0:	d2 93 84 25 	cmp.b	#1,	&0x2584	;r3 As==01
    87e4:	03 20       	jnz	$+8      	;abs 0x87ec
    87e6:	b0 12 fa 8c 	call	#36090		;#0x8cfa
    87ea:	02 3c       	jmp	$+6      	;abs 0x87f0
    87ec:	f2 d2 20 09 	bis.b	#8,	&0x0920	;r2 As==11
    87f0:	30 41       	ret			

000087f2 <OEP0InterruptHandler>:
    87f2:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    87f6:	3c 09 
    87f8:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    87fc:	e2 93 84 25 	cmp.b	#2,	&0x2584	;r3 As==10
    8800:	0e 20       	jnz	$+30     	;abs 0x881e
    8802:	b0 12 84 8d 	call	#36228		;#0x8d84
    8806:	c2 93 84 25 	cmp.b	#0,	&0x2584	;r3 As==00
    880a:	0b 20       	jnz	$+24     	;abs 0x8822
    880c:	f2 90 20 00 	cmp.b	#32,	&0x2381	;#0x0020
    8810:	81 23 
    8812:	07 20       	jnz	$+16     	;abs 0x8822
    8814:	b0 12 a2 9d 	call	#40354		;#0x9da2
    8818:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    881c:	03 3c       	jmp	$+8      	;abs 0x8824
    881e:	f2 d2 22 09 	bis.b	#8,	&0x0922	;r2 As==11
    8822:	0c 43       	clr	r12		;
    8824:	30 41       	ret			

00008826 <iUsbInterruptHandler>:
    8826:	bf 15       	pushm	#12,	r15	;16-bit words
    8828:	e2 b2 3e 09 	bit.b	#4,	&0x093e	;r2 As==10
    882c:	06 24       	jz	$+14     	;abs 0x883a
    882e:	b0 12 b6 86 	call	#34486		;#0x86b6
    8832:	4a 4c       	mov.b	r12,	r10	;
    8834:	e2 c2 3e 09 	bic.b	#4,	&0x093e	;r2 As==10
    8838:	01 3c       	jmp	$+4      	;abs 0x883c
    883a:	0a 43       	clr	r10		;
    883c:	1d 42 32 09 	mov	&0x0932,r13	;0x0932
    8840:	3d f0 3f 00 	and	#63,	r13	;#0x003f
    8844:	3d 90 14 00 	cmp	#20,	r13	;#0x0014
    8848:	51 24       	jz	$+164    	;abs 0x88ec
    884a:	3c 40 14 00 	mov	#20,	r12	;#0x0014
    884e:	0c 9d       	cmp	r13,	r12	;
    8850:	15 28       	jnc	$+44     	;abs 0x887c
    8852:	3d 90 0a 00 	cmp	#10,	r13	;#0x000a
    8856:	3a 24       	jz	$+118    	;abs 0x88cc
    8858:	3c 40 0a 00 	mov	#10,	r12	;#0x000a
    885c:	0c 9d       	cmp	r13,	r12	;
    885e:	05 28       	jnc	$+12     	;abs 0x886a
    8860:	2d 93       	cmp	#2,	r13	;r3 As==10
    8862:	2c 24       	jz	$+90     	;abs 0x88bc
    8864:	3d 92       	cmp	#8,	r13	;r2 As==11
    8866:	2c 24       	jz	$+90     	;abs 0x88c0
    8868:	78 3c       	jmp	$+242    	;abs 0x895a
    886a:	3d 90 0c 00 	cmp	#12,	r13	;#0x000c
    886e:	36 24       	jz	$+110    	;abs 0x88dc
    8870:	3d 90 12 00 	cmp	#18,	r13	;#0x0012
    8874:	72 20       	jnz	$+230    	;abs 0x895a
    8876:	b0 12 d6 87 	call	#34774		;#0x87d6
    887a:	6f 3c       	jmp	$+224    	;abs 0x895a
    887c:	3d 90 1a 00 	cmp	#26,	r13	;#0x001a
    8880:	49 24       	jz	$+148    	;abs 0x8914
    8882:	3c 40 1a 00 	mov	#26,	r12	;#0x001a
    8886:	0c 9d       	cmp	r13,	r12	;
    8888:	07 28       	jnc	$+16     	;abs 0x8898
    888a:	3d 90 16 00 	cmp	#22,	r13	;#0x0016
    888e:	31 24       	jz	$+100    	;abs 0x88f2
    8890:	3d 90 18 00 	cmp	#24,	r13	;#0x0018
    8894:	36 24       	jz	$+110    	;abs 0x8902
    8896:	61 3c       	jmp	$+196    	;abs 0x895a
    8898:	3d 90 26 00 	cmp	#38,	r13	;#0x0026
    889c:	44 24       	jz	$+138    	;abs 0x8926
    889e:	3d 90 34 00 	cmp	#52,	r13	;#0x0034
    88a2:	45 24       	jz	$+140    	;abs 0x892e
    88a4:	3d 90 20 00 	cmp	#32,	r13	;#0x0020
    88a8:	58 20       	jnz	$+178    	;abs 0x895a
    88aa:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    88ae:	21 09 
    88b0:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    88b4:	23 09 
    88b6:	b0 12 b6 86 	call	#34486		;#0x86b6
    88ba:	4f 3c       	jmp	$+160    	;abs 0x895a
    88bc:	03 43       	nop			
    88be:	4d 3c       	jmp	$+156    	;abs 0x895a
    88c0:	d2 b3 7e 25 	bit.b	#1,	&0x257e	;r3 As==01
    88c4:	4a 24       	jz	$+150    	;abs 0x895a
    88c6:	b0 12 6e 86 	call	#34414		;#0x866e
    88ca:	46 3c       	jmp	$+142    	;abs 0x8958
    88cc:	b0 12 70 87 	call	#34672		;#0x8770
    88d0:	e2 b3 7e 25 	bit.b	#2,	&0x257e	;r3 As==10
    88d4:	42 24       	jz	$+134    	;abs 0x895a
    88d6:	b0 12 72 86 	call	#34418		;#0x8672
    88da:	3e 3c       	jmp	$+126    	;abs 0x8958
    88dc:	b0 12 fa 86 	call	#34554		;#0x86fa
    88e0:	e2 b2 7e 25 	bit.b	#4,	&0x257e	;r2 As==10
    88e4:	3a 24       	jz	$+118    	;abs 0x895a
    88e6:	b0 12 86 86 	call	#34438		;#0x8686
    88ea:	36 3c       	jmp	$+110    	;abs 0x8958
    88ec:	b0 12 f2 87 	call	#34802		;#0x87f2
    88f0:	34 3c       	jmp	$+106    	;abs 0x895a
    88f2:	b0 12 4a 8a 	call	#35402		;#0x8a4a
    88f6:	f2 b2 7e 25 	bit.b	#8,	&0x257e	;r2 As==11
    88fa:	2f 24       	jz	$+96     	;abs 0x895a
    88fc:	b0 12 8e 86 	call	#34446		;#0x868e
    8900:	2b 3c       	jmp	$+88     	;abs 0x8958
    8902:	b0 12 ac 8c 	call	#36012		;#0x8cac
    8906:	f2 b0 10 00 	bit.b	#16,	&0x257e	;#0x0010
    890a:	7e 25 
    890c:	26 24       	jz	$+78     	;abs 0x895a
    890e:	b0 12 92 86 	call	#34450		;#0x8692
    8912:	22 3c       	jmp	$+70     	;abs 0x8958
    8914:	b0 12 ac 93 	call	#37804		;#0x93ac
    8918:	f2 b0 20 00 	bit.b	#32,	&0x257e	;#0x0020
    891c:	7e 25 
    891e:	1f 24       	jz	$+64     	;abs 0x895e
    8920:	b0 12 96 86 	call	#34454		;#0x8696
    8924:	1c 3c       	jmp	$+58     	;abs 0x895e
    8926:	4c 43       	clr.b	r12		;
    8928:	b0 12 4c 95 	call	#38220		;#0x954c
    892c:	15 3c       	jmp	$+44     	;abs 0x8958
    892e:	4c 43       	clr.b	r12		;
    8930:	b0 12 e8 9a 	call	#39656		;#0x9ae8
    8934:	09 4c       	mov	r12,	r9	;
    8936:	0c 93       	cmp	#0,	r12	;r3 As==00
    8938:	0c 20       	jnz	$+26     	;abs 0x8952
    893a:	b0 12 86 9c 	call	#40070		;#0x9c86
    893e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8940:	08 24       	jz	$+18     	;abs 0x8952
    8942:	f2 b0 40 00 	bit.b	#64,	&0x257e	;#0x0040
    8946:	7e 25 
    8948:	08 24       	jz	$+18     	;abs 0x895a
    894a:	4c 49       	mov.b	r9,	r12	;
    894c:	b0 12 9e 86 	call	#34462		;#0x869e
    8950:	03 3c       	jmp	$+8      	;abs 0x8958
    8952:	4c 43       	clr.b	r12		;
    8954:	b0 12 be 99 	call	#39358		;#0x99be
    8958:	4a 4c       	mov.b	r12,	r10	;
    895a:	0a 93       	cmp	#0,	r10	;r3 As==00
    895c:	04 24       	jz	$+10     	;abs 0x8966
    895e:	b1 c0 d0 00 	bic	#208,	24(r1)	;#0x00d0, 0x0018
    8962:	18 00 
    8964:	03 43       	nop			
    8966:	b4 17       	popm	#12,	r15	;16-bit words
    8968:	00 13       	reti			

0000896a <USB_getVersion>:
    896a:	3c 40 02 24 	mov	#9218,	r12	;#0x2402
    896e:	30 41       	ret			

00008970 <USB_InitSerialStringDescriptor>:
    8970:	0a 15       	pushm	#1,	r10	;16-bit words
    8972:	21 82       	sub	#4,	r1	;r2 As==10
    8974:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8978:	f2 40 03 00 	mov.b	#3,	&0x255d	;
    897c:	5d 25 
    897e:	7c 42       	mov.b	#8,	r12	;r2 As==11
    8980:	4d 43       	clr.b	r13		;
    8982:	0e 41       	mov	r1,	r14	;
    8984:	1e 53       	inc	r14		;
    8986:	0f 41       	mov	r1,	r15	;
    8988:	2f 53       	incd	r15		;
    898a:	b0 12 24 9e 	call	#40484		;#0x9e24
    898e:	5c 41 01 00 	mov.b	1(r1),	r12	;
    8992:	0c 93       	cmp	#0,	r12	;r3 As==00
    8994:	04 24       	jz	$+10     	;abs 0x899e
    8996:	3d 40 60 25 	mov	#9568,	r13	;#0x2560
    899a:	0f 43       	clr	r15		;
    899c:	07 3c       	jmp	$+16     	;abs 0x89ac
    899e:	e2 42 5c 25 	mov.b	#4,	&0x255c	;r2 As==10
    89a2:	c2 4c 5e 25 	mov.b	r12,	&0x255e	;
    89a6:	c2 4c 5f 25 	mov.b	r12,	&0x255f	;
    89aa:	34 3c       	jmp	$+106    	;abs 0x8a14
    89ac:	1b 41 02 00 	mov	2(r1),	r11	;
    89b0:	6e 4b       	mov.b	@r11,	r14	;
    89b2:	5e 0f       	rrum	#4,	r14	;
    89b4:	7a 40 09 00 	mov.b	#9,	r10	;
    89b8:	4a 9e       	cmp.b	r14,	r10	;
    89ba:	03 28       	jnc	$+8      	;abs 0x89c2
    89bc:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    89c0:	02 3c       	jmp	$+6      	;abs 0x89c6
    89c2:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    89c6:	cd 4e fe ff 	mov.b	r14,	-2(r13)	; 0xfffe
    89ca:	cd 43 ff ff 	mov.b	#0,	-1(r13)	;r3 As==00, 0xffff
    89ce:	6e 4b       	mov.b	@r11,	r14	;
    89d0:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    89d4:	7a 40 09 00 	mov.b	#9,	r10	;
    89d8:	4a 9e       	cmp.b	r14,	r10	;
    89da:	03 28       	jnc	$+8      	;abs 0x89e2
    89dc:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    89e0:	02 3c       	jmp	$+6      	;abs 0x89e6
    89e2:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    89e6:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    89ea:	cd 43 01 00 	mov.b	#0,	1(r13)	;r3 As==00
    89ee:	4e 4f       	mov.b	r15,	r14	;
    89f0:	5e 53       	inc.b	r14		;
    89f2:	4f 4e       	mov.b	r14,	r15	;
    89f4:	1b 53       	inc	r11		;
    89f6:	81 4b 02 00 	mov	r11,	2(r1)	;
    89fa:	2d 52       	add	#4,	r13	;r2 As==10
    89fc:	4e 9c       	cmp.b	r12,	r14	;
    89fe:	06 20       	jnz	$+14     	;abs 0x8a0c
    8a00:	41 18 0c 5c 	rpt #2 { rlax.w	r12		;
    8a04:	6c 53       	incd.b	r12		;
    8a06:	c2 4c 5c 25 	mov.b	r12,	&0x255c	;
    8a0a:	04 3c       	jmp	$+10     	;abs 0x8a14
    8a0c:	7e 92       	cmp.b	#8,	r14	;r2 As==11
    8a0e:	ce 23       	jnz	$-98     	;abs 0x89ac
    8a10:	0c 4f       	mov	r15,	r12	;
    8a12:	f6 3f       	jmp	$-18     	;abs 0x8a00
    8a14:	21 52       	add	#4,	r1	;r2 As==10
    8a16:	0a 17       	popm	#1,	r10	;16-bit words
    8a18:	30 41       	ret			

00008a1a <USB_disable>:
    8a1a:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8a1e:	00 09 
    8a20:	82 43 02 09 	mov	#0,	&0x0902	;r3 As==00
    8a24:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8a28:	10 09 
    8a2a:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8a2e:	00 09 
    8a30:	c2 43 18 25 	mov.b	#0,	&0x2518	;r3 As==00
    8a34:	c2 43 19 25 	mov.b	#0,	&0x2519	;r3 As==00
    8a38:	4c 43       	clr.b	r12		;
    8a3a:	30 41       	ret			

00008a3c <USB_setEnabledEvents>:
    8a3c:	82 4c 7e 25 	mov	r12,	&0x257e	;
    8a40:	4c 43       	clr.b	r12		;
    8a42:	30 41       	ret			

00008a44 <USB_getEnabledEvents>:
    8a44:	1c 42 7e 25 	mov	&0x257e,r12	;0x257e
    8a48:	30 41       	ret			

00008a4a <USB_reset>:
    8a4a:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8a4e:	00 09 
    8a50:	c2 43 18 25 	mov.b	#0,	&0x2518	;r3 As==00
    8a54:	c2 43 19 25 	mov.b	#0,	&0x2519	;r3 As==00
    8a58:	c2 43 17 25 	mov.b	#0,	&0x2517	;r3 As==00
    8a5c:	c2 43 21 25 	mov.b	#0,	&0x2521	;r3 As==00
    8a60:	c2 43 20 25 	mov.b	#0,	&0x2520	;r3 As==00
    8a64:	c2 43 3c 09 	mov.b	#0,	&0x093c	;r3 As==00
    8a68:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    8a6c:	b2 43 82 25 	mov	#-1,	&0x2582	;r3 As==11
    8a70:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    8a74:	c2 43 3f 09 	mov.b	#0,	&0x093f	;r3 As==00
    8a78:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    8a7c:	21 09 
    8a7e:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    8a82:	23 09 
    8a84:	f2 40 8c ff 	mov.b	#65420,	&0x0920	;#0xff8c
    8a88:	20 09 
    8a8a:	f2 40 8c ff 	mov.b	#65420,	&0x0922	;#0xff8c
    8a8e:	22 09 
    8a90:	f2 40 05 00 	mov.b	#5,	&0x092f	;
    8a94:	2f 09 
    8a96:	f2 40 07 00 	mov.b	#7,	&0x092e	;
    8a9a:	2e 09 
    8a9c:	5c 42 e6 80 	mov.b	&0x80e6,r12	;0x80e6
    8aa0:	0d 4c       	mov	r12,	r13	;
    8aa2:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    8aa6:	0e 4d       	mov	r13,	r14	;
    8aa8:	3e 50 c8 23 	add	#9160,	r14	;#0x23c8
    8aac:	fe 40 94 ff 	mov.b	#65428,	0(r14)	;#0xff94
    8ab0:	00 00 
    8ab2:	1f 42 f0 80 	mov	&0x80f0,r15	;0x80f0
    8ab6:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8aba:	5f 0b       	rrum	#3,	r15	;
    8abc:	ce 4f 01 00 	mov.b	r15,	1(r14)	;
    8ac0:	1f 42 f2 80 	mov	&0x80f2,r15	;0x80f2
    8ac4:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    8ac8:	5f 0b       	rrum	#3,	r15	;
    8aca:	ce 4f 05 00 	mov.b	r15,	5(r14)	;
    8ace:	fe 40 80 ff 	mov.b	#65408,	2(r14)	;#0xff80
    8ad2:	02 00 
    8ad4:	3e 50 06 00 	add	#6,	r14	;
    8ad8:	fe 40 80 ff 	mov.b	#65408,	0(r14)	;#0xff80
    8adc:	00 00 
    8ade:	fe 40 40 00 	mov.b	#64,	1(r14)	;#0x0040
    8ae2:	01 00 
    8ae4:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    8ae8:	fd 40 94 ff 	mov.b	#65428,	0(r13)	;#0xff94
    8aec:	00 00 
    8aee:	1e 42 ec 80 	mov	&0x80ec,r14	;0x80ec
    8af2:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8af6:	5e 0b       	rrum	#3,	r14	;
    8af8:	cd 4e 01 00 	mov.b	r14,	1(r13)	;
    8afc:	1e 42 ee 80 	mov	&0x80ee,r14	;0x80ee
    8b00:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    8b04:	5e 0b       	rrum	#3,	r14	;
    8b06:	cd 4e 05 00 	mov.b	r14,	5(r13)	;
    8b0a:	cd 43 02 00 	mov.b	#0,	2(r13)	;r3 As==00
    8b0e:	3d 50 06 00 	add	#6,	r13	;
    8b12:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    8b16:	fd 40 40 00 	mov.b	#64,	1(r13)	;#0x0040
    8b1a:	01 00 
    8b1c:	e2 93 e7 80 	cmp.b	#2,	&0x80e7	;r3 As==10
    8b20:	21 20       	jnz	$+68     	;abs 0x8b64
    8b22:	3c 53       	add	#-1,	r12	;r3 As==11
    8b24:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8b28:	3c 50 c8 23 	add	#9160,	r12	;#0x23c8
    8b2c:	fc 40 94 ff 	mov.b	#65428,	0(r12)	;#0xff94
    8b30:	00 00 
    8b32:	1d 42 e8 80 	mov	&0x80e8,r13	;0x80e8
    8b36:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8b3a:	5d 0b       	rrum	#3,	r13	;
    8b3c:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    8b40:	1d 42 ea 80 	mov	&0x80ea,r13	;0x80ea
    8b44:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    8b48:	5d 0b       	rrum	#3,	r13	;
    8b4a:	cc 4d 05 00 	mov.b	r13,	5(r12)	;
    8b4e:	fc 40 80 ff 	mov.b	#65408,	2(r12)	;#0xff80
    8b52:	02 00 
    8b54:	3c 50 06 00 	add	#6,	r12	;
    8b58:	fc 40 80 ff 	mov.b	#65408,	0(r12)	;#0xff80
    8b5c:	00 00 
    8b5e:	fc 40 40 00 	mov.b	#64,	1(r12)	;#0x0040
    8b62:	01 00 
    8b64:	b0 12 90 94 	call	#38032		;#0x9490
    8b68:	f2 40 40 00 	mov.b	#64,	&0x093c	;#0x0040
    8b6c:	3c 09 
    8b6e:	c2 43 3e 09 	mov.b	#0,	&0x093e	;r3 As==00
    8b72:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    8b76:	3d 09 
    8b78:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8b7c:	00 09 
    8b7e:	4c 43       	clr.b	r12		;
    8b80:	30 41       	ret			

00008b82 <USB_connect>:
    8b82:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8b86:	00 09 
    8b88:	a2 d3 02 09 	bis	#2,	&0x0902	;r3 As==10
    8b8c:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    8b90:	08 09 
    8b92:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8b96:	00 09 
    8b98:	4c 43       	clr.b	r12		;
    8b9a:	30 41       	ret			

00008b9c <USB_disconnect>:
    8b9c:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8ba0:	00 09 
    8ba2:	a2 c3 02 09 	bic	#2,	&0x0902	;r3 As==10
    8ba6:	b2 f0 ff fb 	and	#64511,	&0x0908	;#0xfbff
    8baa:	08 09 
    8bac:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8bb0:	00 09 
    8bb2:	c2 43 18 25 	mov.b	#0,	&0x2518	;r3 As==00
    8bb6:	c2 43 19 25 	mov.b	#0,	&0x2519	;r3 As==00
    8bba:	4c 43       	clr.b	r12		;
    8bbc:	30 41       	ret			

00008bbe <USB_forceRemoteWakeup>:
    8bbe:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    8bc2:	08 24       	jz	$+18     	;abs 0x8bd4
    8bc4:	d2 93 17 25 	cmp.b	#1,	&0x2517	;r3 As==01
    8bc8:	08 20       	jnz	$+18     	;abs 0x8bda
    8bca:	f2 d0 20 00 	bis.b	#32,	&0x093c	;#0x0020
    8bce:	3c 09 
    8bd0:	0c 43       	clr	r12		;
    8bd2:	04 3c       	jmp	$+10     	;abs 0x8bdc
    8bd4:	3c 40 10 00 	mov	#16,	r12	;#0x0010
    8bd8:	01 3c       	jmp	$+4      	;abs 0x8bdc
    8bda:	1c 43       	mov	#1,	r12	;r3 As==01
    8bdc:	30 41       	ret			

00008bde <USB_getConnectionInformation>:
    8bde:	1d 42 08 09 	mov	&0x0908,r13	;0x0908
    8be2:	5d 0b       	rrum	#3,	r13	;
    8be4:	5d f3       	and.b	#1,	r13	;r3 As==01
    8be6:	4c 4d       	mov.b	r13,	r12	;
    8be8:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    8bec:	03 20       	jnz	$+8      	;abs 0x8bf4
    8bee:	7d d0 20 00 	bis.b	#32,	r13	;#0x0020
    8bf2:	4c 4d       	mov.b	r13,	r12	;
    8bf4:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8bf8:	04 24       	jz	$+10     	;abs 0x8c02
    8bfa:	7c d0 40 00 	bis.b	#64,	r12	;#0x0040
    8bfe:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c02:	d2 93 19 25 	cmp.b	#1,	&0x2519	;r3 As==01
    8c06:	02 20       	jnz	$+6      	;abs 0x8c0c
    8c08:	7c d2       	bis.b	#8,	r12	;r2 As==11
    8c0a:	02 3c       	jmp	$+6      	;abs 0x8c10
    8c0c:	7c d0 10 00 	bis.b	#16,	r12	;#0x0010
    8c10:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8c14:	30 41       	ret			

00008c16 <USB_getConnectionState>:
    8c16:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c1a:	36 24       	jz	$+110    	;abs 0x8c88
    8c1c:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c20:	03 24       	jz	$+8      	;abs 0x8c28
    8c22:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c26:	33 24       	jz	$+104    	;abs 0x8c8e
    8c28:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c2c:	09 24       	jz	$+20     	;abs 0x8c40
    8c2e:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c32:	06 24       	jz	$+14     	;abs 0x8c40
    8c34:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    8c38:	03 20       	jnz	$+8      	;abs 0x8c40
    8c3a:	d2 93 19 25 	cmp.b	#1,	&0x2519	;r3 As==01
    8c3e:	2a 20       	jnz	$+86     	;abs 0x8c94
    8c40:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c44:	09 24       	jz	$+20     	;abs 0x8c58
    8c46:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c4a:	06 24       	jz	$+14     	;abs 0x8c58
    8c4c:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    8c50:	03 24       	jz	$+8      	;abs 0x8c58
    8c52:	d2 93 19 25 	cmp.b	#1,	&0x2519	;r3 As==01
    8c56:	21 24       	jz	$+68     	;abs 0x8c9a
    8c58:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c5c:	09 24       	jz	$+20     	;abs 0x8c70
    8c5e:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c62:	06 24       	jz	$+14     	;abs 0x8c70
    8c64:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    8c68:	03 20       	jnz	$+8      	;abs 0x8c70
    8c6a:	d2 93 19 25 	cmp.b	#1,	&0x2519	;r3 As==01
    8c6e:	18 24       	jz	$+50     	;abs 0x8ca0
    8c70:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    8c74:	18 24       	jz	$+50     	;abs 0x8ca6
    8c76:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    8c7a:	15 24       	jz	$+44     	;abs 0x8ca6
    8c7c:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    8c80:	12 24       	jz	$+38     	;abs 0x8ca6
    8c82:	3c 40 82 00 	mov	#130,	r12	;#0x0082
    8c86:	11 3c       	jmp	$+36     	;abs 0x8caa
    8c88:	3c 40 80 00 	mov	#128,	r12	;#0x0080
    8c8c:	0e 3c       	jmp	$+30     	;abs 0x8caa
    8c8e:	3c 40 81 00 	mov	#129,	r12	;#0x0081
    8c92:	0b 3c       	jmp	$+24     	;abs 0x8caa
    8c94:	3c 40 83 00 	mov	#131,	r12	;#0x0083
    8c98:	08 3c       	jmp	$+18     	;abs 0x8caa
    8c9a:	3c 40 87 00 	mov	#135,	r12	;#0x0087
    8c9e:	05 3c       	jmp	$+12     	;abs 0x8caa
    8ca0:	3c 40 84 00 	mov	#132,	r12	;#0x0084
    8ca4:	02 3c       	jmp	$+6      	;abs 0x8caa
    8ca6:	3c 40 86 00 	mov	#134,	r12	;#0x0086
    8caa:	30 41       	ret			

00008cac <USB_suspend>:
    8cac:	d2 43 19 25 	mov.b	#1,	&0x2519	;r3 As==01
    8cb0:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    8cb4:	00 09 
    8cb6:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    8cba:	3c 09 
    8cbc:	f2 f0 bf ff 	and.b	#65471,	&0x093e	;#0xffbf
    8cc0:	3e 09 
    8cc2:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    8cc6:	10 09 
    8cc8:	b0 12 98 a8 	call	#43160		;#0xa898
    8ccc:	f2 40 20 00 	mov.b	#32,	&0x093d	;#0x0020
    8cd0:	3d 09 
    8cd2:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    8cd6:	00 09 
    8cd8:	4c 43       	clr.b	r12		;
    8cda:	30 41       	ret			

00008cdc <usbStallEndpoint0>:
    8cdc:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8ce0:	fc d2 00 00 	bis.b	#8,	0(r12)	;r2 As==11
    8ce4:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8ce8:	30 41       	ret			

00008cea <usbClearOEP0ByteCount>:
    8cea:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8cee:	30 41       	ret			

00008cf0 <usbStallOEP0>:
    8cf0:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    8cf4:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    8cf8:	30 41       	ret			

00008cfa <usbSendNextPacketOnIEP0>:
    8cfa:	1c 42 80 25 	mov	&0x2580,r12	;0x2580
    8cfe:	3c 93       	cmp	#-1,	r12	;r3 As==11
    8d00:	2d 24       	jz	$+92     	;abs 0x8d5c
    8d02:	3d 42       	mov	#8,	r13	;r2 As==11
    8d04:	0d 9c       	cmp	r12,	r13	;
    8d06:	08 2c       	jc	$+18     	;abs 0x8d18
    8d08:	3c 50 f8 ff 	add	#65528,	r12	;#0xfff8
    8d0c:	82 4c 80 25 	mov	r12,	&0x2580	;
    8d10:	d2 43 84 25 	mov.b	#1,	&0x2584	;r3 As==01
    8d14:	0c 4d       	mov	r13,	r12	;
    8d16:	11 3c       	jmp	$+36     	;abs 0x8d3a
    8d18:	3c 92       	cmp	#8,	r12	;r2 As==11
    8d1a:	03 24       	jz	$+8      	;abs 0x8d22
    8d1c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8d20:	08 3c       	jmp	$+18     	;abs 0x8d32
    8d22:	d2 93 1a 25 	cmp.b	#1,	&0x251a	;r3 As==01
    8d26:	05 20       	jnz	$+12     	;abs 0x8d32
    8d28:	82 43 80 25 	mov	#0,	&0x2580	;r3 As==00
    8d2c:	d2 43 84 25 	mov.b	#1,	&0x2584	;r3 As==01
    8d30:	04 3c       	jmp	$+10     	;abs 0x8d3a
    8d32:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    8d36:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    8d3a:	1e 42 1e 25 	mov	&0x251e,r14	;0x251e
    8d3e:	0d 43       	clr	r13		;
    8d40:	4d 9c       	cmp.b	r12,	r13	;
    8d42:	06 2c       	jc	$+14     	;abs 0x8d50
    8d44:	0f 4e       	mov	r14,	r15	;
    8d46:	0f 5d       	add	r13,	r15	;
    8d48:	ed 4f 78 23 	mov.b	@r15,	9080(r13); 0x2378
    8d4c:	1d 53       	inc	r13		;
    8d4e:	f8 3f       	jmp	$-14     	;abs 0x8d40
    8d50:	0e 5c       	add	r12,	r14	;
    8d52:	82 4e 1e 25 	mov	r14,	&0x251e	;
    8d56:	c2 4c 21 09 	mov.b	r12,	&0x0921	;
    8d5a:	02 3c       	jmp	$+6      	;abs 0x8d60
    8d5c:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    8d60:	30 41       	ret			

00008d62 <usbSendDataPacketOnEP0>:
    8d62:	82 4c 1e 25 	mov	r12,	&0x251e	;
    8d66:	1c 42 86 23 	mov	&0x2386,r12	;0x2386
    8d6a:	82 9c 80 25 	cmp	r12,	&0x2580	;
    8d6e:	05 28       	jnc	$+12     	;abs 0x8d7a
    8d70:	82 4c 80 25 	mov	r12,	&0x2580	;
    8d74:	c2 43 1a 25 	mov.b	#0,	&0x251a	;r3 As==00
    8d78:	02 3c       	jmp	$+6      	;abs 0x8d7e
    8d7a:	d2 43 1a 25 	mov.b	#1,	&0x251a	;r3 As==01
    8d7e:	b0 12 fa 8c 	call	#36090		;#0x8cfa
    8d82:	30 41       	ret			

00008d84 <usbReceiveNextPacketOnOEP0>:
    8d84:	5d 42 23 09 	mov.b	&0x0923,r13	;0x0923
    8d88:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    8d8c:	82 9d 82 25 	cmp	r13,	&0x2582	;
    8d90:	1b 28       	jnc	$+56     	;abs 0x8dc8
    8d92:	1e 42 1c 25 	mov	&0x251c,r14	;0x251c
    8d96:	0c 43       	clr	r12		;
    8d98:	4c 9d       	cmp.b	r13,	r12	;
    8d9a:	07 2c       	jc	$+16     	;abs 0x8daa
    8d9c:	0f 4e       	mov	r14,	r15	;
    8d9e:	0f 5c       	add	r12,	r15	;
    8da0:	df 4c 70 23 	mov.b	9072(r12),0(r15)	;0x02370
    8da4:	00 00 
    8da6:	1c 53       	inc	r12		;
    8da8:	f7 3f       	jmp	$-16     	;abs 0x8d98
    8daa:	0e 5d       	add	r13,	r14	;
    8dac:	82 4e 1c 25 	mov	r14,	&0x251c	;
    8db0:	1c 42 82 25 	mov	&0x2582,r12	;0x2582
    8db4:	0c 8d       	sub	r13,	r12	;
    8db6:	82 4c 82 25 	mov	r12,	&0x2582	;
    8dba:	0c 93       	cmp	#0,	r12	;r3 As==00
    8dbc:	05 24       	jz	$+12     	;abs 0x8dc8
    8dbe:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8dc2:	e2 43 84 25 	mov.b	#2,	&0x2584	;r3 As==10
    8dc6:	04 3c       	jmp	$+10     	;abs 0x8dd0
    8dc8:	b0 12 f0 8c 	call	#36080		;#0x8cf0
    8dcc:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    8dd0:	30 41       	ret			

00008dd2 <usbReceiveDataPacketOnEP0>:
    8dd2:	82 4c 1c 25 	mov	r12,	&0x251c	;
    8dd6:	92 42 86 23 	mov	&0x2386,&0x2582	;0x2386
    8dda:	82 25 
    8ddc:	e2 43 84 25 	mov.b	#2,	&0x2584	;r3 As==10
    8de0:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8de4:	30 41       	ret			

00008de6 <usbSendZeroLengthPacketOnIEP0>:
    8de6:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    8dea:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    8dee:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    8df2:	30 41       	ret			

00008df4 <usbClearEndpointFeature>:
    8df4:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8df8:	4d 4e       	mov.b	r14,	r13	;
    8dfa:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    8dfe:	4c 4d       	mov.b	r13,	r12	;
    8e00:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e02:	03 20       	jnz	$+8      	;abs 0x8e0a
    8e04:	b0 12 e6 8d 	call	#36326		;#0x8de6
    8e08:	13 3c       	jmp	$+40     	;abs 0x8e30
    8e0a:	7d 53       	add.b	#-1,	r13	;r3 As==11
    8e0c:	4c 4d       	mov.b	r13,	r12	;
    8e0e:	7f 40 06 00 	mov.b	#6,	r15	;
    8e12:	4f 9d       	cmp.b	r13,	r15	;
    8e14:	0d 28       	jnc	$+28     	;abs 0x8e30
    8e16:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8e1a:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8e1e:	04 24       	jz	$+10     	;abs 0x8e28
    8e20:	fc f0 d7 ff 	and.b	#65495,	9160(r12);#0xffd7, 0x23c8
    8e24:	c8 23 
    8e26:	ee 3f       	jmp	$-34     	;abs 0x8e04
    8e28:	fc f0 d7 ff 	and.b	#65495,	9096(r12);#0xffd7, 0x2388
    8e2c:	88 23 
    8e2e:	ea 3f       	jmp	$-42     	;abs 0x8e04
    8e30:	4c 43       	clr.b	r12		;
    8e32:	30 41       	ret			

00008e34 <usbGetConfiguration>:
    8e34:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e38:	92 43 80 25 	mov	#1,	&0x2580	;r3 As==01
    8e3c:	3c 40 21 25 	mov	#9505,	r12	;#0x2521
    8e40:	b0 12 62 8d 	call	#36194		;#0x8d62
    8e44:	4c 43       	clr.b	r12		;
    8e46:	30 41       	ret			

00008e48 <usbGetDeviceDescriptor>:
    8e48:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e4c:	b2 40 12 00 	mov	#18,	&0x2580	;#0x0012
    8e50:	80 25 
    8e52:	3c 40 c1 81 	mov	#33217,	r12	;#0x81c1
    8e56:	b0 12 62 8d 	call	#36194		;#0x8d62
    8e5a:	4c 43       	clr.b	r12		;
    8e5c:	30 41       	ret			

00008e5e <usbGetConfigurationDescriptor>:
    8e5e:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e62:	b2 40 43 00 	mov	#67,	&0x2580	;#0x0043
    8e66:	80 25 
    8e68:	3c 40 7e 81 	mov	#33150,	r12	;#0x817e
    8e6c:	b0 12 62 8d 	call	#36194		;#0x8d62
    8e70:	4c 43       	clr.b	r12		;
    8e72:	30 41       	ret			

00008e74 <usbGetStringDescriptor>:
    8e74:	5d 42 82 23 	mov.b	&0x2382,r13	;0x2382
    8e78:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8e7c:	7c 40 05 00 	mov.b	#5,	r12	;
    8e80:	4c 9d       	cmp.b	r13,	r12	;
    8e82:	1d 28       	jnc	$+60     	;abs 0x8ebe
    8e84:	3d 90 03 00 	cmp	#3,	r13	;
    8e88:	02 24       	jz	$+6      	;abs 0x8e8e
    8e8a:	0e 43       	clr	r14		;
    8e8c:	07 3c       	jmp	$+16     	;abs 0x8e9c
    8e8e:	5d 42 5c 25 	mov.b	&0x255c,r13	;0x255c
    8e92:	82 4d 80 25 	mov	r13,	&0x2580	;
    8e96:	3c 40 5c 25 	mov	#9564,	r12	;#0x255c
    8e9a:	0e 3c       	jmp	$+30     	;abs 0x8eb8
    8e9c:	4f 4d       	mov.b	r13,	r15	;
    8e9e:	7f 53       	add.b	#-1,	r15	;r3 As==11
    8ea0:	4d 4f       	mov.b	r15,	r13	;
    8ea2:	0c 4e       	mov	r14,	r12	;
    8ea4:	3c 50 f4 80 	add	#33012,	r12	;#0x80f4
    8ea8:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    8eaa:	03 24       	jz	$+8      	;abs 0x8eb2
    8eac:	6c 4c       	mov.b	@r12,	r12	;
    8eae:	0e 5c       	add	r12,	r14	;
    8eb0:	f5 3f       	jmp	$-20     	;abs 0x8e9c
    8eb2:	6d 4c       	mov.b	@r12,	r13	;
    8eb4:	82 4d 80 25 	mov	r13,	&0x2580	;
    8eb8:	b0 12 62 8d 	call	#36194		;#0x8d62
    8ebc:	02 3c       	jmp	$+6      	;abs 0x8ec2
    8ebe:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    8ec2:	4c 43       	clr.b	r12		;
    8ec4:	30 41       	ret			

00008ec6 <usbGetInterface>:
    8ec6:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8eca:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    8ece:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    8ed2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8ed6:	dc 42 20 25 	mov.b	&0x2520,1(r12)	;0x2520
    8eda:	01 00 
    8edc:	b0 12 62 8d 	call	#36194		;#0x8d62
    8ee0:	4c 43       	clr.b	r12		;
    8ee2:	30 41       	ret			

00008ee4 <usbGetDeviceStatus>:
    8ee4:	f2 b0 40 00 	bit.b	#64,	&0x8185	;#0x0040
    8ee8:	85 81 
    8eea:	02 24       	jz	$+6      	;abs 0x8ef0
    8eec:	d2 43 54 25 	mov.b	#1,	&0x2554	;r3 As==01
    8ef0:	d2 93 17 25 	cmp.b	#1,	&0x2517	;r3 As==01
    8ef4:	02 20       	jnz	$+6      	;abs 0x8efa
    8ef6:	e2 d3 54 25 	bis.b	#2,	&0x2554	;r3 As==10
    8efa:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8efe:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    8f02:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    8f06:	b0 12 62 8d 	call	#36194		;#0x8d62
    8f0a:	4c 43       	clr.b	r12		;
    8f0c:	30 41       	ret			

00008f0e <usbGetInterfaceStatus>:
    8f0e:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f12:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    8f16:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    8f1a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f1e:	dc 42 20 25 	mov.b	&0x2520,1(r12)	;0x2520
    8f22:	01 00 
    8f24:	b0 12 62 8d 	call	#36194		;#0x8d62
    8f28:	4c 43       	clr.b	r12		;
    8f2a:	30 41       	ret			

00008f2c <usbGetEndpointStatus>:
    8f2c:	0a 15       	pushm	#1,	r10	;16-bit words
    8f2e:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    8f32:	4c 4e       	mov.b	r14,	r12	;
    8f34:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    8f38:	4d 4c       	mov.b	r12,	r13	;
    8f3a:	3f 40 62 8d 	mov	#36194,	r15	;#0x8d62
    8f3e:	0d 93       	cmp	#0,	r13	;r3 As==00
    8f40:	0c 20       	jnz	$+26     	;abs 0x8f5a
    8f42:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8f46:	06 24       	jz	$+14     	;abs 0x8f54
    8f48:	5a 42 20 09 	mov.b	&0x0920,r10	;0x0920
    8f4c:	7a f2       	and.b	#8,	r10	;r2 As==11
    8f4e:	c2 4a 54 25 	mov.b	r10,	&0x2554	;
    8f52:	17 3c       	jmp	$+48     	;abs 0x8f82
    8f54:	5c 42 22 09 	mov.b	&0x0922,r12	;0x0922
    8f58:	11 3c       	jmp	$+36     	;abs 0x8f7c
    8f5a:	7c 53       	add.b	#-1,	r12	;r3 As==11
    8f5c:	4d 4c       	mov.b	r12,	r13	;
    8f5e:	7a 40 06 00 	mov.b	#6,	r10	;
    8f62:	4a 9c       	cmp.b	r12,	r10	;
    8f64:	0e 28       	jnc	$+30     	;abs 0x8f82
    8f66:	0c 4d       	mov	r13,	r12	;
    8f68:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    8f6c:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    8f70:	03 24       	jz	$+8      	;abs 0x8f78
    8f72:	5c 4c c8 23 	mov.b	9160(r12),r12	;0x023c8
    8f76:	02 3c       	jmp	$+6      	;abs 0x8f7c
    8f78:	5c 4c 88 23 	mov.b	9096(r12),r12	;0x02388
    8f7c:	7c f2       	and.b	#8,	r12	;r2 As==11
    8f7e:	c2 4c 54 25 	mov.b	r12,	&0x2554	;
    8f82:	5c 42 54 25 	mov.b	&0x2554,r12	;0x2554
    8f86:	5c 0b       	rrum	#3,	r12	;
    8f88:	c2 4c 54 25 	mov.b	r12,	&0x2554	;
    8f8c:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    8f90:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    8f94:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    8f98:	8f 12       	call	r15		;
    8f9a:	4c 43       	clr.b	r12		;
    8f9c:	0a 17       	popm	#1,	r10	;16-bit words
    8f9e:	30 41       	ret			

00008fa0 <usbSetAddress>:
    8fa0:	b0 12 f0 8c 	call	#36080		;#0x8cf0
    8fa4:	1c 42 82 23 	mov	&0x2382,r12	;0x2382
    8fa8:	3d 40 7f 00 	mov	#127,	r13	;#0x007f
    8fac:	0d 9c       	cmp	r12,	r13	;
    8fae:	05 28       	jnc	$+12     	;abs 0x8fba
    8fb0:	c2 4c 3f 09 	mov.b	r12,	&0x093f	;
    8fb4:	b0 12 e6 8d 	call	#36326		;#0x8de6
    8fb8:	02 3c       	jmp	$+6      	;abs 0x8fbe
    8fba:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    8fbe:	4c 43       	clr.b	r12		;
    8fc0:	30 41       	ret			

00008fc2 <usbSetConfiguration>:
    8fc2:	b0 12 f0 8c 	call	#36080		;#0x8cf0
    8fc6:	d2 42 82 23 	mov.b	&0x2382,&0x2521	;0x2382
    8fca:	21 25 
    8fcc:	b0 12 e6 8d 	call	#36326		;#0x8de6
    8fd0:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    8fd4:	07 20       	jnz	$+16     	;abs 0x8fe4
    8fd6:	d2 43 18 25 	mov.b	#1,	&0x2518	;r3 As==01
    8fda:	b0 12 9a 86 	call	#34458		;#0x869a
    8fde:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8fe2:	03 3c       	jmp	$+8      	;abs 0x8fea
    8fe4:	c2 43 18 25 	mov.b	#0,	&0x2518	;r3 As==00
    8fe8:	0c 43       	clr	r12		;
    8fea:	30 41       	ret			

00008fec <usbClearDeviceFeature>:
    8fec:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    8ff0:	05 20       	jnz	$+12     	;abs 0x8ffc
    8ff2:	c2 43 17 25 	mov.b	#0,	&0x2517	;r3 As==00
    8ff6:	b0 12 e6 8d 	call	#36326		;#0x8de6
    8ffa:	02 3c       	jmp	$+6      	;abs 0x9000
    8ffc:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    9000:	4c 43       	clr.b	r12		;
    9002:	30 41       	ret			

00009004 <usbSetDeviceFeature>:
    9004:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9008:	05 20       	jnz	$+12     	;abs 0x9014
    900a:	d2 43 17 25 	mov.b	#1,	&0x2517	;r3 As==01
    900e:	b0 12 e6 8d 	call	#36326		;#0x8de6
    9012:	02 3c       	jmp	$+6      	;abs 0x9018
    9014:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    9018:	4c 43       	clr.b	r12		;
    901a:	30 41       	ret			

0000901c <usbSetEndpointFeature>:
    901c:	82 93 82 23 	cmp	#0,	&0x2382	;r3 As==00
    9020:	1c 20       	jnz	$+58     	;abs 0x905a
    9022:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9026:	4d 4e       	mov.b	r14,	r13	;
    9028:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    902c:	4c 4d       	mov.b	r13,	r12	;
    902e:	0c 93       	cmp	#0,	r12	;r3 As==00
    9030:	03 20       	jnz	$+8      	;abs 0x9038
    9032:	b0 12 e6 8d 	call	#36326		;#0x8de6
    9036:	13 3c       	jmp	$+40     	;abs 0x905e
    9038:	7d 53       	add.b	#-1,	r13	;r3 As==11
    903a:	4c 4d       	mov.b	r13,	r12	;
    903c:	7f 40 06 00 	mov.b	#6,	r15	;
    9040:	4f 9d       	cmp.b	r13,	r15	;
    9042:	0d 28       	jnc	$+28     	;abs 0x905e
    9044:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    9048:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    904c:	03 24       	jz	$+8      	;abs 0x9054
    904e:	fc d2 c8 23 	bis.b	#8,	9160(r12);r2 As==11, 0x23c8
    9052:	ef 3f       	jmp	$-32     	;abs 0x9032
    9054:	fc d2 88 23 	bis.b	#8,	9096(r12);r2 As==11, 0x2388
    9058:	ec 3f       	jmp	$-38     	;abs 0x9032
    905a:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    905e:	4c 43       	clr.b	r12		;
    9060:	30 41       	ret			

00009062 <usbSetInterface>:
    9062:	b0 12 f0 8c 	call	#36080		;#0x8cf0
    9066:	d2 42 84 23 	mov.b	&0x2384,&0x2520	;0x2384
    906a:	20 25 
    906c:	b0 12 e6 8d 	call	#36326		;#0x8de6
    9070:	4c 43       	clr.b	r12		;
    9072:	30 41       	ret			

00009074 <usbInvalidRequest>:
    9074:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9078:	02 20       	jnz	$+6      	;abs 0x907e
    907a:	b0 12 dc 8c 	call	#36060		;#0x8cdc
    907e:	4c 43       	clr.b	r12		;
    9080:	30 41       	ret			

00009082 <usbDecodeAndProcessUsbRequest>:
    9082:	3a 15       	pushm	#4,	r10	;16-bit words
    9084:	5b 42 80 23 	mov.b	&0x2380,r11	;0x2380
    9088:	5a 42 81 23 	mov.b	&0x2381,r10	;0x2381
    908c:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    9090:	49 4b       	mov.b	r11,	r9	;
    9092:	79 f0 7f 00 	and.b	#127,	r9	;#0x007f
    9096:	6e 4c       	mov.b	@r12,	r14	;
    9098:	5d 4c 01 00 	mov.b	1(r12),	r13	;
    909c:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    909e:	02 20       	jnz	$+6      	;abs 0x90a4
    90a0:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    90a2:	24 24       	jz	$+74     	;abs 0x90ec
    90a4:	79 90 40 00 	cmp.b	#64,	r9	;#0x0040
    90a8:	21 24       	jz	$+68     	;abs 0x90ec
    90aa:	0e 9b       	cmp	r11,	r14	;
    90ac:	1c 20       	jnz	$+58     	;abs 0x90e6
    90ae:	0d 9a       	cmp	r10,	r13	;
    90b0:	1a 20       	jnz	$+54     	;abs 0x90e6
    90b2:	08 4c       	mov	r12,	r8	;
    90b4:	28 53       	incd	r8		;
    90b6:	0e 43       	clr	r14		;
    90b8:	3d 40 c0 00 	mov	#192,	r13	;#0x00c0
    90bc:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    90c0:	07 48       	mov	r8,	r7	;
    90c2:	07 5e       	add	r14,	r7	;
    90c4:	ee 97 82 23 	cmp.b	@r7,	9090(r14); 0x2382
    90c8:	03 20       	jnz	$+8      	;abs 0x90d0
    90ca:	4d df       	bis.b	r15,	r13	;
    90cc:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    90d0:	12 c3       	clrc			
    90d2:	0f 10       	rrc	r15		;
    90d4:	1e 53       	inc	r14		;
    90d6:	3e 90 06 00 	cmp	#6,	r14	;
    90da:	f2 23       	jnz	$-26     	;abs 0x90c0
    90dc:	5d fc 08 00 	and.b	8(r12),	r13	;
    90e0:	5d 9c 08 00 	cmp.b	8(r12),	r13	;
    90e4:	03 24       	jz	$+8      	;abs 0x90ec
    90e6:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    90ea:	d5 3f       	jmp	$-84     	;abs 0x9096
    90ec:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    90f0:	06 20       	jnz	$+14     	;abs 0x90fe
    90f2:	1c 4c 0a 00 	mov	10(r12),r12	;0x0000a
    90f6:	8c 12       	call	r12		;
    90f8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    90fc:	01 3c       	jmp	$+4      	;abs 0x9100
    90fe:	0c 43       	clr	r12		;
    9100:	37 17       	popm	#4,	r10	;16-bit words
    9102:	30 41       	ret			

00009104 <usbDisableInEndpointInterrupt>:
    9104:	0a 15       	pushm	#1,	r10	;16-bit words
    9106:	4d 4c       	mov.b	r12,	r13	;
    9108:	5a 42 2e 09 	mov.b	&0x092e,r10	;0x092e
    910c:	1c 43       	mov	#1,	r12	;r3 As==01
    910e:	0d 5c       	add	r12,	r13	;
    9110:	b0 12 a4 b0 	call	#45220		;#0xb0a4
    9114:	c2 cc 2e 09 	bic.b	r12,	&0x092e	;
    9118:	0c fa       	and	r10,	r12	;
    911a:	0a 17       	popm	#1,	r10	;16-bit words
    911c:	30 41       	ret			

0000911e <usbRestoreInEndpointInterrupt>:
    911e:	c2 dc 2e 09 	bis.b	r12,	&0x092e	;
    9122:	30 41       	ret			

00009124 <usbDisableOutEndpointInterrupt>:
    9124:	0a 15       	pushm	#1,	r10	;16-bit words
    9126:	4d 4c       	mov.b	r12,	r13	;
    9128:	5a 42 2f 09 	mov.b	&0x092f,r10	;0x092f
    912c:	1c 43       	mov	#1,	r12	;r3 As==01
    912e:	0d 5c       	add	r12,	r13	;
    9130:	b0 12 a4 b0 	call	#45220		;#0xb0a4
    9134:	c2 cc 2f 09 	bic.b	r12,	&0x092f	;
    9138:	0c fa       	and	r10,	r12	;
    913a:	0a 17       	popm	#1,	r10	;16-bit words
    913c:	30 41       	ret			

0000913e <usbRestoreOutEndpointInterrupt>:
    913e:	c2 dc 2f 09 	bis.b	r12,	&0x092f	;
    9142:	30 41       	ret			

00009144 <USB_determineFreq>:
    9144:	2a 15       	pushm	#3,	r10	;16-bit words
    9146:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    914a:	7c f0 07 00 	and.b	#7,	r12	;
    914e:	6d 42       	mov.b	#4,	r13	;r2 As==10
    9150:	4d 9c       	cmp.b	r12,	r13	;
    9152:	52 28       	jnc	$+166    	;abs 0x91f8
    9154:	5d 42 66 01 	mov.b	&0x0166,r13	;0x0166
    9158:	7d f0 70 00 	and.b	#112,	r13	;#0x0070
    915c:	7e 40 4f 00 	mov.b	#79,	r14	;#0x004f
    9160:	4e 9d       	cmp.b	r13,	r14	;
    9162:	03 2c       	jc	$+8      	;abs 0x916a
    9164:	38 40 c0 5d 	mov	#24000,	r8	;#0x5dc0
    9168:	02 3c       	jmp	$+6      	;abs 0x916e
    916a:	38 40 21 00 	mov	#33,	r8	;#0x0021
    916e:	1a 42 64 01 	mov	&0x0164,r10	;0x0164
    9172:	3a f0 ff 03 	and	#1023,	r10	;#0x03ff
    9176:	1a 53       	inc	r10		;
    9178:	7c 90 03 00 	cmp.b	#3,	r12	;
    917c:	0b 20       	jnz	$+24     	;abs 0x9194
    917e:	1d 42 64 01 	mov	&0x0164,r13	;0x0164
    9182:	3d f0 00 70 	and	#28672,	r13	;#0x7000
    9186:	0c 4a       	mov	r10,	r12	;
    9188:	5d 03       	rrum	#1,	r13	;
    918a:	4a 18 0d 11 	rpt #11 { rrax.w	r13		;
    918e:	b0 12 a4 b0 	call	#45220		;#0xb0a4
    9192:	0a 4c       	mov	r12,	r10	;
    9194:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    9198:	7c f0 07 00 	and.b	#7,	r12	;
    919c:	4d 4c       	mov.b	r12,	r13	;
    919e:	0d 93       	cmp	#0,	r13	;r3 As==00
    91a0:	03 20       	jnz	$+8      	;abs 0x91a8
    91a2:	0c 4a       	mov	r10,	r12	;
    91a4:	0d 48       	mov	r8,	r13	;
    91a6:	1d 3c       	jmp	$+60     	;abs 0x91e2
    91a8:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    91aa:	05 20       	jnz	$+12     	;abs 0x91b6
    91ac:	0c 4a       	mov	r10,	r12	;
    91ae:	0d 48       	mov	r8,	r13	;
    91b0:	12 c3       	clrc			
    91b2:	0d 10       	rrc	r13		;
    91b4:	16 3c       	jmp	$+46     	;abs 0x91e2
    91b6:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    91b8:	04 20       	jnz	$+10     	;abs 0x91c2
    91ba:	0c 4a       	mov	r10,	r12	;
    91bc:	0d 48       	mov	r8,	r13	;
    91be:	5d 07       	rrum	#2,	r13	;
    91c0:	10 3c       	jmp	$+34     	;abs 0x91e2
    91c2:	7c 90 03 00 	cmp.b	#3,	r12	;
    91c6:	04 20       	jnz	$+10     	;abs 0x91d0
    91c8:	0c 4a       	mov	r10,	r12	;
    91ca:	0d 48       	mov	r8,	r13	;
    91cc:	5d 0b       	rrum	#3,	r13	;
    91ce:	09 3c       	jmp	$+20     	;abs 0x91e2
    91d0:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    91d2:	0b 20       	jnz	$+24     	;abs 0x91ea
    91d4:	0c 48       	mov	r8,	r12	;
    91d6:	3d 40 0c 00 	mov	#12,	r13	;#0x000c
    91da:	b0 12 78 af 	call	#44920		;#0xaf78
    91de:	0d 4c       	mov	r12,	r13	;
    91e0:	0c 4a       	mov	r10,	r12	;
    91e2:	b0 12 a8 b1 	call	#45480		;#0xb1a8
    91e6:	09 4c       	mov	r12,	r9	;
    91e8:	09 3c       	jmp	$+20     	;abs 0x91fc
    91ea:	7c 90 05 00 	cmp.b	#5,	r12	;
    91ee:	06 20       	jnz	$+14     	;abs 0x91fc
    91f0:	0c 4a       	mov	r10,	r12	;
    91f2:	0d 48       	mov	r8,	r13	;
    91f4:	5d 0f       	rrum	#4,	r13	;
    91f6:	f5 3f       	jmp	$-20     	;abs 0x91e2
    91f8:	39 40 c0 5d 	mov	#24000,	r9	;#0x5dc0
    91fc:	5d 42 6a 01 	mov.b	&0x016a,r13	;0x016a
    9200:	7d f0 07 00 	and.b	#7,	r13	;
    9204:	0c 49       	mov	r9,	r12	;
    9206:	3d f0 07 00 	and	#7,	r13	;
    920a:	b0 12 38 b1 	call	#45368		;#0xb138
    920e:	28 17       	popm	#3,	r10	;16-bit words
    9210:	30 41       	ret			

00009212 <USB_init>:
    9212:	0a 15       	pushm	#1,	r10	;16-bit words
    9214:	21 82       	sub	#4,	r1	;r2 As==10
    9216:	0a 42       	mov	r2,	r10	;
    9218:	3a f2       	and	#8,	r10	;r2 As==11
    921a:	b0 12 44 91 	call	#37188		;#0x9144
    921e:	0e 4c       	mov	r12,	r14	;
    9220:	5e 0f       	rrum	#4,	r14	;
    9222:	5e 0b       	rrum	#3,	r14	;
    9224:	0d 4c       	mov	r12,	r13	;
    9226:	5d 0f       	rrum	#4,	r13	;
    9228:	5d 07       	rrum	#2,	r13	;
    922a:	0d 5e       	add	r14,	r13	;
    922c:	5c 03       	rrum	#1,	r12	;
    922e:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9232:	0c 5d       	add	r13,	r12	;
    9234:	32 c2       	dint			
    9236:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    923a:	00 09 
    923c:	b2 40 80 00 	mov	#128,	&0x0904	;#0x0080
    9240:	04 09 
    9242:	b2 40 40 08 	mov	#2112,	&0x0908	;#0x0840
    9246:	08 09 
    9248:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    924c:	1d 41 02 00 	mov	2(r1),	r13	;
    9250:	3e 40 13 00 	mov	#19,	r14	;#0x0013
    9254:	0e 9d       	cmp	r13,	r14	;
    9256:	0c 28       	jnc	$+26     	;abs 0x9270
    9258:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    925c:	2d 41       	mov	@r1,	r13	;
    925e:	0d 9c       	cmp	r12,	r13	;
    9260:	04 2c       	jc	$+10     	;abs 0x926a
    9262:	03 43       	nop			
    9264:	91 53 00 00 	inc	0(r1)		;
    9268:	f9 3f       	jmp	$-12     	;abs 0x925c
    926a:	91 53 02 00 	inc	2(r1)		;
    926e:	ee 3f       	jmp	$-34     	;abs 0x924c
    9270:	b2 d0 00 02 	bis	#512,	&0x0908	;#0x0200
    9274:	08 09 
    9276:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    927a:	00 09 
    927c:	82 43 7e 25 	mov	#0,	&0x257e	;r3 As==00
    9280:	b0 12 70 89 	call	#35184		;#0x8970
    9284:	b0 12 4a 94 	call	#37962		;#0x944a
    9288:	02 da       	bis	r10,	r2	;
    928a:	4c 43       	clr.b	r12		;
    928c:	21 52       	add	#4,	r1	;r2 As==10
    928e:	0a 17       	popm	#1,	r10	;16-bit words
    9290:	30 41       	ret			

00009292 <USB_enable>:
    9292:	1a 15       	pushm	#2,	r10	;16-bit words
    9294:	31 80 06 00 	sub	#6,	r1	;
    9298:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    929c:	b0 12 44 91 	call	#37188		;#0x9144
    92a0:	0a 4c       	mov	r12,	r10	;
    92a2:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    92a6:	55 24       	jz	$+172    	;abs 0x9352
    92a8:	92 b3 02 09 	bit	#1,	&0x0902	;r3 As==01
    92ac:	04 24       	jz	$+10     	;abs 0x92b6
    92ae:	b2 b0 00 01 	bit	#256,	&0x0910	;#0x0100
    92b2:	10 09 
    92b4:	5a 20       	jnz	$+182    	;abs 0x936a
    92b6:	39 40 50 a0 	mov	#41040,	r9	;#0xa050
    92ba:	7c 40 05 00 	mov.b	#5,	r12	;
    92be:	2d 42       	mov	#4,	r13	;r2 As==10
    92c0:	89 12       	call	r9		;
    92c2:	7c 40 05 00 	mov.b	#5,	r12	;
    92c6:	3d 42       	mov	#8,	r13	;r2 As==11
    92c8:	89 12       	call	r9		;
    92ca:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    92ce:	00 09 
    92d0:	3c 40 00 c0 	mov	#49152,	r12	;#0xc000
    92d4:	3d 40 50 c3 	mov	#50000,	r13	;#0xc350
    92d8:	b0 12 24 a8 	call	#43044		;#0xa824
    92dc:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    92de:	39 24       	jz	$+116    	;abs 0x9352
    92e0:	b2 40 0f 05 	mov	#1295,	&0x0912	;#0x050f
    92e4:	12 09 
    92e6:	b2 40 00 03 	mov	#768,	&0x0910	;#0x0300
    92ea:	10 09 
    92ec:	5d 42 19 25 	mov.b	&0x2519,r13	;0x2519
    92f0:	0e 4a       	mov	r10,	r14	;
    92f2:	5e 0f       	rrum	#4,	r14	;
    92f4:	5e 0b       	rrum	#3,	r14	;
    92f6:	0c 4a       	mov	r10,	r12	;
    92f8:	5c 03       	rrum	#1,	r12	;
    92fa:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    92fe:	0c 5e       	add	r14,	r12	;
    9300:	5a 0f       	rrum	#4,	r10	;
    9302:	5a 07       	rrum	#2,	r10	;
    9304:	0a 5c       	add	r12,	r10	;
    9306:	82 43 14 09 	mov	#0,	&0x0914	;r3 As==00
    930a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    930c:	4c 9d       	cmp.b	r13,	r12	;
    930e:	0e 2c       	jc	$+30     	;abs 0x932c
    9310:	1c 41 04 00 	mov	4(r1),	r12	;
    9314:	0e 4c       	mov	r12,	r14	;
    9316:	1e 53       	inc	r14		;
    9318:	81 4e 04 00 	mov	r14,	4(r1)	;
    931c:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9320:	0e 9c       	cmp	r12,	r14	;
    9322:	19 2c       	jc	$+52     	;abs 0x9356
    9324:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9328:	00 09 
    932a:	13 3c       	jmp	$+40     	;abs 0x9352
    932c:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9330:	1c 41 02 00 	mov	2(r1),	r12	;
    9334:	1e 43       	mov	#1,	r14	;r3 As==01
    9336:	0e 9c       	cmp	r12,	r14	;
    9338:	eb 2b       	jnc	$-40     	;abs 0x9310
    933a:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    933e:	2c 41       	mov	@r1,	r12	;
    9340:	0c 9a       	cmp	r10,	r12	;
    9342:	04 2c       	jc	$+10     	;abs 0x934c
    9344:	03 43       	nop			
    9346:	91 53 00 00 	inc	0(r1)		;
    934a:	f9 3f       	jmp	$-12     	;abs 0x933e
    934c:	91 53 02 00 	inc	2(r1)		;
    9350:	ef 3f       	jmp	$-32     	;abs 0x9330
    9352:	1c 43       	mov	#1,	r12	;r3 As==01
    9354:	0b 3c       	jmp	$+24     	;abs 0x936c
    9356:	1c 42 14 09 	mov	&0x0914,r12	;0x0914
    935a:	0c 93       	cmp	#0,	r12	;r3 As==00
    935c:	d4 23       	jnz	$-86     	;abs 0x9306
    935e:	92 d3 02 09 	bis	#1,	&0x0902	;r3 As==01
    9362:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9366:	00 09 
    9368:	01 3c       	jmp	$+4      	;abs 0x936c
    936a:	0c 43       	clr	r12		;
    936c:	31 50 06 00 	add	#6,	r1	;
    9370:	19 17       	popm	#2,	r10	;16-bit words
    9372:	30 41       	ret			

00009374 <USB_setup>:
    9374:	2a 15       	pushm	#3,	r10	;16-bit words
    9376:	49 4c       	mov.b	r12,	r9	;
    9378:	48 4d       	mov.b	r13,	r8	;
    937a:	b0 12 12 92 	call	#37394		;#0x9212
    937e:	4a 4c       	mov.b	r12,	r10	;
    9380:	08 93       	cmp	#0,	r8	;r3 As==00
    9382:	03 24       	jz	$+8      	;abs 0x938a
    9384:	b2 40 ff 01 	mov	#511,	&0x257e	;#0x01ff
    9388:	7e 25 
    938a:	09 93       	cmp	#0,	r9	;r3 As==00
    938c:	0c 24       	jz	$+26     	;abs 0x93a6
    938e:	b0 12 de 8b 	call	#35806		;#0x8bde
    9392:	1c b3       	bit	#1,	r12	;r3 As==01
    9394:	08 24       	jz	$+18     	;abs 0x93a6
    9396:	b0 12 92 92 	call	#37522		;#0x9292
    939a:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    939c:	04 20       	jnz	$+10     	;abs 0x93a6
    939e:	b0 12 4a 8a 	call	#35402		;#0x8a4a
    93a2:	b0 12 82 8b 	call	#35714		;#0x8b82
    93a6:	4c 4a       	mov.b	r10,	r12	;
    93a8:	28 17       	popm	#3,	r10	;16-bit words
    93aa:	30 41       	ret			

000093ac <USB_resume>:
    93ac:	b0 12 92 92 	call	#37522		;#0x9292
    93b0:	f2 f0 9f ff 	and.b	#65439,	&0x093e	;#0xff9f
    93b4:	3e 09 
    93b6:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    93ba:	3d 09 
    93bc:	c2 43 19 25 	mov.b	#0,	&0x2519	;r3 As==00
    93c0:	4c 43       	clr.b	r12		;
    93c2:	30 41       	ret			

000093c4 <memcpyV>:
    93c4:	21 83       	decd	r1		;
    93c6:	0f 43       	clr	r15		;
    93c8:	0f 9e       	cmp	r14,	r15	;
    93ca:	0b 24       	jz	$+24     	;abs 0x93e2
    93cc:	0b 4d       	mov	r13,	r11	;
    93ce:	0b 5f       	add	r15,	r11	;
    93d0:	e1 4b 01 00 	mov.b	@r11,	1(r1)	;
    93d4:	0b 4c       	mov	r12,	r11	;
    93d6:	0b 5f       	add	r15,	r11	;
    93d8:	db 41 01 00 	mov.b	1(r1),	0(r11)	;
    93dc:	00 00 
    93de:	1f 53       	inc	r15		;
    93e0:	f3 3f       	jmp	$-24     	;abs 0x93c8
    93e2:	21 53       	incd	r1		;
    93e4:	30 41       	ret			

000093e6 <memcpyDMA>:
    93e6:	2a 15       	pushm	#3,	r10	;16-bit words
    93e8:	0a 4c       	mov	r12,	r10	;
    93ea:	08 4d       	mov	r13,	r8	;
    93ec:	09 4e       	mov	r14,	r9	;
    93ee:	0e 93       	cmp	#0,	r14	;r3 As==00
    93f0:	29 24       	jz	$+84     	;abs 0x9444
    93f2:	b0 12 32 a3 	call	#41778		;#0xa332
    93f6:	4c 43       	clr.b	r12		;
    93f8:	0d 48       	mov	r8,	r13	;
    93fa:	0e 48       	mov	r8,	r14	;
    93fc:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9400:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9404:	b0 12 74 a2 	call	#41588		;#0xa274
    9408:	4c 43       	clr.b	r12		;
    940a:	0d 4a       	mov	r10,	r13	;
    940c:	0e 4a       	mov	r10,	r14	;
    940e:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9412:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9416:	b0 12 a0 a2 	call	#41632		;#0xa2a0
    941a:	b0 12 38 a3 	call	#41784		;#0xa338
    941e:	4c 43       	clr.b	r12		;
    9420:	0d 49       	mov	r9,	r13	;
    9422:	b0 12 60 a2 	call	#41568		;#0xa260
    9426:	4c 43       	clr.b	r12		;
    9428:	b0 12 d0 a2 	call	#41680		;#0xa2d0
    942c:	4c 43       	clr.b	r12		;
    942e:	b0 12 e8 a2 	call	#41704		;#0xa2e8
    9432:	39 40 06 a3 	mov	#41734,	r9	;#0xa306
    9436:	4c 43       	clr.b	r12		;
    9438:	89 12       	call	r9		;
    943a:	0c 93       	cmp	#0,	r12	;r3 As==00
    943c:	fc 27       	jz	$-6      	;abs 0x9436
    943e:	4c 43       	clr.b	r12		;
    9440:	b0 12 dc a2 	call	#41692		;#0xa2dc
    9444:	0c 4a       	mov	r10,	r12	;
    9446:	28 17       	popm	#3,	r10	;16-bit words
    9448:	30 41       	ret			

0000944a <USB_initMemcpy>:
    944a:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    944e:	0c 41       	mov	r1,	r12	;
    9450:	0d 43       	clr	r13		;
    9452:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9456:	b0 12 dc b1 	call	#45532		;#0xb1dc
    945a:	b1 40 00 10 	mov	#4096,	2(r1)	;#0x1000
    945e:	02 00 
    9460:	f1 40 c0 ff 	mov.b	#65472,	7(r1)	;#0xffc0
    9464:	07 00 
    9466:	f1 40 20 00 	mov.b	#32,	8(r1)	;#0x0020
    946a:	08 00 
    946c:	b2 40 c4 93 	mov	#37828,	&0x2588	;#0x93c4
    9470:	88 25 
    9472:	b2 40 c4 93 	mov	#37828,	&0x2586	;#0x93c4
    9476:	86 25 
    9478:	0c 41       	mov	r1,	r12	;
    947a:	b0 12 0e a2 	call	#41486		;#0xa20e
    947e:	b2 40 e6 93 	mov	#37862,	&0x2588	;#0x93e6
    9482:	88 25 
    9484:	b2 40 e6 93 	mov	#37862,	&0x2586	;#0x93e6
    9488:	86 25 
    948a:	31 50 0a 00 	add	#10,	r1	;#0x000a
    948e:	30 41       	ret			

00009490 <CdcResetData>:
    9490:	0a 15       	pushm	#1,	r10	;16-bit words
    9492:	3a 40 dc b1 	mov	#45532,	r10	;#0xb1dc
    9496:	3c 40 32 25 	mov	#9522,	r12	;#0x2532
    949a:	0d 43       	clr	r13		;
    949c:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    94a0:	8a 12       	call	r10		;
    94a2:	3c 40 22 25 	mov	#9506,	r12	;#0x2522
    94a6:	0d 43       	clr	r13		;
    94a8:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    94ac:	8a 12       	call	r10		;
    94ae:	3c 40 3c 25 	mov	#9532,	r12	;#0x253c
    94b2:	0d 43       	clr	r13		;
    94b4:	3e 42       	mov	#8,	r14	;r2 As==11
    94b6:	8a 12       	call	r10		;
    94b8:	f2 42 40 25 	mov.b	#8,	&0x2540	;r2 As==11
    94bc:	0a 17       	popm	#1,	r10	;16-bit words
    94be:	30 41       	ret			

000094c0 <USBCDC_sendData>:
    94c0:	6a 15       	pushm	#7,	r10	;16-bit words
    94c2:	4a 4e       	mov.b	r14,	r10	;
    94c4:	0e 4a       	mov	r10,	r14	;
    94c6:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    94ca:	3e 50 e4 80 	add	#32996,	r14	;#0x80e4
    94ce:	54 4e 02 00 	mov.b	2(r14),	r4	;
    94d2:	0d 93       	cmp	#0,	r13	;r3 As==00
    94d4:	36 24       	jz	$+110    	;abs 0x9542
    94d6:	08 4d       	mov	r13,	r8	;
    94d8:	07 4c       	mov	r12,	r7	;
    94da:	4c 44       	mov.b	r4,	r12	;
    94dc:	b0 12 04 91 	call	#37124		;#0x9104
    94e0:	05 4c       	mov	r12,	r5	;
    94e2:	36 40 1e 91 	mov	#37150,	r6	;#0x911e
    94e6:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    94ea:	04 20       	jnz	$+10     	;abs 0x94f4
    94ec:	59 42 18 25 	mov.b	&0x2518,r9	;0x2518
    94f0:	19 93       	cmp	#1,	r9	;r3 As==01
    94f2:	04 24       	jz	$+10     	;abs 0x94fc
    94f4:	0c 45       	mov	r5,	r12	;
    94f6:	86 12       	call	r6		;
    94f8:	39 42       	mov	#8,	r9	;r2 As==11
    94fa:	25 3c       	jmp	$+76     	;abs 0x9546
    94fc:	0e 4a       	mov	r10,	r14	;
    94fe:	0e 5a       	add	r10,	r14	;
    9500:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9504:	0a 5e       	add	r14,	r10	;
    9506:	3a 50 32 25 	add	#9522,	r10	;#0x2532
    950a:	0d 4a       	mov	r10,	r13	;
    950c:	2d 53       	incd	r13		;
    950e:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9512:	04 24       	jz	$+10     	;abs 0x951c
    9514:	86 12       	call	r6		;
    9516:	39 40 03 00 	mov	#3,	r9	;
    951a:	15 3c       	jmp	$+44     	;abs 0x9546
    951c:	8a 48 00 00 	mov	r8,	0(r10)	;
    9520:	8d 48 00 00 	mov	r8,	0(r13)	;
    9524:	8a 47 04 00 	mov	r7,	4(r10)	;
    9528:	5a 42 30 09 	mov.b	&0x0930,r10	;0x0930
    952c:	1c 43       	mov	#1,	r12	;r3 As==01
    952e:	0d 44       	mov	r4,	r13	;
    9530:	0d 5c       	add	r12,	r13	;
    9532:	b0 12 a4 b0 	call	#45220		;#0xb0a4
    9536:	4c da       	bis.b	r10,	r12	;
    9538:	c2 4c 30 09 	mov.b	r12,	&0x0930	;
    953c:	0c 45       	mov	r5,	r12	;
    953e:	86 12       	call	r6		;
    9540:	02 3c       	jmp	$+6      	;abs 0x9546
    9542:	39 40 07 00 	mov	#7,	r9	;
    9546:	4c 49       	mov.b	r9,	r12	;
    9548:	64 17       	popm	#7,	r10	;16-bit words
    954a:	30 41       	ret			

0000954c <CdcToHostFromBuffer>:
    954c:	6a 15       	pushm	#7,	r10	;16-bit words
    954e:	21 83       	decd	r1		;
    9550:	4a 4c       	mov.b	r12,	r10	;
    9552:	0c 4a       	mov	r10,	r12	;
    9554:	43 18 0c 5c 	rpt #4 { rlax.w	r12		;
    9558:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    955c:	5f 4c 02 00 	mov.b	2(r12),	r15	;
    9560:	06 4a       	mov	r10,	r6	;
    9562:	06 5a       	add	r10,	r6	;
    9564:	0e 4a       	mov	r10,	r14	;
    9566:	42 18 0e 5e 	rpt #3 { rlax.w	r14		;
    956a:	08 46       	mov	r6,	r8	;
    956c:	08 5e       	add	r14,	r8	;
    956e:	38 50 32 25 	add	#9522,	r8	;#0x2532
    9572:	1d 48 02 00 	mov	2(r8),	r13	;
    9576:	09 48       	mov	r8,	r9	;
    9578:	39 50 06 00 	add	#6,	r9	;
    957c:	0d 93       	cmp	#0,	r13	;r3 As==00
    957e:	32 20       	jnz	$+102    	;abs 0x95e4
    9580:	c9 93 01 00 	cmp.b	#0,	1(r9)	;r3 As==00
    9584:	aa 20       	jnz	$+342    	;abs 0x96da
    9586:	d9 43 01 00 	mov.b	#1,	1(r9)	;r3 As==01
    958a:	f8 90 40 00 	cmp.b	#64,	8(r8)	;#0x0040
    958e:	08 00 
    9590:	19 20       	jnz	$+52     	;abs 0x95c4
    9592:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    9596:	0c 4f       	mov	r15,	r12	;
    9598:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    959c:	0a 20       	jnz	$+22     	;abs 0x95b2
    959e:	3c 50 ca 23 	add	#9162,	r12	;#0x23ca
    95a2:	cf 93 ca 23 	cmp.b	#0,	9162(r15);r3 As==00, 0x23ca
    95a6:	0e 34       	jge	$+30     	;abs 0x95c4
    95a8:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    95ac:	d9 43 00 00 	mov.b	#1,	0(r9)	;r3 As==01
    95b0:	09 3c       	jmp	$+20     	;abs 0x95c4
    95b2:	3c 50 ce 23 	add	#9166,	r12	;#0x23ce
    95b6:	cf 93 ce 23 	cmp.b	#0,	9166(r15);r3 As==00, 0x23ce
    95ba:	04 34       	jge	$+10     	;abs 0x95c4
    95bc:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    95c0:	c9 4d 00 00 	mov.b	r13,	0(r9)	;
    95c4:	0e 46       	mov	r6,	r14	;
    95c6:	41 18 0e 5e 	rpt #2 { rlax.w	r14		;
    95ca:	06 5e       	add	r14,	r6	;
    95cc:	86 43 32 25 	mov	#0,	9522(r6);r3 As==00, 0x2532
    95d0:	f2 b0 80 00 	bit.b	#128,	&0x257e	;#0x0080
    95d4:	7e 25 
    95d6:	81 24       	jz	$+260    	;abs 0x96da
    95d8:	4c 4a       	mov.b	r10,	r12	;
    95da:	b0 12 a6 86 	call	#34470		;#0x86a6
    95de:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    95e2:	7c 3c       	jmp	$+250    	;abs 0x96dc
    95e4:	c9 43 01 00 	mov.b	#0,	1(r9)	;r3 As==00
    95e8:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    95ec:	08 4c       	mov	r12,	r8	;
    95ee:	38 50 0c 00 	add	#12,	r8	;#0x000c
    95f2:	07 4c       	mov	r12,	r7	;
    95f4:	37 50 0e 00 	add	#14,	r7	;#0x000e
    95f8:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    95fc:	10 20       	jnz	$+34     	;abs 0x961e
    95fe:	2c 48       	mov	@r8,	r12	;
    9600:	09 4f       	mov	r15,	r9	;
    9602:	29 53       	incd	r9		;
    9604:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    9608:	25 47       	mov	@r7,	r5	;
    960a:	07 4f       	mov	r15,	r7	;
    960c:	37 50 06 00 	add	#6,	r7	;
    9610:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    9614:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    9618:	5f 4f 02 00 	mov.b	2(r15),	r15	;
    961c:	0f 3c       	jmp	$+32     	;abs 0x963c
    961e:	2c 47       	mov	@r7,	r12	;
    9620:	09 4f       	mov	r15,	r9	;
    9622:	39 50 06 00 	add	#6,	r9	;
    9626:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    962a:	25 48       	mov	@r8,	r5	;
    962c:	07 4f       	mov	r15,	r7	;
    962e:	27 53       	incd	r7		;
    9630:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    9634:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    9638:	5f 4f 06 00 	mov.b	6(r15),	r15	;
    963c:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    963e:	4d 34       	jge	$+156    	;abs 0x96da
    9640:	08 4d       	mov	r13,	r8	;
    9642:	3b 40 40 00 	mov	#64,	r11	;#0x0040
    9646:	0b 9d       	cmp	r13,	r11	;
    9648:	01 2c       	jc	$+4      	;abs 0x964c
    964a:	08 4b       	mov	r11,	r8	;
    964c:	44 48       	mov.b	r8,	r4	;
    964e:	06 5e       	add	r14,	r6	;
    9650:	36 50 32 25 	add	#9522,	r6	;#0x2532
    9654:	0f 46       	mov	r6,	r15	;
    9656:	2f 52       	add	#4,	r15	;r2 As==10
    9658:	2d 4f       	mov	@r15,	r13	;
    965a:	0e 48       	mov	r8,	r14	;
    965c:	81 4f 00 00 	mov	r15,	0(r1)	;
    9660:	1b 42 88 25 	mov	&0x2588,r11	;0x2588
    9664:	8b 12       	call	r11		;
    9666:	c9 44 00 00 	mov.b	r4,	0(r9)	;
    966a:	5c 46 06 00 	mov.b	6(r6),	r12	;
    966e:	5c 53       	inc.b	r12		;
    9670:	5c f3       	and.b	#1,	r12	;r3 As==01
    9672:	c6 4c 06 00 	mov.b	r12,	6(r6)	;
    9676:	0c 46       	mov	r6,	r12	;
    9678:	2c 53       	incd	r12		;
    967a:	29 4c       	mov	@r12,	r9	;
    967c:	09 88       	sub	r8,	r9	;
    967e:	8c 49 00 00 	mov	r9,	0(r12)	;
    9682:	2f 41       	mov	@r1,	r15	;
    9684:	2d 4f       	mov	@r15,	r13	;
    9686:	0d 58       	add	r8,	r13	;
    9688:	8f 4d 00 00 	mov	r13,	0(r15)	;
    968c:	c6 44 08 00 	mov.b	r4,	8(r6)	;
    9690:	6c 47       	mov.b	@r7,	r12	;
    9692:	09 93       	cmp	#0,	r9	;r3 As==00
    9694:	22 24       	jz	$+70     	;abs 0x96da
    9696:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9698:	20 34       	jge	$+66     	;abs 0x96da
    969a:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    969e:	0f 99       	cmp	r9,	r15	;
    96a0:	01 2c       	jc	$+4      	;abs 0x96a4
    96a2:	09 4f       	mov	r15,	r9	;
    96a4:	48 49       	mov.b	r9,	r8	;
    96a6:	0c 45       	mov	r5,	r12	;
    96a8:	0e 49       	mov	r9,	r14	;
    96aa:	1b 42 88 25 	mov	&0x2588,r11	;0x2588
    96ae:	8b 12       	call	r11		;
    96b0:	c7 48 00 00 	mov.b	r8,	0(r7)	;
    96b4:	0c 4a       	mov	r10,	r12	;
    96b6:	0c 5a       	add	r10,	r12	;
    96b8:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    96bc:	0a 5c       	add	r12,	r10	;
    96be:	3a 50 32 25 	add	#9522,	r10	;#0x2532
    96c2:	5c 4a 06 00 	mov.b	6(r10),	r12	;
    96c6:	5c 53       	inc.b	r12		;
    96c8:	5c f3       	and.b	#1,	r12	;r3 As==01
    96ca:	ca 4c 06 00 	mov.b	r12,	6(r10)	;
    96ce:	8a 89 02 00 	sub	r9,	2(r10)	;
    96d2:	8a 59 04 00 	add	r9,	4(r10)	;
    96d6:	ca 48 08 00 	mov.b	r8,	8(r10)	;
    96da:	0c 43       	clr	r12		;
    96dc:	21 53       	incd	r1		;
    96de:	64 17       	popm	#7,	r10	;16-bit words
    96e0:	30 41       	ret			

000096e2 <USBCDC_abortSend>:
    96e2:	1a 15       	pushm	#2,	r10	;16-bit words
    96e4:	09 4c       	mov	r12,	r9	;
    96e6:	4a 4d       	mov.b	r13,	r10	;
    96e8:	0d 4a       	mov	r10,	r13	;
    96ea:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    96ee:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    96f2:	5c 4d 02 00 	mov.b	2(r13),	r12	;
    96f6:	b0 12 04 91 	call	#37124		;#0x9104
    96fa:	0d 4a       	mov	r10,	r13	;
    96fc:	0d 5a       	add	r10,	r13	;
    96fe:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9702:	0a 5d       	add	r13,	r10	;
    9704:	3a 50 32 25 	add	#9522,	r10	;#0x2532
    9708:	0d 4a       	mov	r10,	r13	;
    970a:	2d 53       	incd	r13		;
    970c:	2e 4a       	mov	@r10,	r14	;
    970e:	2e 8d       	sub	@r13,	r14	;
    9710:	89 4e 00 00 	mov	r14,	0(r9)	;
    9714:	8a 43 00 00 	mov	#0,	0(r10)	;r3 As==00
    9718:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    971c:	b0 12 1e 91 	call	#37150		;#0x911e
    9720:	4c 43       	clr.b	r12		;
    9722:	19 17       	popm	#2,	r10	;16-bit words
    9724:	30 41       	ret			

00009726 <CopyUsbToBuff>:
    9726:	4a 15       	pushm	#5,	r10	;16-bit words
    9728:	08 4c       	mov	r12,	r8	;
    972a:	07 4d       	mov	r13,	r7	;
    972c:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9730:	0a 4e       	mov	r14,	r10	;
    9732:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9736:	0d 4a       	mov	r10,	r13	;
    9738:	3d 50 22 25 	add	#9506,	r13	;#0x2522
    973c:	1c 4d 06 00 	mov	6(r13),	r12	;
    9740:	59 4d 0e 00 	mov.b	14(r13),r9	;0x0000e
    9744:	0c 99       	cmp	r9,	r12	;
    9746:	01 2c       	jc	$+4      	;abs 0x974a
    9748:	09 4c       	mov	r12,	r9	;
    974a:	46 49       	mov.b	r9,	r6	;
    974c:	3a 50 22 25 	add	#9506,	r10	;#0x2522
    9750:	2c 4a       	mov	@r10,	r12	;
    9752:	0d 48       	mov	r8,	r13	;
    9754:	0e 49       	mov	r9,	r14	;
    9756:	1f 42 86 25 	mov	&0x2586,r15	;0x2586
    975a:	8f 12       	call	r15		;
    975c:	8a 89 06 00 	sub	r9,	6(r10)	;
    9760:	8a 59 00 00 	add	r9,	0(r10)	;
    9764:	0e 4a       	mov	r10,	r14	;
    9766:	3e 50 0e 00 	add	#14,	r14	;#0x000e
    976a:	6c 4e       	mov.b	@r14,	r12	;
    976c:	06 9c       	cmp	r12,	r6	;
    976e:	0b 20       	jnz	$+24     	;abs 0x9786
    9770:	5c 4e 01 00 	mov.b	1(r14),	r12	;
    9774:	5c 53       	inc.b	r12		;
    9776:	5c f3       	and.b	#1,	r12	;r3 As==01
    9778:	ce 4c 01 00 	mov.b	r12,	1(r14)	;
    977c:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9780:	c7 43 00 00 	mov.b	#0,	0(r7)	;r3 As==00
    9784:	06 3c       	jmp	$+14     	;abs 0x9792
    9786:	4c 86       	sub.b	r6,	r12	;
    9788:	ce 4c 00 00 	mov.b	r12,	0(r14)	;
    978c:	08 59       	add	r9,	r8	;
    978e:	8a 48 02 00 	mov	r8,	2(r10)	;
    9792:	46 17       	popm	#5,	r10	;16-bit words
    9794:	30 41       	ret			

00009796 <USBCDC_receiveData>:
    9796:	6a 15       	pushm	#7,	r10	;16-bit words
    9798:	31 82       	sub	#8,	r1	;r2 As==11
    979a:	48 4e       	mov.b	r14,	r8	;
    979c:	09 48       	mov	r8,	r9	;
    979e:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    97a2:	04 49       	mov	r9,	r4	;
    97a4:	34 50 e4 80 	add	#32996,	r4	;#0x80e4
    97a8:	5a 44 02 00 	mov.b	2(r4),	r10	;
    97ac:	0d 93       	cmp	#0,	r13	;r3 As==00
    97ae:	02 25       	jz	$+518    	;abs 0x99b4
    97b0:	0c 93       	cmp	#0,	r12	;r3 As==00
    97b2:	00 25       	jz	$+514    	;abs 0x99b4
    97b4:	05 4d       	mov	r13,	r5	;
    97b6:	81 4c 06 00 	mov	r12,	6(r1)	;
    97ba:	4c 4a       	mov.b	r10,	r12	;
    97bc:	b0 12 24 91 	call	#37156		;#0x9124
    97c0:	06 4c       	mov	r12,	r6	;
    97c2:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    97c6:	03 20       	jnz	$+8      	;abs 0x97ce
    97c8:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    97cc:	05 24       	jz	$+12     	;abs 0x97d8
    97ce:	0c 46       	mov	r6,	r12	;
    97d0:	b0 12 3e 91 	call	#37182		;#0x913e
    97d4:	3c 42       	mov	#8,	r12	;r2 As==11
    97d6:	f0 3c       	jmp	$+482    	;abs 0x99b8
    97d8:	07 49       	mov	r9,	r7	;
    97da:	37 50 22 25 	add	#9506,	r7	;#0x2522
    97de:	87 93 00 00 	cmp	#0,	0(r7)	;r3 As==00
    97e2:	05 24       	jz	$+12     	;abs 0x97ee
    97e4:	b0 12 3e 91 	call	#37182		;#0x913e
    97e8:	3c 40 03 00 	mov	#3,	r12	;
    97ec:	e5 3c       	jmp	$+460    	;abs 0x99b8
    97ee:	87 45 04 00 	mov	r5,	4(r7)	;
    97f2:	0c 47       	mov	r7,	r12	;
    97f4:	3c 50 06 00 	add	#6,	r12	;
    97f8:	81 4c 04 00 	mov	r12,	4(r1)	;
    97fc:	8c 45 00 00 	mov	r5,	0(r12)	;
    9800:	97 41 06 00 	mov	6(r1),	0(r7)	;
    9804:	00 00 
    9806:	c7 93 0e 00 	cmp.b	#0,	14(r7)	;r3 As==00, 0x000e
    980a:	54 24       	jz	$+170    	;abs 0x98b4
    980c:	0b 47       	mov	r7,	r11	;
    980e:	2b 53       	incd	r11		;
    9810:	0f 47       	mov	r7,	r15	;
    9812:	3f 52       	add	#8,	r15	;r2 As==11
    9814:	35 40 26 97 	mov	#38694,	r5	;#0x9726
    9818:	2c 4b       	mov	@r11,	r12	;
    981a:	2d 4f       	mov	@r15,	r13	;
    981c:	4e 48       	mov.b	r8,	r14	;
    981e:	81 4b 02 00 	mov	r11,	2(r1)	;
    9822:	81 4f 00 00 	mov	r15,	0(r1)	;
    9826:	85 12       	call	r5		;
    9828:	1b 41 02 00 	mov	2(r1),	r11	;
    982c:	2f 41       	mov	@r1,	r15	;
    982e:	1c 41 04 00 	mov	4(r1),	r12	;
    9832:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    9836:	03 20       	jnz	$+8      	;abs 0x983e
    9838:	87 43 00 00 	mov	#0,	0(r7)	;r3 As==00
    983c:	31 3c       	jmp	$+100    	;abs 0x98a0
    983e:	0d 4a       	mov	r10,	r13	;
    9840:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9844:	0c 4d       	mov	r13,	r12	;
    9846:	2c 53       	incd	r12		;
    9848:	3c 50 88 23 	add	#9096,	r12	;#0x2388
    984c:	8f 9c 00 00 	cmp	r12,	0(r15)	;
    9850:	0a 20       	jnz	$+22     	;abs 0x9866
    9852:	3d 50 06 00 	add	#6,	r13	;
    9856:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    985a:	8f 4d 00 00 	mov	r13,	0(r15)	;
    985e:	9b 44 0a 00 	mov	10(r4),	0(r11)	;0x0000a
    9862:	00 00 
    9864:	05 3c       	jmp	$+12     	;abs 0x9870
    9866:	8f 4c 00 00 	mov	r12,	0(r15)	;
    986a:	9b 44 08 00 	mov	8(r4),	0(r11)	;
    986e:	00 00 
    9870:	0c 49       	mov	r9,	r12	;
    9872:	3c 50 22 25 	add	#9506,	r12	;#0x2522
    9876:	1d 4c 08 00 	mov	8(r12),	r13	;
    987a:	6e 4d       	mov.b	@r13,	r14	;
    987c:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    987e:	08 34       	jge	$+18     	;abs 0x9890
    9880:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    9884:	cc 4e 0e 00 	mov.b	r14,	14(r12)	; 0x000e
    9888:	1c 4c 02 00 	mov	2(r12),	r12	;
    988c:	4e 48       	mov.b	r8,	r14	;
    988e:	85 12       	call	r5		;
    9890:	0c 49       	mov	r9,	r12	;
    9892:	3c 50 22 25 	add	#9506,	r12	;#0x2522
    9896:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    989a:	0c 20       	jnz	$+26     	;abs 0x98b4
    989c:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    98a0:	d2 b3 7f 25 	bit.b	#1,	&0x257f	;r3 As==01
    98a4:	03 24       	jz	$+8      	;abs 0x98ac
    98a6:	4c 48       	mov.b	r8,	r12	;
    98a8:	b0 12 aa 86 	call	#34474		;#0x86aa
    98ac:	0c 46       	mov	r6,	r12	;
    98ae:	b0 12 3e 91 	call	#37182		;#0x913e
    98b2:	79 3c       	jmp	$+244    	;abs 0x99a6
    98b4:	0c 49       	mov	r9,	r12	;
    98b6:	3c 50 22 25 	add	#9506,	r12	;#0x2522
    98ba:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    98be:	0d 4a       	mov	r10,	r13	;
    98c0:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    98c4:	cc 93 0f 00 	cmp.b	#0,	15(r12)	;r3 As==00, 0x000f
    98c8:	15 20       	jnz	$+44     	;abs 0x98f4
    98ca:	cd 93 02 00 	cmp.b	#0,	2(r13)	;r3 As==00
    98ce:	5a 34       	jge	$+182    	;abs 0x9984
    98d0:	0d 49       	mov	r9,	r13	;
    98d2:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    98d6:	9c 4d 08 00 	mov	8(r13),	2(r12)	;
    98da:	02 00 
    98dc:	0e 4a       	mov	r10,	r14	;
    98de:	2e 53       	incd	r14		;
    98e0:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    98e4:	8c 4e 08 00 	mov	r14,	8(r12)	;
    98e8:	9c 4d 0a 00 	mov	10(r13),12(r12)	;0x0000a, 0x000c
    98ec:	0c 00 
    98ee:	3a 50 06 00 	add	#6,	r10	;
    98f2:	14 3c       	jmp	$+42     	;abs 0x991c
    98f4:	cd 93 06 00 	cmp.b	#0,	6(r13)	;r3 As==00
    98f8:	45 34       	jge	$+140    	;abs 0x9984
    98fa:	0d 49       	mov	r9,	r13	;
    98fc:	3d 50 e4 80 	add	#32996,	r13	;#0x80e4
    9900:	9c 4d 0a 00 	mov	10(r13),2(r12)	;0x0000a
    9904:	02 00 
    9906:	0e 4a       	mov	r10,	r14	;
    9908:	3e 50 06 00 	add	#6,	r14	;
    990c:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    9910:	8c 4e 08 00 	mov	r14,	8(r12)	;
    9914:	9c 4d 08 00 	mov	8(r13),	12(r12)	; 0x000c
    9918:	0c 00 
    991a:	2a 53       	incd	r10		;
    991c:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9920:	8c 4a 0a 00 	mov	r10,	10(r12)	; 0x000a
    9924:	0a 49       	mov	r9,	r10	;
    9926:	3a 50 22 25 	add	#9506,	r10	;#0x2522
    992a:	07 4a       	mov	r10,	r7	;
    992c:	37 52       	add	#8,	r7	;r2 As==11
    992e:	2d 47       	mov	@r7,	r13	;
    9930:	6c 4d       	mov.b	@r13,	r12	;
    9932:	0c 93       	cmp	#0,	r12	;r3 As==00
    9934:	01 20       	jnz	$+4      	;abs 0x9938
    9936:	ff 3f       	jmp	$+0      	;abs 0x9936
    9938:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    993a:	24 34       	jge	$+74     	;abs 0x9984
    993c:	04 4a       	mov	r10,	r4	;
    993e:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9942:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9946:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    994a:	3f 40 26 97 	mov	#38694,	r15	;#0x9726
    994e:	1c 4a 02 00 	mov	2(r10),	r12	;
    9952:	4e 48       	mov.b	r8,	r14	;
    9954:	81 4f 00 00 	mov	r15,	0(r1)	;
    9958:	8f 12       	call	r15		;
    995a:	05 4a       	mov	r10,	r5	;
    995c:	35 50 0a 00 	add	#10,	r5	;#0x000a
    9960:	2d 45       	mov	@r5,	r13	;
    9962:	6c 4d       	mov.b	@r13,	r12	;
    9964:	2f 41       	mov	@r1,	r15	;
    9966:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    996a:	0c 24       	jz	$+26     	;abs 0x9984
    996c:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    996e:	0a 34       	jge	$+22     	;abs 0x9984
    9970:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9974:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9978:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    997c:	4e 48       	mov.b	r8,	r14	;
    997e:	8f 12       	call	r15		;
    9980:	a7 45 00 00 	mov	@r5,	0(r7)	;
    9984:	39 50 22 25 	add	#9506,	r9	;#0x2522
    9988:	3a 40 3e 91 	mov	#37182,	r10	;#0x913e
    998c:	89 93 06 00 	cmp	#0,	6(r9)	;r3 As==00
    9990:	0d 20       	jnz	$+28     	;abs 0x99ac
    9992:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9996:	d2 b3 7f 25 	bit.b	#1,	&0x257f	;r3 As==01
    999a:	03 24       	jz	$+8      	;abs 0x99a2
    999c:	4c 48       	mov.b	r8,	r12	;
    999e:	b0 12 aa 86 	call	#34474		;#0x86aa
    99a2:	0c 46       	mov	r6,	r12	;
    99a4:	8a 12       	call	r10		;
    99a6:	3c 40 05 00 	mov	#5,	r12	;
    99aa:	06 3c       	jmp	$+14     	;abs 0x99b8
    99ac:	0c 46       	mov	r6,	r12	;
    99ae:	8a 12       	call	r10		;
    99b0:	2c 42       	mov	#4,	r12	;r2 As==10
    99b2:	02 3c       	jmp	$+6      	;abs 0x99b8
    99b4:	3c 40 07 00 	mov	#7,	r12	;
    99b8:	31 52       	add	#8,	r1	;r2 As==11
    99ba:	64 17       	popm	#7,	r10	;16-bit words
    99bc:	30 41       	ret			

000099be <CdcToBufferFromHost>:
    99be:	6a 15       	pushm	#7,	r10	;16-bit words
    99c0:	48 4c       	mov.b	r12,	r8	;
    99c2:	09 48       	mov	r8,	r9	;
    99c4:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    99c8:	0c 49       	mov	r9,	r12	;
    99ca:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    99ce:	5d 4c 02 00 	mov.b	2(r12),	r13	;
    99d2:	0f 49       	mov	r9,	r15	;
    99d4:	3f 50 22 25 	add	#9506,	r15	;#0x2522
    99d8:	8f 93 06 00 	cmp	#0,	6(r15)	;r3 As==00
    99dc:	03 20       	jnz	$+8      	;abs 0x99e4
    99de:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    99e2:	7f 3c       	jmp	$+256    	;abs 0x9ae2
    99e4:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    99e8:	5e 4d 8e 23 	mov.b	9102(r13),r14	;0x0238e
    99ec:	5e dd 8a 23 	bis.b	9098(r13),r14	;0x0238a
    99f0:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    99f2:	77 34       	jge	$+240    	;abs 0x9ae2
    99f4:	06 4c       	mov	r12,	r6	;
    99f6:	36 52       	add	#8,	r6	;r2 As==11
    99f8:	05 4f       	mov	r15,	r5	;
    99fa:	35 52       	add	#8,	r5	;r2 As==11
    99fc:	0a 4d       	mov	r13,	r10	;
    99fe:	2a 53       	incd	r10		;
    9a00:	07 4f       	mov	r15,	r7	;
    9a02:	37 50 0c 00 	add	#12,	r7	;#0x000c
    9a06:	0e 4c       	mov	r12,	r14	;
    9a08:	3e 50 0a 00 	add	#10,	r14	;#0x000a
    9a0c:	04 4f       	mov	r15,	r4	;
    9a0e:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9a12:	3d 50 06 00 	add	#6,	r13	;
    9a16:	cf 93 0f 00 	cmp.b	#0,	15(r15)	;r3 As==00, 0x000f
    9a1a:	0c 20       	jnz	$+26     	;abs 0x9a34
    9a1c:	2c 46       	mov	@r6,	r12	;
    9a1e:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9a22:	85 4a 00 00 	mov	r10,	0(r5)	;
    9a26:	a7 4e 00 00 	mov	@r14,	0(r7)	;
    9a2a:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9a2e:	84 4d 00 00 	mov	r13,	0(r4)	;
    9a32:	0b 3c       	jmp	$+24     	;abs 0x9a4a
    9a34:	2c 4e       	mov	@r14,	r12	;
    9a36:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9a3a:	85 4d 00 00 	mov	r13,	0(r5)	;
    9a3e:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9a42:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9a46:	84 4a 00 00 	mov	r10,	0(r4)	;
    9a4a:	0a 49       	mov	r9,	r10	;
    9a4c:	3a 50 22 25 	add	#9506,	r10	;#0x2522
    9a50:	07 4a       	mov	r10,	r7	;
    9a52:	37 52       	add	#8,	r7	;r2 As==11
    9a54:	2d 47       	mov	@r7,	r13	;
    9a56:	6e 4d       	mov.b	@r13,	r14	;
    9a58:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    9a5a:	1f 34       	jge	$+64     	;abs 0x9a9a
    9a5c:	04 4a       	mov	r10,	r4	;
    9a5e:	34 50 0e 00 	add	#14,	r4	;#0x000e
    9a62:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    9a66:	c4 4e 00 00 	mov.b	r14,	0(r4)	;
    9a6a:	35 40 26 97 	mov	#38694,	r5	;#0x9726
    9a6e:	4e 48       	mov.b	r8,	r14	;
    9a70:	85 12       	call	r5		;
    9a72:	06 4a       	mov	r10,	r6	;
    9a74:	36 50 0a 00 	add	#10,	r6	;#0x000a
    9a78:	2d 46       	mov	@r6,	r13	;
    9a7a:	6c 4d       	mov.b	@r13,	r12	;
    9a7c:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    9a80:	0c 24       	jz	$+26     	;abs 0x9a9a
    9a82:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9a84:	0a 34       	jge	$+22     	;abs 0x9a9a
    9a86:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    9a8a:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    9a8e:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    9a92:	4e 48       	mov.b	r8,	r14	;
    9a94:	85 12       	call	r5		;
    9a96:	a7 46 00 00 	mov	@r6,	0(r7)	;
    9a9a:	0c 49       	mov	r9,	r12	;
    9a9c:	3c 50 22 25 	add	#9506,	r12	;#0x2522
    9aa0:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    9aa4:	1b 20       	jnz	$+56     	;abs 0x9adc
    9aa6:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    9aaa:	1a 42 7e 25 	mov	&0x257e,r10	;0x257e
    9aae:	3a f0 00 01 	and	#256,	r10	;#0x0100
    9ab2:	0a 93       	cmp	#0,	r10	;r3 As==00
    9ab4:	04 24       	jz	$+10     	;abs 0x9abe
    9ab6:	4c 48       	mov.b	r8,	r12	;
    9ab8:	b0 12 aa 86 	call	#34474		;#0x86aa
    9abc:	4a 4c       	mov.b	r12,	r10	;
    9abe:	39 50 22 25 	add	#9506,	r9	;#0x2522
    9ac2:	c9 93 0e 00 	cmp.b	#0,	14(r9)	;r3 As==00, 0x000e
    9ac6:	0b 24       	jz	$+24     	;abs 0x9ade
    9ac8:	f2 b0 40 00 	bit.b	#64,	&0x257e	;#0x0040
    9acc:	7e 25 
    9ace:	07 24       	jz	$+16     	;abs 0x9ade
    9ad0:	4c 48       	mov.b	r8,	r12	;
    9ad2:	b0 12 9e 86 	call	#34462		;#0x869e
    9ad6:	4c da       	bis.b	r10,	r12	;
    9ad8:	4a 4c       	mov.b	r12,	r10	;
    9ada:	01 3c       	jmp	$+4      	;abs 0x9ade
    9adc:	0a 43       	clr	r10		;
    9ade:	0c 4a       	mov	r10,	r12	;
    9ae0:	01 3c       	jmp	$+4      	;abs 0x9ae4
    9ae2:	0c 43       	clr	r12		;
    9ae4:	64 17       	popm	#7,	r10	;16-bit words
    9ae6:	30 41       	ret			

00009ae8 <CdcIsReceiveInProgress>:
    9ae8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9aec:	0d 4c       	mov	r12,	r13	;
    9aee:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    9af2:	3d 50 22 25 	add	#9506,	r13	;#0x2522
    9af6:	0c 43       	clr	r12		;
    9af8:	2c 8d       	sub	@r13,	r12	;
    9afa:	2c dd       	bis	@r13,	r12	;
    9afc:	5c 03       	rrum	#1,	r12	;
    9afe:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    9b02:	30 41       	ret			

00009b04 <USBCDC_abortReceive>:
    9b04:	1a 15       	pushm	#2,	r10	;16-bit words
    9b06:	09 4c       	mov	r12,	r9	;
    9b08:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9b0c:	0a 4d       	mov	r13,	r10	;
    9b0e:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9b12:	0c 4a       	mov	r10,	r12	;
    9b14:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9b18:	5c 4c 02 00 	mov.b	2(r12),	r12	;
    9b1c:	b0 12 24 91 	call	#37156		;#0x9124
    9b20:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    9b24:	0d 4a       	mov	r10,	r13	;
    9b26:	3d 50 22 25 	add	#9506,	r13	;#0x2522
    9b2a:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9b2e:	0e 24       	jz	$+30     	;abs 0x9b4c
    9b30:	0e 4d       	mov	r13,	r14	;
    9b32:	3e 50 06 00 	add	#6,	r14	;
    9b36:	1f 4d 04 00 	mov	4(r13),	r15	;
    9b3a:	2f 8e       	sub	@r14,	r15	;
    9b3c:	89 4f 00 00 	mov	r15,	0(r9)	;
    9b40:	cd 43 0e 00 	mov.b	#0,	14(r13)	;r3 As==00, 0x000e
    9b44:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9b48:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9b4c:	b0 12 3e 91 	call	#37182		;#0x913e
    9b50:	4c 43       	clr.b	r12		;
    9b52:	19 17       	popm	#2,	r10	;16-bit words
    9b54:	30 41       	ret			

00009b56 <USBCDC_rejectData>:
    9b56:	3a 15       	pushm	#4,	r10	;16-bit words
    9b58:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9b5c:	09 4c       	mov	r12,	r9	;
    9b5e:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    9b62:	0c 49       	mov	r9,	r12	;
    9b64:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9b68:	5a 4c 02 00 	mov.b	2(r12),	r10	;
    9b6c:	4c 4a       	mov.b	r10,	r12	;
    9b6e:	b0 12 24 91 	call	#37156		;#0x9124
    9b72:	0b 4c       	mov	r12,	r11	;
    9b74:	58 42 19 25 	mov.b	&0x2519,r8	;0x2519
    9b78:	3e 40 3e 91 	mov	#37182,	r14	;#0x913e
    9b7c:	08 93       	cmp	#0,	r8	;r3 As==00
    9b7e:	03 24       	jz	$+8      	;abs 0x9b86
    9b80:	8e 12       	call	r14		;
    9b82:	38 42       	mov	#8,	r8	;r2 As==11
    9b84:	25 3c       	jmp	$+76     	;abs 0x9bd0
    9b86:	0d 49       	mov	r9,	r13	;
    9b88:	3d 50 22 25 	add	#9506,	r13	;#0x2522
    9b8c:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    9b90:	1d 20       	jnz	$+60     	;abs 0x9bcc
    9b92:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9b96:	0f 4a       	mov	r10,	r15	;
    9b98:	3f 50 88 23 	add	#9096,	r15	;#0x2388
    9b9c:	57 4f 02 00 	mov.b	2(r15),	r7	;
    9ba0:	77 f0 80 ff 	and.b	#65408,	r7	;#0xff80
    9ba4:	5c 4f 06 00 	mov.b	6(r15),	r12	;
    9ba8:	7c f0 80 ff 	and.b	#65408,	r12	;#0xff80
    9bac:	47 9c       	cmp.b	r12,	r7	;
    9bae:	06 24       	jz	$+14     	;abs 0x9bbc
    9bb0:	5c 4d 0f 00 	mov.b	15(r13),r12	;0x0000f
    9bb4:	5c 53       	inc.b	r12		;
    9bb6:	5c f3       	and.b	#1,	r12	;r3 As==01
    9bb8:	cd 4c 0f 00 	mov.b	r12,	15(r13)	; 0x000f
    9bbc:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    9bc0:	ca 43 02 00 	mov.b	#0,	2(r10)	;r3 As==00
    9bc4:	ca 43 06 00 	mov.b	#0,	6(r10)	;r3 As==00
    9bc8:	c9 43 30 25 	mov.b	#0,	9520(r9);r3 As==00, 0x2530
    9bcc:	0c 4b       	mov	r11,	r12	;
    9bce:	8e 12       	call	r14		;
    9bd0:	4c 48       	mov.b	r8,	r12	;
    9bd2:	37 17       	popm	#4,	r10	;16-bit words
    9bd4:	30 41       	ret			

00009bd6 <USBCDC_getInterfaceStatus>:
    9bd6:	6a 15       	pushm	#7,	r10	;16-bit words
    9bd8:	4a 4c       	mov.b	r12,	r10	;
    9bda:	04 4d       	mov	r13,	r4	;
    9bdc:	05 4e       	mov	r14,	r5	;
    9bde:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    9be2:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    9be6:	06 4a       	mov	r10,	r6	;
    9be8:	43 18 06 56 	rpt #4 { rlax.w	r6		;
    9bec:	0c 46       	mov	r6,	r12	;
    9bee:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9bf2:	57 4c 02 00 	mov.b	2(r12),	r7	;
    9bf6:	4c 47       	mov.b	r7,	r12	;
    9bf8:	b0 12 04 91 	call	#37124		;#0x9104
    9bfc:	08 4c       	mov	r12,	r8	;
    9bfe:	4c 47       	mov.b	r7,	r12	;
    9c00:	b0 12 24 91 	call	#37156		;#0x9124
    9c04:	09 4c       	mov	r12,	r9	;
    9c06:	0c 4a       	mov	r10,	r12	;
    9c08:	0c 5a       	add	r10,	r12	;
    9c0a:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9c0e:	0c 5a       	add	r10,	r12	;
    9c10:	3c 50 32 25 	add	#9522,	r12	;#0x2532
    9c14:	1a 4c 02 00 	mov	2(r12),	r10	;
    9c18:	0a 93       	cmp	#0,	r10	;r3 As==00
    9c1a:	05 24       	jz	$+12     	;abs 0x9c26
    9c1c:	2c 4c       	mov	@r12,	r12	;
    9c1e:	0c 8a       	sub	r10,	r12	;
    9c20:	84 4c 00 00 	mov	r12,	0(r4)	;
    9c24:	1a 43       	mov	#1,	r10	;r3 As==01
    9c26:	36 50 22 25 	add	#9506,	r6	;#0x2522
    9c2a:	86 93 00 00 	cmp	#0,	0(r6)	;r3 As==00
    9c2e:	0a 24       	jz	$+22     	;abs 0x9c44
    9c30:	6a d3       	bis.b	#2,	r10	;r3 As==10
    9c32:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9c36:	1c 46 04 00 	mov	4(r6),	r12	;
    9c3a:	1c 86 06 00 	sub	6(r6),	r12	;
    9c3e:	85 4c 00 00 	mov	r12,	0(r5)	;
    9c42:	10 3c       	jmp	$+34     	;abs 0x9c64
    9c44:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    9c48:	13 20       	jnz	$+40     	;abs 0x9c70
    9c4a:	42 18 07 57 	rpt #3 { rlax.w	r7		;
    9c4e:	37 50 88 23 	add	#9096,	r7	;#0x2388
    9c52:	5c 47 06 00 	mov.b	6(r7),	r12	;
    9c56:	5c d7 02 00 	bis.b	2(r7),	r12	;
    9c5a:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9c5c:	03 34       	jge	$+8      	;abs 0x9c64
    9c5e:	6a d2       	bis.b	#4,	r10	;r2 As==10
    9c60:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9c64:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    9c68:	03 20       	jnz	$+8      	;abs 0x9c70
    9c6a:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    9c6e:	01 24       	jz	$+4      	;abs 0x9c72
    9c70:	3a 42       	mov	#8,	r10	;r2 As==11
    9c72:	0c 48       	mov	r8,	r12	;
    9c74:	b0 12 1e 91 	call	#37150		;#0x911e
    9c78:	0c 49       	mov	r9,	r12	;
    9c7a:	b0 12 3e 91 	call	#37182		;#0x913e
    9c7e:	03 43       	nop			
    9c80:	4c 4a       	mov.b	r10,	r12	;
    9c82:	64 17       	popm	#7,	r10	;16-bit words
    9c84:	30 41       	ret			

00009c86 <USBCDC_getBytesInUSBBuffer>:
    9c86:	1a 15       	pushm	#2,	r10	;16-bit words
    9c88:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9c8c:	0a 4c       	mov	r12,	r10	;
    9c8e:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    9c92:	0c 4a       	mov	r10,	r12	;
    9c94:	3c 50 e4 80 	add	#32996,	r12	;#0x80e4
    9c98:	59 4c 02 00 	mov.b	2(r12),	r9	;
    9c9c:	4c 49       	mov.b	r9,	r12	;
    9c9e:	b0 12 24 91 	call	#37156		;#0x9124
    9ca2:	3e 40 3e 91 	mov	#37182,	r14	;#0x913e
    9ca6:	c2 93 19 25 	cmp.b	#0,	&0x2519	;r3 As==00
    9caa:	03 20       	jnz	$+8      	;abs 0x9cb2
    9cac:	d2 93 18 25 	cmp.b	#1,	&0x2518	;r3 As==01
    9cb0:	03 24       	jz	$+8      	;abs 0x9cb8
    9cb2:	8e 12       	call	r14		;
    9cb4:	0c 43       	clr	r12		;
    9cb6:	24 3c       	jmp	$+74     	;abs 0x9d00
    9cb8:	0d 4a       	mov	r10,	r13	;
    9cba:	3d 50 22 25 	add	#9506,	r13	;#0x2522
    9cbe:	5a 4d 0e 00 	mov.b	14(r13),r10	;0x0000e
    9cc2:	0a 93       	cmp	#0,	r10	;r3 As==00
    9cc4:	04 24       	jz	$+10     	;abs 0x9cce
    9cc6:	1d 4d 0a 00 	mov	10(r13),r13	;0x0000a
    9cca:	6d 4d       	mov.b	@r13,	r13	;
    9ccc:	10 3c       	jmp	$+34     	;abs 0x9cee
    9cce:	42 18 09 59 	rpt #3 { rlax.w	r9		;
    9cd2:	0d 49       	mov	r9,	r13	;
    9cd4:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    9cd8:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9cdc:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9cde:	03 34       	jge	$+8      	;abs 0x9ce6
    9ce0:	0a 4d       	mov	r13,	r10	;
    9ce2:	3a f0 7f 00 	and	#127,	r10	;#0x007f
    9ce6:	39 50 88 23 	add	#9096,	r9	;#0x2388
    9cea:	5d 49 06 00 	mov.b	6(r9),	r13	;
    9cee:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    9cf0:	05 34       	jge	$+12     	;abs 0x9cfc
    9cf2:	7d f0 7f 00 	and.b	#127,	r13	;#0x007f
    9cf6:	4a 5d       	add.b	r13,	r10	;
    9cf8:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    9cfc:	8e 12       	call	r14		;
    9cfe:	0c 4a       	mov	r10,	r12	;
    9d00:	19 17       	popm	#2,	r10	;16-bit words
    9d02:	30 41       	ret			

00009d04 <usbGetLineCoding>:
    9d04:	1a 15       	pushm	#2,	r10	;16-bit words
    9d06:	1d 42 84 23 	mov	&0x2384,r13	;0x2384
    9d0a:	1d b3       	bit	#1,	r13	;r3 As==01
    9d0c:	01 24       	jz	$+4      	;abs 0x9d10
    9d0e:	3d 53       	add	#-1,	r13	;r3 As==11
    9d10:	12 c3       	clrc			
    9d12:	0d 10       	rrc	r13		;
    9d14:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9d18:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9d1c:	3d 50 3c 25 	add	#9532,	r13	;#0x253c
    9d20:	0c 4d       	mov	r13,	r12	;
    9d22:	2c 52       	add	#4,	r12	;r2 As==10
    9d24:	e2 4c 5a 25 	mov.b	@r12,	&0x255a	;
    9d28:	d2 4d 06 00 	mov.b	6(r13),	&0x2559	;
    9d2c:	59 25 
    9d2e:	d2 4c 01 00 	mov.b	1(r12),	&0x2558	;
    9d32:	58 25 
    9d34:	2a 4d       	mov	@r13,	r10	;
    9d36:	19 4d 02 00 	mov	2(r13),	r9	;
    9d3a:	0c 4a       	mov	r10,	r12	;
    9d3c:	0d 49       	mov	r9,	r13	;
    9d3e:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9d42:	b0 12 a2 b1 	call	#45474		;#0xb1a2
    9d46:	c2 4c 57 25 	mov.b	r12,	&0x2557	;
    9d4a:	0c 4a       	mov	r10,	r12	;
    9d4c:	0d 49       	mov	r9,	r13	;
    9d4e:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9d52:	b0 12 a2 b1 	call	#45474		;#0xb1a2
    9d56:	c2 4c 56 25 	mov.b	r12,	&0x2556	;
    9d5a:	0c 4a       	mov	r10,	r12	;
    9d5c:	0d 49       	mov	r9,	r13	;
    9d5e:	b0 12 68 b1 	call	#45416		;#0xb168
    9d62:	c2 4c 55 25 	mov.b	r12,	&0x2555	;
    9d66:	c2 4a 54 25 	mov.b	r10,	&0x2554	;
    9d6a:	b2 40 07 00 	mov	#7,	&0x2580	;
    9d6e:	80 25 
    9d70:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    9d74:	b0 12 62 8d 	call	#36194		;#0x8d62
    9d78:	4c 43       	clr.b	r12		;
    9d7a:	19 17       	popm	#2,	r10	;16-bit words
    9d7c:	30 41       	ret			

00009d7e <usbSetLineCoding>:
    9d7e:	3c 40 4c 25 	mov	#9548,	r12	;#0x254c
    9d82:	b0 12 d2 8d 	call	#36306		;#0x8dd2
    9d86:	4c 43       	clr.b	r12		;
    9d88:	30 41       	ret			

00009d8a <usbSetControlLineState>:
    9d8a:	3d 40 80 23 	mov	#9088,	r13	;#0x2380
    9d8e:	5c 4d 04 00 	mov.b	4(r13),	r12	;
    9d92:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    9d96:	b0 12 b2 86 	call	#34482		;#0x86b2
    9d9a:	b0 12 e6 8d 	call	#36326		;#0x8de6
    9d9e:	4c 43       	clr.b	r12		;
    9da0:	30 41       	ret			

00009da2 <Handler_SetLineCoding>:
    9da2:	3a 15       	pushm	#4,	r10	;16-bit words
    9da4:	21 83       	decd	r1		;
    9da6:	19 42 84 23 	mov	&0x2384,r9	;0x2384
    9daa:	0c 49       	mov	r9,	r12	;
    9dac:	19 b3       	bit	#1,	r9	;r3 As==01
    9dae:	01 24       	jz	$+4      	;abs 0x9db2
    9db0:	3c 53       	add	#-1,	r12	;r3 As==11
    9db2:	12 c3       	clrc			
    9db4:	0c 10       	rrc	r12		;
    9db6:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    9dba:	5a 41 01 00 	mov.b	1(r1),	r10	;
    9dbe:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    9dc2:	3a 50 3c 25 	add	#9532,	r10	;#0x253c
    9dc6:	5c 42 4f 25 	mov.b	&0x254f,r12	;0x254f
    9dca:	0d 43       	clr	r13		;
    9dcc:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    9dd0:	b0 12 ee b0 	call	#45294		;#0xb0ee
    9dd4:	07 4c       	mov	r12,	r7	;
    9dd6:	08 4d       	mov	r13,	r8	;
    9dd8:	5c 42 4e 25 	mov.b	&0x254e,r12	;0x254e
    9ddc:	0d 43       	clr	r13		;
    9dde:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9de2:	b0 12 ee b0 	call	#45294		;#0xb0ee
    9de6:	0c d7       	bis	r7,	r12	;
    9de8:	08 dd       	bis	r13,	r8	;
    9dea:	5d 42 4c 25 	mov.b	&0x254c,r13	;0x254c
    9dee:	07 4c       	mov	r12,	r7	;
    9df0:	07 dd       	bis	r13,	r7	;
    9df2:	5c 42 4d 25 	mov.b	&0x254d,r12	;0x254d
    9df6:	0d 43       	clr	r13		;
    9df8:	b0 12 c6 b0 	call	#45254		;#0xb0c6
    9dfc:	07 dc       	bis	r12,	r7	;
    9dfe:	8a 47 00 00 	mov	r7,	0(r10)	;
    9e02:	08 dd       	bis	r13,	r8	;
    9e04:	8a 48 02 00 	mov	r8,	2(r10)	;
    9e08:	5d 41 01 00 	mov.b	1(r1),	r13	;
    9e0c:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    9e10:	4c 49       	mov.b	r9,	r12	;
    9e12:	1e 4d 3e 25 	mov	9534(r13),r14	;0x0253e
    9e16:	1d 4d 3c 25 	mov	9532(r13),r13	;0x0253c
    9e1a:	b0 12 ae 86 	call	#34478		;#0x86ae
    9e1e:	21 53       	incd	r1		;
    9e20:	37 17       	popm	#4,	r10	;16-bit words
    9e22:	30 41       	ret			

00009e24 <TLV_getInfo>:
    9e24:	0a 15       	pushm	#1,	r10	;16-bit words
    9e26:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9e2a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9e2e:	3b 40 08 1a 	mov	#6664,	r11	;#0x1a08
    9e32:	6a 4b       	mov.b	@r11,	r10	;
    9e34:	4a 9c       	cmp.b	r12,	r10	;
    9e36:	1f 20       	jnz	$+64     	;abs 0x9e76
    9e38:	0d 93       	cmp	#0,	r13	;r3 As==00
    9e3a:	0f 20       	jnz	$+32     	;abs 0x9e5a
    9e3c:	cb 9c 00 00 	cmp.b	r12,	0(r11)	;
    9e40:	07 20       	jnz	$+16     	;abs 0x9e50
    9e42:	de 4b 01 00 	mov.b	1(r11),	0(r14)	;
    9e46:	00 00 
    9e48:	2b 53       	incd	r11		;
    9e4a:	8f 4b 00 00 	mov	r11,	0(r15)	;
    9e4e:	16 3c       	jmp	$+46     	;abs 0x9e7c
    9e50:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    9e54:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    9e58:	11 3c       	jmp	$+36     	;abs 0x9e7c
    9e5a:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9e5c:	ef 27       	jz	$-32     	;abs 0x9e3c
    9e5e:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9e60:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9e64:	5a 4b 01 00 	mov.b	1(r11),	r10	;
    9e68:	2a 53       	incd	r10		;
    9e6a:	0b 5a       	add	r10,	r11	;
    9e6c:	3a 40 fe 1a 	mov	#6910,	r10	;#0x1afe
    9e70:	0a 9b       	cmp	r11,	r10	;
    9e72:	df 2f       	jc	$-64     	;abs 0x9e32
    9e74:	e3 3f       	jmp	$-56     	;abs 0x9e3c
    9e76:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    9e78:	f5 23       	jnz	$-20     	;abs 0x9e64
    9e7a:	e0 3f       	jmp	$-62     	;abs 0x9e3c
    9e7c:	0a 17       	popm	#1,	r10	;16-bit words
    9e7e:	30 41       	ret			

00009e80 <TLV_getDeviceType>:
    9e80:	1c 42 04 1a 	mov	&0x1a04,r12	;0x1a04
    9e84:	30 41       	ret			

00009e86 <TLV_getMemory>:
    9e86:	0a 15       	pushm	#1,	r10	;16-bit words
    9e88:	21 82       	sub	#4,	r1	;r2 As==10
    9e8a:	0c 5c       	rla	r12		;
    9e8c:	4a 4c       	mov.b	r12,	r10	;
    9e8e:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9e90:	4d 43       	clr.b	r13		;
    9e92:	0e 41       	mov	r1,	r14	;
    9e94:	1e 53       	inc	r14		;
    9e96:	0f 41       	mov	r1,	r15	;
    9e98:	2f 53       	incd	r15		;
    9e9a:	b0 12 24 9e 	call	#40484		;#0x9e24
    9e9e:	1f 41 02 00 	mov	2(r1),	r15	;
    9ea2:	0d 43       	clr	r13		;
    9ea4:	0a 9d       	cmp	r13,	r10	;
    9ea6:	0f 28       	jnc	$+32     	;abs 0x9ec6
    9ea8:	0e 4f       	mov	r15,	r14	;
    9eaa:	0e 5d       	add	r13,	r14	;
    9eac:	6c 4e       	mov.b	@r14,	r12	;
    9eae:	0c 93       	cmp	#0,	r12	;r3 As==00
    9eb0:	0b 24       	jz	$+24     	;abs 0x9ec8
    9eb2:	0d 9a       	cmp	r10,	r13	;
    9eb4:	06 20       	jnz	$+14     	;abs 0x9ec2
    9eb6:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    9eba:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    9ebe:	0c dd       	bis	r13,	r12	;
    9ec0:	03 3c       	jmp	$+8      	;abs 0x9ec8
    9ec2:	2d 53       	incd	r13		;
    9ec4:	ef 3f       	jmp	$-32     	;abs 0x9ea4
    9ec6:	0c 43       	clr	r12		;
    9ec8:	21 52       	add	#4,	r1	;r2 As==10
    9eca:	0a 17       	popm	#1,	r10	;16-bit words
    9ecc:	30 41       	ret			

00009ece <TLV_getPeripheral>:
    9ece:	3a 15       	pushm	#4,	r10	;16-bit words
    9ed0:	21 82       	sub	#4,	r1	;r2 As==10
    9ed2:	48 4c       	mov.b	r12,	r8	;
    9ed4:	49 4d       	mov.b	r13,	r9	;
    9ed6:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9ed8:	4d 43       	clr.b	r13		;
    9eda:	0e 41       	mov	r1,	r14	;
    9edc:	1e 53       	inc	r14		;
    9ede:	0f 41       	mov	r1,	r15	;
    9ee0:	2f 53       	incd	r15		;
    9ee2:	b0 12 24 9e 	call	#40484		;#0x9e24
    9ee6:	0a 43       	clr	r10		;
    9ee8:	37 40 86 9e 	mov	#40582,	r7	;#0x9e86
    9eec:	4c 4a       	mov.b	r10,	r12	;
    9eee:	87 12       	call	r7		;
    9ef0:	0c 93       	cmp	#0,	r12	;r3 As==00
    9ef2:	02 24       	jz	$+6      	;abs 0x9ef8
    9ef4:	1a 53       	inc	r10		;
    9ef6:	fa 3f       	jmp	$-10     	;abs 0x9eec
    9ef8:	1e 41 02 00 	mov	2(r1),	r14	;
    9efc:	0a 5a       	rla	r10		;
    9efe:	0d 4e       	mov	r14,	r13	;
    9f00:	0d 5a       	add	r10,	r13	;
    9f02:	5d 4d 01 00 	mov.b	1(r13),	r13	;
    9f06:	2a 53       	incd	r10		;
    9f08:	0a 5e       	add	r14,	r10	;
    9f0a:	81 4a 02 00 	mov	r10,	2(r1)	;
    9f0e:	0e 4d       	mov	r13,	r14	;
    9f10:	0e 5d       	add	r13,	r14	;
    9f12:	0f 4a       	mov	r10,	r15	;
    9f14:	1f 53       	inc	r15		;
    9f16:	0d 4c       	mov	r12,	r13	;
    9f18:	cf 98 00 00 	cmp.b	r8,	0(r15)	;
    9f1c:	0c 20       	jnz	$+26     	;abs 0x9f36
    9f1e:	09 93       	cmp	#0,	r9	;r3 As==00
    9f20:	04 24       	jz	$+10     	;abs 0x9f2a
    9f22:	79 53       	add.b	#-1,	r9	;r3 As==11
    9f24:	39 f0 ff 00 	and	#255,	r9	;#0x00ff
    9f28:	06 3c       	jmp	$+14     	;abs 0x9f36
    9f2a:	0a 5d       	add	r13,	r10	;
    9f2c:	6c 4a       	mov.b	@r10,	r12	;
    9f2e:	47 18 08 58 	rpt #8 { rlax.w	r8		;
    9f32:	0c d8       	bis	r8,	r12	;
    9f34:	04 3c       	jmp	$+10     	;abs 0x9f3e
    9f36:	2d 53       	incd	r13		;
    9f38:	2f 53       	incd	r15		;
    9f3a:	0e 9d       	cmp	r13,	r14	;
    9f3c:	ed 2f       	jc	$-36     	;abs 0x9f18
    9f3e:	21 52       	add	#4,	r1	;r2 As==10
    9f40:	37 17       	popm	#4,	r10	;16-bit words
    9f42:	30 41       	ret			

00009f44 <TLV_getInterrupt>:
    9f44:	2a 15       	pushm	#3,	r10	;16-bit words
    9f46:	21 82       	sub	#4,	r1	;r2 As==10
    9f48:	49 4c       	mov.b	r12,	r9	;
    9f4a:	6c 43       	mov.b	#2,	r12	;r3 As==10
    9f4c:	4d 43       	clr.b	r13		;
    9f4e:	0e 41       	mov	r1,	r14	;
    9f50:	1e 53       	inc	r14		;
    9f52:	0f 41       	mov	r1,	r15	;
    9f54:	2f 53       	incd	r15		;
    9f56:	b0 12 24 9e 	call	#40484		;#0x9e24
    9f5a:	0a 43       	clr	r10		;
    9f5c:	38 40 86 9e 	mov	#40582,	r8	;#0x9e86
    9f60:	4c 4a       	mov.b	r10,	r12	;
    9f62:	88 12       	call	r8		;
    9f64:	0f 4a       	mov	r10,	r15	;
    9f66:	1f 53       	inc	r15		;
    9f68:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f6a:	02 24       	jz	$+6      	;abs 0x9f70
    9f6c:	0a 4f       	mov	r15,	r10	;
    9f6e:	f8 3f       	jmp	$-14     	;abs 0x9f60
    9f70:	1d 41 02 00 	mov	2(r1),	r13	;
    9f74:	0a 5a       	rla	r10		;
    9f76:	0a 5d       	add	r13,	r10	;
    9f78:	5e 4a 01 00 	mov.b	1(r10),	r14	;
    9f7c:	0e 5f       	add	r15,	r14	;
    9f7e:	0e 5e       	rla	r14		;
    9f80:	0d 5e       	add	r14,	r13	;
    9f82:	81 4d 02 00 	mov	r13,	2(r1)	;
    9f86:	0e 4c       	mov	r12,	r14	;
    9f88:	09 9e       	cmp	r14,	r9	;
    9f8a:	09 28       	jnc	$+20     	;abs 0x9f9e
    9f8c:	0c 4d       	mov	r13,	r12	;
    9f8e:	0c 5e       	add	r14,	r12	;
    9f90:	6c 4c       	mov.b	@r12,	r12	;
    9f92:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f94:	05 24       	jz	$+12     	;abs 0x9fa0
    9f96:	0e 99       	cmp	r9,	r14	;
    9f98:	03 24       	jz	$+8      	;abs 0x9fa0
    9f9a:	2e 53       	incd	r14		;
    9f9c:	f5 3f       	jmp	$-20     	;abs 0x9f88
    9f9e:	0c 43       	clr	r12		;
    9fa0:	21 52       	add	#4,	r1	;r2 As==10
    9fa2:	28 17       	popm	#3,	r10	;16-bit words
    9fa4:	30 41       	ret			

00009fa6 <WDT_A_hold>:
    9fa6:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    9faa:	2d 4c       	mov	@r12,	r13	;
    9fac:	7d d0 80 ff 	bis.b	#65408,	r13	;#0xff80
    9fb0:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9fb4:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    9fb8:	8c 4d 00 00 	mov	r13,	0(r12)	;
    9fbc:	30 41       	ret			

00009fbe <WDT_A_start>:
    9fbe:	1d 4c 0c 00 	mov	12(r12),r13	;0x0000c
    9fc2:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    9fc6:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    9fca:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    9fce:	30 41       	ret			

00009fd0 <WDT_A_resetTimer>:
    9fd0:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    9fd4:	2d 4c       	mov	@r12,	r13	;
    9fd6:	7d d2       	bis.b	#8,	r13	;r2 As==11
    9fd8:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9fdc:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    9fe0:	8c 4d 00 00 	mov	r13,	0(r12)	;
    9fe4:	30 41       	ret			

00009fe6 <WDT_A_initWatchdogTimer>:
    9fe6:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9fea:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9fee:	3d 50 88 5a 	add	#23176,	r13	;#0x5a88
    9ff2:	0d 5e       	add	r14,	r13	;
    9ff4:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    9ff8:	30 41       	ret			

00009ffa <WDT_A_initIntervalTimer>:
    9ffa:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9ffe:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a002:	3d 50 98 5a 	add	#23192,	r13	;#0x5a98
    a006:	0d 5e       	add	r14,	r13	;
    a008:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    a00c:	30 41       	ret			

0000a00e <GPIO_setAsOutputPin>:
    a00e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a012:	0e 4c       	mov	r12,	r14	;
    a014:	0e 5c       	add	r12,	r14	;
    a016:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a01a:	1c b3       	bit	#1,	r12	;r3 As==01
    a01c:	02 20       	jnz	$+6      	;abs 0xa022
    a01e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a022:	8e cd 0a 00 	bic	r13,	10(r14)	; 0x000a
    a026:	8e dd 04 00 	bis	r13,	4(r14)	;
    a02a:	30 41       	ret			

0000a02c <GPIO_setAsInputPin>:
    a02c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a030:	0e 4c       	mov	r12,	r14	;
    a032:	0e 5c       	add	r12,	r14	;
    a034:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a038:	1c b3       	bit	#1,	r12	;r3 As==01
    a03a:	02 20       	jnz	$+6      	;abs 0xa040
    a03c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a040:	3d e3       	inv	r13		;
    a042:	8e fd 0a 00 	and	r13,	10(r14)	; 0x000a
    a046:	8e fd 04 00 	and	r13,	4(r14)	;
    a04a:	8e fd 06 00 	and	r13,	6(r14)	;
    a04e:	30 41       	ret			

0000a050 <GPIO_setAsPeripheralModuleFunctionOutputPin>:
    a050:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a054:	0e 4c       	mov	r12,	r14	;
    a056:	0e 5c       	add	r12,	r14	;
    a058:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a05c:	1c b3       	bit	#1,	r12	;r3 As==01
    a05e:	02 20       	jnz	$+6      	;abs 0xa064
    a060:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a064:	8e dd 04 00 	bis	r13,	4(r14)	;
    a068:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a06c:	30 41       	ret			

0000a06e <GPIO_setAsPeripheralModuleFunctionInputPin>:
    a06e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a072:	0e 4c       	mov	r12,	r14	;
    a074:	0e 5c       	add	r12,	r14	;
    a076:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a07a:	1c b3       	bit	#1,	r12	;r3 As==01
    a07c:	02 20       	jnz	$+6      	;abs 0xa082
    a07e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a082:	8e cd 04 00 	bic	r13,	4(r14)	;
    a086:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    a08a:	30 41       	ret			

0000a08c <GPIO_setOutputHighOnPin>:
    a08c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a090:	0e 4c       	mov	r12,	r14	;
    a092:	0e 5c       	add	r12,	r14	;
    a094:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a098:	1c b3       	bit	#1,	r12	;r3 As==01
    a09a:	02 20       	jnz	$+6      	;abs 0xa0a0
    a09c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0a0:	8e dd 02 00 	bis	r13,	2(r14)	;
    a0a4:	30 41       	ret			

0000a0a6 <GPIO_setOutputLowOnPin>:
    a0a6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0aa:	0e 4c       	mov	r12,	r14	;
    a0ac:	0e 5c       	add	r12,	r14	;
    a0ae:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0b2:	1c b3       	bit	#1,	r12	;r3 As==01
    a0b4:	02 20       	jnz	$+6      	;abs 0xa0ba
    a0b6:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0ba:	8e cd 02 00 	bic	r13,	2(r14)	;
    a0be:	30 41       	ret			

0000a0c0 <GPIO_toggleOutputOnPin>:
    a0c0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0c4:	0e 4c       	mov	r12,	r14	;
    a0c6:	0e 5c       	add	r12,	r14	;
    a0c8:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0cc:	1c b3       	bit	#1,	r12	;r3 As==01
    a0ce:	02 20       	jnz	$+6      	;abs 0xa0d4
    a0d0:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0d4:	8e ed 02 00 	xor	r13,	2(r14)	;
    a0d8:	30 41       	ret			

0000a0da <GPIO_setAsInputPinWithPullDownResistor>:
    a0da:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0de:	0e 4c       	mov	r12,	r14	;
    a0e0:	0e 5c       	add	r12,	r14	;
    a0e2:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a0e6:	1c b3       	bit	#1,	r12	;r3 As==01
    a0e8:	02 20       	jnz	$+6      	;abs 0xa0ee
    a0ea:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a0ee:	0c 4d       	mov	r13,	r12	;
    a0f0:	3c e3       	inv	r12		;
    a0f2:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a0f6:	8e fc 04 00 	and	r12,	4(r14)	;
    a0fa:	8e dd 06 00 	bis	r13,	6(r14)	;
    a0fe:	8e fc 02 00 	and	r12,	2(r14)	;
    a102:	30 41       	ret			

0000a104 <GPIO_setAsInputPinWithPullUpResistor>:
    a104:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a108:	0e 4c       	mov	r12,	r14	;
    a10a:	0e 5c       	add	r12,	r14	;
    a10c:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a110:	1c b3       	bit	#1,	r12	;r3 As==01
    a112:	02 20       	jnz	$+6      	;abs 0xa118
    a114:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a118:	0c 4d       	mov	r13,	r12	;
    a11a:	3c e3       	inv	r12		;
    a11c:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    a120:	8e fc 04 00 	and	r12,	4(r14)	;
    a124:	8e dd 06 00 	bis	r13,	6(r14)	;
    a128:	8e dd 02 00 	bis	r13,	2(r14)	;
    a12c:	30 41       	ret			

0000a12e <GPIO_getInputPinValue>:
    a12e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a132:	0e 4c       	mov	r12,	r14	;
    a134:	0e 5c       	add	r12,	r14	;
    a136:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a13a:	1c b3       	bit	#1,	r12	;r3 As==01
    a13c:	02 20       	jnz	$+6      	;abs 0xa142
    a13e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a142:	2d fe       	and	@r14,	r13	;
    a144:	0c 43       	clr	r12		;
    a146:	0c 8d       	sub	r13,	r12	;
    a148:	0c dd       	bis	r13,	r12	;
    a14a:	5c 03       	rrum	#1,	r12	;
    a14c:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a150:	30 41       	ret			

0000a152 <GPIO_enableInterrupt>:
    a152:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a156:	0e 4c       	mov	r12,	r14	;
    a158:	0e 5c       	add	r12,	r14	;
    a15a:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a15e:	1c b3       	bit	#1,	r12	;r3 As==01
    a160:	02 20       	jnz	$+6      	;abs 0xa166
    a162:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a166:	8e dd 1a 00 	bis	r13,	26(r14)	; 0x001a
    a16a:	30 41       	ret			

0000a16c <GPIO_disableInterrupt>:
    a16c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a170:	0e 4c       	mov	r12,	r14	;
    a172:	0e 5c       	add	r12,	r14	;
    a174:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a178:	1c b3       	bit	#1,	r12	;r3 As==01
    a17a:	02 20       	jnz	$+6      	;abs 0xa180
    a17c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a180:	8e cd 1a 00 	bic	r13,	26(r14)	; 0x001a
    a184:	30 41       	ret			

0000a186 <GPIO_getInterruptStatus>:
    a186:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a18a:	0e 4c       	mov	r12,	r14	;
    a18c:	0e 5c       	add	r12,	r14	;
    a18e:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a192:	1c b3       	bit	#1,	r12	;r3 As==01
    a194:	02 20       	jnz	$+6      	;abs 0xa19a
    a196:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a19a:	0c 4d       	mov	r13,	r12	;
    a19c:	1c fe 1c 00 	and	28(r14),r12	;0x0001c
    a1a0:	30 41       	ret			

0000a1a2 <GPIO_clearInterrupt>:
    a1a2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a1a6:	0e 4c       	mov	r12,	r14	;
    a1a8:	0e 5c       	add	r12,	r14	;
    a1aa:	1e 4e f2 81 	mov	-32270(r14),r14	;0xffff81f2
    a1ae:	1c b3       	bit	#1,	r12	;r3 As==01
    a1b0:	02 20       	jnz	$+6      	;abs 0xa1b6
    a1b2:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1b6:	8e cd 1c 00 	bic	r13,	28(r14)	; 0x001c
    a1ba:	30 41       	ret			

0000a1bc <GPIO_selectInterruptEdge>:
    a1bc:	4f 4c       	mov.b	r12,	r15	;
    a1be:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a1c2:	0c 4f       	mov	r15,	r12	;
    a1c4:	0c 5f       	add	r15,	r12	;
    a1c6:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a1ca:	1f b3       	bit	#1,	r15	;r3 As==01
    a1cc:	02 20       	jnz	$+6      	;abs 0xa1d2
    a1ce:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1d2:	3c 50 18 00 	add	#24,	r12	;#0x0018
    a1d6:	0e 93       	cmp	#0,	r14	;r3 As==00
    a1d8:	03 20       	jnz	$+8      	;abs 0xa1e0
    a1da:	8c cd 00 00 	bic	r13,	0(r12)	;
    a1de:	02 3c       	jmp	$+6      	;abs 0xa1e4
    a1e0:	8c dd 00 00 	bis	r13,	0(r12)	;
    a1e4:	30 41       	ret			

0000a1e6 <GPIO_setDriveStrength>:
    a1e6:	4f 4c       	mov.b	r12,	r15	;
    a1e8:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a1ec:	0c 4f       	mov	r15,	r12	;
    a1ee:	0c 5f       	add	r15,	r12	;
    a1f0:	1c 4c f2 81 	mov	-32270(r12),r12	;0xffff81f2
    a1f4:	1f b3       	bit	#1,	r15	;r3 As==01
    a1f6:	02 20       	jnz	$+6      	;abs 0xa1fc
    a1f8:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a1fc:	3c 52       	add	#8,	r12	;r2 As==11
    a1fe:	0e 93       	cmp	#0,	r14	;r3 As==00
    a200:	03 20       	jnz	$+8      	;abs 0xa208
    a202:	8c cd 00 00 	bic	r13,	0(r12)	;
    a206:	02 3c       	jmp	$+6      	;abs 0xa20c
    a208:	8c dd 00 00 	bis	r13,	0(r12)	;
    a20c:	30 41       	ret			

0000a20e <DMA_init>:
    a20e:	6f 4c       	mov.b	@r12,	r15	;
    a210:	0e 4f       	mov	r15,	r14	;
    a212:	5e 0f       	rrum	#4,	r14	;
    a214:	5b 4c 07 00 	mov.b	7(r12),	r11	;
    a218:	5d 4c 08 00 	mov.b	8(r12),	r13	;
    a21c:	0d 5b       	add	r11,	r13	;
    a21e:	1d 5c 02 00 	add	2(r12),	r13	;
    a222:	8f 4d 10 05 	mov	r13,	1296(r15); 0x0510
    a226:	6d 4c       	mov.b	@r12,	r13	;
    a228:	9d 4c 04 00 	mov	4(r12),	1306(r13); 0x051a
    a22c:	1a 05 
    a22e:	4d 4e       	mov.b	r14,	r13	;
    a230:	7d f0 0e 00 	and.b	#14,	r13	;#0x000e
    a234:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a238:	3d 50 00 05 	add	#1280,	r13	;#0x0500
    a23c:	1e b3       	bit	#1,	r14	;r3 As==01
    a23e:	08 24       	jz	$+18     	;abs 0xa250
    a240:	bd f0 ff 00 	and	#255,	0(r13)	;#0x00ff
    a244:	00 00 
    a246:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a24a:	47 18 0c 5c 	rpt #8 { rlax.w	r12		;
    a24e:	05 3c       	jmp	$+12     	;abs 0xa25a
    a250:	bd f0 00 ff 	and	#65280,	0(r13)	;#0xff00
    a254:	00 00 
    a256:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    a25a:	8d dc 00 00 	bis	r12,	0(r13)	;
    a25e:	30 41       	ret			

0000a260 <DMA_setTransferSize>:
    a260:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a264:	8c 4d 1a 05 	mov	r13,	1306(r12); 0x051a
    a268:	30 41       	ret			

0000a26a <DMA_getTransferSize>:
    a26a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a26e:	1c 4c 1a 05 	mov	1306(r12),r12	;0x0051a
    a272:	30 41       	ret			

0000a274 <DMA_setSrcAddress>:
    a274:	21 82       	sub	#4,	r1	;r2 As==10
    a276:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a27a:	81 4d 00 00 	mov	r13,	0(r1)	;
    a27e:	81 4e 02 00 	mov	r14,	2(r1)	;
    a282:	0d 4c       	mov	r12,	r13	;
    a284:	3d 50 12 05 	add	#1298,	r13	;#0x0512
    a288:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a28c:	00 00 
    a28e:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a292:	bc f0 ff fc 	and	#64767,	0(r12)	;#0xfcff
    a296:	00 00 
    a298:	8c df 00 00 	bis	r15,	0(r12)	;
    a29c:	21 52       	add	#4,	r1	;r2 As==10
    a29e:	30 41       	ret			

0000a2a0 <DMA_setDstAddress>:
    a2a0:	21 82       	sub	#4,	r1	;r2 As==10
    a2a2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2a6:	81 4d 00 00 	mov	r13,	0(r1)	;
    a2aa:	81 4e 02 00 	mov	r14,	2(r1)	;
    a2ae:	0d 4c       	mov	r12,	r13	;
    a2b0:	3d 50 16 05 	add	#1302,	r13	;#0x0516
    a2b4:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    a2b8:	00 00 
    a2ba:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    a2be:	bc f0 ff f3 	and	#62463,	0(r12)	;#0xf3ff
    a2c2:	00 00 
    a2c4:	41 18 0f 5f 	rpt #2 { rlax.w	r15		;
    a2c8:	8c df 00 00 	bis	r15,	0(r12)	;
    a2cc:	21 52       	add	#4,	r1	;r2 As==10
    a2ce:	30 41       	ret			

0000a2d0 <DMA_enableTransfers>:
    a2d0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2d4:	bc d0 10 00 	bis	#16,	1296(r12);#0x0010, 0x0510
    a2d8:	10 05 
    a2da:	30 41       	ret			

0000a2dc <DMA_disableTransfers>:
    a2dc:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2e0:	bc f0 ef ff 	and	#65519,	1296(r12);#0xffef, 0x0510
    a2e4:	10 05 
    a2e6:	30 41       	ret			

0000a2e8 <DMA_startTransfer>:
    a2e8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2ec:	9c d3 10 05 	bis	#1,	1296(r12);r3 As==01, 0x0510
    a2f0:	30 41       	ret			

0000a2f2 <DMA_enableInterrupt>:
    a2f2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a2f6:	ac d2 10 05 	bis	#4,	1296(r12);r2 As==10, 0x0510
    a2fa:	30 41       	ret			

0000a2fc <DMA_disableInterrupt>:
    a2fc:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a300:	ac c2 10 05 	bic	#4,	1296(r12);r2 As==10, 0x0510
    a304:	30 41       	ret			

0000a306 <DMA_getInterruptStatus>:
    a306:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a30a:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a30e:	3c f2       	and	#8,	r12	;r2 As==11
    a310:	30 41       	ret			

0000a312 <DMA_clearInterrupt>:
    a312:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a316:	bc c2 10 05 	bic	#8,	1296(r12);r2 As==11, 0x0510
    a31a:	30 41       	ret			

0000a31c <DMA_getNMIAbortStatus>:
    a31c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a320:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    a324:	2c f3       	and	#2,	r12	;r3 As==10
    a326:	30 41       	ret			

0000a328 <DMA_clearNMIAbort>:
    a328:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a32c:	ac c3 10 05 	bic	#2,	1296(r12);r3 As==10, 0x0510
    a330:	30 41       	ret			

0000a332 <DMA_disableTransferDuringReadModifyWrite>:
    a332:	a2 d2 08 05 	bis	#4,	&0x0508	;r2 As==10
    a336:	30 41       	ret			

0000a338 <DMA_enableTransferDuringReadModifyWrite>:
    a338:	a2 c2 08 05 	bic	#4,	&0x0508	;r2 As==10
    a33c:	30 41       	ret			

0000a33e <DMA_enableRoundRobinPriority>:
    a33e:	a2 d3 08 05 	bis	#2,	&0x0508	;r3 As==10
    a342:	30 41       	ret			

0000a344 <DMA_disableRoundRobinPriority>:
    a344:	a2 c3 08 05 	bic	#2,	&0x0508	;r3 As==10
    a348:	30 41       	ret			

0000a34a <DMA_enableNMIAbort>:
    a34a:	92 d3 08 05 	bis	#1,	&0x0508	;r3 As==01
    a34e:	30 41       	ret			

0000a350 <DMA_disableNMIAbort>:
    a350:	92 c3 08 05 	bic	#1,	&0x0508	;r3 As==01
    a354:	30 41       	ret			

0000a356 <SFR_enableInterrupt>:
    a356:	c2 dc 00 01 	bis.b	r12,	&0x0100	;
    a35a:	30 41       	ret			

0000a35c <SFR_disableInterrupt>:
    a35c:	c2 cc 00 01 	bic.b	r12,	&0x0100	;
    a360:	30 41       	ret			

0000a362 <SFR_getInterruptStatus>:
    a362:	5c f2 02 01 	and.b	&0x0102,r12	;0x0102
    a366:	30 41       	ret			

0000a368 <SFR_clearInterrupt>:
    a368:	c2 cc 02 01 	bic.b	r12,	&0x0102	;
    a36c:	30 41       	ret			

0000a36e <SFR_setResetPinPullResistor>:
    a36e:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a372:	fd f0 f3 ff 	and.b	#65523,	0(r13)	;#0xfff3
    a376:	00 00 
    a378:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a37c:	30 41       	ret			

0000a37e <SFR_setNMIEdge>:
    a37e:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a382:	ed c3 00 00 	bic.b	#2,	0(r13)	;r3 As==10
    a386:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a38a:	30 41       	ret			

0000a38c <SFR_setResetNMIPinFunction>:
    a38c:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    a390:	dd c3 00 00 	bic.b	#1,	0(r13)	;r3 As==01
    a394:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    a398:	30 41       	ret			

0000a39a <privateUCSSourceClockFromDCO>:
    a39a:	5a 15       	pushm	#6,	r10	;16-bit words
    a39c:	07 4c       	mov	r12,	r7	;
    a39e:	16 42 64 01 	mov	&0x0164,r6	;0x0164
    a3a2:	36 f0 ff 03 	and	#1023,	r6	;#0x03ff
    a3a6:	5f 42 66 01 	mov.b	&0x0166,r15	;0x0166
    a3aa:	7f f0 07 00 	and.b	#7,	r15	;
    a3ae:	4d 4f       	mov.b	r15,	r13	;
    a3b0:	7c 40 03 00 	mov.b	#3,	r12	;
    a3b4:	4c 9f       	cmp.b	r15,	r12	;
    a3b6:	05 28       	jnc	$+12     	;abs 0xa3c2
    a3b8:	1c 43       	mov	#1,	r12	;r3 As==01
    a3ba:	b0 12 a4 b0 	call	#45220		;#0xb0a4
    a3be:	0a 4c       	mov	r12,	r10	;
    a3c0:	0c 3c       	jmp	$+26     	;abs 0xa3da
    a3c2:	6f 92       	cmp.b	#4,	r15	;r2 As==10
    a3c4:	06 24       	jz	$+14     	;abs 0xa3d2
    a3c6:	7f 90 05 00 	cmp.b	#5,	r15	;
    a3ca:	06 20       	jnz	$+14     	;abs 0xa3d8
    a3cc:	3a 40 10 00 	mov	#16,	r10	;#0x0010
    a3d0:	04 3c       	jmp	$+10     	;abs 0xa3da
    a3d2:	3a 40 0c 00 	mov	#12,	r10	;#0x000c
    a3d6:	01 3c       	jmp	$+4      	;abs 0xa3da
    a3d8:	1a 43       	mov	#1,	r10	;r3 As==01
    a3da:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    a3de:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    a3e2:	7c 90 20 00 	cmp.b	#32,	r12	;#0x0020
    a3e6:	17 24       	jz	$+48     	;abs 0xa416
    a3e8:	7c 90 50 00 	cmp.b	#80,	r12	;#0x0050
    a3ec:	23 24       	jz	$+72     	;abs 0xa434
    a3ee:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a3f0:	2f 20       	jnz	$+96     	;abs 0xa450
    a3f2:	18 42 48 25 	mov	&0x2548,r8	;0x2548
    a3f6:	19 42 4a 25 	mov	&0x254a,r9	;0x254a
    a3fa:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a3fe:	6c 01 
    a400:	0e 20       	jnz	$+30     	;abs 0xa41e
    a402:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a406:	24 24       	jz	$+74     	;abs 0xa450
    a408:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a40c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a410:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a414:	1d 24       	jz	$+60     	;abs 0xa450
    a416:	38 40 00 80 	mov	#32768,	r8	;#0x8000
    a41a:	09 43       	clr	r9		;
    a41c:	19 3c       	jmp	$+52     	;abs 0xa450
    a41e:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a422:	16 24       	jz	$+46     	;abs 0xa450
    a424:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a428:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a42c:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a430:	f2 23       	jnz	$-26     	;abs 0xa416
    a432:	0e 3c       	jmp	$+30     	;abs 0xa450
    a434:	18 42 44 25 	mov	&0x2544,r8	;0x2544
    a438:	19 42 46 25 	mov	&0x2546,r9	;0x2546
    a43c:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a440:	07 24       	jz	$+16     	;abs 0xa450
    a442:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a446:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a44a:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a44e:	e3 23       	jnz	$-56     	;abs 0xa416
    a450:	0e 46       	mov	r6,	r14	;
    a452:	1e 53       	inc	r14		;
    a454:	35 40 bc b1 	mov	#45500,	r5	;#0xb1bc
    a458:	0c 48       	mov	r8,	r12	;
    a45a:	0d 49       	mov	r9,	r13	;
    a45c:	0f 43       	clr	r15		;
    a45e:	85 12       	call	r5		;
    a460:	0e 4a       	mov	r10,	r14	;
    a462:	0f 43       	clr	r15		;
    a464:	b0 12 72 b0 	call	#45170		;#0xb072
    a468:	08 4c       	mov	r12,	r8	;
    a46a:	09 4d       	mov	r13,	r9	;
    a46c:	0b 45       	mov	r5,	r11	;
    a46e:	37 90 03 00 	cmp	#3,	r7	;
    a472:	16 20       	jnz	$+46     	;abs 0xa4a0
    a474:	1c 42 64 01 	mov	&0x0164,r12	;0x0164
    a478:	3c f0 00 70 	and	#28672,	r12	;#0x7000
    a47c:	5c 03       	rrum	#1,	r12	;
    a47e:	4a 18 0c 11 	rpt #11 { rrax.w	r12		;
    a482:	0d 43       	clr	r13		;
    a484:	1e 43       	mov	#1,	r14	;r3 As==01
    a486:	0d 9c       	cmp	r12,	r13	;
    a488:	05 2c       	jc	$+12     	;abs 0xa494
    a48a:	0e 5e       	rla	r14		;
    a48c:	5d 53       	inc.b	r13		;
    a48e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a492:	f9 3f       	jmp	$-12     	;abs 0xa486
    a494:	0c 48       	mov	r8,	r12	;
    a496:	0d 49       	mov	r9,	r13	;
    a498:	0f 43       	clr	r15		;
    a49a:	8b 12       	call	r11		;
    a49c:	08 4c       	mov	r12,	r8	;
    a49e:	09 4d       	mov	r13,	r9	;
    a4a0:	0c 48       	mov	r8,	r12	;
    a4a2:	0d 49       	mov	r9,	r13	;
    a4a4:	55 17       	popm	#6,	r10	;16-bit words
    a4a6:	30 41       	ret			

0000a4a8 <privateUCSComputeCLKFrequency>:
    a4a8:	0a 15       	pushm	#1,	r10	;16-bit words
    a4aa:	0b 43       	clr	r11		;
    a4ac:	1a 43       	mov	#1,	r10	;r3 As==01
    a4ae:	0b 9d       	cmp	r13,	r11	;
    a4b0:	07 2c       	jc	$+16     	;abs 0xa4c0
    a4b2:	4a 5a       	rla.b	r10		;
    a4b4:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a4b8:	5b 53       	inc.b	r11		;
    a4ba:	3b f0 ff 00 	and	#255,	r11	;#0x00ff
    a4be:	f7 3f       	jmp	$-16     	;abs 0xa4ae
    a4c0:	2c 93       	cmp	#2,	r12	;r3 As==10
    a4c2:	3f 24       	jz	$+128    	;abs 0xa542
    a4c4:	2d 43       	mov	#2,	r13	;r3 As==10
    a4c6:	0d 9c       	cmp	r12,	r13	;
    a4c8:	0e 28       	jnc	$+30     	;abs 0xa4e6
    a4ca:	0c 93       	cmp	#0,	r12	;r3 As==00
    a4cc:	13 24       	jz	$+40     	;abs 0xa4f4
    a4ce:	1c 93       	cmp	#1,	r12	;r3 As==01
    a4d0:	5a 20       	jnz	$+182    	;abs 0xa586
    a4d2:	3c 40 10 27 	mov	#10000,	r12	;#0x2710
    a4d6:	0d 4a       	mov	r10,	r13	;
    a4d8:	b0 12 32 af 	call	#44850		;#0xaf32
    a4dc:	0e 4c       	mov	r12,	r14	;
    a4de:	0f 4c       	mov	r12,	r15	;
    a4e0:	4e 18 0f 11 	rpt #15 { rrax.w	r15		;
    a4e4:	50 3c       	jmp	$+162    	;abs 0xa586
    a4e6:	2d 42       	mov	#4,	r13	;r2 As==10
    a4e8:	0d 9c       	cmp	r12,	r13	;
    a4ea:	45 2c       	jc	$+140    	;abs 0xa576
    a4ec:	3c 90 05 00 	cmp	#5,	r12	;
    a4f0:	30 24       	jz	$+98     	;abs 0xa552
    a4f2:	49 3c       	jmp	$+148    	;abs 0xa586
    a4f4:	1c 42 48 25 	mov	&0x2548,r12	;0x2548
    a4f8:	1d 42 4a 25 	mov	&0x254a,r13	;0x254a
    a4fc:	0e 4a       	mov	r10,	r14	;
    a4fe:	0f 43       	clr	r15		;
    a500:	b0 12 72 b0 	call	#45170		;#0xb072
    a504:	0e 4c       	mov	r12,	r14	;
    a506:	0f 4d       	mov	r13,	r15	;
    a508:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    a50c:	6c 01 
    a50e:	0e 20       	jnz	$+30     	;abs 0xa52c
    a510:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a514:	38 24       	jz	$+114    	;abs 0xa586
    a516:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a51a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a51e:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a522:	31 24       	jz	$+100    	;abs 0xa586
    a524:	3e 40 00 80 	mov	#32768,	r14	;#0x8000
    a528:	0f 43       	clr	r15		;
    a52a:	2d 3c       	jmp	$+92     	;abs 0xa586
    a52c:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a530:	2a 24       	jz	$+86     	;abs 0xa586
    a532:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a536:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a53a:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a53e:	f2 23       	jnz	$-26     	;abs 0xa524
    a540:	22 3c       	jmp	$+70     	;abs 0xa586
    a542:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    a546:	0d 43       	clr	r13		;
    a548:	0e 4a       	mov	r10,	r14	;
    a54a:	0f 43       	clr	r15		;
    a54c:	b0 12 fe af 	call	#45054		;#0xaffe
    a550:	18 3c       	jmp	$+50     	;abs 0xa582
    a552:	1c 42 44 25 	mov	&0x2544,r12	;0x2544
    a556:	1d 42 46 25 	mov	&0x2546,r13	;0x2546
    a55a:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a55e:	04 24       	jz	$+10     	;abs 0xa568
    a560:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a564:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a568:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a56c:	06 24       	jz	$+14     	;abs 0xa57a
    a56e:	2c 42       	mov	#4,	r12	;r2 As==10
    a570:	b0 12 9a a3 	call	#41882		;#0xa39a
    a574:	06 3c       	jmp	$+14     	;abs 0xa582
    a576:	b0 12 9a a3 	call	#41882		;#0xa39a
    a57a:	0e 4a       	mov	r10,	r14	;
    a57c:	0f 43       	clr	r15		;
    a57e:	b0 12 72 b0 	call	#45170		;#0xb072
    a582:	0e 4c       	mov	r12,	r14	;
    a584:	0f 4d       	mov	r13,	r15	;
    a586:	0c 4e       	mov	r14,	r12	;
    a588:	0d 4f       	mov	r15,	r13	;
    a58a:	0a 17       	popm	#1,	r10	;16-bit words
    a58c:	30 41       	ret			

0000a58e <UCS_setExternalClockSource>:
    a58e:	82 4c 48 25 	mov	r12,	&0x2548	;
    a592:	82 4d 4a 25 	mov	r13,	&0x254a	;
    a596:	82 4e 44 25 	mov	r14,	&0x2544	;
    a59a:	82 4f 46 25 	mov	r15,	&0x2546	;
    a59e:	30 41       	ret			

0000a5a0 <UCS_initClockSignal>:
    a5a0:	0a 15       	pushm	#1,	r10	;16-bit words
    a5a2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a5a6:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    a5a8:	26 24       	jz	$+78     	;abs 0xa5f6
    a5aa:	6a 43       	mov.b	#2,	r10	;r3 As==10
    a5ac:	4a 9c       	cmp.b	r12,	r10	;
    a5ae:	0f 28       	jnc	$+32     	;abs 0xa5ce
    a5b0:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    a5b2:	42 20       	jnz	$+134    	;abs 0xa638
    a5b4:	b2 f0 ff f8 	and	#63743,	&0x0168	;#0xf8ff
    a5b8:	68 01 
    a5ba:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    a5be:	82 dd 68 01 	bis	r13,	&0x0168	;
    a5c2:	b2 f0 ff f8 	and	#63743,	&0x016a	;#0xf8ff
    a5c6:	6a 01 
    a5c8:	47 18 0e 5e 	rpt #8 { rlax.w	r14		;
    a5cc:	11 3c       	jmp	$+36     	;abs 0xa5f0
    a5ce:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    a5d0:	03 24       	jz	$+8      	;abs 0xa5d8
    a5d2:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    a5d4:	19 24       	jz	$+52     	;abs 0xa608
    a5d6:	30 3c       	jmp	$+98     	;abs 0xa638
    a5d8:	b2 f0 8f ff 	and	#65423,	&0x0168	;#0xff8f
    a5dc:	68 01 
    a5de:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a5e2:	82 dd 68 01 	bis	r13,	&0x0168	;
    a5e6:	b2 f0 8f ff 	and	#65423,	&0x016a	;#0xff8f
    a5ea:	6a 01 
    a5ec:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    a5f0:	82 de 6a 01 	bis	r14,	&0x016a	;
    a5f4:	21 3c       	jmp	$+68     	;abs 0xa638
    a5f6:	b2 f0 f8 ff 	and	#65528,	&0x0168	;#0xfff8
    a5fa:	68 01 
    a5fc:	82 dd 68 01 	bis	r13,	&0x0168	;
    a600:	b2 f0 f8 ff 	and	#65528,	&0x016a	;#0xfff8
    a604:	6a 01 
    a606:	f4 3f       	jmp	$-22     	;abs 0xa5f0
    a608:	f2 f0 8f ff 	and.b	#65423,	&0x0166	;#0xff8f
    a60c:	66 01 
    a60e:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a612:	c2 dd 66 01 	bis.b	r13,	&0x0166	;
    a616:	f2 f0 f8 ff 	and.b	#65528,	&0x0166	;#0xfff8
    a61a:	66 01 
    a61c:	2e 92       	cmp	#4,	r14	;r2 As==10
    a61e:	06 24       	jz	$+14     	;abs 0xa62c
    a620:	3e 90 05 00 	cmp	#5,	r14	;
    a624:	07 20       	jnz	$+16     	;abs 0xa634
    a626:	e2 d2 66 01 	bis.b	#4,	&0x0166	;r2 As==10
    a62a:	06 3c       	jmp	$+14     	;abs 0xa638
    a62c:	f2 d0 05 00 	bis.b	#5,	&0x0166	;
    a630:	66 01 
    a632:	02 3c       	jmp	$+6      	;abs 0xa638
    a634:	c2 de 66 01 	bis.b	r14,	&0x0166	;
    a638:	0a 17       	popm	#1,	r10	;16-bit words
    a63a:	30 41       	ret			

0000a63c <UCS_turnOnLFXT1>:
    a63c:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a640:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a644:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a648:	6c 01 
    a64a:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a64e:	6c 01 
    a650:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a654:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a658:	05 24       	jz	$+12     	;abs 0xa664
    a65a:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a65e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a662:	f8 3f       	jmp	$-14     	;abs 0xa654
    a664:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a668:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a66c:	0c dd       	bis	r13,	r12	;
    a66e:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a672:	30 41       	ret			

0000a674 <UCS_turnOnHFXT1>:
    a674:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a678:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a67c:	3d f0 c0 00 	and	#192,	r13	;#0x00c0
    a680:	0d 9c       	cmp	r12,	r13	;
    a682:	05 24       	jz	$+12     	;abs 0xa68e
    a684:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a688:	6c 01 
    a68a:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a68e:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a692:	6c 01 
    a694:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a698:	6c 01 
    a69a:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a69e:	05 24       	jz	$+12     	;abs 0xa6aa
    a6a0:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a6a4:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a6a8:	f8 3f       	jmp	$-14     	;abs 0xa69a
    a6aa:	30 41       	ret			

0000a6ac <UCS_bypassXT1>:
    a6ac:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a6b0:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a6b4:	6c 01 
    a6b6:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a6ba:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a6be:	6c 01 
    a6c0:	0c 93       	cmp	#0,	r12	;r3 As==00
    a6c2:	08 20       	jnz	$+18     	;abs 0xa6d4
    a6c4:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a6c8:	0d 24       	jz	$+28     	;abs 0xa6e4
    a6ca:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a6ce:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a6d2:	f8 3f       	jmp	$-14     	;abs 0xa6c4
    a6d4:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a6d8:	05 24       	jz	$+12     	;abs 0xa6e4
    a6da:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a6de:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a6e2:	f8 3f       	jmp	$-14     	;abs 0xa6d4
    a6e4:	30 41       	ret			

0000a6e6 <UCS_turnOnLFXT1WithTimeout>:
    a6e6:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a6ea:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a6ee:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    a6f2:	6c 01 
    a6f4:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    a6f8:	6c 01 
    a6fa:	82 dd 6c 01 	bis	r13,	&0x016c	;
    a6fe:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a702:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a706:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a70a:	04 24       	jz	$+10     	;abs 0xa714
    a70c:	3e 53       	add	#-1,	r14	;r3 As==11
    a70e:	0e 93       	cmp	#0,	r14	;r3 As==00
    a710:	f6 23       	jnz	$-18     	;abs 0xa6fe
    a712:	0b 3c       	jmp	$+24     	;abs 0xa72a
    a714:	0e 93       	cmp	#0,	r14	;r3 As==00
    a716:	09 24       	jz	$+20     	;abs 0xa72a
    a718:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a71c:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    a720:	0c dd       	bis	r13,	r12	;
    a722:	82 4c 6c 01 	mov	r12,	&0x016c	;
    a726:	1c 43       	mov	#1,	r12	;r3 As==01
    a728:	01 3c       	jmp	$+4      	;abs 0xa72c
    a72a:	0c 4e       	mov	r14,	r12	;
    a72c:	30 41       	ret			

0000a72e <UCS_turnOnHFXT1WithTimeout>:
    a72e:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    a732:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a736:	3e f0 c0 00 	and	#192,	r14	;#0x00c0
    a73a:	0e 9c       	cmp	r12,	r14	;
    a73c:	05 24       	jz	$+12     	;abs 0xa748
    a73e:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    a742:	6c 01 
    a744:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a748:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    a74c:	6c 01 
    a74e:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    a752:	6c 01 
    a754:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a758:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a75c:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a760:	05 24       	jz	$+12     	;abs 0xa76c
    a762:	3d 53       	add	#-1,	r13	;r3 As==11
    a764:	0d 93       	cmp	#0,	r13	;r3 As==00
    a766:	f6 23       	jnz	$-18     	;abs 0xa754
    a768:	0c 4d       	mov	r13,	r12	;
    a76a:	07 3c       	jmp	$+16     	;abs 0xa77a
    a76c:	0c 43       	clr	r12		;
    a76e:	0c 8d       	sub	r13,	r12	;
    a770:	0d dc       	bis	r12,	r13	;
    a772:	0c 4d       	mov	r13,	r12	;
    a774:	5c 03       	rrum	#1,	r12	;
    a776:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a77a:	30 41       	ret			

0000a77c <UCS_bypassXT1WithTimeout>:
    a77c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a780:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    a784:	6c 01 
    a786:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a78a:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    a78e:	6c 01 
    a790:	0c 93       	cmp	#0,	r12	;r3 As==00
    a792:	0e 20       	jnz	$+30     	;abs 0xa7b0
    a794:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    a798:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a79c:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    a7a0:	0e 24       	jz	$+30     	;abs 0xa7be
    a7a2:	3d 53       	add	#-1,	r13	;r3 As==11
    a7a4:	0d 93       	cmp	#0,	r13	;r3 As==00
    a7a6:	f6 23       	jnz	$-18     	;abs 0xa794
    a7a8:	12 3c       	jmp	$+38     	;abs 0xa7ce
    a7aa:	3d 53       	add	#-1,	r13	;r3 As==11
    a7ac:	0d 93       	cmp	#0,	r13	;r3 As==00
    a7ae:	0f 24       	jz	$+32     	;abs 0xa7ce
    a7b0:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    a7b4:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a7b8:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    a7bc:	f6 23       	jnz	$-18     	;abs 0xa7aa
    a7be:	0c 43       	clr	r12		;
    a7c0:	0c 8d       	sub	r13,	r12	;
    a7c2:	0d dc       	bis	r12,	r13	;
    a7c4:	0c 4d       	mov	r13,	r12	;
    a7c6:	5c 03       	rrum	#1,	r12	;
    a7c8:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a7cc:	01 3c       	jmp	$+4      	;abs 0xa7d0
    a7ce:	0c 43       	clr	r12		;
    a7d0:	30 41       	ret			

0000a7d2 <UCS_turnOffXT1>:
    a7d2:	92 d3 6c 01 	bis	#1,	&0x016c	;r3 As==01
    a7d6:	30 41       	ret			

0000a7d8 <UCS_turnOnXT2>:
    a7d8:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    a7dc:	3d f0 00 c0 	and	#49152,	r13	;#0xc000
    a7e0:	0d 9c       	cmp	r12,	r13	;
    a7e2:	05 24       	jz	$+12     	;abs 0xa7ee
    a7e4:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a7e8:	6c 01 
    a7ea:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a7ee:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a7f2:	6c 01 
    a7f4:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a7f8:	6c 01 
    a7fa:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a7fe:	05 24       	jz	$+12     	;abs 0xa80a
    a800:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a804:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a808:	f8 3f       	jmp	$-14     	;abs 0xa7fa
    a80a:	30 41       	ret			

0000a80c <UCS_bypassXT2>:
    a80c:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a810:	6c 01 
    a812:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a816:	05 24       	jz	$+12     	;abs 0xa822
    a818:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a81c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a820:	f8 3f       	jmp	$-14     	;abs 0xa812
    a822:	30 41       	ret			

0000a824 <UCS_turnOnXT2WithTimeout>:
    a824:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    a828:	3e f0 00 c0 	and	#49152,	r14	;#0xc000
    a82c:	0e 9c       	cmp	r12,	r14	;
    a82e:	05 24       	jz	$+12     	;abs 0xa83a
    a830:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    a834:	6c 01 
    a836:	82 dc 6c 01 	bis	r12,	&0x016c	;
    a83a:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    a83e:	6c 01 
    a840:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    a844:	6c 01 
    a846:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a84a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a84e:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a852:	05 24       	jz	$+12     	;abs 0xa85e
    a854:	3d 53       	add	#-1,	r13	;r3 As==11
    a856:	0d 93       	cmp	#0,	r13	;r3 As==00
    a858:	f6 23       	jnz	$-18     	;abs 0xa846
    a85a:	0c 4d       	mov	r13,	r12	;
    a85c:	07 3c       	jmp	$+16     	;abs 0xa86c
    a85e:	0c 43       	clr	r12		;
    a860:	0c 8d       	sub	r13,	r12	;
    a862:	0d dc       	bis	r12,	r13	;
    a864:	0c 4d       	mov	r13,	r12	;
    a866:	5c 03       	rrum	#1,	r12	;
    a868:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a86c:	30 41       	ret			

0000a86e <UCS_bypassXT2WithTimeout>:
    a86e:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    a872:	6c 01 
    a874:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    a878:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a87c:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    a880:	04 24       	jz	$+10     	;abs 0xa88a
    a882:	3c 53       	add	#-1,	r12	;r3 As==11
    a884:	0c 93       	cmp	#0,	r12	;r3 As==00
    a886:	f6 23       	jnz	$-18     	;abs 0xa874
    a888:	06 3c       	jmp	$+14     	;abs 0xa896
    a88a:	0d 43       	clr	r13		;
    a88c:	0d 8c       	sub	r12,	r13	;
    a88e:	0c dd       	bis	r13,	r12	;
    a890:	5c 03       	rrum	#1,	r12	;
    a892:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a896:	30 41       	ret			

0000a898 <UCS_turnOffXT2>:
    a898:	b2 d0 00 01 	bis	#256,	&0x016c	;#0x0100
    a89c:	6c 01 
    a89e:	30 41       	ret			

0000a8a0 <UCS_initFLL>:
    a8a0:	0a 15       	pushm	#1,	r10	;16-bit words
    a8a2:	0e 42       	mov	r2,	r14	;
    a8a4:	3e f0 40 00 	and	#64,	r14	;#0x0040
    a8a8:	3a 40 80 3e 	mov	#16000,	r10	;#0x3e80
    a8ac:	0a 9c       	cmp	r12,	r10	;
    a8ae:	06 2c       	jc	$+14     	;abs 0xa8bc
    a8b0:	12 c3       	clrc			
    a8b2:	0d 10       	rrc	r13		;
    a8b4:	1b 43       	mov	#1,	r11	;r3 As==01
    a8b6:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    a8ba:	03 3c       	jmp	$+8      	;abs 0xa8c2
    a8bc:	0c 5c       	rla	r12		;
    a8be:	0b 43       	clr	r11		;
    a8c0:	fa 3f       	jmp	$-10     	;abs 0xa8b6
    a8c2:	3a 40 00 02 	mov	#512,	r10	;#0x0200
    a8c6:	0a 9d       	cmp	r13,	r10	;
    a8c8:	05 2c       	jc	$+12     	;abs 0xa8d4
    a8ca:	3f 50 00 10 	add	#4096,	r15	;#0x1000
    a8ce:	12 c3       	clrc			
    a8d0:	0d 10       	rrc	r13		;
    a8d2:	f7 3f       	jmp	$-16     	;abs 0xa8c2
    a8d4:	32 d0 40 00 	bis	#64,	r2	;#0x0040
    a8d8:	c2 43 61 01 	mov.b	#0,	&0x0161	;r3 As==00
    a8dc:	b2 f0 00 fc 	and	#64512,	&0x0164	;#0xfc00
    a8e0:	64 01 
    a8e2:	3d 53       	add	#-1,	r13	;r3 As==11
    a8e4:	0d df       	bis	r15,	r13	;
    a8e6:	82 4d 64 01 	mov	r13,	&0x0164	;
    a8ea:	3d 40 76 02 	mov	#630,	r13	;#0x0276
    a8ee:	0d 9c       	cmp	r12,	r13	;
    a8f0:	03 28       	jnc	$+8      	;abs 0xa8f8
    a8f2:	c2 43 62 01 	mov.b	#0,	&0x0162	;r3 As==00
    a8f6:	33 3c       	jmp	$+104    	;abs 0xa95e
    a8f8:	3f 40 e1 04 	mov	#1249,	r15	;#0x04e1
    a8fc:	0f 9c       	cmp	r12,	r15	;
    a8fe:	04 28       	jnc	$+10     	;abs 0xa908
    a900:	f2 40 10 00 	mov.b	#16,	&0x0162	;#0x0010
    a904:	62 01 
    a906:	2b 3c       	jmp	$+88     	;abs 0xa95e
    a908:	3a 40 c3 09 	mov	#2499,	r10	;#0x09c3
    a90c:	0a 9c       	cmp	r12,	r10	;
    a90e:	04 28       	jnc	$+10     	;abs 0xa918
    a910:	f2 40 20 00 	mov.b	#32,	&0x0162	;#0x0020
    a914:	62 01 
    a916:	23 3c       	jmp	$+72     	;abs 0xa95e
    a918:	3d 40 87 13 	mov	#4999,	r13	;#0x1387
    a91c:	0d 9c       	cmp	r12,	r13	;
    a91e:	04 28       	jnc	$+10     	;abs 0xa928
    a920:	f2 40 30 00 	mov.b	#48,	&0x0162	;#0x0030
    a924:	62 01 
    a926:	1b 3c       	jmp	$+56     	;abs 0xa95e
    a928:	3f 40 0f 27 	mov	#9999,	r15	;#0x270f
    a92c:	0f 9c       	cmp	r12,	r15	;
    a92e:	04 28       	jnc	$+10     	;abs 0xa938
    a930:	f2 40 40 00 	mov.b	#64,	&0x0162	;#0x0040
    a934:	62 01 
    a936:	13 3c       	jmp	$+40     	;abs 0xa95e
    a938:	3a 40 1f 4e 	mov	#19999,	r10	;#0x4e1f
    a93c:	0a 9c       	cmp	r12,	r10	;
    a93e:	04 28       	jnc	$+10     	;abs 0xa948
    a940:	f2 40 50 00 	mov.b	#80,	&0x0162	;#0x0050
    a944:	62 01 
    a946:	0b 3c       	jmp	$+24     	;abs 0xa95e
    a948:	3d 40 3f 9c 	mov	#39999,	r13	;#0x9c3f
    a94c:	0d 9c       	cmp	r12,	r13	;
    a94e:	04 28       	jnc	$+10     	;abs 0xa958
    a950:	f2 40 60 00 	mov.b	#96,	&0x0162	;#0x0060
    a954:	62 01 
    a956:	03 3c       	jmp	$+8      	;abs 0xa95e
    a958:	f2 40 70 00 	mov.b	#112,	&0x0162	;#0x0070
    a95c:	62 01 
    a95e:	32 c0 40 00 	bic	#64,	r2	;#0x0040
    a962:	d2 b3 6e 01 	bit.b	#1,	&0x016e	;r3 As==01
    a966:	05 24       	jz	$+12     	;abs 0xa972
    a968:	d2 c3 6e 01 	bic.b	#1,	&0x016e	;r3 As==01
    a96c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    a970:	f8 3f       	jmp	$-14     	;abs 0xa962
    a972:	02 de       	bis	r14,	r2	;
    a974:	b2 f0 88 ff 	and	#65416,	&0x0168	;#0xff88
    a978:	68 01 
    a97a:	1b 93       	cmp	#1,	r11	;r3 As==01
    a97c:	04 20       	jnz	$+10     	;abs 0xa986
    a97e:	b2 d0 33 00 	bis	#51,	&0x0168	;#0x0033
    a982:	68 01 
    a984:	03 3c       	jmp	$+8      	;abs 0xa98c
    a986:	b2 d0 44 00 	bis	#68,	&0x0168	;#0x0044
    a98a:	68 01 
    a98c:	0a 17       	popm	#1,	r10	;16-bit words
    a98e:	30 41       	ret			

0000a990 <UCS_initFLLSettle>:
    a990:	21 82       	sub	#4,	r1	;r2 As==10
    a992:	0e 4d       	mov	r13,	r14	;
    a994:	44 18 0e 5e 	rpt #5 { rlax.w	r14		;
    a998:	81 4e 00 00 	mov	r14,	0(r1)	;
    a99c:	b0 12 a0 a8 	call	#43168		;#0xa8a0
    a9a0:	2c 41       	mov	@r1,	r12	;
    a9a2:	0d 4c       	mov	r12,	r13	;
    a9a4:	3d 53       	add	#-1,	r13	;r3 As==11
    a9a6:	81 4d 00 00 	mov	r13,	0(r1)	;
    a9aa:	0c 93       	cmp	#0,	r12	;r3 As==00
    a9ac:	0c 24       	jz	$+26     	;abs 0xa9c6
    a9ae:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    a9b2:	1c 41 02 00 	mov	2(r1),	r12	;
    a9b6:	3d 40 1d 00 	mov	#29,	r13	;#0x001d
    a9ba:	0d 9c       	cmp	r12,	r13	;
    a9bc:	f1 2b       	jnc	$-28     	;abs 0xa9a0
    a9be:	03 43       	nop			
    a9c0:	91 53 02 00 	inc	2(r1)		;
    a9c4:	f6 3f       	jmp	$-18     	;abs 0xa9b2
    a9c6:	21 52       	add	#4,	r1	;r2 As==10
    a9c8:	30 41       	ret			

0000a9ca <UCS_enableClockRequest>:
    a9ca:	c2 dc 70 01 	bis.b	r12,	&0x0170	;
    a9ce:	30 41       	ret			

0000a9d0 <UCS_disableClockRequest>:
    a9d0:	c2 cc 70 01 	bic.b	r12,	&0x0170	;
    a9d4:	30 41       	ret			

0000a9d6 <UCS_getFaultFlagStatus>:
    a9d6:	5c f2 6e 01 	and.b	&0x016e,r12	;0x016e
    a9da:	30 41       	ret			

0000a9dc <UCS_clearFaultFlag>:
    a9dc:	c2 cc 6e 01 	bic.b	r12,	&0x016e	;
    a9e0:	30 41       	ret			

0000a9e2 <UCS_turnOffSMCLK>:
    a9e2:	a2 d3 6c 01 	bis	#2,	&0x016c	;r3 As==10
    a9e6:	30 41       	ret			

0000a9e8 <UCS_turnOnSMCLK>:
    a9e8:	a2 c3 6c 01 	bic	#2,	&0x016c	;r3 As==10
    a9ec:	30 41       	ret			

0000a9ee <UCS_getACLK>:
    a9ee:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    a9f2:	3c f0 00 07 	and	#1792,	r12	;#0x0700
    a9f6:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    a9fa:	3d f0 00 07 	and	#1792,	r13	;#0x0700
    a9fe:	5c 0f       	rrum	#4,	r12	;
    aa00:	5c 0f       	rrum	#4,	r12	;
    aa02:	5d 0f       	rrum	#4,	r13	;
    aa04:	5d 0f       	rrum	#4,	r13	;
    aa06:	b0 12 a8 a4 	call	#42152		;#0xa4a8
    aa0a:	30 41       	ret			

0000aa0c <UCS_getSMCLK>:
    aa0c:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    aa10:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    aa14:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    aa18:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa1c:	3d f0 70 00 	and	#112,	r13	;#0x0070
    aa20:	5c 0f       	rrum	#4,	r12	;
    aa22:	5d 0f       	rrum	#4,	r13	;
    aa24:	b0 12 a8 a4 	call	#42152		;#0xa4a8
    aa28:	30 41       	ret			

0000aa2a <UCS_getMCLK>:
    aa2a:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    aa2e:	3c f0 07 00 	and	#7,	r12	;
    aa32:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    aa36:	3d f0 07 00 	and	#7,	r13	;
    aa3a:	b0 12 a8 a4 	call	#42152		;#0xa4a8
    aa3e:	30 41       	ret			

0000aa40 <UCS_clearAllOscFlagsWithTimeout>:
    aa40:	f2 f0 f0 ff 	and.b	#65520,	&0x016e	;#0xfff0
    aa44:	6e 01 
    aa46:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    aa4a:	e2 b3 02 01 	bit.b	#2,	&0x0102	;r3 As==10
    aa4e:	03 24       	jz	$+8      	;abs 0xaa56
    aa50:	3c 53       	add	#-1,	r12	;r3 As==11
    aa52:	0c 93       	cmp	#0,	r12	;r3 As==00
    aa54:	f5 23       	jnz	$-20     	;abs 0xaa40
    aa56:	5c 42 6e 01 	mov.b	&0x016e,r12	;0x016e
    aa5a:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    aa5e:	3c f0 0f 00 	and	#15,	r12	;#0x000f
    aa62:	30 41       	ret			

0000aa64 <PMM_enableSvsL>:
    aa64:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aa68:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aa6c:	00 00 
    aa6e:	b2 d0 00 04 	bis	#1024,	&0x0126	;#0x0400
    aa72:	26 01 
    aa74:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aa78:	30 41       	ret			

0000aa7a <PMM_disableSvsL>:
    aa7a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aa7e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aa82:	00 00 
    aa84:	b2 f0 ff fb 	and	#64511,	&0x0126	;#0xfbff
    aa88:	26 01 
    aa8a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aa8e:	30 41       	ret			

0000aa90 <PMM_enableSvmL>:
    aa90:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aa94:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aa98:	00 00 
    aa9a:	b2 d0 00 40 	bis	#16384,	&0x0126	;#0x4000
    aa9e:	26 01 
    aaa0:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aaa4:	30 41       	ret			

0000aaa6 <PMM_disableSvmL>:
    aaa6:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aaaa:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aaae:	00 00 
    aab0:	b2 f0 ff bf 	and	#49151,	&0x0126	;#0xbfff
    aab4:	26 01 
    aab6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aaba:	30 41       	ret			

0000aabc <PMM_enableSvsH>:
    aabc:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aac0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aac4:	00 00 
    aac6:	b2 d0 00 04 	bis	#1024,	&0x0124	;#0x0400
    aaca:	24 01 
    aacc:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aad0:	30 41       	ret			

0000aad2 <PMM_disableSvsH>:
    aad2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aad6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aada:	00 00 
    aadc:	b2 f0 ff fb 	and	#64511,	&0x0124	;#0xfbff
    aae0:	24 01 
    aae2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aae6:	30 41       	ret			

0000aae8 <PMM_enableSvmH>:
    aae8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    aaec:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aaf0:	00 00 
    aaf2:	b2 d0 00 40 	bis	#16384,	&0x0124	;#0x4000
    aaf6:	24 01 
    aaf8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aafc:	30 41       	ret			

0000aafe <PMM_disableSvmH>:
    aafe:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab02:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab06:	00 00 
    ab08:	b2 f0 ff bf 	and	#49151,	&0x0124	;#0xbfff
    ab0c:	24 01 
    ab0e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab12:	30 41       	ret			

0000ab14 <PMM_enableSvsLSvmL>:
    ab14:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab18:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab1c:	00 00 
    ab1e:	b2 d0 00 44 	bis	#17408,	&0x0126	;#0x4400
    ab22:	26 01 
    ab24:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab28:	30 41       	ret			

0000ab2a <PMM_disableSvsLSvmL>:
    ab2a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab2e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab32:	00 00 
    ab34:	b2 f0 ff bb 	and	#48127,	&0x0126	;#0xbbff
    ab38:	26 01 
    ab3a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab3e:	30 41       	ret			

0000ab40 <PMM_enableSvsHSvmH>:
    ab40:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab44:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab48:	00 00 
    ab4a:	b2 d0 00 44 	bis	#17408,	&0x0124	;#0x4400
    ab4e:	24 01 
    ab50:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab54:	30 41       	ret			

0000ab56 <PMM_disableSvsHSvmH>:
    ab56:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab5a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab5e:	00 00 
    ab60:	b2 f0 ff bb 	and	#48127,	&0x0124	;#0xbbff
    ab64:	24 01 
    ab66:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab6a:	30 41       	ret			

0000ab6c <PMM_enableSvsLReset>:
    ab6c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab70:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab74:	00 00 
    ab76:	b2 d0 00 01 	bis	#256,	&0x012e	;#0x0100
    ab7a:	2e 01 
    ab7c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab80:	30 41       	ret			

0000ab82 <PMM_disableSvsLReset>:
    ab82:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab86:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ab8a:	00 00 
    ab8c:	b2 f0 ff fe 	and	#65279,	&0x012e	;#0xfeff
    ab90:	2e 01 
    ab92:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ab96:	30 41       	ret			

0000ab98 <PMM_enableSvmLInterrupt>:
    ab98:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ab9c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    aba0:	00 00 
    aba2:	a2 d3 2e 01 	bis	#2,	&0x012e	;r3 As==10
    aba6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abaa:	30 41       	ret			

0000abac <PMM_disableSvmLInterrupt>:
    abac:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abb0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abb4:	00 00 
    abb6:	a2 c3 2e 01 	bic	#2,	&0x012e	;r3 As==10
    abba:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abbe:	30 41       	ret			

0000abc0 <PMM_enableSvsHReset>:
    abc0:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abc4:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abc8:	00 00 
    abca:	b2 d0 00 10 	bis	#4096,	&0x012e	;#0x1000
    abce:	2e 01 
    abd0:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abd4:	30 41       	ret			

0000abd6 <PMM_disableSvsHReset>:
    abd6:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abda:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abde:	00 00 
    abe0:	b2 f0 ff ef 	and	#61439,	&0x012e	;#0xefff
    abe4:	2e 01 
    abe6:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    abea:	30 41       	ret			

0000abec <PMM_enableSvmHInterrupt>:
    abec:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    abf0:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    abf4:	00 00 
    abf6:	b2 d0 20 00 	bis	#32,	&0x012e	;#0x0020
    abfa:	2e 01 
    abfc:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac00:	30 41       	ret			

0000ac02 <PMM_disableSvmHInterrupt>:
    ac02:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac06:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac0a:	00 00 
    ac0c:	b2 f0 df ff 	and	#65503,	&0x012e	;#0xffdf
    ac10:	2e 01 
    ac12:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac16:	30 41       	ret			

0000ac18 <PMM_clearPMMIFGS>:
    ac18:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac1c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac20:	00 00 
    ac22:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    ac26:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ac2a:	30 41       	ret			

0000ac2c <PMM_enableSvsLInLPMFastWake>:
    ac2c:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ac30:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ac34:	00 00 
    ac36:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ac3a:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    ac3e:	00 00 
    ac40:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    ac44:	00 00 
    ac46:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ac4a:	30 41       	ret			

0000ac4c <PMM_enableSvsLInLPMSlowWake>:
    ac4c:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ac50:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ac54:	00 00 
    ac56:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ac5a:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    ac5e:	00 00 
    ac60:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    ac64:	00 00 
    ac66:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ac6a:	30 41       	ret			

0000ac6c <PMM_disableSvsLInLPMFastWake>:
    ac6c:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    ac70:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ac74:	00 00 
    ac76:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    ac7a:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ac7e:	00 00 
    ac80:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ac84:	00 00 
    ac86:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ac8a:	30 41       	ret			

0000ac8c <PMM_disableSvsLInLPMSlowWake>:
    ac8c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ac90:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ac94:	00 00 
    ac96:	b2 f0 6f f7 	and	#63343,	&0x0126	;#0xf76f
    ac9a:	26 01 
    ac9c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    aca0:	30 41       	ret			

0000aca2 <PMM_enableSvsHInLPMNormPerf>:
    aca2:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    aca6:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acaa:	00 00 
    acac:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    acb0:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    acb4:	00 00 
    acb6:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    acba:	00 00 
    acbc:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    acc0:	30 41       	ret			

0000acc2 <PMM_enableSvsHInLPMFullPerf>:
    acc2:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acc6:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    acca:	00 00 
    accc:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    acd0:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    acd4:	00 00 
    acd6:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    acda:	00 00 
    acdc:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ace0:	30 41       	ret			

0000ace2 <PMM_disableSvsHInLPMNormPerf>:
    ace2:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ace6:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    acea:	00 00 
    acec:	b2 f0 6f f7 	and	#63343,	&0x0124	;#0xf76f
    acf0:	24 01 
    acf2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    acf6:	30 41       	ret			

0000acf8 <PMM_disableSvsHInLPMFullPerf>:
    acf8:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    acfc:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    ad00:	00 00 
    ad02:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    ad06:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    ad0a:	00 00 
    ad0c:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    ad10:	00 00 
    ad12:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    ad16:	30 41       	ret			

0000ad18 <PMM_optimizeSvsLInLPMFastWake>:
    ad18:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad1c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad20:	00 00 
    ad22:	b2 d0 90 08 	bis	#2192,	&0x0126	;#0x0890
    ad26:	26 01 
    ad28:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad2c:	30 41       	ret			

0000ad2e <PMM_optimizeSvsHInLPMFullPerf>:
    ad2e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    ad32:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    ad36:	00 00 
    ad38:	b2 d0 90 08 	bis	#2192,	&0x0124	;#0x0890
    ad3c:	24 01 
    ad3e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    ad42:	30 41       	ret			

0000ad44 <PMM_setVCoreUp>:
    ad44:	0a 15       	pushm	#1,	r10	;16-bit words
    ad46:	4e 4c       	mov.b	r12,	r14	;
    ad48:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    ad4c:	21 01 
    ad4e:	1f 42 2e 01 	mov	&0x012e,r15	;0x012e
    ad52:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    ad56:	2e 01 
    ad58:	1d 42 24 01 	mov	&0x0124,r13	;0x0124
    ad5c:	1c 42 26 01 	mov	&0x0126,r12	;0x0126
    ad60:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    ad64:	0b 4e       	mov	r14,	r11	;
    ad66:	3b d0 00 44 	bis	#17408,	r11	;#0x4400
    ad6a:	82 4b 24 01 	mov	r11,	&0x0124	;
    ad6e:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ad72:	2c 01 
    ad74:	fc 27       	jz	$-6      	;abs 0xad6e
    ad76:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ad7a:	2c 01 
    ad7c:	b2 b0 20 00 	bit	#32,	&0x012c	;#0x0020
    ad80:	2c 01 
    ad82:	12 24       	jz	$+38     	;abs 0xada8
    ad84:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    ad88:	2c 01 
    ad8a:	82 4d 24 01 	mov	r13,	&0x0124	;
    ad8e:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ad92:	2c 01 
    ad94:	fc 27       	jz	$-6      	;abs 0xad8e
    ad96:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ad9a:	2c 01 
    ad9c:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ada0:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ada4:	0c 43       	clr	r12		;
    ada6:	33 3c       	jmp	$+104    	;abs 0xae0e
    ada8:	0a 4e       	mov	r14,	r10	;
    adaa:	47 18 0a 5a 	rpt #8 { rlax.w	r10		;
    adae:	82 da 24 01 	bis	r10,	&0x0124	;
    adb2:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    adb6:	2c 01 
    adb8:	fc 27       	jz	$-6      	;abs 0xadb2
    adba:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    adbe:	2c 01 
    adc0:	c2 4e 20 01 	mov.b	r14,	&0x0120	;
    adc4:	0a db       	bis	r11,	r10	;
    adc6:	82 4a 26 01 	mov	r10,	&0x0126	;
    adca:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    adce:	fd 27       	jz	$-4      	;abs 0xadca
    add0:	92 c3 2c 01 	bic	#1,	&0x012c	;r3 As==01
    add4:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    add8:	26 01 
    adda:	3c f0 f8 fc 	and	#64760,	r12	;#0xfcf8
    adde:	82 dc 26 01 	bis	r12,	&0x0126	;
    ade2:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    ade6:	24 01 
    ade8:	3d f0 f8 fc 	and	#64760,	r13	;#0xfcf8
    adec:	82 dd 24 01 	bis	r13,	&0x0124	;
    adf0:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    adf4:	fd 27       	jz	$-4      	;abs 0xadf0
    adf6:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    adfa:	2c 01 
    adfc:	f9 27       	jz	$-12     	;abs 0xadf0
    adfe:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae02:	2c 01 
    ae04:	82 4f 2e 01 	mov	r15,	&0x012e	;
    ae08:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    ae0c:	1c 43       	mov	#1,	r12	;r3 As==01
    ae0e:	0a 17       	popm	#1,	r10	;16-bit words
    ae10:	30 41       	ret			

0000ae12 <PMM_setVCoreDown>:
    ae12:	2a 15       	pushm	#3,	r10	;16-bit words
    ae14:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ae18:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    ae1c:	21 01 
    ae1e:	19 42 2e 01 	mov	&0x012e,r9	;0x012e
    ae22:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    ae26:	2e 01 
    ae28:	1e 42 24 01 	mov	&0x0124,r14	;0x0124
    ae2c:	0f 43       	clr	r15		;
    ae2e:	1a 42 26 01 	mov	&0x0126,r10	;0x0126
    ae32:	0b 43       	clr	r11		;
    ae34:	b2 f0 cc ff 	and	#65484,	&0x012c	;#0xffcc
    ae38:	2c 01 
    ae3a:	08 4c       	mov	r12,	r8	;
    ae3c:	38 d0 00 44 	bis	#17408,	r8	;#0x4400
    ae40:	0d 4c       	mov	r12,	r13	;
    ae42:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    ae46:	0d d8       	bis	r8,	r13	;
    ae48:	82 4d 24 01 	mov	r13,	&0x0124	;
    ae4c:	82 4d 26 01 	mov	r13,	&0x0126	;
    ae50:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae54:	2c 01 
    ae56:	fc 27       	jz	$-6      	;abs 0xae50
    ae58:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae5c:	f9 27       	jz	$-12     	;abs 0xae50
    ae5e:	b2 f0 ee ff 	and	#65518,	&0x012c	;#0xffee
    ae62:	2c 01 
    ae64:	c2 4c 20 01 	mov.b	r12,	&0x0120	;
    ae68:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    ae6c:	26 01 
    ae6e:	3a f0 f8 fc 	and	#64760,	r10	;#0xfcf8
    ae72:	82 da 26 01 	bis	r10,	&0x0126	;
    ae76:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    ae7a:	24 01 
    ae7c:	3e f0 f8 fc 	and	#64760,	r14	;#0xfcf8
    ae80:	82 de 24 01 	bis	r14,	&0x0124	;
    ae84:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    ae88:	fd 27       	jz	$-4      	;abs 0xae84
    ae8a:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    ae8e:	2c 01 
    ae90:	f9 27       	jz	$-12     	;abs 0xae84
    ae92:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    ae96:	2c 01 
    ae98:	82 49 2e 01 	mov	r9,	&0x012e	;
    ae9c:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    aea0:	1c 43       	mov	#1,	r12	;r3 As==01
    aea2:	28 17       	popm	#3,	r10	;16-bit words
    aea4:	30 41       	ret			

0000aea6 <PMM_setVCore>:
    aea6:	4a 15       	pushm	#5,	r10	;16-bit words
    aea8:	0a 4c       	mov	r12,	r10	;
    aeaa:	3a f0 03 00 	and	#3,	r10	;
    aeae:	16 42 20 01 	mov	&0x0120,r6	;0x0120
    aeb2:	36 f0 03 00 	and	#3,	r6	;
    aeb6:	1c 43       	mov	#1,	r12	;r3 As==01
    aeb8:	49 4a       	mov.b	r10,	r9	;
    aeba:	38 40 12 ae 	mov	#44562,	r8	;#0xae12
    aebe:	37 40 44 ad 	mov	#44356,	r7	;#0xad44
    aec2:	49 96       	cmp.b	r6,	r9	;
    aec4:	13 24       	jz	$+40     	;abs 0xaeec
    aec6:	0c 93       	cmp	#0,	r12	;r3 As==00
    aec8:	11 24       	jz	$+36     	;abs 0xaeec
    aeca:	4c 46       	mov.b	r6,	r12	;
    aecc:	46 9a       	cmp.b	r10,	r6	;
    aece:	04 2c       	jc	$+10     	;abs 0xaed8
    aed0:	5c 53       	inc.b	r12		;
    aed2:	46 4c       	mov.b	r12,	r6	;
    aed4:	87 12       	call	r7		;
    aed6:	03 3c       	jmp	$+8      	;abs 0xaede
    aed8:	7c 53       	add.b	#-1,	r12	;r3 As==11
    aeda:	46 4c       	mov.b	r12,	r6	;
    aedc:	88 12       	call	r8		;
    aede:	0d 43       	clr	r13		;
    aee0:	0d 8c       	sub	r12,	r13	;
    aee2:	0c dd       	bis	r13,	r12	;
    aee4:	5c 03       	rrum	#1,	r12	;
    aee6:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    aeea:	eb 3f       	jmp	$-40     	;abs 0xaec2
    aeec:	46 17       	popm	#5,	r10	;16-bit words
    aeee:	30 41       	ret			

0000aef0 <PMM_getInterruptStatus>:
    aef0:	1c f2 2c 01 	and	&0x012c,r12	;0x012c
    aef4:	30 41       	ret			

0000aef6 <udivmodhi4>:
    aef6:	3b 40 11 00 	mov	#17,	r11	;#0x0011
    aefa:	1f 43       	mov	#1,	r15	;r3 As==01
    aefc:	0d 9c       	cmp	r12,	r13	;
    aefe:	09 2c       	jc	$+20     	;abs 0xaf12
    af00:	3b 53       	add	#-1,	r11	;r3 As==11
    af02:	0b 93       	cmp	#0,	r11	;r3 As==00
    af04:	05 24       	jz	$+12     	;abs 0xaf10
    af06:	0d 93       	cmp	#0,	r13	;r3 As==00
    af08:	04 38       	jl	$+10     	;abs 0xaf12
    af0a:	0d 5d       	rla	r13		;
    af0c:	0f 5f       	rla	r15		;
    af0e:	f6 3f       	jmp	$-18     	;abs 0xaefc
    af10:	0f 4b       	mov	r11,	r15	;
    af12:	0b 43       	clr	r11		;
    af14:	0f 93       	cmp	#0,	r15	;r3 As==00
    af16:	09 24       	jz	$+20     	;abs 0xaf2a
    af18:	0c 9d       	cmp	r13,	r12	;
    af1a:	02 28       	jnc	$+6      	;abs 0xaf20
    af1c:	0c 8d       	sub	r13,	r12	;
    af1e:	0b df       	bis	r15,	r11	;
    af20:	12 c3       	clrc			
    af22:	0f 10       	rrc	r15		;
    af24:	12 c3       	clrc			
    af26:	0d 10       	rrc	r13		;
    af28:	f5 3f       	jmp	$-20     	;abs 0xaf14
    af2a:	0e 93       	cmp	#0,	r14	;r3 As==00
    af2c:	01 20       	jnz	$+4      	;abs 0xaf30
    af2e:	0c 4b       	mov	r11,	r12	;
    af30:	30 41       	ret			

0000af32 <__mspabi_divi>:
    af32:	0a 15       	pushm	#1,	r10	;16-bit words
    af34:	0e 4c       	mov	r12,	r14	;
    af36:	0f 4d       	mov	r13,	r15	;
    af38:	3b 40 f6 ae 	mov	#44790,	r11	;#0xaef6
    af3c:	0c 93       	cmp	#0,	r12	;r3 As==00
    af3e:	07 34       	jge	$+16     	;abs 0xaf4e
    af40:	0c 43       	clr	r12		;
    af42:	0c 8e       	sub	r14,	r12	;
    af44:	0e 4c       	mov	r12,	r14	;
    af46:	0d 93       	cmp	#0,	r13	;r3 As==00
    af48:	10 34       	jge	$+34     	;abs 0xaf6a
    af4a:	1a 43       	mov	#1,	r10	;r3 As==01
    af4c:	03 3c       	jmp	$+8      	;abs 0xaf54
    af4e:	0d 93       	cmp	#0,	r13	;r3 As==00
    af50:	0f 34       	jge	$+32     	;abs 0xaf70
    af52:	0a 43       	clr	r10		;
    af54:	0d 43       	clr	r13		;
    af56:	0d 8f       	sub	r15,	r13	;
    af58:	0c 4e       	mov	r14,	r12	;
    af5a:	0e 43       	clr	r14		;
    af5c:	8b 12       	call	r11		;
    af5e:	1a 93       	cmp	#1,	r10	;r3 As==01
    af60:	09 24       	jz	$+20     	;abs 0xaf74
    af62:	0d 43       	clr	r13		;
    af64:	0d 8c       	sub	r12,	r13	;
    af66:	0c 4d       	mov	r13,	r12	;
    af68:	05 3c       	jmp	$+12     	;abs 0xaf74
    af6a:	0e 43       	clr	r14		;
    af6c:	8b 12       	call	r11		;
    af6e:	f9 3f       	jmp	$-12     	;abs 0xaf62
    af70:	0e 43       	clr	r14		;
    af72:	8b 12       	call	r11		;
    af74:	0a 17       	popm	#1,	r10	;16-bit words
    af76:	30 41       	ret			

0000af78 <__mspabi_divu>:
    af78:	0e 43       	clr	r14		;
    af7a:	b0 12 f6 ae 	call	#44790		;#0xaef6
    af7e:	30 41       	ret			

0000af80 <udivmodsi4>:
    af80:	4a 15       	pushm	#5,	r10	;16-bit words
    af82:	0a 4c       	mov	r12,	r10	;
    af84:	0b 4d       	mov	r13,	r11	;
    af86:	3c 40 21 00 	mov	#33,	r12	;#0x0021
    af8a:	18 43       	mov	#1,	r8	;r3 As==01
    af8c:	09 43       	clr	r9		;
    af8e:	0f 9b       	cmp	r11,	r15	;
    af90:	04 28       	jnc	$+10     	;abs 0xaf9a
    af92:	0d 9f       	cmp	r15,	r13	;
    af94:	16 20       	jnz	$+46     	;abs 0xafc2
    af96:	0e 9a       	cmp	r10,	r14	;
    af98:	14 2c       	jc	$+42     	;abs 0xafc2
    af9a:	3c 53       	add	#-1,	r12	;r3 As==11
    af9c:	0c 93       	cmp	#0,	r12	;r3 As==00
    af9e:	0f 24       	jz	$+32     	;abs 0xafbe
    afa0:	0f 93       	cmp	#0,	r15	;r3 As==00
    afa2:	0f 38       	jl	$+32     	;abs 0xafc2
    afa4:	06 4e       	mov	r14,	r6	;
    afa6:	07 4f       	mov	r15,	r7	;
    afa8:	06 5e       	add	r14,	r6	;
    afaa:	07 6f       	addc	r15,	r7	;
    afac:	0e 46       	mov	r6,	r14	;
    afae:	0f 47       	mov	r7,	r15	;
    afb0:	06 48       	mov	r8,	r6	;
    afb2:	07 49       	mov	r9,	r7	;
    afb4:	06 58       	add	r8,	r6	;
    afb6:	07 69       	addc	r9,	r7	;
    afb8:	08 46       	mov	r6,	r8	;
    afba:	09 47       	mov	r7,	r9	;
    afbc:	e8 3f       	jmp	$-46     	;abs 0xaf8e
    afbe:	08 43       	clr	r8		;
    afc0:	09 43       	clr	r9		;
    afc2:	0c 43       	clr	r12		;
    afc4:	0d 4c       	mov	r12,	r13	;
    afc6:	07 48       	mov	r8,	r7	;
    afc8:	07 d9       	bis	r9,	r7	;
    afca:	07 93       	cmp	#0,	r7	;r3 As==00
    afcc:	11 24       	jz	$+36     	;abs 0xaff0
    afce:	0b 9f       	cmp	r15,	r11	;
    afd0:	08 28       	jnc	$+18     	;abs 0xafe2
    afd2:	0f 9b       	cmp	r11,	r15	;
    afd4:	02 20       	jnz	$+6      	;abs 0xafda
    afd6:	0a 9e       	cmp	r14,	r10	;
    afd8:	04 28       	jnc	$+10     	;abs 0xafe2
    afda:	0a 8e       	sub	r14,	r10	;
    afdc:	0b 7f       	subc	r15,	r11	;
    afde:	0c d8       	bis	r8,	r12	;
    afe0:	0d d9       	bis	r9,	r13	;
    afe2:	12 c3       	clrc			
    afe4:	09 10       	rrc	r9		;
    afe6:	08 10       	rrc	r8		;
    afe8:	12 c3       	clrc			
    afea:	0f 10       	rrc	r15		;
    afec:	0e 10       	rrc	r14		;
    afee:	eb 3f       	jmp	$-40     	;abs 0xafc6
    aff0:	81 93 0c 00 	cmp	#0,	12(r1)	;r3 As==00, 0x000c
    aff4:	02 24       	jz	$+6      	;abs 0xaffa
    aff6:	0c 4a       	mov	r10,	r12	;
    aff8:	0d 4b       	mov	r11,	r13	;
    affa:	46 17       	popm	#5,	r10	;16-bit words
    affc:	30 41       	ret			

0000affe <__mspabi_divli>:
    affe:	5a 15       	pushm	#6,	r10	;16-bit words
    b000:	21 83       	decd	r1		;
    b002:	0a 4c       	mov	r12,	r10	;
    b004:	0b 4d       	mov	r13,	r11	;
    b006:	08 4e       	mov	r14,	r8	;
    b008:	09 4f       	mov	r15,	r9	;
    b00a:	37 40 80 af 	mov	#44928,	r7	;#0xaf80
    b00e:	0d 93       	cmp	#0,	r13	;r3 As==00
    b010:	0c 34       	jge	$+26     	;abs 0xb02a
    b012:	0c 43       	clr	r12		;
    b014:	0d 43       	clr	r13		;
    b016:	05 4c       	mov	r12,	r5	;
    b018:	06 4d       	mov	r13,	r6	;
    b01a:	05 8a       	sub	r10,	r5	;
    b01c:	06 7b       	subc	r11,	r6	;
    b01e:	0a 45       	mov	r5,	r10	;
    b020:	0b 46       	mov	r6,	r11	;
    b022:	0f 93       	cmp	#0,	r15	;r3 As==00
    b024:	1a 34       	jge	$+54     	;abs 0xb05a
    b026:	16 43       	mov	#1,	r6	;r3 As==01
    b028:	04 3c       	jmp	$+10     	;abs 0xb032
    b02a:	06 4f       	mov	r15,	r6	;
    b02c:	0f 93       	cmp	#0,	r15	;r3 As==00
    b02e:	1b 34       	jge	$+56     	;abs 0xb066
    b030:	06 43       	clr	r6		;
    b032:	0e 43       	clr	r14		;
    b034:	0f 43       	clr	r15		;
    b036:	0e 88       	sub	r8,	r14	;
    b038:	0f 79       	subc	r9,	r15	;
    b03a:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b03e:	0c 4a       	mov	r10,	r12	;
    b040:	0d 4b       	mov	r11,	r13	;
    b042:	87 12       	call	r7		;
    b044:	16 93       	cmp	#1,	r6	;r3 As==01
    b046:	12 24       	jz	$+38     	;abs 0xb06c
    b048:	0e 43       	clr	r14		;
    b04a:	0f 43       	clr	r15		;
    b04c:	0a 4e       	mov	r14,	r10	;
    b04e:	0b 4f       	mov	r15,	r11	;
    b050:	0a 8c       	sub	r12,	r10	;
    b052:	0b 7d       	subc	r13,	r11	;
    b054:	0c 4a       	mov	r10,	r12	;
    b056:	0d 4b       	mov	r11,	r13	;
    b058:	09 3c       	jmp	$+20     	;abs 0xb06c
    b05a:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b05e:	0c 45       	mov	r5,	r12	;
    b060:	0d 46       	mov	r6,	r13	;
    b062:	87 12       	call	r7		;
    b064:	f1 3f       	jmp	$-28     	;abs 0xb048
    b066:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b06a:	87 12       	call	r7		;
    b06c:	21 53       	incd	r1		;
    b06e:	55 17       	popm	#6,	r10	;16-bit words
    b070:	30 41       	ret			

0000b072 <__mspabi_divlu>:
    b072:	21 83       	decd	r1		;
    b074:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    b078:	b0 12 80 af 	call	#44928		;#0xaf80
    b07c:	21 53       	incd	r1		;
    b07e:	30 41       	ret			

0000b080 <__mspabi_slli_15>:
    b080:	0c 5c       	rla	r12		;

0000b082 <__mspabi_slli_14>:
    b082:	0c 5c       	rla	r12		;

0000b084 <__mspabi_slli_13>:
    b084:	0c 5c       	rla	r12		;

0000b086 <__mspabi_slli_12>:
    b086:	0c 5c       	rla	r12		;

0000b088 <__mspabi_slli_11>:
    b088:	0c 5c       	rla	r12		;

0000b08a <__mspabi_slli_10>:
    b08a:	0c 5c       	rla	r12		;

0000b08c <__mspabi_slli_9>:
    b08c:	0c 5c       	rla	r12		;

0000b08e <__mspabi_slli_8>:
    b08e:	0c 5c       	rla	r12		;

0000b090 <__mspabi_slli_7>:
    b090:	0c 5c       	rla	r12		;

0000b092 <__mspabi_slli_6>:
    b092:	0c 5c       	rla	r12		;

0000b094 <__mspabi_slli_5>:
    b094:	0c 5c       	rla	r12		;

0000b096 <__mspabi_slli_4>:
    b096:	0c 5c       	rla	r12		;

0000b098 <__mspabi_slli_3>:
    b098:	0c 5c       	rla	r12		;

0000b09a <__mspabi_slli_2>:
    b09a:	0c 5c       	rla	r12		;

0000b09c <__mspabi_slli_1>:
    b09c:	0c 5c       	rla	r12		;
    b09e:	30 41       	ret			
    b0a0:	3d 53       	add	#-1,	r13	;r3 As==11
    b0a2:	0c 5c       	rla	r12		;

0000b0a4 <__mspabi_slli>:
    b0a4:	0d 93       	cmp	#0,	r13	;r3 As==00
    b0a6:	fc 23       	jnz	$-6      	;abs 0xb0a0
    b0a8:	30 41       	ret			

0000b0aa <__mspabi_slll_15>:
    b0aa:	0c 5c       	rla	r12		;
    b0ac:	0d 6d       	rlc	r13		;

0000b0ae <__mspabi_slll_14>:
    b0ae:	0c 5c       	rla	r12		;
    b0b0:	0d 6d       	rlc	r13		;

0000b0b2 <__mspabi_slll_13>:
    b0b2:	0c 5c       	rla	r12		;
    b0b4:	0d 6d       	rlc	r13		;

0000b0b6 <__mspabi_slll_12>:
    b0b6:	0c 5c       	rla	r12		;
    b0b8:	0d 6d       	rlc	r13		;

0000b0ba <__mspabi_slll_11>:
    b0ba:	0c 5c       	rla	r12		;
    b0bc:	0d 6d       	rlc	r13		;

0000b0be <__mspabi_slll_10>:
    b0be:	0c 5c       	rla	r12		;
    b0c0:	0d 6d       	rlc	r13		;

0000b0c2 <__mspabi_slll_9>:
    b0c2:	0c 5c       	rla	r12		;
    b0c4:	0d 6d       	rlc	r13		;

0000b0c6 <__mspabi_slll_8>:
    b0c6:	0c 5c       	rla	r12		;
    b0c8:	0d 6d       	rlc	r13		;

0000b0ca <__mspabi_slll_7>:
    b0ca:	0c 5c       	rla	r12		;
    b0cc:	0d 6d       	rlc	r13		;

0000b0ce <__mspabi_slll_6>:
    b0ce:	0c 5c       	rla	r12		;
    b0d0:	0d 6d       	rlc	r13		;

0000b0d2 <__mspabi_slll_5>:
    b0d2:	0c 5c       	rla	r12		;
    b0d4:	0d 6d       	rlc	r13		;

0000b0d6 <__mspabi_slll_4>:
    b0d6:	0c 5c       	rla	r12		;
    b0d8:	0d 6d       	rlc	r13		;

0000b0da <__mspabi_slll_3>:
    b0da:	0c 5c       	rla	r12		;
    b0dc:	0d 6d       	rlc	r13		;

0000b0de <__mspabi_slll_2>:
    b0de:	0c 5c       	rla	r12		;
    b0e0:	0d 6d       	rlc	r13		;

0000b0e2 <__mspabi_slll_1>:
    b0e2:	0c 5c       	rla	r12		;
    b0e4:	0d 6d       	rlc	r13		;
    b0e6:	30 41       	ret			
    b0e8:	3e 53       	add	#-1,	r14	;r3 As==11
    b0ea:	0c 5c       	rla	r12		;
    b0ec:	0d 6d       	rlc	r13		;

0000b0ee <__mspabi_slll>:
    b0ee:	0e 93       	cmp	#0,	r14	;r3 As==00
    b0f0:	fb 23       	jnz	$-8      	;abs 0xb0e8
    b0f2:	30 41       	ret			

0000b0f4 <__mspabi_srli_15>:
    b0f4:	12 c3       	clrc			
    b0f6:	0c 10       	rrc	r12		;

0000b0f8 <__mspabi_srli_14>:
    b0f8:	12 c3       	clrc			
    b0fa:	0c 10       	rrc	r12		;

0000b0fc <__mspabi_srli_13>:
    b0fc:	12 c3       	clrc			
    b0fe:	0c 10       	rrc	r12		;

0000b100 <__mspabi_srli_12>:
    b100:	12 c3       	clrc			
    b102:	0c 10       	rrc	r12		;

0000b104 <__mspabi_srli_11>:
    b104:	12 c3       	clrc			
    b106:	0c 10       	rrc	r12		;

0000b108 <__mspabi_srli_10>:
    b108:	12 c3       	clrc			
    b10a:	0c 10       	rrc	r12		;

0000b10c <__mspabi_srli_9>:
    b10c:	12 c3       	clrc			
    b10e:	0c 10       	rrc	r12		;

0000b110 <__mspabi_srli_8>:
    b110:	12 c3       	clrc			
    b112:	0c 10       	rrc	r12		;

0000b114 <__mspabi_srli_7>:
    b114:	12 c3       	clrc			
    b116:	0c 10       	rrc	r12		;

0000b118 <__mspabi_srli_6>:
    b118:	12 c3       	clrc			
    b11a:	0c 10       	rrc	r12		;

0000b11c <__mspabi_srli_5>:
    b11c:	12 c3       	clrc			
    b11e:	0c 10       	rrc	r12		;

0000b120 <__mspabi_srli_4>:
    b120:	12 c3       	clrc			
    b122:	0c 10       	rrc	r12		;

0000b124 <__mspabi_srli_3>:
    b124:	12 c3       	clrc			
    b126:	0c 10       	rrc	r12		;

0000b128 <__mspabi_srli_2>:
    b128:	12 c3       	clrc			
    b12a:	0c 10       	rrc	r12		;

0000b12c <__mspabi_srli_1>:
    b12c:	12 c3       	clrc			
    b12e:	0c 10       	rrc	r12		;
    b130:	30 41       	ret			
    b132:	3d 53       	add	#-1,	r13	;r3 As==11
    b134:	12 c3       	clrc			
    b136:	0c 10       	rrc	r12		;

0000b138 <__mspabi_srli>:
    b138:	0d 93       	cmp	#0,	r13	;r3 As==00
    b13a:	fb 23       	jnz	$-8      	;abs 0xb132
    b13c:	30 41       	ret			

0000b13e <__mspabi_srll_15>:
    b13e:	12 c3       	clrc			
    b140:	0d 10       	rrc	r13		;
    b142:	0c 10       	rrc	r12		;

0000b144 <__mspabi_srll_14>:
    b144:	12 c3       	clrc			
    b146:	0d 10       	rrc	r13		;
    b148:	0c 10       	rrc	r12		;

0000b14a <__mspabi_srll_13>:
    b14a:	12 c3       	clrc			
    b14c:	0d 10       	rrc	r13		;
    b14e:	0c 10       	rrc	r12		;

0000b150 <__mspabi_srll_12>:
    b150:	12 c3       	clrc			
    b152:	0d 10       	rrc	r13		;
    b154:	0c 10       	rrc	r12		;

0000b156 <__mspabi_srll_11>:
    b156:	12 c3       	clrc			
    b158:	0d 10       	rrc	r13		;
    b15a:	0c 10       	rrc	r12		;

0000b15c <__mspabi_srll_10>:
    b15c:	12 c3       	clrc			
    b15e:	0d 10       	rrc	r13		;
    b160:	0c 10       	rrc	r12		;

0000b162 <__mspabi_srll_9>:
    b162:	12 c3       	clrc			
    b164:	0d 10       	rrc	r13		;
    b166:	0c 10       	rrc	r12		;

0000b168 <__mspabi_srll_8>:
    b168:	12 c3       	clrc			
    b16a:	0d 10       	rrc	r13		;
    b16c:	0c 10       	rrc	r12		;

0000b16e <__mspabi_srll_7>:
    b16e:	12 c3       	clrc			
    b170:	0d 10       	rrc	r13		;
    b172:	0c 10       	rrc	r12		;

0000b174 <__mspabi_srll_6>:
    b174:	12 c3       	clrc			
    b176:	0d 10       	rrc	r13		;
    b178:	0c 10       	rrc	r12		;

0000b17a <__mspabi_srll_5>:
    b17a:	12 c3       	clrc			
    b17c:	0d 10       	rrc	r13		;
    b17e:	0c 10       	rrc	r12		;

0000b180 <__mspabi_srll_4>:
    b180:	12 c3       	clrc			
    b182:	0d 10       	rrc	r13		;
    b184:	0c 10       	rrc	r12		;

0000b186 <__mspabi_srll_3>:
    b186:	12 c3       	clrc			
    b188:	0d 10       	rrc	r13		;
    b18a:	0c 10       	rrc	r12		;

0000b18c <__mspabi_srll_2>:
    b18c:	12 c3       	clrc			
    b18e:	0d 10       	rrc	r13		;
    b190:	0c 10       	rrc	r12		;

0000b192 <__mspabi_srll_1>:
    b192:	12 c3       	clrc			
    b194:	0d 10       	rrc	r13		;
    b196:	0c 10       	rrc	r12		;
    b198:	30 41       	ret			
    b19a:	3e 53       	add	#-1,	r14	;r3 As==11
    b19c:	12 c3       	clrc			
    b19e:	0d 10       	rrc	r13		;
    b1a0:	0c 10       	rrc	r12		;

0000b1a2 <__mspabi_srll>:
    b1a2:	0e 93       	cmp	#0,	r14	;r3 As==00
    b1a4:	fa 23       	jnz	$-10     	;abs 0xb19a
    b1a6:	30 41       	ret			

0000b1a8 <__mulhi2_f5>:
    b1a8:	02 12       	push	r2		;
    b1aa:	32 c2       	dint			
    b1ac:	03 43       	nop			
    b1ae:	82 4c c0 04 	mov	r12,	&0x04c0	;
    b1b2:	82 4d c8 04 	mov	r13,	&0x04c8	;
    b1b6:	1c 42 ca 04 	mov	&0x04ca,r12	;0x04ca
    b1ba:	00 13       	reti			

0000b1bc <__mulsi2_f5>:
    b1bc:	02 12       	push	r2		;
    b1be:	32 c2       	dint			
    b1c0:	03 43       	nop			
    b1c2:	82 4c d0 04 	mov	r12,	&0x04d0	;
    b1c6:	82 4d d2 04 	mov	r13,	&0x04d2	;
    b1ca:	82 4e e0 04 	mov	r14,	&0x04e0	;
    b1ce:	82 4f e2 04 	mov	r15,	&0x04e2	;
    b1d2:	1c 42 e4 04 	mov	&0x04e4,r12	;0x04e4
    b1d6:	1d 42 e6 04 	mov	&0x04e6,r13	;0x04e6
    b1da:	00 13       	reti			

0000b1dc <memset>:
    b1dc:	0f 4c       	mov	r12,	r15	;
    b1de:	0e 5c       	add	r12,	r14	;
    b1e0:	0f 9e       	cmp	r14,	r15	;
    b1e2:	04 24       	jz	$+10     	;abs 0xb1ec
    b1e4:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    b1e8:	1f 53       	inc	r15		;
    b1ea:	fa 3f       	jmp	$-10     	;abs 0xb1e0
    b1ec:	30 41       	ret			

0000b1ee <memmove>:
    b1ee:	0a 15       	pushm	#1,	r10	;16-bit words
    b1f0:	0d 9c       	cmp	r12,	r13	;
    b1f2:	10 2c       	jc	$+34     	;abs 0xb214
    b1f4:	0b 4d       	mov	r13,	r11	;
    b1f6:	0b 5e       	add	r14,	r11	;
    b1f8:	0c 9b       	cmp	r11,	r12	;
    b1fa:	0c 2c       	jc	$+26     	;abs 0xb214
    b1fc:	0d 4e       	mov	r14,	r13	;
    b1fe:	3d 53       	add	#-1,	r13	;r3 As==11
    b200:	3d 93       	cmp	#-1,	r13	;r3 As==11
    b202:	13 24       	jz	$+40     	;abs 0xb22a
    b204:	0f 4d       	mov	r13,	r15	;
    b206:	0f 8e       	sub	r14,	r15	;
    b208:	0f 5b       	add	r11,	r15	;
    b20a:	0a 4c       	mov	r12,	r10	;
    b20c:	0a 5d       	add	r13,	r10	;
    b20e:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    b212:	f5 3f       	jmp	$-20     	;abs 0xb1fe
    b214:	0f 43       	clr	r15		;
    b216:	0f 9e       	cmp	r14,	r15	;
    b218:	08 24       	jz	$+18     	;abs 0xb22a
    b21a:	0a 4d       	mov	r13,	r10	;
    b21c:	0a 5f       	add	r15,	r10	;
    b21e:	0b 4c       	mov	r12,	r11	;
    b220:	0b 5f       	add	r15,	r11	;
    b222:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    b226:	1f 53       	inc	r15		;
    b228:	f6 3f       	jmp	$-18     	;abs 0xb216
    b22a:	0a 17       	popm	#1,	r10	;16-bit words
    b22c:	30 41       	ret			

0000b22e <__do_global_ctors_aux>:
    b22e:	0a 15       	pushm	#1,	r10	;16-bit words
    b230:	1c 42 18 82 	mov	&0x8218,r12	;0x8218
    b234:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b236:	08 24       	jz	$+18     	;abs 0xb248
    b238:	3a 40 18 82 	mov	#33304,	r10	;#0x8218
    b23c:	8c 12       	call	r12		;
    b23e:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    b242:	2c 4a       	mov	@r10,	r12	;
    b244:	3c 93       	cmp	#-1,	r12	;r3 As==11
    b246:	fa 23       	jnz	$-10     	;abs 0xb23c
    b248:	0a 17       	popm	#1,	r10	;16-bit words
    b24a:	30 41       	ret			

0000b24c <call___do_global_ctors_aux>:
    b24c:	30 41       	ret			

0000b24e <__msp430_init>:
    b24e:	b0 12 1c 83 	call	#33564		;#0x831c
    b252:	b0 12 2e b2 	call	#45614		;#0xb22e
    b256:	b0 12 5c 82 	call	#33372		;#0x825c
    b25a:	b0 12 50 82 	call	#33360		;#0x8250
    b25e:	30 41       	ret			

0000b260 <__msp430_fini>:
    b260:	b0 12 68 82 	call	#33384		;#0x8268
    b264:	b0 12 ce 82 	call	#33486		;#0x82ce
    b268:	30 41       	ret			
