
../bin/example.elf:     file format elf32-msp430

SYMBOL TABLE:
0000fffa l    d  __interrupt_vector_62	00000000 __interrupt_vector_62
0000fffe l    d  __reset_vector	00000000 __reset_vector
00008000 l    d  .rodata	00000000 .rodata
00008220 l    d  .text	00000000 .text
00002400 l    d  .data	00000000 .data
00002404 l    d  .bss	00000000 .bss
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line.text.udivmodhi4	00000000 .debug_line.text.udivmodhi4
00000000 l    d  .debug_line.text.__divhi3	00000000 .debug_line.text.__divhi3
00000000 l    d  .debug_line.text.__udivhi3	00000000 .debug_line.text.__udivhi3
00000000 l    d  .debug_line.text.udivmodsi4	00000000 .debug_line.text.udivmodsi4
00000000 l    d  .debug_line.text.__divsi3	00000000 .debug_line.text.__divsi3
00000000 l    d  .debug_line.text.__udivsi3	00000000 .debug_line.text.__udivsi3
00000000 l    d  .debug_line.text.memset	00000000 .debug_line.text.memset
00000000 l    d  .debug_line.text.memmove	00000000 .debug_line.text.memmove
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
00008276 l       .text	00000000 _msp430_run_array
00008284 l       .text	00000000 _msp430_run_done
00000000 l       .debug_line	00000000 L0
00008224 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000afb0 l       .text	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000afac l       .text	00000000 L0
0000afb0 l       .text	00000000 L0
00000000 l       .debug_aranges	00000000 L0
00008220 l       .text	00000000 L0
00008224 l       .text	00000000 L0
00008250 l       .text	00000000 L0
0000828c l       .text	00000000 L0
0000afac l       .text	00000000 L0
0000afb0 l       .text	00000000 L0
00000000 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 gpio.c
00008000 l     O .rodata	0000001c GPIO_PORT_TO_BASE
00000000 l    df *ABS*	00000000 usb.c
00002520 l     O .bss	00000001 bRemoteWakeup
00002529 l     O .bss	00000001 bConfigurationNumber
00002528 l     O .bss	00000001 bInterfaceNumber
00002523 l     O .bss	00000001 bHostAskMoreDataThanAvailable
00002526 l     O .bss	00000002 pbIEP0Buffer
00002524 l     O .bss	00000002 pbOEP0Buffer
00000000 l    df *ABS*	00000000 descriptors.c
00000000 l    df *ABS*	00000000 crtstuff.c
00008218 l     O .rodata	00000000 __CTOR_LIST__
0000821c l     O .rodata	00000000 __DTOR_LIST__
00008210 l     O .rodata	00000000 __EH_FRAME_BEGIN__
00002400 l     O .data	00000000 __JCR_LIST__
0000afb6 l     O .text	00000000 __TMC_LIST__
00008286 l       .text	00000000 deregister_tm_clones
000082a4 l       .text	00000000 register_tm_clones
000082ce l       .text	00000000 __do_global_dtors_aux
00002404 l     O .bss	00000001 completed.2761
00002406 l     O .bss	00000002 dtor_idx.2763
0000831a l       .text	00000000 call___do_global_dtors_aux
0000831c l       .text	00000000 frame_dummy
00002408 l     O .bss	0000000e object.2776
0000834a l       .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 crtstuff.c
0000821a l     O .rodata	00000000 __CTOR_END__
00008210 l     O .rodata	00000000 __FRAME_END__
00002400 l     O .data	00000000 __JCR_END__
0000af7a l       .text	00000000 __do_global_ctors_aux
0000af98 l       .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000312 l       .debug_line	00000000 L0
00008232 l       .text	00000000 L0
000000d0 l       .debug_aranges	00000000 L0
00008224 l       .text	00000000 L0
00008232 l       .text	00000000 L0
00000653 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_movedata.o
00000396 l       .debug_line	00000000 L0
00008246 l       .text	00000000 L0
000000f0 l       .debug_aranges	00000000 L0
00008232 l       .text	00000000 L0
00008246 l       .text	00000000 L0
00000725 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 crt_main.o
00000426 l       .debug_line	00000000 L0
00008250 l       .text	00000000 L0
00000110 l       .debug_aranges	00000000 L0
00008246 l       .text	00000000 L0
00008250 l       .text	00000000 L0
000007f7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 wdt_a.c
00000000 l    df *ABS*	00000000 sfr.c
00000000 l    df *ABS*	00000000 ucs.c
000087b2 l       .text	0000011a privateUCSSourceClockFromDCO
0000251c l     O .bss	00000004 privateXT1ClockFrequency
00002518 l     O .bss	00000004 privateXT2ClockFrequency
000088c0 l       .text	000000f4 privateUCSComputeCLKFrequency
00000000 l    df *ABS*	00000000 pmm.c
00000000 l    df *ABS*	00000000 usbConstructs.c
00000000 l    df *ABS*	00000000 usbdma.c
00000000 l    df *ABS*	00000000 UsbCdc.c
0000253a l     O .bss	0000000a CdcWriteCtrl
0000252a l     O .bss	00000010 CdcReadCtrl
00002544 l     O .bss	00000008 CdcControl
00000000 l    df *ABS*	00000000 usbEventHandling.c
00000000 l    df *ABS*	00000000 tlv.c
00000000 l    df *ABS*	00000000 dma.c
00000000 l    df *ABS*	00000000 lib2divHI.c
0000ac82 l       .text	00000000 L0
0000acca l       .text	00000000 L0
0000accc l       .text	00000000 L0
00000000 l    df *ABS*	00000000 lib2divSI.c
0000ad4e l       .text	00000000 L0
0000adc4 l       .text	00000000 L0
0000adcc l       .text	00000000 L0
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib2hw_mul.o
00000130 l       *ABS*	00000000 MPY_OP1
00000132 l       *ABS*	00000000 MPY_OP1_S
00000134 l       *ABS*	00000000 MAC_OP1
00000138 l       *ABS*	00000000 MPY_OP2
00000138 l       *ABS*	00000000 MAC_OP2
0000013a l       *ABS*	00000000 RESULT_LO
0000013c l       *ABS*	00000000 RESULT_HI
00000000 l    df *ABS*	00000000 memset.c
0000af3c l       .text	00000000 L0
00000000 l    df *ABS*	00000000 memmove.c
0000af7e l       .text	00000000 L0
00000000 l    df *ABS*	00000000 /usr/ti/msp430/bin/../lib/gcc/msp430-elf/4.9.1/../../../../msp430-elf/lib/crtn.o
000005bc l       .debug_line	00000000 L0
0000afac l       .text	00000000 L0
0000afb6 l       .text	00000000 L0
0000afa2 l       .text	00000000 L0
0000afac l       .text	00000000 L0
0000afb4 l       .text	00000000 L0
0000afb6 l       .text	00000000 L0
00000150 l       .debug_aranges	00000000 L0
0000afa2 l       .text	00000000 L0
0000afac l       .text	00000000 L0
0000afb4 l       .text	00000000 L0
0000afb6 l       .text	00000000 L0
000009c7 l       .debug_info	00000000 L0
00000000 l    df *ABS*	00000000 system_pre_init.c
00000000 l    df *ABS*	00000000 
00002180 l       *ABS*	00000000 pbXBufferAddressEp86
00001ec0 l       *ABS*	00000000 pbYBufferAddressEp83
00002000 l       *ABS*	00000000 pbXBufferAddressEp5
00002080 l       *ABS*	00000000 pbXBufferAddressEp85
00001c40 l       *ABS*	00000000 pbYBufferAddressEp1
00001d00 l       *ABS*	00000000 pbXBufferAddressEp2
000021c0 l       *ABS*	00000000 pbYBufferAddressEp86
00001d80 l       *ABS*	00000000 pbXBufferAddressEp82
000022c0 l       *ABS*	00000000 pbYBufferAddressEp87
00002040 l       *ABS*	00000000 pbYBufferAddressEp5
00002280 l       *ABS*	00000000 pbXBufferAddressEp87
00001dc0 l       *ABS*	00000000 pbYBufferAddressEp82
00002140 l       *ABS*	00000000 pbYBufferAddressEp6
00001d40 l       *ABS*	00000000 pbYBufferAddressEp2
00008220 l       .text	00000000 _start
00002200 l       *ABS*	00000000 pbXBufferAddressEp7
00001c00 l       *ABS*	00000000 pbXBufferAddressEp1
00002100 l       *ABS*	00000000 pbXBufferAddressEp6
000020c0 l       *ABS*	00000000 pbYBufferAddressEp85
00001fc0 l       *ABS*	00000000 pbYBufferAddressEp84
00002240 l       *ABS*	00000000 pbYBufferAddressEp7
00001c80 l       *ABS*	00000000 pbXBufferAddressEp81
00001f40 l       *ABS*	00000000 pbYBufferAddressEp4
00001f80 l       *ABS*	00000000 pbXBufferAddressEp84
00001cc0 l       *ABS*	00000000 pbYBufferAddressEp81
00001f00 l       *ABS*	00000000 pbXBufferAddressEp4
00001e00 l       *ABS*	00000000 pbXBufferAddressEp3
00001e40 l       *ABS*	00000000 pbYBufferAddressEp3
00001e80 l       *ABS*	00000000 pbXBufferAddressEp83
00009b28 g       .text	0000004c usbSetEndpointFeature
00009004 g       .text	00000016 PMM_enableSvmHInterrupt
00002378 g       *ABS*	00000000 abIEP0Buffer
0000ae0e g       .text	00000000 .hidden __mspabi_slll_9
0000abbc g       .text	0000000c DMA_enableTransfers
0000adfe g       .text	00000000 .hidden __mspabi_slll_13
00008bea g       .text	00000006 UCS_turnOffXT1
00008f58 g       .text	00000016 PMM_enableSvsHSvmH
000097b8 g       .text	00000030 USB_suspend
00008f42 g       .text	00000016 PMM_disableSvsLSvmL
0000ae58 g       .text	00000000 .hidden __mspabi_srli_9
00008796 g       .text	0000000e SFR_setNMIEdge
00002388 g       *ABS*	00000000 tOutputEndPointDescriptorBlock
0000ac08 g       .text	0000000c DMA_getNMIAbortStatus
0000aea8 g       .text	00000000 .hidden __mspabi_srll_10
000097fc g       .text	0000000a usbStallOEP0
0000915c g       .text	000000d0 PMM_setVCoreUp
00009b10 g       .text	0000001a usbSetDeviceFeature
00008664 g       .text	0000002a GPIO_setAsInputPinWithPullUpResistor
00009722 g       .text	000000a2 USB_getConnectionState
000086b2 g       .text	0000001a GPIO_enableInterrupt
000096a8 g       .text	00000022 USB_disconnect
0000ab8c g       .text	00000030 DMA_setDstAddress
0000254c g     O .bss	00000008 abUsbRequestIncomingData
0000877a g       .text	00000006 SFR_getInterruptStatus
0000ae54 g       .text	00000000 .hidden __mspabi_srli_10
00008b46 g       .text	00000050 UCS_turnOnHFXT1WithTimeout
0000add8 g       .text	00000000 .hidden __mspabi_slli_9
00009a38 g       .text	0000007a usbGetEndpointStatus
0000ae40 g       .text	00000000 .hidden __mspabi_srli_15
000083da g       .text	0000003e USBHAL_initClocks
0000af3a g       .text	00000044 memmove
0000855a g       .text	00000014 WDT_A_initIntervalTimer
000086cc g       .text	0000001a GPIO_disableInterrupt
000087a4 g       .text	0000000e SFR_setResetNMIPinFunction
0000a950 g       .text	00000004 USB_handleResetEvent
0000871c g       .text	0000002c GPIO_selectInterruptEdge
00009900 g       .text	00000046 usbClearEndpointFeature
00008e00 g       .text	00000006 UCS_turnOnSMCLK
00009ed0 g       .text	00000024 memcpyV
0000ae6c g       .text	00000000 .hidden __mspabi_srli_4
0000add2 g       .text	00000000 .hidden __mspabi_slli_12
00008cb8 g       .text	00000108 UCS_initFLL
0000ab4c g       .text	0000000a DMA_setTransferSize
0000ac42 g       .text	00000040 .hidden udivmodhi4
00009890 g       .text	00000052 usbReceiveNextPacketOnOEP0
0000834c g       .text	0000008e USBHAL_initPorts
0000a978 g       .text	00000064 TLV_getInfo
000085ec g       .text	0000001a GPIO_setOutputHighOnPin
00009f9c g       .text	00000030 CdcResetData
0000a960 g       .text	00000008 USBCDC_handleDataReceived
0000ae60 g       .text	00000000 .hidden __mspabi_srli_7
0000aeba g       .text	00000000 .hidden __mspabi_srll_7
0000aed2 g       .text	00000000 .hidden __mspabi_srll_3
00009426 g       .text	00000052 USBCDC_receiveDataInBuffer
00009476 g       .text	00000006 USB_getVersion
00008cb0 g       .text	00000008 UCS_turnOffXT2
00008f16 g       .text	00000016 PMM_disableSvmH
00008530 g       .text	00000016 WDT_A_resetTimer
0000afb6 g     O .text	00000000 .hidden __TMC_END__
0000ae96 g       .text	00000000 .hidden __mspabi_srll_13
00002554 g     O .bss	00000008 abUsbRequestReturnData
0000821e g     O .rodata	00000000 .hidden __DTOR_END__
00002516 g     O .bss	00000001 bCDCDataReceived_event
0000856e g       .text	0000001e GPIO_setAsOutputPin
00008214 g       .rodata	00000000 __fini_array_end
00008e7c g       .text	00000016 PMM_enableSvsL
0000ae4c g       .text	00000000 .hidden __mspabi_srli_12
0000abfe g       .text	0000000a DMA_clearInterrupt
0000a4ca g       .text	00000132 CdcToBufferFromHost
00008220 g     F .text	00000004 __crt0_start
0000876e g       .text	00000006 SFR_enableInterrupt
00002370 g       *ABS*	00000000 abOEP0Buffer
0000ae06 g       .text	00000000 .hidden __mspabi_slll_11
0000adf6 g       .text	00000000 .hidden __mspabi_slll_15
00009ace g       .text	0000002c usbSetConfiguration
0000adce g       .text	00000000 .hidden __mspabi_slli_14
00008fd8 g       .text	00000016 PMM_enableSvsHReset
00009030 g       .text	00000014 PMM_clearPMMIFGS
0000ade2 g       .text	00000000 .hidden __mspabi_slli_4
00008224 g     F .text	0000000e __crt0_init_bss
00009e80 g       .text	00000038 USB_setup
00000186 g       *ABS*	00000000 __bsssize
0000ae2a g       .text	00000000 .hidden __mspabi_slll_2
0000a934 g       .text	00000014 USB_handleVbusOnEvent
0000aef4 g     F .text	00000014 .hidden __mulhi2_f5
0000a96c g       .text	00000004 USBCDC_handleReceiveCompleted
00009aac g       .text	00000024 usbSetAddress
00008eea g       .text	00000016 PMM_disableSvsH
000099d2 g       .text	0000001e usbGetInterface
00009806 g       .text	00000072 usbSendNextPacketOnIEP0
00008246 g     F .text	0000000a __crt0_call_init_then_main
00009c30 g       .text	0000001a usbDisableOutEndpointInterrupt
0000a662 g       .text	00000082 USBCDC_rejectData
0000adf0 g       .text	00000000 .hidden __mspabi_slli
00008f2c g       .text	00000016 PMM_enableSvsLSvmL
0000abc8 g       .text	0000000c DMA_disableTransfers
00008f84 g       .text	00000016 PMM_enableSvsLReset
00009954 g       .text	00000016 usbGetDeviceDescriptor
00009c50 g       .text	000000dc USB_determineFreq
0000aec6 g       .text	00000000 .hidden __mspabi_srll_5
00008e24 g       .text	0000001e UCS_getSMCLK
00009308 g       .text	00000006 PMM_getInterruptStatus
0000ae84 g       .text	00000000 .hidden __mspabi_srli
00009084 g       .text	00000020 PMM_disableSvsLInLPMFastWake
000089a6 g       .text	00000012 UCS_setExternalClockSource
00002402 g     O .data	00000002 VERSION
00009f56 g       .text	00000046 USB_initMemcpy
0000abd4 g       .text	0000000a DMA_startTransfer
00008f00 g       .text	00000016 PMM_enableSvmH
0000a1ee g       .text	00000044 USBCDC_abortSend
00008ac4 g       .text	0000003e UCS_bypassXT1
00008620 g       .text	0000001a GPIO_toggleOutputOnPin
0000aea2 g       .text	00000000 .hidden __mspabi_srll_11
00008c86 g       .text	0000002c UCS_bypassXT2WithTimeout
00009b8e g       .text	00000086 usbDecodeAndProcessUsbRequest
0000ae1e g       .text	00000000 .hidden __mspabi_slll_5
0000a6e2 g       .text	000000b2 USBCDC_getInterfaceStatus
000089b8 g       .text	000000a8 UCS_initClockSignal
0000add4 g       .text	00000000 .hidden __mspabi_slli_11
000090fa g       .text	00000016 PMM_disableSvsHInLPMNormPerf
0000ade4 g       .text	00000000 .hidden __mspabi_slli_3
0000255c g     O .bss	00000022 abramSerialStringDescriptor
0000af08 g     F .text	00000020 .hidden __mulsi2_f5
0000ae68 g       .text	00000000 .hidden __mspabi_srli_5
0000a9da g       .text	0000004c TLV_getMemory
000096ea g       .text	0000003a USB_getConnectionInformation
0000257e g     O .bss	00000002 wUsbEventMask
0000ac14 g       .text	0000000a DMA_clearNMIAbort
00000000  w      *UND*	00000000 __deregister_frame_info
00008afe g       .text	0000004c UCS_turnOnLFXT1WithTimeout
0000258a g       .MP430.attributes	00000000 end
00009a1a g       .text	0000001e usbGetInterfaceStatus
00009556 g       .text	00000138 USB_reset
00009980 g       .text	0000005a usbGetStringDescriptor
000081ba g     O .rodata	00000043 abromConfigurationDescriptorGroup
00008746 g       .text	0000002a GPIO_setDriveStrength
000085b0 g       .text	0000001e GPIO_setAsPeripheralModuleFunctionOutputPin
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
00008b94 g       .text	0000005a UCS_bypassXT1WithTimeout
0000ade6 g       .text	00000000 .hidden __mspabi_slli_2
0000aa98 g       .text	00000066 TLV_getInterrupt
00008a54 g       .text	0000003a UCS_turnOnLFXT1
00009af8 g       .text	0000001a usbClearDeviceFeature
0000abe8 g       .text	0000000a DMA_disableInterrupt
0000aec0 g       .text	00000000 .hidden __mspabi_srll_6
00008de2 g       .text	00000006 UCS_enableClockRequest
000081fd g     O .rodata	00000012 abromDeviceDescriptor
000097e8 g       .text	0000000e usbStallEndpoint0
0000accc g       .text	00000082 .hidden udivmodsi4
00008506 g       .text	00000018 WDT_A_hold
0000ac3c g       .text	00000006 DMA_disableNMIAbort
00002580 g     O .bss	00000002 wBytesRemainingOnIEP0
0000ac24 g       .text	00000006 DMA_enableTransferDuringReadModifyWrite
00008fb0 g       .text	00000014 PMM_enableSvmLInterrupt
00008bf0 g       .text	00000036 UCS_turnOnXT2
0000ae1a g       .text	00000000 .hidden __mspabi_slll_6
00009146 g       .text	00000016 PMM_optimizeSvsHInLPMFullPerf
0000803c g     O .rodata	000000e4 tUsbRequestList
00008dfa g       .text	00000006 UCS_turnOffSMCLK
00008e92 g       .text	00000016 PMM_disableSvsL
0000ae22 g       .text	00000000 .hidden __mspabi_slll_4
0000a058 g       .text	0000019c CdcToHostFromBuffer
0000ae12 g       .text	00000000 .hidden __mspabi_slll_8
00008268 g     F .text	00000000 _msp430_run_fini_array
00002582 g     O .bss	00000002 wBytesRemainingOnOEP0
0000ae78 g       .text	00000000 .hidden __mspabi_srli_1
0000a958 g       .text	00000004 USB_handleResumeEvent
0000ae90 g       .text	00000000 .hidden __mspabi_srll_14
0000adde g       .text	00000000 .hidden __mspabi_slli_6
00009d1e g       .text	00000084 USB_init
000097f6 g       .text	00000006 usbClearOEP0ByteCount
0000ac2a g       .text	00000006 DMA_enableRoundRobinPriority
00009b80 g       .text	0000000e usbInvalidRequest
0000ae44 g       .text	00000000 .hidden __mspabi_srli_14
00008ebe g       .text	00000016 PMM_disableSvmL
00000004 g       *ABS*	00000000 __romdatacopysize
00008df4 g       .text	00000006 UCS_clearFaultFlag
0000a610 g       .text	00000052 USBCDC_abortReceive
000084be g       .text	0000004e UNMI_ISR
00008780 g       .text	00000006 SFR_clearInterrupt
00002416 g     O .bss	00000100 dataBuffer
000023c8 g       *ABS*	00000000 tInputEndPointDescriptorBlock
00000920 g       *ABS*	00000000 tEndPoint0DescriptorBlock
0000ac30 g       .text	00000006 DMA_disableRoundRobinPriority
0000a968 g       .text	00000004 USBCDC_handleSendCompleted
0000adfa g       .text	00000000 .hidden __mspabi_slll_14
0000aa22 g       .text	0000007c TLV_getPeripheral
0000a5f4 g       .text	0000001c CdcIsReceiveInProgress
0000ae50 g       .text	00000000 .hidden __mspabi_srli_11
0000ae16 g       .text	00000000 .hidden __mspabi_slll_7
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
00008214 g       .rodata	00000000 __fini_array_start
000086e6 g       .text	0000001c GPIO_getInterruptStatus
00009ef2 g       .text	00000064 memcpyDMA
00009398 g       .text	00000094 USBCDC_sendDataInBackground
00008786 g       .text	00000010 SFR_setResetPinPullResistor
0000ac7e g       .text	0000004c .hidden __mspabi_divi
0000a2a2 g       .text	0000023a USBCDC_receiveData
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000ab60 g       .text	0000002c DMA_setSrcAddress
00008130 g     O .rodata	0000008a abromStringDescriptor
0000af9a g       .text	00000000 __msp430_init
00009130 g       .text	00000016 PMM_optimizeSvsLInLPMFastWake
0000af28 g       .text	00000014 memset
0000ae02 g       .text	00000000 .hidden __mspabi_slll_12
00008418 g       .text	000000ae main
00008a8c g       .text	0000003a UCS_turnOnHFXT1
00008546 g       .text	00000014 WDT_A_initWatchdogTimer
000085ce g       .text	0000001e GPIO_setAsPeripheralModuleFunctionInputPin
0000ad4a g       .text	0000007a .hidden __mspabi_divli
00009b6e g       .text	00000012 usbSetInterface
0000aecc g       .text	00000000 .hidden __mspabi_srll_4
00008214 g       .rodata	00000000 __init_array_end
0000ae74 g       .text	00000000 .hidden __mspabi_srli_2
00008e42 g       .text	00000016 UCS_getMCLK
0000ade8 g       .text	00000000 .hidden __mspabi_slli_1
00008da8 g       .text	0000003c UCS_initFLLSettle
0000a8ae g       .text	00000082 Handler_SetLineCoding
0000acc4 g       .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
0000996a g       .text	00000016 usbGetConfigurationDescriptor
0000abf2 g       .text	0000000c DMA_getInterruptStatus
00008702 g       .text	0000001a GPIO_clearInterrupt
0000ae26 g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000afb6 g       .text	00000000 __msp430_fini_end
00009c4a g       .text	00000006 usbRestoreOutEndpointInterrupt
00002584 g     O .bss	00000001 bStatusAction
0000a948 g       .text	00000008 USB_handleVbusOffEvent
0000ae9c g       .text	00000000 .hidden __mspabi_srll_12
0000968e g       .text	0000001a USB_connect
0000ade0 g       .text	00000000 .hidden __mspabi_slli_5
000099f0 g       .text	0000002a usbGetDeviceStatus
0000afb6 g       *ABS*	00000000 __romdatastart
0000986e g       .text	00000024 usbSendDataPacketOnEP0
00002586 g     O .bss	00000002 USB_RX_memcpy
0000add0 g       .text	00000000 .hidden __mspabi_slli_13
0000a9d4 g       .text	00000006 TLV_getDeviceType
0000aafa g       .text	00000054 DMA_init
00002521 g     O .bss	00000001 bEnumerationStatus
00008250 g     F .text	00000000 _msp430_run_init_array
0000ae64 g       .text	00000000 .hidden __mspabi_srli_6
00008ea8 g       .text	00000016 PMM_enableSvmL
0000ac36 g       .text	00000006 DMA_enableNMIAbort
00008214 g       .rodata	00000000 __preinit_array_end
000098de g       .text	00000014 usbReceiveDataPacketOnEP0
0000add6 g       .text	00000000 .hidden __mspabi_slli_10
00009548 g       .text	00000008 USB_setEnabledEvents
0000901a g       .text	00000016 PMM_disableSvmHInterrupt
000092be g       .text	0000004e PMM_setVCore
0000ae70 g       .text	00000000 .hidden __mspabi_srli_3
00009d9e g       .text	000000ec USB_enable
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
0000922a g       .text	00000094 PMM_setVCoreDown
00002404 g       .bss	00000000 __bssstart
00002380 g       *ABS*	00000000 tSetupPacket
00008ed4 g       .text	00000016 PMM_enableSvsH
00008e06 g       .text	0000001e UCS_getACLK
00002522 g     O .bss	00000001 bFunctionSuspended
0000ae3a g       .text	00000000 .hidden __mspabi_slll
000090a4 g       .text	00000016 PMM_disableSvsLInLPMSlowWake
00009064 g       .text	00000020 PMM_enableSvsLInLPMSlowWake
00009940 g       .text	00000014 usbGetConfiguration
00003400 g       .MP430.attributes	00000000 __stack
0000aeae g       .text	00000000 .hidden __mspabi_srll_9
00008c3c g       .text	0000004c UCS_turnOnXT2WithTimeout
0000863a g       .text	0000002a GPIO_setAsInputPinWithPullDownResistor
0000a974 g       .text	00000004 USBCDC_handleSetControlLineState
00009fcc g       .text	00000092 USBCDC_sendData
00002404 g       .data	00000000 _edata
00008fee g       .text	00000016 PMM_disableSvsHReset
0000afac g       .text	00000000 __msp430_init_end
0000aeee g       .text	00000000 .hidden __mspabi_srll
00009110 g       .text	00000020 PMM_disableSvsHInLPMFullPerf
0000a970 g       .text	00000004 USBCDC_handleSetLineCoding
00008f6e g       .text	00000016 PMM_disableSvsHSvmH
0000a792 g       .text	00000082 USBCDC_getBytesInUSBBuffer
00000000  w      *ABS*	00000000 __high_bssstart
0000adda g       .text	00000000 .hidden __mspabi_slli_8
0000ae8a g       .text	00000000 .hidden __mspabi_srll_15
00009eb8 g       .text	00000018 USB_resume
0000abde g       .text	0000000a DMA_enableInterrupt
0000868e g       .text	00000024 GPIO_getInputPinValue
000090da g       .text	00000020 PMM_enableSvsHInLPMFullPerf
00008fc4 g       .text	00000014 PMM_disableSvmLInterrupt
0000a88a g       .text	0000000c usbSetLineCoding
00008de8 g       .text	00000006 UCS_disableClockRequest
0000ae0a g       .text	00000000 .hidden __mspabi_slll_10
00009550 g       .text	00000006 USB_getEnabledEvents
0000adcc g       .text	00000000 .hidden __mspabi_slli_15
000090ba g       .text	00000020 PMM_enableSvsHInLPMNormPerf
0000851e g       .text	00000012 WDT_A_start
00008214 g       .rodata	00000000 __init_array_start
00008120 g     O .rodata	00000010 stUsbHandle
000096ca g       .text	00000024 USB_forceRemoteWakeup
0000a232 g       .text	00000072 CopyUsbToBuff
00008774 g       .text	00000006 SFR_disableInterrupt
00008c24 g       .text	0000001a UCS_bypassXT2
0000a95c g       .text	00000004 USB_handleEnumerationCompleteEvent
00008f9a g       .text	00000016 PMM_disableSvsLReset
00009044 g       .text	00000020 PMM_enableSvsLInLPMFastWake
00009c10 g       .text	0000001a usbDisableInEndpointInterrupt
0000adbe g       .text	0000000e .hidden __mspabi_divlu
0000858c g       .text	00000024 GPIO_setAsInputPin
0000ae48 g       .text	00000000 .hidden __mspabi_srli_13
00009c2a g       .text	00000006 usbRestoreInEndpointInterrupt
00002400 g       .data	00000000 __datastart
0000ae2e g       .text	00000000 .hidden __mspabi_slll_1
00008e58 g       .text	00000024 UCS_clearAllOscFlagsWithTimeout
0000aeb4 g       .text	00000000 .hidden __mspabi_srll_8
0000a810 g       .text	0000007a usbGetLineCoding
0000aede g       .text	00000000 .hidden __mspabi_srll_1
00008dee g       .text	00000006 UCS_getFaultFlagStatus
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00008606 g       .text	0000001a GPIO_setOutputLowOnPin
0000addc g       .text	00000000 .hidden __mspabi_slli_7
00008214 g       .rodata	00000000 __preinit_array_start
00008232 g     F .text	00000014 __crt0_movedata
0000ab56 g       .text	0000000a DMA_getTransferSize
00000000  w      *UND*	00000000 __register_frame_info
0000947c g       .text	000000b6 USB_InitSerialStringDescriptor
0000825c g     F .text	00000000 _msp430_run_preinit_array
00009526 g       .text	00000022 USB_disable
0000a954 g       .text	00000004 USB_handleSuspendEvent
0000aed8 g       .text	00000000 .hidden __mspabi_srll_2
00002588 g     O .bss	00000002 USB_TX_memcpy
0000a930 g       .text	00000004 USB_handleClockEvent
0000a896 g       .text	00000018 usbSetControlLineState
0000afac g       .text	00000000 __msp430_fini
0000ae5c g       .text	00000000 .hidden __mspabi_srli_8
0000930e g       .text	00000092 USBCDC_sendDataAndWaitTillDone
000098f2 g       .text	0000000e usbSendZeroLengthPacketOnIEP0
0000ac1e g       .text	00000006 DMA_disableTransferDuringReadModifyWrite



Disassembly of section __interrupt_vector_62:

0000fffa <__interrupt_vector_62>:
    fffa:	be 84       	interrupt service routine at 0x84be

Disassembly of section .text:

00008220 <__crt0_start>:
    8220:	31 40 00 34 	mov	#13312,	r1	;#0x3400

00008224 <__crt0_init_bss>:
    8224:	3c 40 04 24 	mov	#9220,	r12	;#0x2404
    8228:	0d 43       	clr	r13		;
    822a:	3e 40 86 01 	mov	#390,	r14	;#0x0186
    822e:	b0 12 28 af 	call	#44840		;#0xaf28

00008232 <__crt0_movedata>:
    8232:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8236:	3d 40 b6 af 	mov	#44982,	r13	;#0xafb6
    823a:	0d 9c       	cmp	r12,	r13	;
    823c:	04 24       	jz	$+10     	;abs 0x8246
    823e:	3e 40 04 00 	mov	#4,	r14	;
    8242:	b0 12 3a af 	call	#44858		;#0xaf3a

00008246 <__crt0_call_init_then_main>:
    8246:	b0 12 9a af 	call	#44954		;#0xaf9a
    824a:	0c 43       	clr	r12		;
    824c:	b0 12 18 84 	call	#33816		;#0x8418

00008250 <_msp430_run_init_array>:
    8250:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8254:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8258:	26 43       	mov	#2,	r6	;r3 As==10
    825a:	0d 3c       	jmp	$+28     	;abs 0x8276

0000825c <_msp430_run_preinit_array>:
    825c:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    8260:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8264:	26 43       	mov	#2,	r6	;r3 As==10
    8266:	07 3c       	jmp	$+16     	;abs 0x8276

00008268 <_msp430_run_fini_array>:
    8268:	34 40 14 82 	mov	#33300,	r4	;#0x8214
    826c:	35 40 14 82 	mov	#33300,	r5	;#0x8214
    8270:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe
    8274:	00 3c       	jmp	$+2      	;abs 0x8276

00008276 <_msp430_run_array>:
    8276:	05 94       	cmp	r4,	r5	;
    8278:	05 24       	jz	$+12     	;abs 0x8284
    827a:	27 44       	mov	@r4,	r7	;
    827c:	04 56       	add	r6,	r4	;
    827e:	a7 12       	call	@r7		;
    8280:	10 40 f4 ff 	br	0xfff4		;PC rel. 0x8276

00008284 <_msp430_run_done>:
    8284:	30 41       	ret			

00008286 <deregister_tm_clones>:
    8286:	3c 40 b6 af 	mov	#44982,	r12	;#0xafb6
    828a:	3c 80 b5 af 	sub	#44981,	r12	;#0xafb5
    828e:	2d 43       	mov	#2,	r13	;r3 As==10
    8290:	0d 9c       	cmp	r12,	r13	;
    8292:	07 2c       	jc	$+16     	;abs 0x82a2
    8294:	3d 40 00 00 	mov	#0,	r13	;
    8298:	0d 93       	cmp	#0,	r13	;r3 As==00
    829a:	03 24       	jz	$+8      	;abs 0x82a2
    829c:	3c 40 b6 af 	mov	#44982,	r12	;#0xafb6
    82a0:	8d 12       	call	r13		;
    82a2:	30 41       	ret			

000082a4 <register_tm_clones>:
    82a4:	3d 40 b6 af 	mov	#44982,	r13	;#0xafb6
    82a8:	3d 80 b6 af 	sub	#44982,	r13	;#0xafb6
    82ac:	0d 11       	rra	r13		;
    82ae:	0c 4d       	mov	r13,	r12	;
    82b0:	5c 03       	rrum	#1,	r12	;
    82b2:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    82b6:	0d 5c       	add	r12,	r13	;
    82b8:	0d 11       	rra	r13		;
    82ba:	0d 93       	cmp	#0,	r13	;r3 As==00
    82bc:	07 24       	jz	$+16     	;abs 0x82cc
    82be:	3e 40 00 00 	mov	#0,	r14	;
    82c2:	0e 93       	cmp	#0,	r14	;r3 As==00
    82c4:	03 24       	jz	$+8      	;abs 0x82cc
    82c6:	3c 40 b6 af 	mov	#44982,	r12	;#0xafb6
    82ca:	8e 12       	call	r14		;
    82cc:	30 41       	ret			

000082ce <__do_global_dtors_aux>:
    82ce:	0a 15       	pushm	#1,	r10	;16-bit words
    82d0:	c2 93 04 24 	cmp.b	#0,	&0x2404	;r3 As==00
    82d4:	20 20       	jnz	$+66     	;abs 0x8316
    82d6:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82da:	3a 40 1e 82 	mov	#33310,	r10	;#0x821e
    82de:	3a 80 1c 82 	sub	#33308,	r10	;#0x821c
    82e2:	0a 11       	rra	r10		;
    82e4:	3a 53       	add	#-1,	r10	;r3 As==11
    82e6:	0c 9a       	cmp	r10,	r12	;
    82e8:	0b 2c       	jc	$+24     	;abs 0x8300
    82ea:	1c 53       	inc	r12		;
    82ec:	82 4c 06 24 	mov	r12,	&0x2406	;
    82f0:	0c 5c       	rla	r12		;
    82f2:	1c 4c 1c 82 	mov	-32228(r12),r12	;0xffff821c
    82f6:	8c 12       	call	r12		;
    82f8:	1c 42 06 24 	mov	&0x2406,r12	;0x2406
    82fc:	0c 9a       	cmp	r10,	r12	;
    82fe:	f5 2b       	jnc	$-20     	;abs 0x82ea
    8300:	b0 12 86 82 	call	#33414		;#0x8286
    8304:	3d 40 00 00 	mov	#0,	r13	;
    8308:	0d 93       	cmp	#0,	r13	;r3 As==00
    830a:	03 24       	jz	$+8      	;abs 0x8312
    830c:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8310:	8d 12       	call	r13		;
    8312:	d2 43 04 24 	mov.b	#1,	&0x2404	;r3 As==01
    8316:	0a 17       	popm	#1,	r10	;16-bit words
    8318:	30 41       	ret			

0000831a <call___do_global_dtors_aux>:
    831a:	30 41       	ret			

0000831c <frame_dummy>:
    831c:	3e 40 00 00 	mov	#0,	r14	;
    8320:	0e 93       	cmp	#0,	r14	;r3 As==00
    8322:	05 24       	jz	$+12     	;abs 0x832e
    8324:	3c 40 10 82 	mov	#33296,	r12	;#0x8210
    8328:	3d 40 08 24 	mov	#9224,	r13	;#0x2408
    832c:	8e 12       	call	r14		;
    832e:	3c 40 00 24 	mov	#9216,	r12	;#0x2400
    8332:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    8336:	03 20       	jnz	$+8      	;abs 0x833e
    8338:	b0 12 a4 82 	call	#33444		;#0x82a4
    833c:	30 41       	ret			
    833e:	3d 40 00 00 	mov	#0,	r13	;
    8342:	0d 93       	cmp	#0,	r13	;r3 As==00
    8344:	f9 27       	jz	$-12     	;abs 0x8338
    8346:	8d 12       	call	r13		;
    8348:	f7 3f       	jmp	$-16     	;abs 0x8338

0000834a <call_frame_dummy>:
    834a:	30 41       	ret			

0000834c <USBHAL_initPorts>:
    834c:	1a 15       	pushm	#2,	r10	;16-bit words
    834e:	39 40 06 86 	mov	#34310,	r9	;#0x8606
    8352:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8354:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8358:	89 12       	call	r9		;
    835a:	3a 40 6e 85 	mov	#34158,	r10	;#0x856e
    835e:	5c 43       	mov.b	#1,	r12	;r3 As==01
    8360:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8364:	8a 12       	call	r10		;
    8366:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8368:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    836c:	89 12       	call	r9		;
    836e:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8370:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8374:	8a 12       	call	r10		;
    8376:	7c 40 03 00 	mov.b	#3,	r12	;
    837a:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    837e:	89 12       	call	r9		;
    8380:	7c 40 03 00 	mov.b	#3,	r12	;
    8384:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8388:	8a 12       	call	r10		;
    838a:	6c 42       	mov.b	#4,	r12	;r2 As==10
    838c:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8390:	89 12       	call	r9		;
    8392:	6c 42       	mov.b	#4,	r12	;r2 As==10
    8394:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    8398:	8a 12       	call	r10		;
    839a:	7c 40 05 00 	mov.b	#5,	r12	;
    839e:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83a2:	89 12       	call	r9		;
    83a4:	7c 40 05 00 	mov.b	#5,	r12	;
    83a8:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83ac:	8a 12       	call	r10		;
    83ae:	7c 40 06 00 	mov.b	#6,	r12	;
    83b2:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83b6:	89 12       	call	r9		;
    83b8:	7c 40 06 00 	mov.b	#6,	r12	;
    83bc:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83c0:	8a 12       	call	r10		;
    83c2:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    83c6:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83ca:	89 12       	call	r9		;
    83cc:	7c 40 0d 00 	mov.b	#13,	r12	;#0x000d
    83d0:	3d 40 ff 00 	mov	#255,	r13	;#0x00ff
    83d4:	8a 12       	call	r10		;
    83d6:	19 17       	popm	#2,	r10	;16-bit words
    83d8:	30 41       	ret			

000083da <USBHAL_initClocks>:
    83da:	2a 15       	pushm	#3,	r10	;16-bit words
    83dc:	08 4c       	mov	r12,	r8	;
    83de:	09 4d       	mov	r13,	r9	;
    83e0:	3a 40 b8 89 	mov	#35256,	r10	;#0x89b8
    83e4:	7c 42       	mov.b	#8,	r12	;r2 As==11
    83e6:	2d 43       	mov	#2,	r13	;r3 As==10
    83e8:	0e 43       	clr	r14		;
    83ea:	8a 12       	call	r10		;
    83ec:	5c 43       	mov.b	#1,	r12	;r3 As==01
    83ee:	2d 43       	mov	#2,	r13	;r3 As==10
    83f0:	0e 43       	clr	r14		;
    83f2:	8a 12       	call	r10		;
    83f4:	0c 48       	mov	r8,	r12	;
    83f6:	0d 49       	mov	r9,	r13	;
    83f8:	3e 40 e8 03 	mov	#1000,	r14	;#0x03e8
    83fc:	0f 43       	clr	r15		;
    83fe:	b0 12 be ad 	call	#44478		;#0xadbe
    8402:	0a 4c       	mov	r12,	r10	;
    8404:	0c 48       	mov	r8,	r12	;
    8406:	0d 49       	mov	r9,	r13	;
    8408:	b0 12 8a ae 	call	#44682		;#0xae8a
    840c:	0d 4c       	mov	r12,	r13	;
    840e:	0c 4a       	mov	r10,	r12	;
    8410:	b0 12 a8 8d 	call	#36264		;#0x8da8
    8414:	28 17       	popm	#3,	r10	;16-bit words
    8416:	30 41       	ret			

00008418 <main>:
    8418:	2a 15       	pushm	#3,	r10	;16-bit words
    841a:	21 83       	decd	r1		;
    841c:	3c 40 50 01 	mov	#336,	r12	;#0x0150
    8420:	b0 12 06 85 	call	#34054		;#0x8506
    8424:	6c 43       	mov.b	#2,	r12	;r3 As==10
    8426:	b0 12 be 92 	call	#37566		;#0x92be
    842a:	b0 12 4c 83 	call	#33612		;#0x834c
    842e:	3c 40 00 12 	mov	#4608,	r12	;#0x1200
    8432:	3d 40 7a 00 	mov	#122,	r13	;#0x007a
    8436:	b0 12 da 83 	call	#33754		;#0x83da
    843a:	5c 43       	mov.b	#1,	r12	;r3 As==01
    843c:	4d 4c       	mov.b	r12,	r13	;
    843e:	b0 12 80 9e 	call	#40576		;#0x9e80
    8442:	32 d2       	eint			
    8444:	03 43       	nop			
    8446:	3a 40 22 97 	mov	#38690,	r10	;#0x9722
    844a:	39 40 92 a7 	mov	#42898,	r9	;#0xa792
    844e:	38 40 26 94 	mov	#37926,	r8	;#0x9426
    8452:	8a 12       	call	r10		;
    8454:	7c 90 83 ff 	cmp.b	#65411,	r12	;#0xff83
    8458:	0f 24       	jz	$+32     	;abs 0x8478
    845a:	7d 40 83 ff 	mov.b	#65411,	r13	;#0xff83
    845e:	4d 9c       	cmp.b	r12,	r13	;
    8460:	04 28       	jnc	$+10     	;abs 0x846a
    8462:	7c 90 80 ff 	cmp.b	#65408,	r12	;#0xff80
    8466:	f5 23       	jnz	$-20     	;abs 0x8452
    8468:	26 3c       	jmp	$+78     	;abs 0x84b6
    846a:	7c 90 84 ff 	cmp.b	#65412,	r12	;#0xff84
    846e:	23 24       	jz	$+72     	;abs 0x84b6
    8470:	7c 90 87 ff 	cmp.b	#65415,	r12	;#0xff87
    8474:	ee 23       	jnz	$-34     	;abs 0x8452
    8476:	1f 3c       	jmp	$+64     	;abs 0x84b6
    8478:	32 c2       	dint			
    847a:	4c 43       	clr.b	r12		;
    847c:	89 12       	call	r9		;
    847e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8480:	02 20       	jnz	$+6      	;abs 0x8486
    8482:	32 d0 18 00 	bis	#24,	r2	;#0x0018
    8486:	32 d2       	eint			
    8488:	03 43       	nop			
    848a:	5c 42 16 25 	mov.b	&0x2516,r12	;0x2516
    848e:	0c 93       	cmp	#0,	r12	;r3 As==00
    8490:	e0 27       	jz	$-62     	;abs 0x8452
    8492:	c2 43 16 25 	mov.b	#0,	&0x2516	;r3 As==00
    8496:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    849a:	3d 40 00 01 	mov	#256,	r13	;#0x0100
    849e:	4e 43       	clr.b	r14		;
    84a0:	88 12       	call	r8		;
    84a2:	0d 4c       	mov	r12,	r13	;
    84a4:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    84a8:	1f 43       	mov	#1,	r15	;r3 As==01
    84aa:	3c 40 16 24 	mov	#9238,	r12	;#0x2416
    84ae:	4e 43       	clr.b	r14		;
    84b0:	b0 12 98 93 	call	#37784		;#0x9398
    84b4:	ce 3f       	jmp	$-98     	;abs 0x8452
    84b6:	32 d0 d8 00 	bis	#216,	r2	;#0x00d8
    84ba:	03 43       	nop			
    84bc:	ca 3f       	jmp	$-106    	;abs 0x8452

000084be <UNMI_ISR>:
    84be:	bf 15       	pushm	#12,	r15	;16-bit words
    84c0:	1c 42 9a 01 	mov	&0x019a,r12	;0x019a
    84c4:	2c 92       	cmp	#4,	r12	;r2 As==10
    84c6:	12 24       	jz	$+38     	;abs 0x84ec
    84c8:	2d 42       	mov	#4,	r13	;r2 As==10
    84ca:	0d 9c       	cmp	r12,	r13	;
    84cc:	05 28       	jnc	$+12     	;abs 0x84d8
    84ce:	0c 93       	cmp	#0,	r12	;r3 As==00
    84d0:	17 24       	jz	$+48     	;abs 0x8500
    84d2:	2c 93       	cmp	#2,	r12	;r3 As==10
    84d4:	15 24       	jz	$+44     	;abs 0x8500
    84d6:	15 3c       	jmp	$+44     	;abs 0x8502
    84d8:	3c 90 06 00 	cmp	#6,	r12	;
    84dc:	11 24       	jz	$+36     	;abs 0x8500
    84de:	3c 92       	cmp	#8,	r12	;r2 As==11
    84e0:	10 20       	jnz	$+34     	;abs 0x8502
    84e2:	82 43 98 01 	mov	#0,	&0x0198	;r3 As==00
    84e6:	b0 12 26 95 	call	#38182		;#0x9526
    84ea:	0b 3c       	jmp	$+24     	;abs 0x8502
    84ec:	3a 40 f4 8d 	mov	#36340,	r10	;#0x8df4
    84f0:	7c 42       	mov.b	#8,	r12	;r2 As==11
    84f2:	8a 12       	call	r10		;
    84f4:	5c 43       	mov.b	#1,	r12	;r3 As==01
    84f6:	8a 12       	call	r10		;
    84f8:	6c 43       	mov.b	#2,	r12	;r3 As==10
    84fa:	b0 12 80 87 	call	#34688		;#0x8780
    84fe:	01 3c       	jmp	$+4      	;abs 0x8502
    8500:	03 43       	nop			
    8502:	b4 17       	popm	#12,	r15	;16-bit words
    8504:	00 13       	reti			

00008506 <WDT_A_hold>:
    8506:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    850a:	2d 4c       	mov	@r12,	r13	;
    850c:	7d d0 80 ff 	bis.b	#65408,	r13	;#0xff80
    8510:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    8514:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    8518:	8c 4d 00 00 	mov	r13,	0(r12)	;
    851c:	30 41       	ret			

0000851e <WDT_A_start>:
    851e:	1d 4c 0c 00 	mov	12(r12),r13	;0x0000c
    8522:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    8526:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    852a:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    852e:	30 41       	ret			

00008530 <WDT_A_resetTimer>:
    8530:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    8534:	2d 4c       	mov	@r12,	r13	;
    8536:	7d d2       	bis.b	#8,	r13	;r2 As==11
    8538:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    853c:	3d 50 00 5a 	add	#23040,	r13	;#0x5a00
    8540:	8c 4d 00 00 	mov	r13,	0(r12)	;
    8544:	30 41       	ret			

00008546 <WDT_A_initWatchdogTimer>:
    8546:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    854a:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    854e:	3d 50 88 5a 	add	#23176,	r13	;#0x5a88
    8552:	0d 5e       	add	r14,	r13	;
    8554:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    8558:	30 41       	ret			

0000855a <WDT_A_initIntervalTimer>:
    855a:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    855e:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8562:	3d 50 98 5a 	add	#23192,	r13	;#0x5a98
    8566:	0d 5e       	add	r14,	r13	;
    8568:	8c 4d 0c 00 	mov	r13,	12(r12)	; 0x000c
    856c:	30 41       	ret			

0000856e <GPIO_setAsOutputPin>:
    856e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8572:	0e 4c       	mov	r12,	r14	;
    8574:	0e 5c       	add	r12,	r14	;
    8576:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    857a:	1c b3       	bit	#1,	r12	;r3 As==01
    857c:	02 20       	jnz	$+6      	;abs 0x8582
    857e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8582:	8e cd 0a 00 	bic	r13,	10(r14)	; 0x000a
    8586:	8e dd 04 00 	bis	r13,	4(r14)	;
    858a:	30 41       	ret			

0000858c <GPIO_setAsInputPin>:
    858c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8590:	0e 4c       	mov	r12,	r14	;
    8592:	0e 5c       	add	r12,	r14	;
    8594:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    8598:	1c b3       	bit	#1,	r12	;r3 As==01
    859a:	02 20       	jnz	$+6      	;abs 0x85a0
    859c:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    85a0:	3d e3       	inv	r13		;
    85a2:	8e fd 0a 00 	and	r13,	10(r14)	; 0x000a
    85a6:	8e fd 04 00 	and	r13,	4(r14)	;
    85aa:	8e fd 06 00 	and	r13,	6(r14)	;
    85ae:	30 41       	ret			

000085b0 <GPIO_setAsPeripheralModuleFunctionOutputPin>:
    85b0:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    85b4:	0e 4c       	mov	r12,	r14	;
    85b6:	0e 5c       	add	r12,	r14	;
    85b8:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    85bc:	1c b3       	bit	#1,	r12	;r3 As==01
    85be:	02 20       	jnz	$+6      	;abs 0x85c4
    85c0:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    85c4:	8e dd 04 00 	bis	r13,	4(r14)	;
    85c8:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    85cc:	30 41       	ret			

000085ce <GPIO_setAsPeripheralModuleFunctionInputPin>:
    85ce:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    85d2:	0e 4c       	mov	r12,	r14	;
    85d4:	0e 5c       	add	r12,	r14	;
    85d6:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    85da:	1c b3       	bit	#1,	r12	;r3 As==01
    85dc:	02 20       	jnz	$+6      	;abs 0x85e2
    85de:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    85e2:	8e cd 04 00 	bic	r13,	4(r14)	;
    85e6:	8e dd 0a 00 	bis	r13,	10(r14)	; 0x000a
    85ea:	30 41       	ret			

000085ec <GPIO_setOutputHighOnPin>:
    85ec:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    85f0:	0e 4c       	mov	r12,	r14	;
    85f2:	0e 5c       	add	r12,	r14	;
    85f4:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    85f8:	1c b3       	bit	#1,	r12	;r3 As==01
    85fa:	02 20       	jnz	$+6      	;abs 0x8600
    85fc:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8600:	8e dd 02 00 	bis	r13,	2(r14)	;
    8604:	30 41       	ret			

00008606 <GPIO_setOutputLowOnPin>:
    8606:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    860a:	0e 4c       	mov	r12,	r14	;
    860c:	0e 5c       	add	r12,	r14	;
    860e:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    8612:	1c b3       	bit	#1,	r12	;r3 As==01
    8614:	02 20       	jnz	$+6      	;abs 0x861a
    8616:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    861a:	8e cd 02 00 	bic	r13,	2(r14)	;
    861e:	30 41       	ret			

00008620 <GPIO_toggleOutputOnPin>:
    8620:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8624:	0e 4c       	mov	r12,	r14	;
    8626:	0e 5c       	add	r12,	r14	;
    8628:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    862c:	1c b3       	bit	#1,	r12	;r3 As==01
    862e:	02 20       	jnz	$+6      	;abs 0x8634
    8630:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8634:	8e ed 02 00 	xor	r13,	2(r14)	;
    8638:	30 41       	ret			

0000863a <GPIO_setAsInputPinWithPullDownResistor>:
    863a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    863e:	0e 4c       	mov	r12,	r14	;
    8640:	0e 5c       	add	r12,	r14	;
    8642:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    8646:	1c b3       	bit	#1,	r12	;r3 As==01
    8648:	02 20       	jnz	$+6      	;abs 0x864e
    864a:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    864e:	0c 4d       	mov	r13,	r12	;
    8650:	3c e3       	inv	r12		;
    8652:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    8656:	8e fc 04 00 	and	r12,	4(r14)	;
    865a:	8e dd 06 00 	bis	r13,	6(r14)	;
    865e:	8e fc 02 00 	and	r12,	2(r14)	;
    8662:	30 41       	ret			

00008664 <GPIO_setAsInputPinWithPullUpResistor>:
    8664:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8668:	0e 4c       	mov	r12,	r14	;
    866a:	0e 5c       	add	r12,	r14	;
    866c:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    8670:	1c b3       	bit	#1,	r12	;r3 As==01
    8672:	02 20       	jnz	$+6      	;abs 0x8678
    8674:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8678:	0c 4d       	mov	r13,	r12	;
    867a:	3c e3       	inv	r12		;
    867c:	8e fc 0a 00 	and	r12,	10(r14)	; 0x000a
    8680:	8e fc 04 00 	and	r12,	4(r14)	;
    8684:	8e dd 06 00 	bis	r13,	6(r14)	;
    8688:	8e dd 02 00 	bis	r13,	2(r14)	;
    868c:	30 41       	ret			

0000868e <GPIO_getInputPinValue>:
    868e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8692:	0e 4c       	mov	r12,	r14	;
    8694:	0e 5c       	add	r12,	r14	;
    8696:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    869a:	1c b3       	bit	#1,	r12	;r3 As==01
    869c:	02 20       	jnz	$+6      	;abs 0x86a2
    869e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    86a2:	2d fe       	and	@r14,	r13	;
    86a4:	0c 43       	clr	r12		;
    86a6:	0c 8d       	sub	r13,	r12	;
    86a8:	0c dd       	bis	r13,	r12	;
    86aa:	5c 03       	rrum	#1,	r12	;
    86ac:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    86b0:	30 41       	ret			

000086b2 <GPIO_enableInterrupt>:
    86b2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    86b6:	0e 4c       	mov	r12,	r14	;
    86b8:	0e 5c       	add	r12,	r14	;
    86ba:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    86be:	1c b3       	bit	#1,	r12	;r3 As==01
    86c0:	02 20       	jnz	$+6      	;abs 0x86c6
    86c2:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    86c6:	8e dd 1a 00 	bis	r13,	26(r14)	; 0x001a
    86ca:	30 41       	ret			

000086cc <GPIO_disableInterrupt>:
    86cc:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    86d0:	0e 4c       	mov	r12,	r14	;
    86d2:	0e 5c       	add	r12,	r14	;
    86d4:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    86d8:	1c b3       	bit	#1,	r12	;r3 As==01
    86da:	02 20       	jnz	$+6      	;abs 0x86e0
    86dc:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    86e0:	8e cd 1a 00 	bic	r13,	26(r14)	; 0x001a
    86e4:	30 41       	ret			

000086e6 <GPIO_getInterruptStatus>:
    86e6:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    86ea:	0e 4c       	mov	r12,	r14	;
    86ec:	0e 5c       	add	r12,	r14	;
    86ee:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    86f2:	1c b3       	bit	#1,	r12	;r3 As==01
    86f4:	02 20       	jnz	$+6      	;abs 0x86fa
    86f6:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    86fa:	0c 4d       	mov	r13,	r12	;
    86fc:	1c fe 1c 00 	and	28(r14),r12	;0x0001c
    8700:	30 41       	ret			

00008702 <GPIO_clearInterrupt>:
    8702:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8706:	0e 4c       	mov	r12,	r14	;
    8708:	0e 5c       	add	r12,	r14	;
    870a:	1e 4e 00 80 	mov	-32768(r14),r14	;0xffff8000
    870e:	1c b3       	bit	#1,	r12	;r3 As==01
    8710:	02 20       	jnz	$+6      	;abs 0x8716
    8712:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8716:	8e cd 1c 00 	bic	r13,	28(r14)	; 0x001c
    871a:	30 41       	ret			

0000871c <GPIO_selectInterruptEdge>:
    871c:	4f 4c       	mov.b	r12,	r15	;
    871e:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    8722:	0c 4f       	mov	r15,	r12	;
    8724:	0c 5f       	add	r15,	r12	;
    8726:	1c 4c 00 80 	mov	-32768(r12),r12	;0xffff8000
    872a:	1f b3       	bit	#1,	r15	;r3 As==01
    872c:	02 20       	jnz	$+6      	;abs 0x8732
    872e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    8732:	3c 50 18 00 	add	#24,	r12	;#0x0018
    8736:	0e 93       	cmp	#0,	r14	;r3 As==00
    8738:	03 20       	jnz	$+8      	;abs 0x8740
    873a:	8c cd 00 00 	bic	r13,	0(r12)	;
    873e:	02 3c       	jmp	$+6      	;abs 0x8744
    8740:	8c dd 00 00 	bis	r13,	0(r12)	;
    8744:	30 41       	ret			

00008746 <GPIO_setDriveStrength>:
    8746:	4f 4c       	mov.b	r12,	r15	;
    8748:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    874c:	0c 4f       	mov	r15,	r12	;
    874e:	0c 5f       	add	r15,	r12	;
    8750:	1c 4c 00 80 	mov	-32768(r12),r12	;0xffff8000
    8754:	1f b3       	bit	#1,	r15	;r3 As==01
    8756:	02 20       	jnz	$+6      	;abs 0x875c
    8758:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    875c:	3c 52       	add	#8,	r12	;r2 As==11
    875e:	0e 93       	cmp	#0,	r14	;r3 As==00
    8760:	03 20       	jnz	$+8      	;abs 0x8768
    8762:	8c cd 00 00 	bic	r13,	0(r12)	;
    8766:	02 3c       	jmp	$+6      	;abs 0x876c
    8768:	8c dd 00 00 	bis	r13,	0(r12)	;
    876c:	30 41       	ret			

0000876e <SFR_enableInterrupt>:
    876e:	c2 dc 00 01 	bis.b	r12,	&0x0100	;
    8772:	30 41       	ret			

00008774 <SFR_disableInterrupt>:
    8774:	c2 cc 00 01 	bic.b	r12,	&0x0100	;
    8778:	30 41       	ret			

0000877a <SFR_getInterruptStatus>:
    877a:	5c f2 02 01 	and.b	&0x0102,r12	;0x0102
    877e:	30 41       	ret			

00008780 <SFR_clearInterrupt>:
    8780:	c2 cc 02 01 	bic.b	r12,	&0x0102	;
    8784:	30 41       	ret			

00008786 <SFR_setResetPinPullResistor>:
    8786:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    878a:	fd f0 f3 ff 	and.b	#65523,	0(r13)	;#0xfff3
    878e:	00 00 
    8790:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    8794:	30 41       	ret			

00008796 <SFR_setNMIEdge>:
    8796:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    879a:	ed c3 00 00 	bic.b	#2,	0(r13)	;r3 As==10
    879e:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    87a2:	30 41       	ret			

000087a4 <SFR_setResetNMIPinFunction>:
    87a4:	3d 40 04 01 	mov	#260,	r13	;#0x0104
    87a8:	dd c3 00 00 	bic.b	#1,	0(r13)	;r3 As==01
    87ac:	cd dc 00 00 	bis.b	r12,	0(r13)	;
    87b0:	30 41       	ret			

000087b2 <privateUCSSourceClockFromDCO>:
    87b2:	5a 15       	pushm	#6,	r10	;16-bit words
    87b4:	07 4c       	mov	r12,	r7	;
    87b6:	16 42 64 01 	mov	&0x0164,r6	;0x0164
    87ba:	36 f0 ff 03 	and	#1023,	r6	;#0x03ff
    87be:	5f 42 66 01 	mov.b	&0x0166,r15	;0x0166
    87c2:	7f f0 07 00 	and.b	#7,	r15	;
    87c6:	4d 4f       	mov.b	r15,	r13	;
    87c8:	7c 40 03 00 	mov.b	#3,	r12	;
    87cc:	4c 9f       	cmp.b	r15,	r12	;
    87ce:	05 28       	jnc	$+12     	;abs 0x87da
    87d0:	1c 43       	mov	#1,	r12	;r3 As==01
    87d2:	b0 12 f0 ad 	call	#44528		;#0xadf0
    87d6:	0a 4c       	mov	r12,	r10	;
    87d8:	0c 3c       	jmp	$+26     	;abs 0x87f2
    87da:	6f 92       	cmp.b	#4,	r15	;r2 As==10
    87dc:	06 24       	jz	$+14     	;abs 0x87ea
    87de:	7f 90 05 00 	cmp.b	#5,	r15	;
    87e2:	06 20       	jnz	$+14     	;abs 0x87f0
    87e4:	3a 40 10 00 	mov	#16,	r10	;#0x0010
    87e8:	04 3c       	jmp	$+10     	;abs 0x87f2
    87ea:	3a 40 0c 00 	mov	#12,	r10	;#0x000c
    87ee:	01 3c       	jmp	$+4      	;abs 0x87f2
    87f0:	1a 43       	mov	#1,	r10	;r3 As==01
    87f2:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    87f6:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    87fa:	7c 90 20 00 	cmp.b	#32,	r12	;#0x0020
    87fe:	17 24       	jz	$+48     	;abs 0x882e
    8800:	7c 90 50 00 	cmp.b	#80,	r12	;#0x0050
    8804:	23 24       	jz	$+72     	;abs 0x884c
    8806:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    8808:	2f 20       	jnz	$+96     	;abs 0x8868
    880a:	18 42 1c 25 	mov	&0x251c,r8	;0x251c
    880e:	19 42 1e 25 	mov	&0x251e,r9	;0x251e
    8812:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    8816:	6c 01 
    8818:	0e 20       	jnz	$+30     	;abs 0x8836
    881a:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    881e:	24 24       	jz	$+74     	;abs 0x8868
    8820:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8824:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8828:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    882c:	1d 24       	jz	$+60     	;abs 0x8868
    882e:	38 40 00 80 	mov	#32768,	r8	;#0x8000
    8832:	09 43       	clr	r9		;
    8834:	19 3c       	jmp	$+52     	;abs 0x8868
    8836:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    883a:	16 24       	jz	$+46     	;abs 0x8868
    883c:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    8840:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8844:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8848:	f2 23       	jnz	$-26     	;abs 0x882e
    884a:	0e 3c       	jmp	$+30     	;abs 0x8868
    884c:	18 42 18 25 	mov	&0x2518,r8	;0x2518
    8850:	19 42 1a 25 	mov	&0x251a,r9	;0x251a
    8854:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8858:	07 24       	jz	$+16     	;abs 0x8868
    885a:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    885e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8862:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8866:	e3 23       	jnz	$-56     	;abs 0x882e
    8868:	0e 46       	mov	r6,	r14	;
    886a:	1e 53       	inc	r14		;
    886c:	35 40 08 af 	mov	#44808,	r5	;#0xaf08
    8870:	0c 48       	mov	r8,	r12	;
    8872:	0d 49       	mov	r9,	r13	;
    8874:	0f 43       	clr	r15		;
    8876:	85 12       	call	r5		;
    8878:	0e 4a       	mov	r10,	r14	;
    887a:	0f 43       	clr	r15		;
    887c:	b0 12 be ad 	call	#44478		;#0xadbe
    8880:	08 4c       	mov	r12,	r8	;
    8882:	09 4d       	mov	r13,	r9	;
    8884:	0b 45       	mov	r5,	r11	;
    8886:	37 90 03 00 	cmp	#3,	r7	;
    888a:	16 20       	jnz	$+46     	;abs 0x88b8
    888c:	1c 42 64 01 	mov	&0x0164,r12	;0x0164
    8890:	3c f0 00 70 	and	#28672,	r12	;#0x7000
    8894:	5c 03       	rrum	#1,	r12	;
    8896:	4a 18 0c 11 	rpt #11 { rrax.w	r12		;
    889a:	0d 43       	clr	r13		;
    889c:	1e 43       	mov	#1,	r14	;r3 As==01
    889e:	0d 9c       	cmp	r12,	r13	;
    88a0:	05 2c       	jc	$+12     	;abs 0x88ac
    88a2:	0e 5e       	rla	r14		;
    88a4:	5d 53       	inc.b	r13		;
    88a6:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    88aa:	f9 3f       	jmp	$-12     	;abs 0x889e
    88ac:	0c 48       	mov	r8,	r12	;
    88ae:	0d 49       	mov	r9,	r13	;
    88b0:	0f 43       	clr	r15		;
    88b2:	8b 12       	call	r11		;
    88b4:	08 4c       	mov	r12,	r8	;
    88b6:	09 4d       	mov	r13,	r9	;
    88b8:	0c 48       	mov	r8,	r12	;
    88ba:	0d 49       	mov	r9,	r13	;
    88bc:	55 17       	popm	#6,	r10	;16-bit words
    88be:	30 41       	ret			

000088c0 <privateUCSComputeCLKFrequency>:
    88c0:	0a 15       	pushm	#1,	r10	;16-bit words
    88c2:	0b 43       	clr	r11		;
    88c4:	1a 43       	mov	#1,	r10	;r3 As==01
    88c6:	0b 9d       	cmp	r13,	r11	;
    88c8:	07 2c       	jc	$+16     	;abs 0x88d8
    88ca:	4a 5a       	rla.b	r10		;
    88cc:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    88d0:	5b 53       	inc.b	r11		;
    88d2:	3b f0 ff 00 	and	#255,	r11	;#0x00ff
    88d6:	f7 3f       	jmp	$-16     	;abs 0x88c6
    88d8:	2c 93       	cmp	#2,	r12	;r3 As==10
    88da:	3f 24       	jz	$+128    	;abs 0x895a
    88dc:	2d 43       	mov	#2,	r13	;r3 As==10
    88de:	0d 9c       	cmp	r12,	r13	;
    88e0:	0e 28       	jnc	$+30     	;abs 0x88fe
    88e2:	0c 93       	cmp	#0,	r12	;r3 As==00
    88e4:	13 24       	jz	$+40     	;abs 0x890c
    88e6:	1c 93       	cmp	#1,	r12	;r3 As==01
    88e8:	5a 20       	jnz	$+182    	;abs 0x899e
    88ea:	3c 40 10 27 	mov	#10000,	r12	;#0x2710
    88ee:	0d 4a       	mov	r10,	r13	;
    88f0:	b0 12 7e ac 	call	#44158		;#0xac7e
    88f4:	0e 4c       	mov	r12,	r14	;
    88f6:	0f 4c       	mov	r12,	r15	;
    88f8:	4e 18 0f 11 	rpt #15 { rrax.w	r15		;
    88fc:	50 3c       	jmp	$+162    	;abs 0x899e
    88fe:	2d 42       	mov	#4,	r13	;r2 As==10
    8900:	0d 9c       	cmp	r12,	r13	;
    8902:	45 2c       	jc	$+140    	;abs 0x898e
    8904:	3c 90 05 00 	cmp	#5,	r12	;
    8908:	30 24       	jz	$+98     	;abs 0x896a
    890a:	49 3c       	jmp	$+148    	;abs 0x899e
    890c:	1c 42 1c 25 	mov	&0x251c,r12	;0x251c
    8910:	1d 42 1e 25 	mov	&0x251e,r13	;0x251e
    8914:	0e 4a       	mov	r10,	r14	;
    8916:	0f 43       	clr	r15		;
    8918:	b0 12 be ad 	call	#44478		;#0xadbe
    891c:	0e 4c       	mov	r12,	r14	;
    891e:	0f 4d       	mov	r13,	r15	;
    8920:	b2 b0 20 00 	bit	#32,	&0x016c	;#0x0020
    8924:	6c 01 
    8926:	0e 20       	jnz	$+30     	;abs 0x8944
    8928:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    892c:	38 24       	jz	$+114    	;abs 0x899e
    892e:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8932:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8936:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    893a:	31 24       	jz	$+100    	;abs 0x899e
    893c:	3e 40 00 80 	mov	#32768,	r14	;#0x8000
    8940:	0f 43       	clr	r15		;
    8942:	2d 3c       	jmp	$+92     	;abs 0x899e
    8944:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8948:	2a 24       	jz	$+86     	;abs 0x899e
    894a:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    894e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8952:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8956:	f2 23       	jnz	$-26     	;abs 0x893c
    8958:	22 3c       	jmp	$+70     	;abs 0x899e
    895a:	3c 40 00 80 	mov	#32768,	r12	;#0x8000
    895e:	0d 43       	clr	r13		;
    8960:	0e 4a       	mov	r10,	r14	;
    8962:	0f 43       	clr	r15		;
    8964:	b0 12 4a ad 	call	#44362		;#0xad4a
    8968:	18 3c       	jmp	$+50     	;abs 0x899a
    896a:	1c 42 18 25 	mov	&0x2518,r12	;0x2518
    896e:	1d 42 1a 25 	mov	&0x251a,r13	;0x251a
    8972:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8976:	04 24       	jz	$+10     	;abs 0x8980
    8978:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    897c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8980:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8984:	06 24       	jz	$+14     	;abs 0x8992
    8986:	2c 42       	mov	#4,	r12	;r2 As==10
    8988:	b0 12 b2 87 	call	#34738		;#0x87b2
    898c:	06 3c       	jmp	$+14     	;abs 0x899a
    898e:	b0 12 b2 87 	call	#34738		;#0x87b2
    8992:	0e 4a       	mov	r10,	r14	;
    8994:	0f 43       	clr	r15		;
    8996:	b0 12 be ad 	call	#44478		;#0xadbe
    899a:	0e 4c       	mov	r12,	r14	;
    899c:	0f 4d       	mov	r13,	r15	;
    899e:	0c 4e       	mov	r14,	r12	;
    89a0:	0d 4f       	mov	r15,	r13	;
    89a2:	0a 17       	popm	#1,	r10	;16-bit words
    89a4:	30 41       	ret			

000089a6 <UCS_setExternalClockSource>:
    89a6:	82 4c 1c 25 	mov	r12,	&0x251c	;
    89aa:	82 4d 1e 25 	mov	r13,	&0x251e	;
    89ae:	82 4e 18 25 	mov	r14,	&0x2518	;
    89b2:	82 4f 1a 25 	mov	r15,	&0x251a	;
    89b6:	30 41       	ret			

000089b8 <UCS_initClockSignal>:
    89b8:	0a 15       	pushm	#1,	r10	;16-bit words
    89ba:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    89be:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    89c0:	26 24       	jz	$+78     	;abs 0x8a0e
    89c2:	6a 43       	mov.b	#2,	r10	;r3 As==10
    89c4:	4a 9c       	cmp.b	r12,	r10	;
    89c6:	0f 28       	jnc	$+32     	;abs 0x89e6
    89c8:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    89ca:	42 20       	jnz	$+134    	;abs 0x8a50
    89cc:	b2 f0 ff f8 	and	#63743,	&0x0168	;#0xf8ff
    89d0:	68 01 
    89d2:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    89d6:	82 dd 68 01 	bis	r13,	&0x0168	;
    89da:	b2 f0 ff f8 	and	#63743,	&0x016a	;#0xf8ff
    89de:	6a 01 
    89e0:	47 18 0e 5e 	rpt #8 { rlax.w	r14		;
    89e4:	11 3c       	jmp	$+36     	;abs 0x8a08
    89e6:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    89e8:	03 24       	jz	$+8      	;abs 0x89f0
    89ea:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    89ec:	19 24       	jz	$+52     	;abs 0x8a20
    89ee:	30 3c       	jmp	$+98     	;abs 0x8a50
    89f0:	b2 f0 8f ff 	and	#65423,	&0x0168	;#0xff8f
    89f4:	68 01 
    89f6:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    89fa:	82 dd 68 01 	bis	r13,	&0x0168	;
    89fe:	b2 f0 8f ff 	and	#65423,	&0x016a	;#0xff8f
    8a02:	6a 01 
    8a04:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    8a08:	82 de 6a 01 	bis	r14,	&0x016a	;
    8a0c:	21 3c       	jmp	$+68     	;abs 0x8a50
    8a0e:	b2 f0 f8 ff 	and	#65528,	&0x0168	;#0xfff8
    8a12:	68 01 
    8a14:	82 dd 68 01 	bis	r13,	&0x0168	;
    8a18:	b2 f0 f8 ff 	and	#65528,	&0x016a	;#0xfff8
    8a1c:	6a 01 
    8a1e:	f4 3f       	jmp	$-22     	;abs 0x8a08
    8a20:	f2 f0 8f ff 	and.b	#65423,	&0x0166	;#0xff8f
    8a24:	66 01 
    8a26:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    8a2a:	c2 dd 66 01 	bis.b	r13,	&0x0166	;
    8a2e:	f2 f0 f8 ff 	and.b	#65528,	&0x0166	;#0xfff8
    8a32:	66 01 
    8a34:	2e 92       	cmp	#4,	r14	;r2 As==10
    8a36:	06 24       	jz	$+14     	;abs 0x8a44
    8a38:	3e 90 05 00 	cmp	#5,	r14	;
    8a3c:	07 20       	jnz	$+16     	;abs 0x8a4c
    8a3e:	e2 d2 66 01 	bis.b	#4,	&0x0166	;r2 As==10
    8a42:	06 3c       	jmp	$+14     	;abs 0x8a50
    8a44:	f2 d0 05 00 	bis.b	#5,	&0x0166	;
    8a48:	66 01 
    8a4a:	02 3c       	jmp	$+6      	;abs 0x8a50
    8a4c:	c2 de 66 01 	bis.b	r14,	&0x0166	;
    8a50:	0a 17       	popm	#1,	r10	;16-bit words
    8a52:	30 41       	ret			

00008a54 <UCS_turnOnLFXT1>:
    8a54:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    8a58:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    8a5c:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    8a60:	6c 01 
    8a62:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    8a66:	6c 01 
    8a68:	82 dd 6c 01 	bis	r13,	&0x016c	;
    8a6c:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    8a70:	05 24       	jz	$+12     	;abs 0x8a7c
    8a72:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8a76:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8a7a:	f8 3f       	jmp	$-14     	;abs 0x8a6c
    8a7c:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    8a80:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    8a84:	0c dd       	bis	r13,	r12	;
    8a86:	82 4c 6c 01 	mov	r12,	&0x016c	;
    8a8a:	30 41       	ret			

00008a8c <UCS_turnOnHFXT1>:
    8a8c:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    8a90:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    8a94:	3d f0 c0 00 	and	#192,	r13	;#0x00c0
    8a98:	0d 9c       	cmp	r12,	r13	;
    8a9a:	05 24       	jz	$+12     	;abs 0x8aa6
    8a9c:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    8aa0:	6c 01 
    8aa2:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8aa6:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    8aaa:	6c 01 
    8aac:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    8ab0:	6c 01 
    8ab2:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8ab6:	05 24       	jz	$+12     	;abs 0x8ac2
    8ab8:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    8abc:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8ac0:	f8 3f       	jmp	$-14     	;abs 0x8ab2
    8ac2:	30 41       	ret			

00008ac4 <UCS_bypassXT1>:
    8ac4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8ac8:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    8acc:	6c 01 
    8ace:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8ad2:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    8ad6:	6c 01 
    8ad8:	0c 93       	cmp	#0,	r12	;r3 As==00
    8ada:	08 20       	jnz	$+18     	;abs 0x8aec
    8adc:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    8ae0:	0d 24       	jz	$+28     	;abs 0x8afc
    8ae2:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8ae6:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8aea:	f8 3f       	jmp	$-14     	;abs 0x8adc
    8aec:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8af0:	05 24       	jz	$+12     	;abs 0x8afc
    8af2:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    8af6:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8afa:	f8 3f       	jmp	$-14     	;abs 0x8aec
    8afc:	30 41       	ret			

00008afe <UCS_turnOnLFXT1WithTimeout>:
    8afe:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    8b02:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    8b06:	b2 d0 c0 00 	bis	#192,	&0x016c	;#0x00c0
    8b0a:	6c 01 
    8b0c:	b2 f0 c3 ff 	and	#65475,	&0x016c	;#0xffc3
    8b10:	6c 01 
    8b12:	82 dd 6c 01 	bis	r13,	&0x016c	;
    8b16:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8b1a:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8b1e:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    8b22:	04 24       	jz	$+10     	;abs 0x8b2c
    8b24:	3e 53       	add	#-1,	r14	;r3 As==11
    8b26:	0e 93       	cmp	#0,	r14	;r3 As==00
    8b28:	f6 23       	jnz	$-18     	;abs 0x8b16
    8b2a:	0b 3c       	jmp	$+24     	;abs 0x8b42
    8b2c:	0e 93       	cmp	#0,	r14	;r3 As==00
    8b2e:	09 24       	jz	$+20     	;abs 0x8b42
    8b30:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    8b34:	3d f0 3f ff 	and	#65343,	r13	;#0xff3f
    8b38:	0c dd       	bis	r13,	r12	;
    8b3a:	82 4c 6c 01 	mov	r12,	&0x016c	;
    8b3e:	1c 43       	mov	#1,	r12	;r3 As==01
    8b40:	01 3c       	jmp	$+4      	;abs 0x8b44
    8b42:	0c 4e       	mov	r14,	r12	;
    8b44:	30 41       	ret			

00008b46 <UCS_turnOnHFXT1WithTimeout>:
    8b46:	92 c3 6c 01 	bic	#1,	&0x016c	;r3 As==01
    8b4a:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    8b4e:	3e f0 c0 00 	and	#192,	r14	;#0x00c0
    8b52:	0e 9c       	cmp	r12,	r14	;
    8b54:	05 24       	jz	$+12     	;abs 0x8b60
    8b56:	b2 f0 3f ff 	and	#65343,	&0x016c	;#0xff3f
    8b5a:	6c 01 
    8b5c:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8b60:	b2 d0 20 00 	bis	#32,	&0x016c	;#0x0020
    8b64:	6c 01 
    8b66:	b2 f0 ef ff 	and	#65519,	&0x016c	;#0xffef
    8b6a:	6c 01 
    8b6c:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    8b70:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8b74:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8b78:	05 24       	jz	$+12     	;abs 0x8b84
    8b7a:	3d 53       	add	#-1,	r13	;r3 As==11
    8b7c:	0d 93       	cmp	#0,	r13	;r3 As==00
    8b7e:	f6 23       	jnz	$-18     	;abs 0x8b6c
    8b80:	0c 4d       	mov	r13,	r12	;
    8b82:	07 3c       	jmp	$+16     	;abs 0x8b92
    8b84:	0c 43       	clr	r12		;
    8b86:	0c 8d       	sub	r13,	r12	;
    8b88:	0d dc       	bis	r12,	r13	;
    8b8a:	0c 4d       	mov	r13,	r12	;
    8b8c:	5c 03       	rrum	#1,	r12	;
    8b8e:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    8b92:	30 41       	ret			

00008b94 <UCS_bypassXT1WithTimeout>:
    8b94:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8b98:	b2 f0 df ff 	and	#65503,	&0x016c	;#0xffdf
    8b9c:	6c 01 
    8b9e:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8ba2:	b2 d0 11 00 	bis	#17,	&0x016c	;#0x0011
    8ba6:	6c 01 
    8ba8:	0c 93       	cmp	#0,	r12	;r3 As==00
    8baa:	0e 20       	jnz	$+30     	;abs 0x8bc8
    8bac:	e2 c3 6e 01 	bic.b	#2,	&0x016e	;r3 As==10
    8bb0:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8bb4:	e2 b3 6e 01 	bit.b	#2,	&0x016e	;r3 As==10
    8bb8:	0e 24       	jz	$+30     	;abs 0x8bd6
    8bba:	3d 53       	add	#-1,	r13	;r3 As==11
    8bbc:	0d 93       	cmp	#0,	r13	;r3 As==00
    8bbe:	f6 23       	jnz	$-18     	;abs 0x8bac
    8bc0:	12 3c       	jmp	$+38     	;abs 0x8be6
    8bc2:	3d 53       	add	#-1,	r13	;r3 As==11
    8bc4:	0d 93       	cmp	#0,	r13	;r3 As==00
    8bc6:	0f 24       	jz	$+32     	;abs 0x8be6
    8bc8:	e2 c2 6e 01 	bic.b	#4,	&0x016e	;r2 As==10
    8bcc:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8bd0:	e2 b2 6e 01 	bit.b	#4,	&0x016e	;r2 As==10
    8bd4:	f6 23       	jnz	$-18     	;abs 0x8bc2
    8bd6:	0c 43       	clr	r12		;
    8bd8:	0c 8d       	sub	r13,	r12	;
    8bda:	0d dc       	bis	r12,	r13	;
    8bdc:	0c 4d       	mov	r13,	r12	;
    8bde:	5c 03       	rrum	#1,	r12	;
    8be0:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    8be4:	01 3c       	jmp	$+4      	;abs 0x8be8
    8be6:	0c 43       	clr	r12		;
    8be8:	30 41       	ret			

00008bea <UCS_turnOffXT1>:
    8bea:	92 d3 6c 01 	bis	#1,	&0x016c	;r3 As==01
    8bee:	30 41       	ret			

00008bf0 <UCS_turnOnXT2>:
    8bf0:	1d 42 6c 01 	mov	&0x016c,r13	;0x016c
    8bf4:	3d f0 00 c0 	and	#49152,	r13	;#0xc000
    8bf8:	0d 9c       	cmp	r12,	r13	;
    8bfa:	05 24       	jz	$+12     	;abs 0x8c06
    8bfc:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    8c00:	6c 01 
    8c02:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8c06:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    8c0a:	6c 01 
    8c0c:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    8c10:	6c 01 
    8c12:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8c16:	05 24       	jz	$+12     	;abs 0x8c22
    8c18:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    8c1c:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8c20:	f8 3f       	jmp	$-14     	;abs 0x8c12
    8c22:	30 41       	ret			

00008c24 <UCS_bypassXT2>:
    8c24:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    8c28:	6c 01 
    8c2a:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8c2e:	05 24       	jz	$+12     	;abs 0x8c3a
    8c30:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    8c34:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8c38:	f8 3f       	jmp	$-14     	;abs 0x8c2a
    8c3a:	30 41       	ret			

00008c3c <UCS_turnOnXT2WithTimeout>:
    8c3c:	1e 42 6c 01 	mov	&0x016c,r14	;0x016c
    8c40:	3e f0 00 c0 	and	#49152,	r14	;#0xc000
    8c44:	0e 9c       	cmp	r12,	r14	;
    8c46:	05 24       	jz	$+12     	;abs 0x8c52
    8c48:	b2 f0 ff 3f 	and	#16383,	&0x016c	;#0x3fff
    8c4c:	6c 01 
    8c4e:	82 dc 6c 01 	bis	r12,	&0x016c	;
    8c52:	b2 f0 ff ef 	and	#61439,	&0x016c	;#0xefff
    8c56:	6c 01 
    8c58:	b2 f0 ff fe 	and	#65279,	&0x016c	;#0xfeff
    8c5c:	6c 01 
    8c5e:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    8c62:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8c66:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8c6a:	05 24       	jz	$+12     	;abs 0x8c76
    8c6c:	3d 53       	add	#-1,	r13	;r3 As==11
    8c6e:	0d 93       	cmp	#0,	r13	;r3 As==00
    8c70:	f6 23       	jnz	$-18     	;abs 0x8c5e
    8c72:	0c 4d       	mov	r13,	r12	;
    8c74:	07 3c       	jmp	$+16     	;abs 0x8c84
    8c76:	0c 43       	clr	r12		;
    8c78:	0c 8d       	sub	r13,	r12	;
    8c7a:	0d dc       	bis	r12,	r13	;
    8c7c:	0c 4d       	mov	r13,	r12	;
    8c7e:	5c 03       	rrum	#1,	r12	;
    8c80:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    8c84:	30 41       	ret			

00008c86 <UCS_bypassXT2WithTimeout>:
    8c86:	b2 d0 00 11 	bis	#4352,	&0x016c	;#0x1100
    8c8a:	6c 01 
    8c8c:	f2 c2 6e 01 	bic.b	#8,	&0x016e	;r2 As==11
    8c90:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8c94:	f2 b2 6e 01 	bit.b	#8,	&0x016e	;r2 As==11
    8c98:	04 24       	jz	$+10     	;abs 0x8ca2
    8c9a:	3c 53       	add	#-1,	r12	;r3 As==11
    8c9c:	0c 93       	cmp	#0,	r12	;r3 As==00
    8c9e:	f6 23       	jnz	$-18     	;abs 0x8c8c
    8ca0:	06 3c       	jmp	$+14     	;abs 0x8cae
    8ca2:	0d 43       	clr	r13		;
    8ca4:	0d 8c       	sub	r12,	r13	;
    8ca6:	0c dd       	bis	r13,	r12	;
    8ca8:	5c 03       	rrum	#1,	r12	;
    8caa:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    8cae:	30 41       	ret			

00008cb0 <UCS_turnOffXT2>:
    8cb0:	b2 d0 00 01 	bis	#256,	&0x016c	;#0x0100
    8cb4:	6c 01 
    8cb6:	30 41       	ret			

00008cb8 <UCS_initFLL>:
    8cb8:	0a 15       	pushm	#1,	r10	;16-bit words
    8cba:	0e 42       	mov	r2,	r14	;
    8cbc:	3e f0 40 00 	and	#64,	r14	;#0x0040
    8cc0:	3a 40 80 3e 	mov	#16000,	r10	;#0x3e80
    8cc4:	0a 9c       	cmp	r12,	r10	;
    8cc6:	06 2c       	jc	$+14     	;abs 0x8cd4
    8cc8:	12 c3       	clrc			
    8cca:	0d 10       	rrc	r13		;
    8ccc:	1b 43       	mov	#1,	r11	;r3 As==01
    8cce:	3f 40 00 10 	mov	#4096,	r15	;#0x1000
    8cd2:	03 3c       	jmp	$+8      	;abs 0x8cda
    8cd4:	0c 5c       	rla	r12		;
    8cd6:	0b 43       	clr	r11		;
    8cd8:	fa 3f       	jmp	$-10     	;abs 0x8cce
    8cda:	3a 40 00 02 	mov	#512,	r10	;#0x0200
    8cde:	0a 9d       	cmp	r13,	r10	;
    8ce0:	05 2c       	jc	$+12     	;abs 0x8cec
    8ce2:	3f 50 00 10 	add	#4096,	r15	;#0x1000
    8ce6:	12 c3       	clrc			
    8ce8:	0d 10       	rrc	r13		;
    8cea:	f7 3f       	jmp	$-16     	;abs 0x8cda
    8cec:	32 d0 40 00 	bis	#64,	r2	;#0x0040
    8cf0:	c2 43 61 01 	mov.b	#0,	&0x0161	;r3 As==00
    8cf4:	b2 f0 00 fc 	and	#64512,	&0x0164	;#0xfc00
    8cf8:	64 01 
    8cfa:	3d 53       	add	#-1,	r13	;r3 As==11
    8cfc:	0d df       	bis	r15,	r13	;
    8cfe:	82 4d 64 01 	mov	r13,	&0x0164	;
    8d02:	3d 40 76 02 	mov	#630,	r13	;#0x0276
    8d06:	0d 9c       	cmp	r12,	r13	;
    8d08:	03 28       	jnc	$+8      	;abs 0x8d10
    8d0a:	c2 43 62 01 	mov.b	#0,	&0x0162	;r3 As==00
    8d0e:	33 3c       	jmp	$+104    	;abs 0x8d76
    8d10:	3f 40 e1 04 	mov	#1249,	r15	;#0x04e1
    8d14:	0f 9c       	cmp	r12,	r15	;
    8d16:	04 28       	jnc	$+10     	;abs 0x8d20
    8d18:	f2 40 10 00 	mov.b	#16,	&0x0162	;#0x0010
    8d1c:	62 01 
    8d1e:	2b 3c       	jmp	$+88     	;abs 0x8d76
    8d20:	3a 40 c3 09 	mov	#2499,	r10	;#0x09c3
    8d24:	0a 9c       	cmp	r12,	r10	;
    8d26:	04 28       	jnc	$+10     	;abs 0x8d30
    8d28:	f2 40 20 00 	mov.b	#32,	&0x0162	;#0x0020
    8d2c:	62 01 
    8d2e:	23 3c       	jmp	$+72     	;abs 0x8d76
    8d30:	3d 40 87 13 	mov	#4999,	r13	;#0x1387
    8d34:	0d 9c       	cmp	r12,	r13	;
    8d36:	04 28       	jnc	$+10     	;abs 0x8d40
    8d38:	f2 40 30 00 	mov.b	#48,	&0x0162	;#0x0030
    8d3c:	62 01 
    8d3e:	1b 3c       	jmp	$+56     	;abs 0x8d76
    8d40:	3f 40 0f 27 	mov	#9999,	r15	;#0x270f
    8d44:	0f 9c       	cmp	r12,	r15	;
    8d46:	04 28       	jnc	$+10     	;abs 0x8d50
    8d48:	f2 40 40 00 	mov.b	#64,	&0x0162	;#0x0040
    8d4c:	62 01 
    8d4e:	13 3c       	jmp	$+40     	;abs 0x8d76
    8d50:	3a 40 1f 4e 	mov	#19999,	r10	;#0x4e1f
    8d54:	0a 9c       	cmp	r12,	r10	;
    8d56:	04 28       	jnc	$+10     	;abs 0x8d60
    8d58:	f2 40 50 00 	mov.b	#80,	&0x0162	;#0x0050
    8d5c:	62 01 
    8d5e:	0b 3c       	jmp	$+24     	;abs 0x8d76
    8d60:	3d 40 3f 9c 	mov	#39999,	r13	;#0x9c3f
    8d64:	0d 9c       	cmp	r12,	r13	;
    8d66:	04 28       	jnc	$+10     	;abs 0x8d70
    8d68:	f2 40 60 00 	mov.b	#96,	&0x0162	;#0x0060
    8d6c:	62 01 
    8d6e:	03 3c       	jmp	$+8      	;abs 0x8d76
    8d70:	f2 40 70 00 	mov.b	#112,	&0x0162	;#0x0070
    8d74:	62 01 
    8d76:	32 c0 40 00 	bic	#64,	r2	;#0x0040
    8d7a:	d2 b3 6e 01 	bit.b	#1,	&0x016e	;r3 As==01
    8d7e:	05 24       	jz	$+12     	;abs 0x8d8a
    8d80:	d2 c3 6e 01 	bic.b	#1,	&0x016e	;r3 As==01
    8d84:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8d88:	f8 3f       	jmp	$-14     	;abs 0x8d7a
    8d8a:	02 de       	bis	r14,	r2	;
    8d8c:	b2 f0 88 ff 	and	#65416,	&0x0168	;#0xff88
    8d90:	68 01 
    8d92:	1b 93       	cmp	#1,	r11	;r3 As==01
    8d94:	04 20       	jnz	$+10     	;abs 0x8d9e
    8d96:	b2 d0 33 00 	bis	#51,	&0x0168	;#0x0033
    8d9a:	68 01 
    8d9c:	03 3c       	jmp	$+8      	;abs 0x8da4
    8d9e:	b2 d0 44 00 	bis	#68,	&0x0168	;#0x0044
    8da2:	68 01 
    8da4:	0a 17       	popm	#1,	r10	;16-bit words
    8da6:	30 41       	ret			

00008da8 <UCS_initFLLSettle>:
    8da8:	21 82       	sub	#4,	r1	;r2 As==10
    8daa:	0e 4d       	mov	r13,	r14	;
    8dac:	44 18 0e 5e 	rpt #5 { rlax.w	r14		;
    8db0:	81 4e 00 00 	mov	r14,	0(r1)	;
    8db4:	b0 12 b8 8c 	call	#36024		;#0x8cb8
    8db8:	2c 41       	mov	@r1,	r12	;
    8dba:	0d 4c       	mov	r12,	r13	;
    8dbc:	3d 53       	add	#-1,	r13	;r3 As==11
    8dbe:	81 4d 00 00 	mov	r13,	0(r1)	;
    8dc2:	0c 93       	cmp	#0,	r12	;r3 As==00
    8dc4:	0c 24       	jz	$+26     	;abs 0x8dde
    8dc6:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    8dca:	1c 41 02 00 	mov	2(r1),	r12	;
    8dce:	3d 40 1d 00 	mov	#29,	r13	;#0x001d
    8dd2:	0d 9c       	cmp	r12,	r13	;
    8dd4:	f1 2b       	jnc	$-28     	;abs 0x8db8
    8dd6:	03 43       	nop			
    8dd8:	91 53 02 00 	inc	2(r1)		;
    8ddc:	f6 3f       	jmp	$-18     	;abs 0x8dca
    8dde:	21 52       	add	#4,	r1	;r2 As==10
    8de0:	30 41       	ret			

00008de2 <UCS_enableClockRequest>:
    8de2:	c2 dc 70 01 	bis.b	r12,	&0x0170	;
    8de6:	30 41       	ret			

00008de8 <UCS_disableClockRequest>:
    8de8:	c2 cc 70 01 	bic.b	r12,	&0x0170	;
    8dec:	30 41       	ret			

00008dee <UCS_getFaultFlagStatus>:
    8dee:	5c f2 6e 01 	and.b	&0x016e,r12	;0x016e
    8df2:	30 41       	ret			

00008df4 <UCS_clearFaultFlag>:
    8df4:	c2 cc 6e 01 	bic.b	r12,	&0x016e	;
    8df8:	30 41       	ret			

00008dfa <UCS_turnOffSMCLK>:
    8dfa:	a2 d3 6c 01 	bis	#2,	&0x016c	;r3 As==10
    8dfe:	30 41       	ret			

00008e00 <UCS_turnOnSMCLK>:
    8e00:	a2 c3 6c 01 	bic	#2,	&0x016c	;r3 As==10
    8e04:	30 41       	ret			

00008e06 <UCS_getACLK>:
    8e06:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    8e0a:	3c f0 00 07 	and	#1792,	r12	;#0x0700
    8e0e:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    8e12:	3d f0 00 07 	and	#1792,	r13	;#0x0700
    8e16:	5c 0f       	rrum	#4,	r12	;
    8e18:	5c 0f       	rrum	#4,	r12	;
    8e1a:	5d 0f       	rrum	#4,	r13	;
    8e1c:	5d 0f       	rrum	#4,	r13	;
    8e1e:	b0 12 c0 88 	call	#35008		;#0x88c0
    8e22:	30 41       	ret			

00008e24 <UCS_getSMCLK>:
    8e24:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    8e28:	7c f0 70 00 	and.b	#112,	r12	;#0x0070
    8e2c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    8e30:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    8e34:	3d f0 70 00 	and	#112,	r13	;#0x0070
    8e38:	5c 0f       	rrum	#4,	r12	;
    8e3a:	5d 0f       	rrum	#4,	r13	;
    8e3c:	b0 12 c0 88 	call	#35008		;#0x88c0
    8e40:	30 41       	ret			

00008e42 <UCS_getMCLK>:
    8e42:	1c 42 68 01 	mov	&0x0168,r12	;0x0168
    8e46:	3c f0 07 00 	and	#7,	r12	;
    8e4a:	1d 42 6a 01 	mov	&0x016a,r13	;0x016a
    8e4e:	3d f0 07 00 	and	#7,	r13	;
    8e52:	b0 12 c0 88 	call	#35008		;#0x88c0
    8e56:	30 41       	ret			

00008e58 <UCS_clearAllOscFlagsWithTimeout>:
    8e58:	f2 f0 f0 ff 	and.b	#65520,	&0x016e	;#0xfff0
    8e5c:	6e 01 
    8e5e:	e2 c3 02 01 	bic.b	#2,	&0x0102	;r3 As==10
    8e62:	e2 b3 02 01 	bit.b	#2,	&0x0102	;r3 As==10
    8e66:	03 24       	jz	$+8      	;abs 0x8e6e
    8e68:	3c 53       	add	#-1,	r12	;r3 As==11
    8e6a:	0c 93       	cmp	#0,	r12	;r3 As==00
    8e6c:	f5 23       	jnz	$-20     	;abs 0x8e58
    8e6e:	5c 42 6e 01 	mov.b	&0x016e,r12	;0x016e
    8e72:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    8e76:	3c f0 0f 00 	and	#15,	r12	;#0x000f
    8e7a:	30 41       	ret			

00008e7c <PMM_enableSvsL>:
    8e7c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8e80:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8e84:	00 00 
    8e86:	b2 d0 00 04 	bis	#1024,	&0x0126	;#0x0400
    8e8a:	26 01 
    8e8c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8e90:	30 41       	ret			

00008e92 <PMM_disableSvsL>:
    8e92:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8e96:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8e9a:	00 00 
    8e9c:	b2 f0 ff fb 	and	#64511,	&0x0126	;#0xfbff
    8ea0:	26 01 
    8ea2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8ea6:	30 41       	ret			

00008ea8 <PMM_enableSvmL>:
    8ea8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8eac:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8eb0:	00 00 
    8eb2:	b2 d0 00 40 	bis	#16384,	&0x0126	;#0x4000
    8eb6:	26 01 
    8eb8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8ebc:	30 41       	ret			

00008ebe <PMM_disableSvmL>:
    8ebe:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8ec2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8ec6:	00 00 
    8ec8:	b2 f0 ff bf 	and	#49151,	&0x0126	;#0xbfff
    8ecc:	26 01 
    8ece:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8ed2:	30 41       	ret			

00008ed4 <PMM_enableSvsH>:
    8ed4:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8ed8:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8edc:	00 00 
    8ede:	b2 d0 00 04 	bis	#1024,	&0x0124	;#0x0400
    8ee2:	24 01 
    8ee4:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8ee8:	30 41       	ret			

00008eea <PMM_disableSvsH>:
    8eea:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8eee:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8ef2:	00 00 
    8ef4:	b2 f0 ff fb 	and	#64511,	&0x0124	;#0xfbff
    8ef8:	24 01 
    8efa:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8efe:	30 41       	ret			

00008f00 <PMM_enableSvmH>:
    8f00:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f04:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f08:	00 00 
    8f0a:	b2 d0 00 40 	bis	#16384,	&0x0124	;#0x4000
    8f0e:	24 01 
    8f10:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f14:	30 41       	ret			

00008f16 <PMM_disableSvmH>:
    8f16:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f1a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f1e:	00 00 
    8f20:	b2 f0 ff bf 	and	#49151,	&0x0124	;#0xbfff
    8f24:	24 01 
    8f26:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f2a:	30 41       	ret			

00008f2c <PMM_enableSvsLSvmL>:
    8f2c:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f30:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f34:	00 00 
    8f36:	b2 d0 00 44 	bis	#17408,	&0x0126	;#0x4400
    8f3a:	26 01 
    8f3c:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f40:	30 41       	ret			

00008f42 <PMM_disableSvsLSvmL>:
    8f42:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f46:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f4a:	00 00 
    8f4c:	b2 f0 ff bb 	and	#48127,	&0x0126	;#0xbbff
    8f50:	26 01 
    8f52:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f56:	30 41       	ret			

00008f58 <PMM_enableSvsHSvmH>:
    8f58:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f5c:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f60:	00 00 
    8f62:	b2 d0 00 44 	bis	#17408,	&0x0124	;#0x4400
    8f66:	24 01 
    8f68:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f6c:	30 41       	ret			

00008f6e <PMM_disableSvsHSvmH>:
    8f6e:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f72:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f76:	00 00 
    8f78:	b2 f0 ff bb 	and	#48127,	&0x0124	;#0xbbff
    8f7c:	24 01 
    8f7e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f82:	30 41       	ret			

00008f84 <PMM_enableSvsLReset>:
    8f84:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f88:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8f8c:	00 00 
    8f8e:	b2 d0 00 01 	bis	#256,	&0x012e	;#0x0100
    8f92:	2e 01 
    8f94:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8f98:	30 41       	ret			

00008f9a <PMM_disableSvsLReset>:
    8f9a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8f9e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8fa2:	00 00 
    8fa4:	b2 f0 ff fe 	and	#65279,	&0x012e	;#0xfeff
    8fa8:	2e 01 
    8faa:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8fae:	30 41       	ret			

00008fb0 <PMM_enableSvmLInterrupt>:
    8fb0:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8fb4:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8fb8:	00 00 
    8fba:	a2 d3 2e 01 	bis	#2,	&0x012e	;r3 As==10
    8fbe:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8fc2:	30 41       	ret			

00008fc4 <PMM_disableSvmLInterrupt>:
    8fc4:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8fc8:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8fcc:	00 00 
    8fce:	a2 c3 2e 01 	bic	#2,	&0x012e	;r3 As==10
    8fd2:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8fd6:	30 41       	ret			

00008fd8 <PMM_enableSvsHReset>:
    8fd8:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8fdc:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8fe0:	00 00 
    8fe2:	b2 d0 00 10 	bis	#4096,	&0x012e	;#0x1000
    8fe6:	2e 01 
    8fe8:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    8fec:	30 41       	ret			

00008fee <PMM_disableSvsHReset>:
    8fee:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    8ff2:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    8ff6:	00 00 
    8ff8:	b2 f0 ff ef 	and	#61439,	&0x012e	;#0xefff
    8ffc:	2e 01 
    8ffe:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9002:	30 41       	ret			

00009004 <PMM_enableSvmHInterrupt>:
    9004:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    9008:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    900c:	00 00 
    900e:	b2 d0 20 00 	bis	#32,	&0x012e	;#0x0020
    9012:	2e 01 
    9014:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9018:	30 41       	ret			

0000901a <PMM_disableSvmHInterrupt>:
    901a:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    901e:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    9022:	00 00 
    9024:	b2 f0 df ff 	and	#65503,	&0x012e	;#0xffdf
    9028:	2e 01 
    902a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    902e:	30 41       	ret			

00009030 <PMM_clearPMMIFGS>:
    9030:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    9034:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    9038:	00 00 
    903a:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    903e:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9042:	30 41       	ret			

00009044 <PMM_enableSvsLInLPMFastWake>:
    9044:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    9048:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    904c:	00 00 
    904e:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    9052:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    9056:	00 00 
    9058:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    905c:	00 00 
    905e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    9062:	30 41       	ret			

00009064 <PMM_enableSvsLInLPMSlowWake>:
    9064:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    9068:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    906c:	00 00 
    906e:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    9072:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    9076:	00 00 
    9078:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    907c:	00 00 
    907e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    9082:	30 41       	ret			

00009084 <PMM_disableSvsLInLPMFastWake>:
    9084:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    9088:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    908c:	00 00 
    908e:	3c 40 26 01 	mov	#294,	r12	;#0x0126
    9092:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    9096:	00 00 
    9098:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    909c:	00 00 
    909e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    90a2:	30 41       	ret			

000090a4 <PMM_disableSvsLInLPMSlowWake>:
    90a4:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    90a8:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    90ac:	00 00 
    90ae:	b2 f0 6f f7 	and	#63343,	&0x0126	;#0xf76f
    90b2:	26 01 
    90b4:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    90b8:	30 41       	ret			

000090ba <PMM_enableSvsHInLPMNormPerf>:
    90ba:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    90be:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    90c2:	00 00 
    90c4:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    90c8:	bc d0 10 00 	bis	#16,	0(r12)	;#0x0010
    90cc:	00 00 
    90ce:	bc f0 7f f7 	and	#63359,	0(r12)	;#0xf77f
    90d2:	00 00 
    90d4:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    90d8:	30 41       	ret			

000090da <PMM_enableSvsHInLPMFullPerf>:
    90da:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    90de:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    90e2:	00 00 
    90e4:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    90e8:	bc d0 10 08 	bis	#2064,	0(r12)	;#0x0810
    90ec:	00 00 
    90ee:	bc f0 7f ff 	and	#65407,	0(r12)	;#0xff7f
    90f2:	00 00 
    90f4:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    90f8:	30 41       	ret			

000090fa <PMM_disableSvsHInLPMNormPerf>:
    90fa:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    90fe:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    9102:	00 00 
    9104:	b2 f0 6f f7 	and	#63343,	&0x0124	;#0xf76f
    9108:	24 01 
    910a:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    910e:	30 41       	ret			

00009110 <PMM_disableSvsHInLPMFullPerf>:
    9110:	3d 40 21 01 	mov	#289,	r13	;#0x0121
    9114:	fd 40 a5 ff 	mov.b	#65445,	0(r13)	;#0xffa5
    9118:	00 00 
    911a:	3c 40 24 01 	mov	#292,	r12	;#0x0124
    911e:	bc d0 00 08 	bis	#2048,	0(r12)	;#0x0800
    9122:	00 00 
    9124:	bc f0 6f ff 	and	#65391,	0(r12)	;#0xff6f
    9128:	00 00 
    912a:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    912e:	30 41       	ret			

00009130 <PMM_optimizeSvsLInLPMFastWake>:
    9130:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    9134:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    9138:	00 00 
    913a:	b2 d0 90 08 	bis	#2192,	&0x0126	;#0x0890
    913e:	26 01 
    9140:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9144:	30 41       	ret			

00009146 <PMM_optimizeSvsHInLPMFullPerf>:
    9146:	3c 40 21 01 	mov	#289,	r12	;#0x0121
    914a:	fc 40 a5 ff 	mov.b	#65445,	0(r12)	;#0xffa5
    914e:	00 00 
    9150:	b2 d0 90 08 	bis	#2192,	&0x0124	;#0x0890
    9154:	24 01 
    9156:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    915a:	30 41       	ret			

0000915c <PMM_setVCoreUp>:
    915c:	0a 15       	pushm	#1,	r10	;16-bit words
    915e:	4e 4c       	mov.b	r12,	r14	;
    9160:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    9164:	21 01 
    9166:	1f 42 2e 01 	mov	&0x012e,r15	;0x012e
    916a:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    916e:	2e 01 
    9170:	1d 42 24 01 	mov	&0x0124,r13	;0x0124
    9174:	1c 42 26 01 	mov	&0x0126,r12	;0x0126
    9178:	82 43 2c 01 	mov	#0,	&0x012c	;r3 As==00
    917c:	0b 4e       	mov	r14,	r11	;
    917e:	3b d0 00 44 	bis	#17408,	r11	;#0x4400
    9182:	82 4b 24 01 	mov	r11,	&0x0124	;
    9186:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    918a:	2c 01 
    918c:	fc 27       	jz	$-6      	;abs 0x9186
    918e:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    9192:	2c 01 
    9194:	b2 b0 20 00 	bit	#32,	&0x012c	;#0x0020
    9198:	2c 01 
    919a:	12 24       	jz	$+38     	;abs 0x91c0
    919c:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    91a0:	2c 01 
    91a2:	82 4d 24 01 	mov	r13,	&0x0124	;
    91a6:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    91aa:	2c 01 
    91ac:	fc 27       	jz	$-6      	;abs 0x91a6
    91ae:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    91b2:	2c 01 
    91b4:	82 4f 2e 01 	mov	r15,	&0x012e	;
    91b8:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    91bc:	0c 43       	clr	r12		;
    91be:	33 3c       	jmp	$+104    	;abs 0x9226
    91c0:	0a 4e       	mov	r14,	r10	;
    91c2:	47 18 0a 5a 	rpt #8 { rlax.w	r10		;
    91c6:	82 da 24 01 	bis	r10,	&0x0124	;
    91ca:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    91ce:	2c 01 
    91d0:	fc 27       	jz	$-6      	;abs 0x91ca
    91d2:	b2 f0 ef ff 	and	#65519,	&0x012c	;#0xffef
    91d6:	2c 01 
    91d8:	c2 4e 20 01 	mov.b	r14,	&0x0120	;
    91dc:	0a db       	bis	r11,	r10	;
    91de:	82 4a 26 01 	mov	r10,	&0x0126	;
    91e2:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    91e6:	fd 27       	jz	$-4      	;abs 0x91e2
    91e8:	92 c3 2c 01 	bic	#1,	&0x012c	;r3 As==01
    91ec:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    91f0:	26 01 
    91f2:	3c f0 f8 fc 	and	#64760,	r12	;#0xfcf8
    91f6:	82 dc 26 01 	bis	r12,	&0x0126	;
    91fa:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    91fe:	24 01 
    9200:	3d f0 f8 fc 	and	#64760,	r13	;#0xfcf8
    9204:	82 dd 24 01 	bis	r13,	&0x0124	;
    9208:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    920c:	fd 27       	jz	$-4      	;abs 0x9208
    920e:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    9212:	2c 01 
    9214:	f9 27       	jz	$-12     	;abs 0x9208
    9216:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    921a:	2c 01 
    921c:	82 4f 2e 01 	mov	r15,	&0x012e	;
    9220:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    9224:	1c 43       	mov	#1,	r12	;r3 As==01
    9226:	0a 17       	popm	#1,	r10	;16-bit words
    9228:	30 41       	ret			

0000922a <PMM_setVCoreDown>:
    922a:	2a 15       	pushm	#3,	r10	;16-bit words
    922c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9230:	f2 40 a5 ff 	mov.b	#65445,	&0x0121	;#0xffa5
    9234:	21 01 
    9236:	19 42 2e 01 	mov	&0x012e,r9	;0x012e
    923a:	b2 f0 88 cc 	and	#52360,	&0x012e	;#0xcc88
    923e:	2e 01 
    9240:	1e 42 24 01 	mov	&0x0124,r14	;0x0124
    9244:	0f 43       	clr	r15		;
    9246:	1a 42 26 01 	mov	&0x0126,r10	;0x0126
    924a:	0b 43       	clr	r11		;
    924c:	b2 f0 cc ff 	and	#65484,	&0x012c	;#0xffcc
    9250:	2c 01 
    9252:	08 4c       	mov	r12,	r8	;
    9254:	38 d0 00 44 	bis	#17408,	r8	;#0x4400
    9258:	0d 4c       	mov	r12,	r13	;
    925a:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    925e:	0d d8       	bis	r8,	r13	;
    9260:	82 4d 24 01 	mov	r13,	&0x0124	;
    9264:	82 4d 26 01 	mov	r13,	&0x0126	;
    9268:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    926c:	2c 01 
    926e:	fc 27       	jz	$-6      	;abs 0x9268
    9270:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    9274:	f9 27       	jz	$-12     	;abs 0x9268
    9276:	b2 f0 ee ff 	and	#65518,	&0x012c	;#0xffee
    927a:	2c 01 
    927c:	c2 4c 20 01 	mov.b	r12,	&0x0120	;
    9280:	b2 f0 07 03 	and	#775,	&0x0126	;#0x0307
    9284:	26 01 
    9286:	3a f0 f8 fc 	and	#64760,	r10	;#0xfcf8
    928a:	82 da 26 01 	bis	r10,	&0x0126	;
    928e:	b2 f0 07 03 	and	#775,	&0x0124	;#0x0307
    9292:	24 01 
    9294:	3e f0 f8 fc 	and	#64760,	r14	;#0xfcf8
    9298:	82 de 24 01 	bis	r14,	&0x0124	;
    929c:	92 b3 2c 01 	bit	#1,	&0x012c	;r3 As==01
    92a0:	fd 27       	jz	$-4      	;abs 0x929c
    92a2:	b2 b0 10 00 	bit	#16,	&0x012c	;#0x0010
    92a6:	2c 01 
    92a8:	f9 27       	jz	$-12     	;abs 0x929c
    92aa:	b2 f0 88 ff 	and	#65416,	&0x012c	;#0xff88
    92ae:	2c 01 
    92b0:	82 49 2e 01 	mov	r9,	&0x012e	;
    92b4:	c2 43 21 01 	mov.b	#0,	&0x0121	;r3 As==00
    92b8:	1c 43       	mov	#1,	r12	;r3 As==01
    92ba:	28 17       	popm	#3,	r10	;16-bit words
    92bc:	30 41       	ret			

000092be <PMM_setVCore>:
    92be:	4a 15       	pushm	#5,	r10	;16-bit words
    92c0:	0a 4c       	mov	r12,	r10	;
    92c2:	3a f0 03 00 	and	#3,	r10	;
    92c6:	16 42 20 01 	mov	&0x0120,r6	;0x0120
    92ca:	36 f0 03 00 	and	#3,	r6	;
    92ce:	1c 43       	mov	#1,	r12	;r3 As==01
    92d0:	49 4a       	mov.b	r10,	r9	;
    92d2:	38 40 2a 92 	mov	#37418,	r8	;#0x922a
    92d6:	37 40 5c 91 	mov	#37212,	r7	;#0x915c
    92da:	49 96       	cmp.b	r6,	r9	;
    92dc:	13 24       	jz	$+40     	;abs 0x9304
    92de:	0c 93       	cmp	#0,	r12	;r3 As==00
    92e0:	11 24       	jz	$+36     	;abs 0x9304
    92e2:	4c 46       	mov.b	r6,	r12	;
    92e4:	46 9a       	cmp.b	r10,	r6	;
    92e6:	04 2c       	jc	$+10     	;abs 0x92f0
    92e8:	5c 53       	inc.b	r12		;
    92ea:	46 4c       	mov.b	r12,	r6	;
    92ec:	87 12       	call	r7		;
    92ee:	03 3c       	jmp	$+8      	;abs 0x92f6
    92f0:	7c 53       	add.b	#-1,	r12	;r3 As==11
    92f2:	46 4c       	mov.b	r12,	r6	;
    92f4:	88 12       	call	r8		;
    92f6:	0d 43       	clr	r13		;
    92f8:	0d 8c       	sub	r12,	r13	;
    92fa:	0c dd       	bis	r13,	r12	;
    92fc:	5c 03       	rrum	#1,	r12	;
    92fe:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    9302:	eb 3f       	jmp	$-40     	;abs 0x92da
    9304:	46 17       	popm	#5,	r10	;16-bit words
    9306:	30 41       	ret			

00009308 <PMM_getInterruptStatus>:
    9308:	1c f2 2c 01 	and	&0x012c,r12	;0x012c
    930c:	30 41       	ret			

0000930e <USBCDC_sendDataAndWaitTillDone>:
    930e:	21 83       	decd	r1		;
    9310:	91 41 02 00 	mov	2(r1),	0(r1)	;
    9314:	00 00 
    9316:	5a 15       	pushm	#6,	r10	;16-bit words
    9318:	21 82       	sub	#4,	r1	;r2 As==10
    931a:	47 4e       	mov.b	r14,	r7	;
    931c:	81 4f 12 00 	mov	r15,	18(r1)	; 0x0012
    9320:	08 4f       	mov	r15,	r8	;
    9322:	19 41 14 00 	mov	20(r1),	r9	;0x00014
    9326:	4e 47       	mov.b	r7,	r14	;
    9328:	b0 12 cc 9f 	call	#40908		;#0x9fcc
    932c:	4d 4c       	mov.b	r12,	r13	;
    932e:	7c 90 07 00 	cmp.b	#7,	r12	;
    9332:	0a 24       	jz	$+22     	;abs 0x9348
    9334:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    9336:	28 24       	jz	$+82     	;abs 0x9388
    9338:	7c 90 03 00 	cmp.b	#3,	r12	;
    933c:	26 24       	jz	$+78     	;abs 0x938a
    933e:	0a 43       	clr	r10		;
    9340:	05 4a       	mov	r10,	r5	;
    9342:	36 40 e2 a6 	mov	#42722,	r6	;#0xa6e2
    9346:	12 3c       	jmp	$+38     	;abs 0x936c
    9348:	2d 42       	mov	#4,	r13	;r2 As==10
    934a:	1f 3c       	jmp	$+64     	;abs 0x938a
    934c:	0d 4c       	mov	r12,	r13	;
    934e:	1d f3       	and	#1,	r13	;r3 As==01
    9350:	0d 93       	cmp	#0,	r13	;r3 As==00
    9352:	1b 24       	jz	$+56     	;abs 0x938a
    9354:	0c 48       	mov	r8,	r12	;
    9356:	0c d9       	bis	r9,	r12	;
    9358:	0c 93       	cmp	#0,	r12	;r3 As==00
    935a:	08 24       	jz	$+18     	;abs 0x936c
    935c:	0c 4a       	mov	r10,	r12	;
    935e:	1c 53       	inc	r12		;
    9360:	0d 45       	mov	r5,	r13	;
    9362:	0d 63       	adc	r13		;
    9364:	05 99       	cmp	r9,	r5	;
    9366:	0a 2c       	jc	$+22     	;abs 0x937c
    9368:	0a 4c       	mov	r12,	r10	;
    936a:	05 4d       	mov	r13,	r5	;
    936c:	4c 47       	mov.b	r7,	r12	;
    936e:	0d 41       	mov	r1,	r13	;
    9370:	0e 41       	mov	r1,	r14	;
    9372:	2e 53       	incd	r14		;
    9374:	86 12       	call	r6		;
    9376:	3c b2       	bit	#8,	r12	;r2 As==11
    9378:	e9 27       	jz	$-44     	;abs 0x934c
    937a:	06 3c       	jmp	$+14     	;abs 0x9388
    937c:	09 95       	cmp	r5,	r9	;
    937e:	02 20       	jnz	$+6      	;abs 0x9384
    9380:	0a 98       	cmp	r8,	r10	;
    9382:	f2 2b       	jnc	$-26     	;abs 0x9368
    9384:	1d 43       	mov	#1,	r13	;r3 As==01
    9386:	01 3c       	jmp	$+4      	;abs 0x938a
    9388:	2d 43       	mov	#2,	r13	;r3 As==10
    938a:	4c 4d       	mov.b	r13,	r12	;
    938c:	21 52       	add	#4,	r1	;r2 As==10
    938e:	55 17       	popm	#6,	r10	;16-bit words
    9390:	a1 41 02 00 	mov	@r1,	2(r1)	;
    9394:	21 53       	incd	r1		;
    9396:	30 41       	ret			

00009398 <USBCDC_sendDataInBackground>:
    9398:	21 83       	decd	r1		;
    939a:	91 41 02 00 	mov	2(r1),	0(r1)	;
    939e:	00 00 
    93a0:	6a 15       	pushm	#7,	r10	;16-bit words
    93a2:	31 82       	sub	#8,	r1	;r2 As==11
    93a4:	05 4c       	mov	r12,	r5	;
    93a6:	81 4d 02 00 	mov	r13,	2(r1)	;
    93aa:	46 4e       	mov.b	r14,	r6	;
    93ac:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018
    93b0:	17 41 1a 00 	mov	26(r1),	r7	;0x0001a
    93b4:	08 43       	clr	r8		;
    93b6:	0a 48       	mov	r8,	r10	;
    93b8:	34 40 e2 a6 	mov	#42722,	r4	;#0xa6e2
    93bc:	4c 46       	mov.b	r6,	r12	;
    93be:	0d 41       	mov	r1,	r13	;
    93c0:	2d 52       	add	#4,	r13	;r2 As==10
    93c2:	0e 41       	mov	r1,	r14	;
    93c4:	3e 50 06 00 	add	#6,	r14	;
    93c8:	81 4f 00 00 	mov	r15,	0(r1)	;
    93cc:	84 12       	call	r4		;
    93ce:	09 4c       	mov	r12,	r9	;
    93d0:	19 f3       	and	#1,	r9	;r3 As==01
    93d2:	2f 41       	mov	@r1,	r15	;
    93d4:	09 93       	cmp	#0,	r9	;r3 As==00
    93d6:	11 24       	jz	$+36     	;abs 0x93fa
    93d8:	0c 4f       	mov	r15,	r12	;
    93da:	0c d7       	bis	r7,	r12	;
    93dc:	0c 93       	cmp	#0,	r12	;r3 As==00
    93de:	ee 27       	jz	$-34     	;abs 0x93bc
    93e0:	0d 48       	mov	r8,	r13	;
    93e2:	1d 53       	inc	r13		;
    93e4:	0c 4a       	mov	r10,	r12	;
    93e6:	0c 63       	adc	r12		;
    93e8:	07 9a       	cmp	r10,	r7	;
    93ea:	15 28       	jnc	$+44     	;abs 0x9416
    93ec:	0a 97       	cmp	r7,	r10	;
    93ee:	02 20       	jnz	$+6      	;abs 0x93f4
    93f0:	0f 98       	cmp	r8,	r15	;
    93f2:	11 28       	jnc	$+36     	;abs 0x9416
    93f4:	08 4d       	mov	r13,	r8	;
    93f6:	0a 4c       	mov	r12,	r10	;
    93f8:	e1 3f       	jmp	$-60     	;abs 0x93bc
    93fa:	0c 45       	mov	r5,	r12	;
    93fc:	1d 41 02 00 	mov	2(r1),	r13	;
    9400:	4e 46       	mov.b	r6,	r14	;
    9402:	b0 12 cc 9f 	call	#40908		;#0x9fcc
    9406:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    9408:	07 24       	jz	$+16     	;abs 0x9418
    940a:	7c 92       	cmp.b	#8,	r12	;r2 As==11
    940c:	02 20       	jnz	$+6      	;abs 0x9412
    940e:	29 43       	mov	#2,	r9	;r3 As==10
    9410:	03 3c       	jmp	$+8      	;abs 0x9418
    9412:	29 42       	mov	#4,	r9	;r2 As==10
    9414:	01 3c       	jmp	$+4      	;abs 0x9418
    9416:	19 43       	mov	#1,	r9	;r3 As==01
    9418:	4c 49       	mov.b	r9,	r12	;
    941a:	31 52       	add	#8,	r1	;r2 As==11
    941c:	64 17       	popm	#7,	r10	;16-bit words
    941e:	a1 41 02 00 	mov	@r1,	2(r1)	;
    9422:	21 53       	incd	r1		;
    9424:	30 41       	ret			

00009426 <USBCDC_receiveDataInBuffer>:
    9426:	6a 15       	pushm	#7,	r10	;16-bit words
    9428:	08 4c       	mov	r12,	r8	;
    942a:	06 4d       	mov	r13,	r6	;
    942c:	47 4e       	mov.b	r14,	r7	;
    942e:	09 4c       	mov	r12,	r9	;
    9430:	35 40 92 a7 	mov	#42898,	r5	;#0xa792
    9434:	34 40 a2 a2 	mov	#41634,	r4	;#0xa2a2
    9438:	4c 47       	mov.b	r7,	r12	;
    943a:	85 12       	call	r5		;
    943c:	4a 4c       	mov.b	r12,	r10	;
    943e:	0f 49       	mov	r9,	r15	;
    9440:	0f 88       	sub	r8,	r15	;
    9442:	0c 4f       	mov	r15,	r12	;
    9444:	0a 93       	cmp	#0,	r10	;r3 As==00
    9446:	15 24       	jz	$+44     	;abs 0x9472
    9448:	0c 5a       	add	r10,	r12	;
    944a:	06 9c       	cmp	r12,	r6	;
    944c:	06 28       	jnc	$+14     	;abs 0x945a
    944e:	0c 49       	mov	r9,	r12	;
    9450:	0d 4a       	mov	r10,	r13	;
    9452:	4e 47       	mov.b	r7,	r14	;
    9454:	84 12       	call	r4		;
    9456:	09 5a       	add	r10,	r9	;
    9458:	ef 3f       	jmp	$-32     	;abs 0x9438
    945a:	0f 48       	mov	r8,	r15	;
    945c:	0f 89       	sub	r9,	r15	;
    945e:	0a 4f       	mov	r15,	r10	;
    9460:	0a 56       	add	r6,	r10	;
    9462:	0c 49       	mov	r9,	r12	;
    9464:	0d 4a       	mov	r10,	r13	;
    9466:	4e 47       	mov.b	r7,	r14	;
    9468:	b0 12 a2 a2 	call	#41634		;#0xa2a2
    946c:	0a 59       	add	r9,	r10	;
    946e:	0c 4a       	mov	r10,	r12	;
    9470:	0c 88       	sub	r8,	r12	;
    9472:	64 17       	popm	#7,	r10	;16-bit words
    9474:	30 41       	ret			

00009476 <USB_getVersion>:
    9476:	3c 40 02 24 	mov	#9218,	r12	;#0x2402
    947a:	30 41       	ret			

0000947c <USB_InitSerialStringDescriptor>:
    947c:	0a 15       	pushm	#1,	r10	;16-bit words
    947e:	21 82       	sub	#4,	r1	;r2 As==10
    9480:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9484:	f2 40 03 00 	mov.b	#3,	&0x255d	;
    9488:	5d 25 
    948a:	7c 42       	mov.b	#8,	r12	;r2 As==11
    948c:	4d 43       	clr.b	r13		;
    948e:	0e 41       	mov	r1,	r14	;
    9490:	1e 53       	inc	r14		;
    9492:	0f 41       	mov	r1,	r15	;
    9494:	2f 53       	incd	r15		;
    9496:	b0 12 78 a9 	call	#43384		;#0xa978
    949a:	5c 41 01 00 	mov.b	1(r1),	r12	;
    949e:	0c 93       	cmp	#0,	r12	;r3 As==00
    94a0:	04 24       	jz	$+10     	;abs 0x94aa
    94a2:	3d 40 60 25 	mov	#9568,	r13	;#0x2560
    94a6:	0f 43       	clr	r15		;
    94a8:	07 3c       	jmp	$+16     	;abs 0x94b8
    94aa:	e2 42 5c 25 	mov.b	#4,	&0x255c	;r2 As==10
    94ae:	c2 4c 5e 25 	mov.b	r12,	&0x255e	;
    94b2:	c2 4c 5f 25 	mov.b	r12,	&0x255f	;
    94b6:	34 3c       	jmp	$+106    	;abs 0x9520
    94b8:	1b 41 02 00 	mov	2(r1),	r11	;
    94bc:	6e 4b       	mov.b	@r11,	r14	;
    94be:	5e 0f       	rrum	#4,	r14	;
    94c0:	7a 40 09 00 	mov.b	#9,	r10	;
    94c4:	4a 9e       	cmp.b	r14,	r10	;
    94c6:	03 28       	jnc	$+8      	;abs 0x94ce
    94c8:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    94cc:	02 3c       	jmp	$+6      	;abs 0x94d2
    94ce:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    94d2:	cd 4e fe ff 	mov.b	r14,	-2(r13)	; 0xfffe
    94d6:	cd 43 ff ff 	mov.b	#0,	-1(r13)	;r3 As==00, 0xffff
    94da:	6e 4b       	mov.b	@r11,	r14	;
    94dc:	7e f0 0f 00 	and.b	#15,	r14	;#0x000f
    94e0:	7a 40 09 00 	mov.b	#9,	r10	;
    94e4:	4a 9e       	cmp.b	r14,	r10	;
    94e6:	03 28       	jnc	$+8      	;abs 0x94ee
    94e8:	7e 50 30 00 	add.b	#48,	r14	;#0x0030
    94ec:	02 3c       	jmp	$+6      	;abs 0x94f2
    94ee:	7e 50 37 00 	add.b	#55,	r14	;#0x0037
    94f2:	cd 4e 00 00 	mov.b	r14,	0(r13)	;
    94f6:	cd 43 01 00 	mov.b	#0,	1(r13)	;r3 As==00
    94fa:	4e 4f       	mov.b	r15,	r14	;
    94fc:	5e 53       	inc.b	r14		;
    94fe:	4f 4e       	mov.b	r14,	r15	;
    9500:	1b 53       	inc	r11		;
    9502:	81 4b 02 00 	mov	r11,	2(r1)	;
    9506:	2d 52       	add	#4,	r13	;r2 As==10
    9508:	4e 9c       	cmp.b	r12,	r14	;
    950a:	06 20       	jnz	$+14     	;abs 0x9518
    950c:	41 18 0c 5c 	rpt #2 { rlax.w	r12		;
    9510:	6c 53       	incd.b	r12		;
    9512:	c2 4c 5c 25 	mov.b	r12,	&0x255c	;
    9516:	04 3c       	jmp	$+10     	;abs 0x9520
    9518:	7e 92       	cmp.b	#8,	r14	;r2 As==11
    951a:	ce 23       	jnz	$-98     	;abs 0x94b8
    951c:	0c 4f       	mov	r15,	r12	;
    951e:	f6 3f       	jmp	$-18     	;abs 0x950c
    9520:	21 52       	add	#4,	r1	;r2 As==10
    9522:	0a 17       	popm	#1,	r10	;16-bit words
    9524:	30 41       	ret			

00009526 <USB_disable>:
    9526:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    952a:	00 09 
    952c:	82 43 02 09 	mov	#0,	&0x0902	;r3 As==00
    9530:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    9534:	10 09 
    9536:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    953a:	00 09 
    953c:	c2 43 21 25 	mov.b	#0,	&0x2521	;r3 As==00
    9540:	c2 43 22 25 	mov.b	#0,	&0x2522	;r3 As==00
    9544:	4c 43       	clr.b	r12		;
    9546:	30 41       	ret			

00009548 <USB_setEnabledEvents>:
    9548:	82 4c 7e 25 	mov	r12,	&0x257e	;
    954c:	4c 43       	clr.b	r12		;
    954e:	30 41       	ret			

00009550 <USB_getEnabledEvents>:
    9550:	1c 42 7e 25 	mov	&0x257e,r12	;0x257e
    9554:	30 41       	ret			

00009556 <USB_reset>:
    9556:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    955a:	00 09 
    955c:	c2 43 21 25 	mov.b	#0,	&0x2521	;r3 As==00
    9560:	c2 43 22 25 	mov.b	#0,	&0x2522	;r3 As==00
    9564:	c2 43 20 25 	mov.b	#0,	&0x2520	;r3 As==00
    9568:	c2 43 29 25 	mov.b	#0,	&0x2529	;r3 As==00
    956c:	c2 43 28 25 	mov.b	#0,	&0x2528	;r3 As==00
    9570:	c2 43 3c 09 	mov.b	#0,	&0x093c	;r3 As==00
    9574:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    9578:	b2 43 82 25 	mov	#-1,	&0x2582	;r3 As==11
    957c:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    9580:	c2 43 3f 09 	mov.b	#0,	&0x093f	;r3 As==00
    9584:	f2 40 80 ff 	mov.b	#65408,	&0x0921	;#0xff80
    9588:	21 09 
    958a:	f2 40 80 ff 	mov.b	#65408,	&0x0923	;#0xff80
    958e:	23 09 
    9590:	f2 40 8c ff 	mov.b	#65420,	&0x0920	;#0xff8c
    9594:	20 09 
    9596:	f2 40 8c ff 	mov.b	#65420,	&0x0922	;#0xff8c
    959a:	22 09 
    959c:	f2 40 05 00 	mov.b	#5,	&0x092f	;
    95a0:	2f 09 
    95a2:	f2 40 07 00 	mov.b	#7,	&0x092e	;
    95a6:	2e 09 
    95a8:	5c 42 22 81 	mov.b	&0x8122,r12	;0x8122
    95ac:	0d 4c       	mov	r12,	r13	;
    95ae:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    95b2:	0e 4d       	mov	r13,	r14	;
    95b4:	3e 50 c8 23 	add	#9160,	r14	;#0x23c8
    95b8:	fe 40 94 ff 	mov.b	#65428,	0(r14)	;#0xff94
    95bc:	00 00 
    95be:	1f 42 2c 81 	mov	&0x812c,r15	;0x812c
    95c2:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    95c6:	5f 0b       	rrum	#3,	r15	;
    95c8:	ce 4f 01 00 	mov.b	r15,	1(r14)	;
    95cc:	1f 42 2e 81 	mov	&0x812e,r15	;0x812e
    95d0:	3f 50 00 e4 	add	#58368,	r15	;#0xe400
    95d4:	5f 0b       	rrum	#3,	r15	;
    95d6:	ce 4f 05 00 	mov.b	r15,	5(r14)	;
    95da:	fe 40 80 ff 	mov.b	#65408,	2(r14)	;#0xff80
    95de:	02 00 
    95e0:	3e 50 06 00 	add	#6,	r14	;
    95e4:	fe 40 80 ff 	mov.b	#65408,	0(r14)	;#0xff80
    95e8:	00 00 
    95ea:	fe 40 40 00 	mov.b	#64,	1(r14)	;#0x0040
    95ee:	01 00 
    95f0:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    95f4:	fd 40 94 ff 	mov.b	#65428,	0(r13)	;#0xff94
    95f8:	00 00 
    95fa:	1e 42 28 81 	mov	&0x8128,r14	;0x8128
    95fe:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    9602:	5e 0b       	rrum	#3,	r14	;
    9604:	cd 4e 01 00 	mov.b	r14,	1(r13)	;
    9608:	1e 42 2a 81 	mov	&0x812a,r14	;0x812a
    960c:	3e 50 00 e4 	add	#58368,	r14	;#0xe400
    9610:	5e 0b       	rrum	#3,	r14	;
    9612:	cd 4e 05 00 	mov.b	r14,	5(r13)	;
    9616:	cd 43 02 00 	mov.b	#0,	2(r13)	;r3 As==00
    961a:	3d 50 06 00 	add	#6,	r13	;
    961e:	cd 43 00 00 	mov.b	#0,	0(r13)	;r3 As==00
    9622:	fd 40 40 00 	mov.b	#64,	1(r13)	;#0x0040
    9626:	01 00 
    9628:	e2 93 23 81 	cmp.b	#2,	&0x8123	;r3 As==10
    962c:	21 20       	jnz	$+68     	;abs 0x9670
    962e:	3c 53       	add	#-1,	r12	;r3 As==11
    9630:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    9634:	3c 50 c8 23 	add	#9160,	r12	;#0x23c8
    9638:	fc 40 94 ff 	mov.b	#65428,	0(r12)	;#0xff94
    963c:	00 00 
    963e:	1d 42 24 81 	mov	&0x8124,r13	;0x8124
    9642:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    9646:	5d 0b       	rrum	#3,	r13	;
    9648:	cc 4d 01 00 	mov.b	r13,	1(r12)	;
    964c:	1d 42 26 81 	mov	&0x8126,r13	;0x8126
    9650:	3d 50 00 e4 	add	#58368,	r13	;#0xe400
    9654:	5d 0b       	rrum	#3,	r13	;
    9656:	cc 4d 05 00 	mov.b	r13,	5(r12)	;
    965a:	fc 40 80 ff 	mov.b	#65408,	2(r12)	;#0xff80
    965e:	02 00 
    9660:	3c 50 06 00 	add	#6,	r12	;
    9664:	fc 40 80 ff 	mov.b	#65408,	0(r12)	;#0xff80
    9668:	00 00 
    966a:	fc 40 40 00 	mov.b	#64,	1(r12)	;#0x0040
    966e:	01 00 
    9670:	b0 12 9c 9f 	call	#40860		;#0x9f9c
    9674:	f2 40 40 00 	mov.b	#64,	&0x093c	;#0x0040
    9678:	3c 09 
    967a:	c2 43 3e 09 	mov.b	#0,	&0x093e	;r3 As==00
    967e:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    9682:	3d 09 
    9684:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9688:	00 09 
    968a:	4c 43       	clr.b	r12		;
    968c:	30 41       	ret			

0000968e <USB_connect>:
    968e:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9692:	00 09 
    9694:	a2 d3 02 09 	bis	#2,	&0x0902	;r3 As==10
    9698:	b2 d0 00 04 	bis	#1024,	&0x0908	;#0x0400
    969c:	08 09 
    969e:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    96a2:	00 09 
    96a4:	4c 43       	clr.b	r12		;
    96a6:	30 41       	ret			

000096a8 <USB_disconnect>:
    96a8:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    96ac:	00 09 
    96ae:	a2 c3 02 09 	bic	#2,	&0x0902	;r3 As==10
    96b2:	b2 f0 ff fb 	and	#64511,	&0x0908	;#0xfbff
    96b6:	08 09 
    96b8:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    96bc:	00 09 
    96be:	c2 43 21 25 	mov.b	#0,	&0x2521	;r3 As==00
    96c2:	c2 43 22 25 	mov.b	#0,	&0x2522	;r3 As==00
    96c6:	4c 43       	clr.b	r12		;
    96c8:	30 41       	ret			

000096ca <USB_forceRemoteWakeup>:
    96ca:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    96ce:	08 24       	jz	$+18     	;abs 0x96e0
    96d0:	d2 93 20 25 	cmp.b	#1,	&0x2520	;r3 As==01
    96d4:	08 20       	jnz	$+18     	;abs 0x96e6
    96d6:	f2 d0 20 00 	bis.b	#32,	&0x093c	;#0x0020
    96da:	3c 09 
    96dc:	0c 43       	clr	r12		;
    96de:	04 3c       	jmp	$+10     	;abs 0x96e8
    96e0:	3c 40 10 00 	mov	#16,	r12	;#0x0010
    96e4:	01 3c       	jmp	$+4      	;abs 0x96e8
    96e6:	1c 43       	mov	#1,	r12	;r3 As==01
    96e8:	30 41       	ret			

000096ea <USB_getConnectionInformation>:
    96ea:	1d 42 08 09 	mov	&0x0908,r13	;0x0908
    96ee:	5d 0b       	rrum	#3,	r13	;
    96f0:	5d f3       	and.b	#1,	r13	;r3 As==01
    96f2:	4c 4d       	mov.b	r13,	r12	;
    96f4:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    96f8:	03 20       	jnz	$+8      	;abs 0x9700
    96fa:	7d d0 20 00 	bis.b	#32,	r13	;#0x0020
    96fe:	4c 4d       	mov.b	r13,	r12	;
    9700:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    9704:	04 24       	jz	$+10     	;abs 0x970e
    9706:	7c d0 40 00 	bis.b	#64,	r12	;#0x0040
    970a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    970e:	d2 93 22 25 	cmp.b	#1,	&0x2522	;r3 As==01
    9712:	02 20       	jnz	$+6      	;abs 0x9718
    9714:	7c d2       	bis.b	#8,	r12	;r2 As==11
    9716:	02 3c       	jmp	$+6      	;abs 0x971c
    9718:	7c d0 10 00 	bis.b	#16,	r12	;#0x0010
    971c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9720:	30 41       	ret			

00009722 <USB_getConnectionState>:
    9722:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9726:	36 24       	jz	$+110    	;abs 0x9794
    9728:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    972c:	03 24       	jz	$+8      	;abs 0x9734
    972e:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    9732:	33 24       	jz	$+104    	;abs 0x979a
    9734:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9738:	09 24       	jz	$+20     	;abs 0x974c
    973a:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    973e:	06 24       	jz	$+14     	;abs 0x974c
    9740:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    9744:	03 20       	jnz	$+8      	;abs 0x974c
    9746:	d2 93 22 25 	cmp.b	#1,	&0x2522	;r3 As==01
    974a:	2a 20       	jnz	$+86     	;abs 0x97a0
    974c:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9750:	09 24       	jz	$+20     	;abs 0x9764
    9752:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    9756:	06 24       	jz	$+14     	;abs 0x9764
    9758:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    975c:	03 24       	jz	$+8      	;abs 0x9764
    975e:	d2 93 22 25 	cmp.b	#1,	&0x2522	;r3 As==01
    9762:	21 24       	jz	$+68     	;abs 0x97a6
    9764:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9768:	09 24       	jz	$+20     	;abs 0x977c
    976a:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    976e:	06 24       	jz	$+14     	;abs 0x977c
    9770:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    9774:	03 20       	jnz	$+8      	;abs 0x977c
    9776:	d2 93 22 25 	cmp.b	#1,	&0x2522	;r3 As==01
    977a:	18 24       	jz	$+50     	;abs 0x97ac
    977c:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9780:	18 24       	jz	$+50     	;abs 0x97b2
    9782:	a2 b3 02 09 	bit	#2,	&0x0902	;r3 As==10
    9786:	15 24       	jz	$+44     	;abs 0x97b2
    9788:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    978c:	12 24       	jz	$+38     	;abs 0x97b2
    978e:	3c 40 82 00 	mov	#130,	r12	;#0x0082
    9792:	11 3c       	jmp	$+36     	;abs 0x97b6
    9794:	3c 40 80 00 	mov	#128,	r12	;#0x0080
    9798:	0e 3c       	jmp	$+30     	;abs 0x97b6
    979a:	3c 40 81 00 	mov	#129,	r12	;#0x0081
    979e:	0b 3c       	jmp	$+24     	;abs 0x97b6
    97a0:	3c 40 83 00 	mov	#131,	r12	;#0x0083
    97a4:	08 3c       	jmp	$+18     	;abs 0x97b6
    97a6:	3c 40 87 00 	mov	#135,	r12	;#0x0087
    97aa:	05 3c       	jmp	$+12     	;abs 0x97b6
    97ac:	3c 40 84 00 	mov	#132,	r12	;#0x0084
    97b0:	02 3c       	jmp	$+6      	;abs 0x97b6
    97b2:	3c 40 86 00 	mov	#134,	r12	;#0x0086
    97b6:	30 41       	ret			

000097b8 <USB_suspend>:
    97b8:	d2 43 22 25 	mov.b	#1,	&0x2522	;r3 As==01
    97bc:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    97c0:	00 09 
    97c2:	f2 d0 10 00 	bis.b	#16,	&0x093c	;#0x0010
    97c6:	3c 09 
    97c8:	f2 f0 bf ff 	and.b	#65471,	&0x093e	;#0xffbf
    97cc:	3e 09 
    97ce:	b2 f0 ff fe 	and	#65279,	&0x0910	;#0xfeff
    97d2:	10 09 
    97d4:	b0 12 b0 8c 	call	#36016		;#0x8cb0
    97d8:	f2 40 20 00 	mov.b	#32,	&0x093d	;#0x0020
    97dc:	3d 09 
    97de:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    97e2:	00 09 
    97e4:	4c 43       	clr.b	r12		;
    97e6:	30 41       	ret			

000097e8 <usbStallEndpoint0>:
    97e8:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    97ec:	fc d2 00 00 	bis.b	#8,	0(r12)	;r2 As==11
    97f0:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    97f4:	30 41       	ret			

000097f6 <usbClearOEP0ByteCount>:
    97f6:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    97fa:	30 41       	ret			

000097fc <usbStallOEP0>:
    97fc:	3c 40 20 09 	mov	#2336,	r12	;#0x0920
    9800:	fc d2 02 00 	bis.b	#8,	2(r12)	;r2 As==11
    9804:	30 41       	ret			

00009806 <usbSendNextPacketOnIEP0>:
    9806:	1c 42 80 25 	mov	&0x2580,r12	;0x2580
    980a:	3c 93       	cmp	#-1,	r12	;r3 As==11
    980c:	2d 24       	jz	$+92     	;abs 0x9868
    980e:	3d 42       	mov	#8,	r13	;r2 As==11
    9810:	0d 9c       	cmp	r12,	r13	;
    9812:	08 2c       	jc	$+18     	;abs 0x9824
    9814:	3c 50 f8 ff 	add	#65528,	r12	;#0xfff8
    9818:	82 4c 80 25 	mov	r12,	&0x2580	;
    981c:	d2 43 84 25 	mov.b	#1,	&0x2584	;r3 As==01
    9820:	0c 4d       	mov	r13,	r12	;
    9822:	11 3c       	jmp	$+36     	;abs 0x9846
    9824:	3c 92       	cmp	#8,	r12	;r2 As==11
    9826:	03 24       	jz	$+8      	;abs 0x982e
    9828:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    982c:	08 3c       	jmp	$+18     	;abs 0x983e
    982e:	d2 93 23 25 	cmp.b	#1,	&0x2523	;r3 As==01
    9832:	05 20       	jnz	$+12     	;abs 0x983e
    9834:	82 43 80 25 	mov	#0,	&0x2580	;r3 As==00
    9838:	d2 43 84 25 	mov.b	#1,	&0x2584	;r3 As==01
    983c:	04 3c       	jmp	$+10     	;abs 0x9846
    983e:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    9842:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    9846:	1e 42 26 25 	mov	&0x2526,r14	;0x2526
    984a:	0d 43       	clr	r13		;
    984c:	4d 9c       	cmp.b	r12,	r13	;
    984e:	06 2c       	jc	$+14     	;abs 0x985c
    9850:	0f 4e       	mov	r14,	r15	;
    9852:	0f 5d       	add	r13,	r15	;
    9854:	ed 4f 78 23 	mov.b	@r15,	9080(r13); 0x2378
    9858:	1d 53       	inc	r13		;
    985a:	f8 3f       	jmp	$-14     	;abs 0x984c
    985c:	0e 5c       	add	r12,	r14	;
    985e:	82 4e 26 25 	mov	r14,	&0x2526	;
    9862:	c2 4c 21 09 	mov.b	r12,	&0x0921	;
    9866:	02 3c       	jmp	$+6      	;abs 0x986c
    9868:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    986c:	30 41       	ret			

0000986e <usbSendDataPacketOnEP0>:
    986e:	82 4c 26 25 	mov	r12,	&0x2526	;
    9872:	1c 42 86 23 	mov	&0x2386,r12	;0x2386
    9876:	82 9c 80 25 	cmp	r12,	&0x2580	;
    987a:	05 28       	jnc	$+12     	;abs 0x9886
    987c:	82 4c 80 25 	mov	r12,	&0x2580	;
    9880:	c2 43 23 25 	mov.b	#0,	&0x2523	;r3 As==00
    9884:	02 3c       	jmp	$+6      	;abs 0x988a
    9886:	d2 43 23 25 	mov.b	#1,	&0x2523	;r3 As==01
    988a:	b0 12 06 98 	call	#38918		;#0x9806
    988e:	30 41       	ret			

00009890 <usbReceiveNextPacketOnOEP0>:
    9890:	5d 42 23 09 	mov.b	&0x0923,r13	;0x0923
    9894:	3d f0 7f 00 	and	#127,	r13	;#0x007f
    9898:	82 9d 82 25 	cmp	r13,	&0x2582	;
    989c:	1b 28       	jnc	$+56     	;abs 0x98d4
    989e:	1e 42 24 25 	mov	&0x2524,r14	;0x2524
    98a2:	0c 43       	clr	r12		;
    98a4:	4c 9d       	cmp.b	r13,	r12	;
    98a6:	07 2c       	jc	$+16     	;abs 0x98b6
    98a8:	0f 4e       	mov	r14,	r15	;
    98aa:	0f 5c       	add	r12,	r15	;
    98ac:	df 4c 70 23 	mov.b	9072(r12),0(r15)	;0x02370
    98b0:	00 00 
    98b2:	1c 53       	inc	r12		;
    98b4:	f7 3f       	jmp	$-16     	;abs 0x98a4
    98b6:	0e 5d       	add	r13,	r14	;
    98b8:	82 4e 24 25 	mov	r14,	&0x2524	;
    98bc:	1c 42 82 25 	mov	&0x2582,r12	;0x2582
    98c0:	0c 8d       	sub	r13,	r12	;
    98c2:	82 4c 82 25 	mov	r12,	&0x2582	;
    98c6:	0c 93       	cmp	#0,	r12	;r3 As==00
    98c8:	05 24       	jz	$+12     	;abs 0x98d4
    98ca:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    98ce:	e2 43 84 25 	mov.b	#2,	&0x2584	;r3 As==10
    98d2:	04 3c       	jmp	$+10     	;abs 0x98dc
    98d4:	b0 12 fc 97 	call	#38908		;#0x97fc
    98d8:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    98dc:	30 41       	ret			

000098de <usbReceiveDataPacketOnEP0>:
    98de:	82 4c 24 25 	mov	r12,	&0x2524	;
    98e2:	92 42 86 23 	mov	&0x2386,&0x2582	;0x2386
    98e6:	82 25 
    98e8:	e2 43 84 25 	mov.b	#2,	&0x2584	;r3 As==10
    98ec:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    98f0:	30 41       	ret			

000098f2 <usbSendZeroLengthPacketOnIEP0>:
    98f2:	b2 43 80 25 	mov	#-1,	&0x2580	;r3 As==11
    98f6:	c2 43 84 25 	mov.b	#0,	&0x2584	;r3 As==00
    98fa:	c2 43 21 09 	mov.b	#0,	&0x0921	;r3 As==00
    98fe:	30 41       	ret			

00009900 <usbClearEndpointFeature>:
    9900:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9904:	4d 4e       	mov.b	r14,	r13	;
    9906:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    990a:	4c 4d       	mov.b	r13,	r12	;
    990c:	0c 93       	cmp	#0,	r12	;r3 As==00
    990e:	03 20       	jnz	$+8      	;abs 0x9916
    9910:	b0 12 f2 98 	call	#39154		;#0x98f2
    9914:	13 3c       	jmp	$+40     	;abs 0x993c
    9916:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9918:	4c 4d       	mov.b	r13,	r12	;
    991a:	7f 40 06 00 	mov.b	#6,	r15	;
    991e:	4f 9d       	cmp.b	r13,	r15	;
    9920:	0d 28       	jnc	$+28     	;abs 0x993c
    9922:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    9926:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    992a:	04 24       	jz	$+10     	;abs 0x9934
    992c:	fc f0 d7 ff 	and.b	#65495,	9160(r12);#0xffd7, 0x23c8
    9930:	c8 23 
    9932:	ee 3f       	jmp	$-34     	;abs 0x9910
    9934:	fc f0 d7 ff 	and.b	#65495,	9096(r12);#0xffd7, 0x2388
    9938:	88 23 
    993a:	ea 3f       	jmp	$-42     	;abs 0x9910
    993c:	4c 43       	clr.b	r12		;
    993e:	30 41       	ret			

00009940 <usbGetConfiguration>:
    9940:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9944:	92 43 80 25 	mov	#1,	&0x2580	;r3 As==01
    9948:	3c 40 29 25 	mov	#9513,	r12	;#0x2529
    994c:	b0 12 6e 98 	call	#39022		;#0x986e
    9950:	4c 43       	clr.b	r12		;
    9952:	30 41       	ret			

00009954 <usbGetDeviceDescriptor>:
    9954:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9958:	b2 40 12 00 	mov	#18,	&0x2580	;#0x0012
    995c:	80 25 
    995e:	3c 40 fd 81 	mov	#33277,	r12	;#0x81fd
    9962:	b0 12 6e 98 	call	#39022		;#0x986e
    9966:	4c 43       	clr.b	r12		;
    9968:	30 41       	ret			

0000996a <usbGetConfigurationDescriptor>:
    996a:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    996e:	b2 40 43 00 	mov	#67,	&0x2580	;#0x0043
    9972:	80 25 
    9974:	3c 40 ba 81 	mov	#33210,	r12	;#0x81ba
    9978:	b0 12 6e 98 	call	#39022		;#0x986e
    997c:	4c 43       	clr.b	r12		;
    997e:	30 41       	ret			

00009980 <usbGetStringDescriptor>:
    9980:	5d 42 82 23 	mov.b	&0x2382,r13	;0x2382
    9984:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9988:	7c 40 05 00 	mov.b	#5,	r12	;
    998c:	4c 9d       	cmp.b	r13,	r12	;
    998e:	1d 28       	jnc	$+60     	;abs 0x99ca
    9990:	3d 90 03 00 	cmp	#3,	r13	;
    9994:	02 24       	jz	$+6      	;abs 0x999a
    9996:	0e 43       	clr	r14		;
    9998:	07 3c       	jmp	$+16     	;abs 0x99a8
    999a:	5d 42 5c 25 	mov.b	&0x255c,r13	;0x255c
    999e:	82 4d 80 25 	mov	r13,	&0x2580	;
    99a2:	3c 40 5c 25 	mov	#9564,	r12	;#0x255c
    99a6:	0e 3c       	jmp	$+30     	;abs 0x99c4
    99a8:	4f 4d       	mov.b	r13,	r15	;
    99aa:	7f 53       	add.b	#-1,	r15	;r3 As==11
    99ac:	4d 4f       	mov.b	r15,	r13	;
    99ae:	0c 4e       	mov	r14,	r12	;
    99b0:	3c 50 30 81 	add	#33072,	r12	;#0x8130
    99b4:	7f 93       	cmp.b	#-1,	r15	;r3 As==11
    99b6:	03 24       	jz	$+8      	;abs 0x99be
    99b8:	6c 4c       	mov.b	@r12,	r12	;
    99ba:	0e 5c       	add	r12,	r14	;
    99bc:	f5 3f       	jmp	$-20     	;abs 0x99a8
    99be:	6d 4c       	mov.b	@r12,	r13	;
    99c0:	82 4d 80 25 	mov	r13,	&0x2580	;
    99c4:	b0 12 6e 98 	call	#39022		;#0x986e
    99c8:	02 3c       	jmp	$+6      	;abs 0x99ce
    99ca:	b0 12 e8 97 	call	#38888		;#0x97e8
    99ce:	4c 43       	clr.b	r12		;
    99d0:	30 41       	ret			

000099d2 <usbGetInterface>:
    99d2:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    99d6:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    99da:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    99de:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    99e2:	dc 42 28 25 	mov.b	&0x2528,1(r12)	;0x2528
    99e6:	01 00 
    99e8:	b0 12 6e 98 	call	#39022		;#0x986e
    99ec:	4c 43       	clr.b	r12		;
    99ee:	30 41       	ret			

000099f0 <usbGetDeviceStatus>:
    99f0:	f2 b0 40 00 	bit.b	#64,	&0x81c1	;#0x0040
    99f4:	c1 81 
    99f6:	02 24       	jz	$+6      	;abs 0x99fc
    99f8:	d2 43 54 25 	mov.b	#1,	&0x2554	;r3 As==01
    99fc:	d2 93 20 25 	cmp.b	#1,	&0x2520	;r3 As==01
    9a00:	02 20       	jnz	$+6      	;abs 0x9a06
    9a02:	e2 d3 54 25 	bis.b	#2,	&0x2554	;r3 As==10
    9a06:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9a0a:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    9a0e:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    9a12:	b0 12 6e 98 	call	#39022		;#0x986e
    9a16:	4c 43       	clr.b	r12		;
    9a18:	30 41       	ret			

00009a1a <usbGetInterfaceStatus>:
    9a1a:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9a1e:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    9a22:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    9a26:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00
    9a2a:	dc 42 28 25 	mov.b	&0x2528,1(r12)	;0x2528
    9a2e:	01 00 
    9a30:	b0 12 6e 98 	call	#39022		;#0x986e
    9a34:	4c 43       	clr.b	r12		;
    9a36:	30 41       	ret			

00009a38 <usbGetEndpointStatus>:
    9a38:	0a 15       	pushm	#1,	r10	;16-bit words
    9a3a:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9a3e:	4c 4e       	mov.b	r14,	r12	;
    9a40:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    9a44:	4d 4c       	mov.b	r12,	r13	;
    9a46:	3f 40 6e 98 	mov	#39022,	r15	;#0x986e
    9a4a:	0d 93       	cmp	#0,	r13	;r3 As==00
    9a4c:	0c 20       	jnz	$+26     	;abs 0x9a66
    9a4e:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    9a52:	06 24       	jz	$+14     	;abs 0x9a60
    9a54:	5a 42 20 09 	mov.b	&0x0920,r10	;0x0920
    9a58:	7a f2       	and.b	#8,	r10	;r2 As==11
    9a5a:	c2 4a 54 25 	mov.b	r10,	&0x2554	;
    9a5e:	17 3c       	jmp	$+48     	;abs 0x9a8e
    9a60:	5c 42 22 09 	mov.b	&0x0922,r12	;0x0922
    9a64:	11 3c       	jmp	$+36     	;abs 0x9a88
    9a66:	7c 53       	add.b	#-1,	r12	;r3 As==11
    9a68:	4d 4c       	mov.b	r12,	r13	;
    9a6a:	7a 40 06 00 	mov.b	#6,	r10	;
    9a6e:	4a 9c       	cmp.b	r12,	r10	;
    9a70:	0e 28       	jnc	$+30     	;abs 0x9a8e
    9a72:	0c 4d       	mov	r13,	r12	;
    9a74:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    9a78:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    9a7c:	03 24       	jz	$+8      	;abs 0x9a84
    9a7e:	5c 4c c8 23 	mov.b	9160(r12),r12	;0x023c8
    9a82:	02 3c       	jmp	$+6      	;abs 0x9a88
    9a84:	5c 4c 88 23 	mov.b	9096(r12),r12	;0x02388
    9a88:	7c f2       	and.b	#8,	r12	;r2 As==11
    9a8a:	c2 4c 54 25 	mov.b	r12,	&0x2554	;
    9a8e:	5c 42 54 25 	mov.b	&0x2554,r12	;0x2554
    9a92:	5c 0b       	rrum	#3,	r12	;
    9a94:	c2 4c 54 25 	mov.b	r12,	&0x2554	;
    9a98:	c2 43 23 09 	mov.b	#0,	&0x0923	;r3 As==00
    9a9c:	a2 43 80 25 	mov	#2,	&0x2580	;r3 As==10
    9aa0:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    9aa4:	8f 12       	call	r15		;
    9aa6:	4c 43       	clr.b	r12		;
    9aa8:	0a 17       	popm	#1,	r10	;16-bit words
    9aaa:	30 41       	ret			

00009aac <usbSetAddress>:
    9aac:	b0 12 fc 97 	call	#38908		;#0x97fc
    9ab0:	1c 42 82 23 	mov	&0x2382,r12	;0x2382
    9ab4:	3d 40 7f 00 	mov	#127,	r13	;#0x007f
    9ab8:	0d 9c       	cmp	r12,	r13	;
    9aba:	05 28       	jnc	$+12     	;abs 0x9ac6
    9abc:	c2 4c 3f 09 	mov.b	r12,	&0x093f	;
    9ac0:	b0 12 f2 98 	call	#39154		;#0x98f2
    9ac4:	02 3c       	jmp	$+6      	;abs 0x9aca
    9ac6:	b0 12 e8 97 	call	#38888		;#0x97e8
    9aca:	4c 43       	clr.b	r12		;
    9acc:	30 41       	ret			

00009ace <usbSetConfiguration>:
    9ace:	b0 12 fc 97 	call	#38908		;#0x97fc
    9ad2:	d2 42 82 23 	mov.b	&0x2382,&0x2529	;0x2382
    9ad6:	29 25 
    9ad8:	b0 12 f2 98 	call	#39154		;#0x98f2
    9adc:	d2 93 29 25 	cmp.b	#1,	&0x2529	;r3 As==01
    9ae0:	07 20       	jnz	$+16     	;abs 0x9af0
    9ae2:	d2 43 21 25 	mov.b	#1,	&0x2521	;r3 As==01
    9ae6:	b0 12 5c a9 	call	#43356		;#0xa95c
    9aea:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9aee:	03 3c       	jmp	$+8      	;abs 0x9af6
    9af0:	c2 43 21 25 	mov.b	#0,	&0x2521	;r3 As==00
    9af4:	0c 43       	clr	r12		;
    9af6:	30 41       	ret			

00009af8 <usbClearDeviceFeature>:
    9af8:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9afc:	05 20       	jnz	$+12     	;abs 0x9b08
    9afe:	c2 43 20 25 	mov.b	#0,	&0x2520	;r3 As==00
    9b02:	b0 12 f2 98 	call	#39154		;#0x98f2
    9b06:	02 3c       	jmp	$+6      	;abs 0x9b0c
    9b08:	b0 12 e8 97 	call	#38888		;#0x97e8
    9b0c:	4c 43       	clr.b	r12		;
    9b0e:	30 41       	ret			

00009b10 <usbSetDeviceFeature>:
    9b10:	92 93 82 23 	cmp	#1,	&0x2382	;r3 As==01
    9b14:	05 20       	jnz	$+12     	;abs 0x9b20
    9b16:	d2 43 20 25 	mov.b	#1,	&0x2520	;r3 As==01
    9b1a:	b0 12 f2 98 	call	#39154		;#0x98f2
    9b1e:	02 3c       	jmp	$+6      	;abs 0x9b24
    9b20:	b0 12 e8 97 	call	#38888		;#0x97e8
    9b24:	4c 43       	clr.b	r12		;
    9b26:	30 41       	ret			

00009b28 <usbSetEndpointFeature>:
    9b28:	82 93 82 23 	cmp	#0,	&0x2382	;r3 As==00
    9b2c:	1c 20       	jnz	$+58     	;abs 0x9b66
    9b2e:	1e 42 84 23 	mov	&0x2384,r14	;0x2384
    9b32:	4d 4e       	mov.b	r14,	r13	;
    9b34:	7d f0 0f 00 	and.b	#15,	r13	;#0x000f
    9b38:	4c 4d       	mov.b	r13,	r12	;
    9b3a:	0c 93       	cmp	#0,	r12	;r3 As==00
    9b3c:	03 20       	jnz	$+8      	;abs 0x9b44
    9b3e:	b0 12 f2 98 	call	#39154		;#0x98f2
    9b42:	13 3c       	jmp	$+40     	;abs 0x9b6a
    9b44:	7d 53       	add.b	#-1,	r13	;r3 As==11
    9b46:	4c 4d       	mov.b	r13,	r12	;
    9b48:	7f 40 06 00 	mov.b	#6,	r15	;
    9b4c:	4f 9d       	cmp.b	r13,	r15	;
    9b4e:	0d 28       	jnc	$+28     	;abs 0x9b6a
    9b50:	42 18 0c 5c 	rpt #3 { rlax.w	r12		;
    9b54:	3e b0 80 00 	bit	#128,	r14	;#0x0080
    9b58:	03 24       	jz	$+8      	;abs 0x9b60
    9b5a:	fc d2 c8 23 	bis.b	#8,	9160(r12);r2 As==11, 0x23c8
    9b5e:	ef 3f       	jmp	$-32     	;abs 0x9b3e
    9b60:	fc d2 88 23 	bis.b	#8,	9096(r12);r2 As==11, 0x2388
    9b64:	ec 3f       	jmp	$-38     	;abs 0x9b3e
    9b66:	b0 12 e8 97 	call	#38888		;#0x97e8
    9b6a:	4c 43       	clr.b	r12		;
    9b6c:	30 41       	ret			

00009b6e <usbSetInterface>:
    9b6e:	b0 12 fc 97 	call	#38908		;#0x97fc
    9b72:	d2 42 84 23 	mov.b	&0x2384,&0x2528	;0x2384
    9b76:	28 25 
    9b78:	b0 12 f2 98 	call	#39154		;#0x98f2
    9b7c:	4c 43       	clr.b	r12		;
    9b7e:	30 41       	ret			

00009b80 <usbInvalidRequest>:
    9b80:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9b84:	02 20       	jnz	$+6      	;abs 0x9b8a
    9b86:	b0 12 e8 97 	call	#38888		;#0x97e8
    9b8a:	4c 43       	clr.b	r12		;
    9b8c:	30 41       	ret			

00009b8e <usbDecodeAndProcessUsbRequest>:
    9b8e:	3a 15       	pushm	#4,	r10	;16-bit words
    9b90:	5b 42 80 23 	mov.b	&0x2380,r11	;0x2380
    9b94:	5a 42 81 23 	mov.b	&0x2381,r10	;0x2381
    9b98:	3c 40 3c 80 	mov	#32828,	r12	;#0x803c
    9b9c:	49 4b       	mov.b	r11,	r9	;
    9b9e:	79 f0 7f 00 	and.b	#127,	r9	;#0x007f
    9ba2:	6e 4c       	mov.b	@r12,	r14	;
    9ba4:	5d 4c 01 00 	mov.b	1(r12),	r13	;
    9ba8:	7e 93       	cmp.b	#-1,	r14	;r3 As==11
    9baa:	02 20       	jnz	$+6      	;abs 0x9bb0
    9bac:	7d 93       	cmp.b	#-1,	r13	;r3 As==11
    9bae:	24 24       	jz	$+74     	;abs 0x9bf8
    9bb0:	79 90 40 00 	cmp.b	#64,	r9	;#0x0040
    9bb4:	21 24       	jz	$+68     	;abs 0x9bf8
    9bb6:	0e 9b       	cmp	r11,	r14	;
    9bb8:	1c 20       	jnz	$+58     	;abs 0x9bf2
    9bba:	0d 9a       	cmp	r10,	r13	;
    9bbc:	1a 20       	jnz	$+54     	;abs 0x9bf2
    9bbe:	08 4c       	mov	r12,	r8	;
    9bc0:	28 53       	incd	r8		;
    9bc2:	0e 43       	clr	r14		;
    9bc4:	3d 40 c0 00 	mov	#192,	r13	;#0x00c0
    9bc8:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9bcc:	07 48       	mov	r8,	r7	;
    9bce:	07 5e       	add	r14,	r7	;
    9bd0:	ee 97 82 23 	cmp.b	@r7,	9090(r14); 0x2382
    9bd4:	03 20       	jnz	$+8      	;abs 0x9bdc
    9bd6:	4d df       	bis.b	r15,	r13	;
    9bd8:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    9bdc:	12 c3       	clrc			
    9bde:	0f 10       	rrc	r15		;
    9be0:	1e 53       	inc	r14		;
    9be2:	3e 90 06 00 	cmp	#6,	r14	;
    9be6:	f2 23       	jnz	$-26     	;abs 0x9bcc
    9be8:	5d fc 08 00 	and.b	8(r12),	r13	;
    9bec:	5d 9c 08 00 	cmp.b	8(r12),	r13	;
    9bf0:	03 24       	jz	$+8      	;abs 0x9bf8
    9bf2:	3c 50 0c 00 	add	#12,	r12	;#0x000c
    9bf6:	d5 3f       	jmp	$-84     	;abs 0x9ba2
    9bf8:	d2 b3 3e 09 	bit.b	#1,	&0x093e	;r3 As==01
    9bfc:	06 20       	jnz	$+14     	;abs 0x9c0a
    9bfe:	1c 4c 0a 00 	mov	10(r12),r12	;0x0000a
    9c02:	8c 12       	call	r12		;
    9c04:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    9c08:	01 3c       	jmp	$+4      	;abs 0x9c0c
    9c0a:	0c 43       	clr	r12		;
    9c0c:	37 17       	popm	#4,	r10	;16-bit words
    9c0e:	30 41       	ret			

00009c10 <usbDisableInEndpointInterrupt>:
    9c10:	0a 15       	pushm	#1,	r10	;16-bit words
    9c12:	4d 4c       	mov.b	r12,	r13	;
    9c14:	5a 42 2e 09 	mov.b	&0x092e,r10	;0x092e
    9c18:	1c 43       	mov	#1,	r12	;r3 As==01
    9c1a:	0d 5c       	add	r12,	r13	;
    9c1c:	b0 12 f0 ad 	call	#44528		;#0xadf0
    9c20:	c2 cc 2e 09 	bic.b	r12,	&0x092e	;
    9c24:	0c fa       	and	r10,	r12	;
    9c26:	0a 17       	popm	#1,	r10	;16-bit words
    9c28:	30 41       	ret			

00009c2a <usbRestoreInEndpointInterrupt>:
    9c2a:	c2 dc 2e 09 	bis.b	r12,	&0x092e	;
    9c2e:	30 41       	ret			

00009c30 <usbDisableOutEndpointInterrupt>:
    9c30:	0a 15       	pushm	#1,	r10	;16-bit words
    9c32:	4d 4c       	mov.b	r12,	r13	;
    9c34:	5a 42 2f 09 	mov.b	&0x092f,r10	;0x092f
    9c38:	1c 43       	mov	#1,	r12	;r3 As==01
    9c3a:	0d 5c       	add	r12,	r13	;
    9c3c:	b0 12 f0 ad 	call	#44528		;#0xadf0
    9c40:	c2 cc 2f 09 	bic.b	r12,	&0x092f	;
    9c44:	0c fa       	and	r10,	r12	;
    9c46:	0a 17       	popm	#1,	r10	;16-bit words
    9c48:	30 41       	ret			

00009c4a <usbRestoreOutEndpointInterrupt>:
    9c4a:	c2 dc 2f 09 	bis.b	r12,	&0x092f	;
    9c4e:	30 41       	ret			

00009c50 <USB_determineFreq>:
    9c50:	2a 15       	pushm	#3,	r10	;16-bit words
    9c52:	5c 42 68 01 	mov.b	&0x0168,r12	;0x0168
    9c56:	7c f0 07 00 	and.b	#7,	r12	;
    9c5a:	6d 42       	mov.b	#4,	r13	;r2 As==10
    9c5c:	4d 9c       	cmp.b	r12,	r13	;
    9c5e:	52 28       	jnc	$+166    	;abs 0x9d04
    9c60:	5d 42 66 01 	mov.b	&0x0166,r13	;0x0166
    9c64:	7d f0 70 00 	and.b	#112,	r13	;#0x0070
    9c68:	7e 40 4f 00 	mov.b	#79,	r14	;#0x004f
    9c6c:	4e 9d       	cmp.b	r13,	r14	;
    9c6e:	03 2c       	jc	$+8      	;abs 0x9c76
    9c70:	38 40 c0 5d 	mov	#24000,	r8	;#0x5dc0
    9c74:	02 3c       	jmp	$+6      	;abs 0x9c7a
    9c76:	38 40 21 00 	mov	#33,	r8	;#0x0021
    9c7a:	1a 42 64 01 	mov	&0x0164,r10	;0x0164
    9c7e:	3a f0 ff 03 	and	#1023,	r10	;#0x03ff
    9c82:	1a 53       	inc	r10		;
    9c84:	7c 90 03 00 	cmp.b	#3,	r12	;
    9c88:	0b 20       	jnz	$+24     	;abs 0x9ca0
    9c8a:	1d 42 64 01 	mov	&0x0164,r13	;0x0164
    9c8e:	3d f0 00 70 	and	#28672,	r13	;#0x7000
    9c92:	0c 4a       	mov	r10,	r12	;
    9c94:	5d 03       	rrum	#1,	r13	;
    9c96:	4a 18 0d 11 	rpt #11 { rrax.w	r13		;
    9c9a:	b0 12 f0 ad 	call	#44528		;#0xadf0
    9c9e:	0a 4c       	mov	r12,	r10	;
    9ca0:	5c 42 66 01 	mov.b	&0x0166,r12	;0x0166
    9ca4:	7c f0 07 00 	and.b	#7,	r12	;
    9ca8:	4d 4c       	mov.b	r12,	r13	;
    9caa:	0d 93       	cmp	#0,	r13	;r3 As==00
    9cac:	03 20       	jnz	$+8      	;abs 0x9cb4
    9cae:	0c 4a       	mov	r10,	r12	;
    9cb0:	0d 48       	mov	r8,	r13	;
    9cb2:	1d 3c       	jmp	$+60     	;abs 0x9cee
    9cb4:	5c 93       	cmp.b	#1,	r12	;r3 As==01
    9cb6:	05 20       	jnz	$+12     	;abs 0x9cc2
    9cb8:	0c 4a       	mov	r10,	r12	;
    9cba:	0d 48       	mov	r8,	r13	;
    9cbc:	12 c3       	clrc			
    9cbe:	0d 10       	rrc	r13		;
    9cc0:	16 3c       	jmp	$+46     	;abs 0x9cee
    9cc2:	6c 93       	cmp.b	#2,	r12	;r3 As==10
    9cc4:	04 20       	jnz	$+10     	;abs 0x9cce
    9cc6:	0c 4a       	mov	r10,	r12	;
    9cc8:	0d 48       	mov	r8,	r13	;
    9cca:	5d 07       	rrum	#2,	r13	;
    9ccc:	10 3c       	jmp	$+34     	;abs 0x9cee
    9cce:	7c 90 03 00 	cmp.b	#3,	r12	;
    9cd2:	04 20       	jnz	$+10     	;abs 0x9cdc
    9cd4:	0c 4a       	mov	r10,	r12	;
    9cd6:	0d 48       	mov	r8,	r13	;
    9cd8:	5d 0b       	rrum	#3,	r13	;
    9cda:	09 3c       	jmp	$+20     	;abs 0x9cee
    9cdc:	6c 92       	cmp.b	#4,	r12	;r2 As==10
    9cde:	0b 20       	jnz	$+24     	;abs 0x9cf6
    9ce0:	0c 48       	mov	r8,	r12	;
    9ce2:	3d 40 0c 00 	mov	#12,	r13	;#0x000c
    9ce6:	b0 12 c4 ac 	call	#44228		;#0xacc4
    9cea:	0d 4c       	mov	r12,	r13	;
    9cec:	0c 4a       	mov	r10,	r12	;
    9cee:	b0 12 f4 ae 	call	#44788		;#0xaef4
    9cf2:	09 4c       	mov	r12,	r9	;
    9cf4:	09 3c       	jmp	$+20     	;abs 0x9d08
    9cf6:	7c 90 05 00 	cmp.b	#5,	r12	;
    9cfa:	06 20       	jnz	$+14     	;abs 0x9d08
    9cfc:	0c 4a       	mov	r10,	r12	;
    9cfe:	0d 48       	mov	r8,	r13	;
    9d00:	5d 0f       	rrum	#4,	r13	;
    9d02:	f5 3f       	jmp	$-20     	;abs 0x9cee
    9d04:	39 40 c0 5d 	mov	#24000,	r9	;#0x5dc0
    9d08:	5d 42 6a 01 	mov.b	&0x016a,r13	;0x016a
    9d0c:	7d f0 07 00 	and.b	#7,	r13	;
    9d10:	0c 49       	mov	r9,	r12	;
    9d12:	3d f0 07 00 	and	#7,	r13	;
    9d16:	b0 12 84 ae 	call	#44676		;#0xae84
    9d1a:	28 17       	popm	#3,	r10	;16-bit words
    9d1c:	30 41       	ret			

00009d1e <USB_init>:
    9d1e:	0a 15       	pushm	#1,	r10	;16-bit words
    9d20:	21 82       	sub	#4,	r1	;r2 As==10
    9d22:	0a 42       	mov	r2,	r10	;
    9d24:	3a f2       	and	#8,	r10	;r2 As==11
    9d26:	b0 12 50 9c 	call	#40016		;#0x9c50
    9d2a:	0e 4c       	mov	r12,	r14	;
    9d2c:	5e 0f       	rrum	#4,	r14	;
    9d2e:	5e 0b       	rrum	#3,	r14	;
    9d30:	0d 4c       	mov	r12,	r13	;
    9d32:	5d 0f       	rrum	#4,	r13	;
    9d34:	5d 07       	rrum	#2,	r13	;
    9d36:	0d 5e       	add	r14,	r13	;
    9d38:	5c 03       	rrum	#1,	r12	;
    9d3a:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9d3e:	0c 5d       	add	r13,	r12	;
    9d40:	32 c2       	dint			
    9d42:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9d46:	00 09 
    9d48:	b2 40 80 00 	mov	#128,	&0x0904	;#0x0080
    9d4c:	04 09 
    9d4e:	b2 40 40 08 	mov	#2112,	&0x0908	;#0x0840
    9d52:	08 09 
    9d54:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9d58:	1d 41 02 00 	mov	2(r1),	r13	;
    9d5c:	3e 40 13 00 	mov	#19,	r14	;#0x0013
    9d60:	0e 9d       	cmp	r13,	r14	;
    9d62:	0c 28       	jnc	$+26     	;abs 0x9d7c
    9d64:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    9d68:	2d 41       	mov	@r1,	r13	;
    9d6a:	0d 9c       	cmp	r12,	r13	;
    9d6c:	04 2c       	jc	$+10     	;abs 0x9d76
    9d6e:	03 43       	nop			
    9d70:	91 53 00 00 	inc	0(r1)		;
    9d74:	f9 3f       	jmp	$-12     	;abs 0x9d68
    9d76:	91 53 02 00 	inc	2(r1)		;
    9d7a:	ee 3f       	jmp	$-34     	;abs 0x9d58
    9d7c:	b2 d0 00 02 	bis	#512,	&0x0908	;#0x0200
    9d80:	08 09 
    9d82:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9d86:	00 09 
    9d88:	82 43 7e 25 	mov	#0,	&0x257e	;r3 As==00
    9d8c:	b0 12 7c 94 	call	#38012		;#0x947c
    9d90:	b0 12 56 9f 	call	#40790		;#0x9f56
    9d94:	02 da       	bis	r10,	r2	;
    9d96:	4c 43       	clr.b	r12		;
    9d98:	21 52       	add	#4,	r1	;r2 As==10
    9d9a:	0a 17       	popm	#1,	r10	;16-bit words
    9d9c:	30 41       	ret			

00009d9e <USB_enable>:
    9d9e:	1a 15       	pushm	#2,	r10	;16-bit words
    9da0:	31 80 06 00 	sub	#6,	r1	;
    9da4:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00
    9da8:	b0 12 50 9c 	call	#40016		;#0x9c50
    9dac:	0a 4c       	mov	r12,	r10	;
    9dae:	b2 b2 08 09 	bit	#8,	&0x0908	;r2 As==11
    9db2:	55 24       	jz	$+172    	;abs 0x9e5e
    9db4:	92 b3 02 09 	bit	#1,	&0x0902	;r3 As==01
    9db8:	04 24       	jz	$+10     	;abs 0x9dc2
    9dba:	b2 b0 00 01 	bit	#256,	&0x0910	;#0x0100
    9dbe:	10 09 
    9dc0:	5a 20       	jnz	$+182    	;abs 0x9e76
    9dc2:	39 40 b0 85 	mov	#34224,	r9	;#0x85b0
    9dc6:	7c 40 05 00 	mov.b	#5,	r12	;
    9dca:	2d 42       	mov	#4,	r13	;r2 As==10
    9dcc:	89 12       	call	r9		;
    9dce:	7c 40 05 00 	mov.b	#5,	r12	;
    9dd2:	3d 42       	mov	#8,	r13	;r2 As==11
    9dd4:	89 12       	call	r9		;
    9dd6:	b2 40 28 96 	mov	#38440,	&0x0900	;#0x9628
    9dda:	00 09 
    9ddc:	3c 40 00 c0 	mov	#49152,	r12	;#0xc000
    9de0:	3d 40 50 c3 	mov	#50000,	r13	;#0xc350
    9de4:	b0 12 3c 8c 	call	#35900		;#0x8c3c
    9de8:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9dea:	39 24       	jz	$+116    	;abs 0x9e5e
    9dec:	b2 40 0f 05 	mov	#1295,	&0x0912	;#0x050f
    9df0:	12 09 
    9df2:	b2 40 00 03 	mov	#768,	&0x0910	;#0x0300
    9df6:	10 09 
    9df8:	5d 42 22 25 	mov.b	&0x2522,r13	;0x2522
    9dfc:	0e 4a       	mov	r10,	r14	;
    9dfe:	5e 0f       	rrum	#4,	r14	;
    9e00:	5e 0b       	rrum	#3,	r14	;
    9e02:	0c 4a       	mov	r10,	r12	;
    9e04:	5c 03       	rrum	#1,	r12	;
    9e06:	47 18 0c 11 	rpt #8 { rrax.w	r12		;
    9e0a:	0c 5e       	add	r14,	r12	;
    9e0c:	5a 0f       	rrum	#4,	r10	;
    9e0e:	5a 07       	rrum	#2,	r10	;
    9e10:	0a 5c       	add	r12,	r10	;
    9e12:	82 43 14 09 	mov	#0,	&0x0914	;r3 As==00
    9e16:	5c 43       	mov.b	#1,	r12	;r3 As==01
    9e18:	4c 9d       	cmp.b	r13,	r12	;
    9e1a:	0e 2c       	jc	$+30     	;abs 0x9e38
    9e1c:	1c 41 04 00 	mov	4(r1),	r12	;
    9e20:	0e 4c       	mov	r12,	r14	;
    9e22:	1e 53       	inc	r14		;
    9e24:	81 4e 04 00 	mov	r14,	4(r1)	;
    9e28:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9e2c:	0e 9c       	cmp	r12,	r14	;
    9e2e:	19 2c       	jc	$+52     	;abs 0x9e62
    9e30:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9e34:	00 09 
    9e36:	13 3c       	jmp	$+40     	;abs 0x9e5e
    9e38:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00
    9e3c:	1c 41 02 00 	mov	2(r1),	r12	;
    9e40:	1e 43       	mov	#1,	r14	;r3 As==01
    9e42:	0e 9c       	cmp	r12,	r14	;
    9e44:	eb 2b       	jnc	$-40     	;abs 0x9e1c
    9e46:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    9e4a:	2c 41       	mov	@r1,	r12	;
    9e4c:	0c 9a       	cmp	r10,	r12	;
    9e4e:	04 2c       	jc	$+10     	;abs 0x9e58
    9e50:	03 43       	nop			
    9e52:	91 53 00 00 	inc	0(r1)		;
    9e56:	f9 3f       	jmp	$-12     	;abs 0x9e4a
    9e58:	91 53 02 00 	inc	2(r1)		;
    9e5c:	ef 3f       	jmp	$-32     	;abs 0x9e3c
    9e5e:	1c 43       	mov	#1,	r12	;r3 As==01
    9e60:	0b 3c       	jmp	$+24     	;abs 0x9e78
    9e62:	1c 42 14 09 	mov	&0x0914,r12	;0x0914
    9e66:	0c 93       	cmp	#0,	r12	;r3 As==00
    9e68:	d4 23       	jnz	$-86     	;abs 0x9e12
    9e6a:	92 d3 02 09 	bis	#1,	&0x0902	;r3 As==01
    9e6e:	b2 40 00 96 	mov	#38400,	&0x0900	;#0x9600
    9e72:	00 09 
    9e74:	01 3c       	jmp	$+4      	;abs 0x9e78
    9e76:	0c 43       	clr	r12		;
    9e78:	31 50 06 00 	add	#6,	r1	;
    9e7c:	19 17       	popm	#2,	r10	;16-bit words
    9e7e:	30 41       	ret			

00009e80 <USB_setup>:
    9e80:	2a 15       	pushm	#3,	r10	;16-bit words
    9e82:	49 4c       	mov.b	r12,	r9	;
    9e84:	48 4d       	mov.b	r13,	r8	;
    9e86:	b0 12 1e 9d 	call	#40222		;#0x9d1e
    9e8a:	4a 4c       	mov.b	r12,	r10	;
    9e8c:	08 93       	cmp	#0,	r8	;r3 As==00
    9e8e:	03 24       	jz	$+8      	;abs 0x9e96
    9e90:	b2 40 ff 01 	mov	#511,	&0x257e	;#0x01ff
    9e94:	7e 25 
    9e96:	09 93       	cmp	#0,	r9	;r3 As==00
    9e98:	0c 24       	jz	$+26     	;abs 0x9eb2
    9e9a:	b0 12 ea 96 	call	#38634		;#0x96ea
    9e9e:	1c b3       	bit	#1,	r12	;r3 As==01
    9ea0:	08 24       	jz	$+18     	;abs 0x9eb2
    9ea2:	b0 12 9e 9d 	call	#40350		;#0x9d9e
    9ea6:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    9ea8:	04 20       	jnz	$+10     	;abs 0x9eb2
    9eaa:	b0 12 56 95 	call	#38230		;#0x9556
    9eae:	b0 12 8e 96 	call	#38542		;#0x968e
    9eb2:	4c 4a       	mov.b	r10,	r12	;
    9eb4:	28 17       	popm	#3,	r10	;16-bit words
    9eb6:	30 41       	ret			

00009eb8 <USB_resume>:
    9eb8:	b0 12 9e 9d 	call	#40350		;#0x9d9e
    9ebc:	f2 f0 9f ff 	and.b	#65439,	&0x093e	;#0xff9f
    9ec0:	3e 09 
    9ec2:	f2 40 c4 ff 	mov.b	#65476,	&0x093d	;#0xffc4
    9ec6:	3d 09 
    9ec8:	c2 43 22 25 	mov.b	#0,	&0x2522	;r3 As==00
    9ecc:	4c 43       	clr.b	r12		;
    9ece:	30 41       	ret			

00009ed0 <memcpyV>:
    9ed0:	21 83       	decd	r1		;
    9ed2:	0f 43       	clr	r15		;
    9ed4:	0f 9e       	cmp	r14,	r15	;
    9ed6:	0b 24       	jz	$+24     	;abs 0x9eee
    9ed8:	0b 4d       	mov	r13,	r11	;
    9eda:	0b 5f       	add	r15,	r11	;
    9edc:	e1 4b 01 00 	mov.b	@r11,	1(r1)	;
    9ee0:	0b 4c       	mov	r12,	r11	;
    9ee2:	0b 5f       	add	r15,	r11	;
    9ee4:	db 41 01 00 	mov.b	1(r1),	0(r11)	;
    9ee8:	00 00 
    9eea:	1f 53       	inc	r15		;
    9eec:	f3 3f       	jmp	$-24     	;abs 0x9ed4
    9eee:	21 53       	incd	r1		;
    9ef0:	30 41       	ret			

00009ef2 <memcpyDMA>:
    9ef2:	2a 15       	pushm	#3,	r10	;16-bit words
    9ef4:	0a 4c       	mov	r12,	r10	;
    9ef6:	08 4d       	mov	r13,	r8	;
    9ef8:	09 4e       	mov	r14,	r9	;
    9efa:	0e 93       	cmp	#0,	r14	;r3 As==00
    9efc:	29 24       	jz	$+84     	;abs 0x9f50
    9efe:	b0 12 1e ac 	call	#44062		;#0xac1e
    9f02:	4c 43       	clr.b	r12		;
    9f04:	0d 48       	mov	r8,	r13	;
    9f06:	0e 48       	mov	r8,	r14	;
    9f08:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9f0c:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9f10:	b0 12 60 ab 	call	#43872		;#0xab60
    9f14:	4c 43       	clr.b	r12		;
    9f16:	0d 4a       	mov	r10,	r13	;
    9f18:	0e 4a       	mov	r10,	r14	;
    9f1a:	4e 18 0e 11 	rpt #15 { rrax.w	r14		;
    9f1e:	3f 40 00 03 	mov	#768,	r15	;#0x0300
    9f22:	b0 12 8c ab 	call	#43916		;#0xab8c
    9f26:	b0 12 24 ac 	call	#44068		;#0xac24
    9f2a:	4c 43       	clr.b	r12		;
    9f2c:	0d 49       	mov	r9,	r13	;
    9f2e:	b0 12 4c ab 	call	#43852		;#0xab4c
    9f32:	4c 43       	clr.b	r12		;
    9f34:	b0 12 bc ab 	call	#43964		;#0xabbc
    9f38:	4c 43       	clr.b	r12		;
    9f3a:	b0 12 d4 ab 	call	#43988		;#0xabd4
    9f3e:	39 40 f2 ab 	mov	#44018,	r9	;#0xabf2
    9f42:	4c 43       	clr.b	r12		;
    9f44:	89 12       	call	r9		;
    9f46:	0c 93       	cmp	#0,	r12	;r3 As==00
    9f48:	fc 27       	jz	$-6      	;abs 0x9f42
    9f4a:	4c 43       	clr.b	r12		;
    9f4c:	b0 12 c8 ab 	call	#43976		;#0xabc8
    9f50:	0c 4a       	mov	r10,	r12	;
    9f52:	28 17       	popm	#3,	r10	;16-bit words
    9f54:	30 41       	ret			

00009f56 <USB_initMemcpy>:
    9f56:	31 80 0a 00 	sub	#10,	r1	;#0x000a
    9f5a:	0c 41       	mov	r1,	r12	;
    9f5c:	0d 43       	clr	r13		;
    9f5e:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9f62:	b0 12 28 af 	call	#44840		;#0xaf28
    9f66:	b1 40 00 10 	mov	#4096,	2(r1)	;#0x1000
    9f6a:	02 00 
    9f6c:	f1 40 c0 ff 	mov.b	#65472,	7(r1)	;#0xffc0
    9f70:	07 00 
    9f72:	f1 40 20 00 	mov.b	#32,	8(r1)	;#0x0020
    9f76:	08 00 
    9f78:	b2 40 d0 9e 	mov	#40656,	&0x2588	;#0x9ed0
    9f7c:	88 25 
    9f7e:	b2 40 d0 9e 	mov	#40656,	&0x2586	;#0x9ed0
    9f82:	86 25 
    9f84:	0c 41       	mov	r1,	r12	;
    9f86:	b0 12 fa aa 	call	#43770		;#0xaafa
    9f8a:	b2 40 f2 9e 	mov	#40690,	&0x2588	;#0x9ef2
    9f8e:	88 25 
    9f90:	b2 40 f2 9e 	mov	#40690,	&0x2586	;#0x9ef2
    9f94:	86 25 
    9f96:	31 50 0a 00 	add	#10,	r1	;#0x000a
    9f9a:	30 41       	ret			

00009f9c <CdcResetData>:
    9f9c:	0a 15       	pushm	#1,	r10	;16-bit words
    9f9e:	3a 40 28 af 	mov	#44840,	r10	;#0xaf28
    9fa2:	3c 40 3a 25 	mov	#9530,	r12	;#0x253a
    9fa6:	0d 43       	clr	r13		;
    9fa8:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    9fac:	8a 12       	call	r10		;
    9fae:	3c 40 2a 25 	mov	#9514,	r12	;#0x252a
    9fb2:	0d 43       	clr	r13		;
    9fb4:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    9fb8:	8a 12       	call	r10		;
    9fba:	3c 40 44 25 	mov	#9540,	r12	;#0x2544
    9fbe:	0d 43       	clr	r13		;
    9fc0:	3e 42       	mov	#8,	r14	;r2 As==11
    9fc2:	8a 12       	call	r10		;
    9fc4:	f2 42 48 25 	mov.b	#8,	&0x2548	;r2 As==11
    9fc8:	0a 17       	popm	#1,	r10	;16-bit words
    9fca:	30 41       	ret			

00009fcc <USBCDC_sendData>:
    9fcc:	6a 15       	pushm	#7,	r10	;16-bit words
    9fce:	4a 4e       	mov.b	r14,	r10	;
    9fd0:	0e 4a       	mov	r10,	r14	;
    9fd2:	43 18 0e 5e 	rpt #4 { rlax.w	r14		;
    9fd6:	3e 50 20 81 	add	#33056,	r14	;#0x8120
    9fda:	54 4e 02 00 	mov.b	2(r14),	r4	;
    9fde:	0d 93       	cmp	#0,	r13	;r3 As==00
    9fe0:	36 24       	jz	$+110    	;abs 0xa04e
    9fe2:	08 4d       	mov	r13,	r8	;
    9fe4:	07 4c       	mov	r12,	r7	;
    9fe6:	4c 44       	mov.b	r4,	r12	;
    9fe8:	b0 12 10 9c 	call	#39952		;#0x9c10
    9fec:	05 4c       	mov	r12,	r5	;
    9fee:	36 40 2a 9c 	mov	#39978,	r6	;#0x9c2a
    9ff2:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    9ff6:	04 20       	jnz	$+10     	;abs 0xa000
    9ff8:	59 42 21 25 	mov.b	&0x2521,r9	;0x2521
    9ffc:	19 93       	cmp	#1,	r9	;r3 As==01
    9ffe:	04 24       	jz	$+10     	;abs 0xa008
    a000:	0c 45       	mov	r5,	r12	;
    a002:	86 12       	call	r6		;
    a004:	39 42       	mov	#8,	r9	;r2 As==11
    a006:	25 3c       	jmp	$+76     	;abs 0xa052
    a008:	0e 4a       	mov	r10,	r14	;
    a00a:	0e 5a       	add	r10,	r14	;
    a00c:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a010:	0a 5e       	add	r14,	r10	;
    a012:	3a 50 3a 25 	add	#9530,	r10	;#0x253a
    a016:	0d 4a       	mov	r10,	r13	;
    a018:	2d 53       	incd	r13		;
    a01a:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    a01e:	04 24       	jz	$+10     	;abs 0xa028
    a020:	86 12       	call	r6		;
    a022:	39 40 03 00 	mov	#3,	r9	;
    a026:	15 3c       	jmp	$+44     	;abs 0xa052
    a028:	8a 48 00 00 	mov	r8,	0(r10)	;
    a02c:	8d 48 00 00 	mov	r8,	0(r13)	;
    a030:	8a 47 04 00 	mov	r7,	4(r10)	;
    a034:	5a 42 30 09 	mov.b	&0x0930,r10	;0x0930
    a038:	1c 43       	mov	#1,	r12	;r3 As==01
    a03a:	0d 44       	mov	r4,	r13	;
    a03c:	0d 5c       	add	r12,	r13	;
    a03e:	b0 12 f0 ad 	call	#44528		;#0xadf0
    a042:	4c da       	bis.b	r10,	r12	;
    a044:	c2 4c 30 09 	mov.b	r12,	&0x0930	;
    a048:	0c 45       	mov	r5,	r12	;
    a04a:	86 12       	call	r6		;
    a04c:	02 3c       	jmp	$+6      	;abs 0xa052
    a04e:	39 40 07 00 	mov	#7,	r9	;
    a052:	4c 49       	mov.b	r9,	r12	;
    a054:	64 17       	popm	#7,	r10	;16-bit words
    a056:	30 41       	ret			

0000a058 <CdcToHostFromBuffer>:
    a058:	6a 15       	pushm	#7,	r10	;16-bit words
    a05a:	21 83       	decd	r1		;
    a05c:	4a 4c       	mov.b	r12,	r10	;
    a05e:	0c 4a       	mov	r10,	r12	;
    a060:	43 18 0c 5c 	rpt #4 { rlax.w	r12		;
    a064:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a068:	5f 4c 02 00 	mov.b	2(r12),	r15	;
    a06c:	06 4a       	mov	r10,	r6	;
    a06e:	06 5a       	add	r10,	r6	;
    a070:	0e 4a       	mov	r10,	r14	;
    a072:	42 18 0e 5e 	rpt #3 { rlax.w	r14		;
    a076:	08 46       	mov	r6,	r8	;
    a078:	08 5e       	add	r14,	r8	;
    a07a:	38 50 3a 25 	add	#9530,	r8	;#0x253a
    a07e:	1d 48 02 00 	mov	2(r8),	r13	;
    a082:	09 48       	mov	r8,	r9	;
    a084:	39 50 06 00 	add	#6,	r9	;
    a088:	0d 93       	cmp	#0,	r13	;r3 As==00
    a08a:	32 20       	jnz	$+102    	;abs 0xa0f0
    a08c:	c9 93 01 00 	cmp.b	#0,	1(r9)	;r3 As==00
    a090:	aa 20       	jnz	$+342    	;abs 0xa1e6
    a092:	d9 43 01 00 	mov.b	#1,	1(r9)	;r3 As==01
    a096:	f8 90 40 00 	cmp.b	#64,	8(r8)	;#0x0040
    a09a:	08 00 
    a09c:	19 20       	jnz	$+52     	;abs 0xa0d0
    a09e:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    a0a2:	0c 4f       	mov	r15,	r12	;
    a0a4:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    a0a8:	0a 20       	jnz	$+22     	;abs 0xa0be
    a0aa:	3c 50 ca 23 	add	#9162,	r12	;#0x23ca
    a0ae:	cf 93 ca 23 	cmp.b	#0,	9162(r15);r3 As==00, 0x23ca
    a0b2:	0e 34       	jge	$+30     	;abs 0xa0d0
    a0b4:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    a0b8:	d9 43 00 00 	mov.b	#1,	0(r9)	;r3 As==01
    a0bc:	09 3c       	jmp	$+20     	;abs 0xa0d0
    a0be:	3c 50 ce 23 	add	#9166,	r12	;#0x23ce
    a0c2:	cf 93 ce 23 	cmp.b	#0,	9166(r15);r3 As==00, 0x23ce
    a0c6:	04 34       	jge	$+10     	;abs 0xa0d0
    a0c8:	cc 4d 00 00 	mov.b	r13,	0(r12)	;
    a0cc:	c9 4d 00 00 	mov.b	r13,	0(r9)	;
    a0d0:	0e 46       	mov	r6,	r14	;
    a0d2:	41 18 0e 5e 	rpt #2 { rlax.w	r14		;
    a0d6:	06 5e       	add	r14,	r6	;
    a0d8:	86 43 3a 25 	mov	#0,	9530(r6);r3 As==00, 0x253a
    a0dc:	f2 b0 80 00 	bit.b	#128,	&0x257e	;#0x0080
    a0e0:	7e 25 
    a0e2:	81 24       	jz	$+260    	;abs 0xa1e6
    a0e4:	4c 4a       	mov.b	r10,	r12	;
    a0e6:	b0 12 68 a9 	call	#43368		;#0xa968
    a0ea:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a0ee:	7c 3c       	jmp	$+250    	;abs 0xa1e8
    a0f0:	c9 43 01 00 	mov.b	#0,	1(r9)	;r3 As==00
    a0f4:	42 18 0f 5f 	rpt #3 { rlax.w	r15		;
    a0f8:	08 4c       	mov	r12,	r8	;
    a0fa:	38 50 0c 00 	add	#12,	r8	;#0x000c
    a0fe:	07 4c       	mov	r12,	r7	;
    a100:	37 50 0e 00 	add	#14,	r7	;#0x000e
    a104:	c9 93 00 00 	cmp.b	#0,	0(r9)	;r3 As==00
    a108:	10 20       	jnz	$+34     	;abs 0xa12a
    a10a:	2c 48       	mov	@r8,	r12	;
    a10c:	09 4f       	mov	r15,	r9	;
    a10e:	29 53       	incd	r9		;
    a110:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    a114:	25 47       	mov	@r7,	r5	;
    a116:	07 4f       	mov	r15,	r7	;
    a118:	37 50 06 00 	add	#6,	r7	;
    a11c:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    a120:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    a124:	5f 4f 02 00 	mov.b	2(r15),	r15	;
    a128:	0f 3c       	jmp	$+32     	;abs 0xa148
    a12a:	2c 47       	mov	@r7,	r12	;
    a12c:	09 4f       	mov	r15,	r9	;
    a12e:	39 50 06 00 	add	#6,	r9	;
    a132:	39 50 c8 23 	add	#9160,	r9	;#0x23c8
    a136:	25 48       	mov	@r8,	r5	;
    a138:	07 4f       	mov	r15,	r7	;
    a13a:	27 53       	incd	r7		;
    a13c:	37 50 c8 23 	add	#9160,	r7	;#0x23c8
    a140:	3f 50 c8 23 	add	#9160,	r15	;#0x23c8
    a144:	5f 4f 06 00 	mov.b	6(r15),	r15	;
    a148:	4f 93       	cmp.b	#0,	r15	;r3 As==00
    a14a:	4d 34       	jge	$+156    	;abs 0xa1e6
    a14c:	08 4d       	mov	r13,	r8	;
    a14e:	3b 40 40 00 	mov	#64,	r11	;#0x0040
    a152:	0b 9d       	cmp	r13,	r11	;
    a154:	01 2c       	jc	$+4      	;abs 0xa158
    a156:	08 4b       	mov	r11,	r8	;
    a158:	44 48       	mov.b	r8,	r4	;
    a15a:	06 5e       	add	r14,	r6	;
    a15c:	36 50 3a 25 	add	#9530,	r6	;#0x253a
    a160:	0f 46       	mov	r6,	r15	;
    a162:	2f 52       	add	#4,	r15	;r2 As==10
    a164:	2d 4f       	mov	@r15,	r13	;
    a166:	0e 48       	mov	r8,	r14	;
    a168:	81 4f 00 00 	mov	r15,	0(r1)	;
    a16c:	1b 42 88 25 	mov	&0x2588,r11	;0x2588
    a170:	8b 12       	call	r11		;
    a172:	c9 44 00 00 	mov.b	r4,	0(r9)	;
    a176:	5c 46 06 00 	mov.b	6(r6),	r12	;
    a17a:	5c 53       	inc.b	r12		;
    a17c:	5c f3       	and.b	#1,	r12	;r3 As==01
    a17e:	c6 4c 06 00 	mov.b	r12,	6(r6)	;
    a182:	0c 46       	mov	r6,	r12	;
    a184:	2c 53       	incd	r12		;
    a186:	29 4c       	mov	@r12,	r9	;
    a188:	09 88       	sub	r8,	r9	;
    a18a:	8c 49 00 00 	mov	r9,	0(r12)	;
    a18e:	2f 41       	mov	@r1,	r15	;
    a190:	2d 4f       	mov	@r15,	r13	;
    a192:	0d 58       	add	r8,	r13	;
    a194:	8f 4d 00 00 	mov	r13,	0(r15)	;
    a198:	c6 44 08 00 	mov.b	r4,	8(r6)	;
    a19c:	6c 47       	mov.b	@r7,	r12	;
    a19e:	09 93       	cmp	#0,	r9	;r3 As==00
    a1a0:	22 24       	jz	$+70     	;abs 0xa1e6
    a1a2:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a1a4:	20 34       	jge	$+66     	;abs 0xa1e6
    a1a6:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    a1aa:	0f 99       	cmp	r9,	r15	;
    a1ac:	01 2c       	jc	$+4      	;abs 0xa1b0
    a1ae:	09 4f       	mov	r15,	r9	;
    a1b0:	48 49       	mov.b	r9,	r8	;
    a1b2:	0c 45       	mov	r5,	r12	;
    a1b4:	0e 49       	mov	r9,	r14	;
    a1b6:	1b 42 88 25 	mov	&0x2588,r11	;0x2588
    a1ba:	8b 12       	call	r11		;
    a1bc:	c7 48 00 00 	mov.b	r8,	0(r7)	;
    a1c0:	0c 4a       	mov	r10,	r12	;
    a1c2:	0c 5a       	add	r10,	r12	;
    a1c4:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a1c8:	0a 5c       	add	r12,	r10	;
    a1ca:	3a 50 3a 25 	add	#9530,	r10	;#0x253a
    a1ce:	5c 4a 06 00 	mov.b	6(r10),	r12	;
    a1d2:	5c 53       	inc.b	r12		;
    a1d4:	5c f3       	and.b	#1,	r12	;r3 As==01
    a1d6:	ca 4c 06 00 	mov.b	r12,	6(r10)	;
    a1da:	8a 89 02 00 	sub	r9,	2(r10)	;
    a1de:	8a 59 04 00 	add	r9,	4(r10)	;
    a1e2:	ca 48 08 00 	mov.b	r8,	8(r10)	;
    a1e6:	0c 43       	clr	r12		;
    a1e8:	21 53       	incd	r1		;
    a1ea:	64 17       	popm	#7,	r10	;16-bit words
    a1ec:	30 41       	ret			

0000a1ee <USBCDC_abortSend>:
    a1ee:	1a 15       	pushm	#2,	r10	;16-bit words
    a1f0:	09 4c       	mov	r12,	r9	;
    a1f2:	4a 4d       	mov.b	r13,	r10	;
    a1f4:	0d 4a       	mov	r10,	r13	;
    a1f6:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a1fa:	3d 50 20 81 	add	#33056,	r13	;#0x8120
    a1fe:	5c 4d 02 00 	mov.b	2(r13),	r12	;
    a202:	b0 12 10 9c 	call	#39952		;#0x9c10
    a206:	0d 4a       	mov	r10,	r13	;
    a208:	0d 5a       	add	r10,	r13	;
    a20a:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a20e:	0a 5d       	add	r13,	r10	;
    a210:	3a 50 3a 25 	add	#9530,	r10	;#0x253a
    a214:	0d 4a       	mov	r10,	r13	;
    a216:	2d 53       	incd	r13		;
    a218:	2e 4a       	mov	@r10,	r14	;
    a21a:	2e 8d       	sub	@r13,	r14	;
    a21c:	89 4e 00 00 	mov	r14,	0(r9)	;
    a220:	8a 43 00 00 	mov	#0,	0(r10)	;r3 As==00
    a224:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    a228:	b0 12 2a 9c 	call	#39978		;#0x9c2a
    a22c:	4c 43       	clr.b	r12		;
    a22e:	19 17       	popm	#2,	r10	;16-bit words
    a230:	30 41       	ret			

0000a232 <CopyUsbToBuff>:
    a232:	4a 15       	pushm	#5,	r10	;16-bit words
    a234:	08 4c       	mov	r12,	r8	;
    a236:	07 4d       	mov	r13,	r7	;
    a238:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    a23c:	0a 4e       	mov	r14,	r10	;
    a23e:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    a242:	0d 4a       	mov	r10,	r13	;
    a244:	3d 50 2a 25 	add	#9514,	r13	;#0x252a
    a248:	1c 4d 06 00 	mov	6(r13),	r12	;
    a24c:	59 4d 0e 00 	mov.b	14(r13),r9	;0x0000e
    a250:	0c 99       	cmp	r9,	r12	;
    a252:	01 2c       	jc	$+4      	;abs 0xa256
    a254:	09 4c       	mov	r12,	r9	;
    a256:	46 49       	mov.b	r9,	r6	;
    a258:	3a 50 2a 25 	add	#9514,	r10	;#0x252a
    a25c:	2c 4a       	mov	@r10,	r12	;
    a25e:	0d 48       	mov	r8,	r13	;
    a260:	0e 49       	mov	r9,	r14	;
    a262:	1f 42 86 25 	mov	&0x2586,r15	;0x2586
    a266:	8f 12       	call	r15		;
    a268:	8a 89 06 00 	sub	r9,	6(r10)	;
    a26c:	8a 59 00 00 	add	r9,	0(r10)	;
    a270:	0e 4a       	mov	r10,	r14	;
    a272:	3e 50 0e 00 	add	#14,	r14	;#0x000e
    a276:	6c 4e       	mov.b	@r14,	r12	;
    a278:	06 9c       	cmp	r12,	r6	;
    a27a:	0b 20       	jnz	$+24     	;abs 0xa292
    a27c:	5c 4e 01 00 	mov.b	1(r14),	r12	;
    a280:	5c 53       	inc.b	r12		;
    a282:	5c f3       	and.b	#1,	r12	;r3 As==01
    a284:	ce 4c 01 00 	mov.b	r12,	1(r14)	;
    a288:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    a28c:	c7 43 00 00 	mov.b	#0,	0(r7)	;r3 As==00
    a290:	06 3c       	jmp	$+14     	;abs 0xa29e
    a292:	4c 86       	sub.b	r6,	r12	;
    a294:	ce 4c 00 00 	mov.b	r12,	0(r14)	;
    a298:	08 59       	add	r9,	r8	;
    a29a:	8a 48 02 00 	mov	r8,	2(r10)	;
    a29e:	46 17       	popm	#5,	r10	;16-bit words
    a2a0:	30 41       	ret			

0000a2a2 <USBCDC_receiveData>:
    a2a2:	6a 15       	pushm	#7,	r10	;16-bit words
    a2a4:	31 82       	sub	#8,	r1	;r2 As==11
    a2a6:	48 4e       	mov.b	r14,	r8	;
    a2a8:	09 48       	mov	r8,	r9	;
    a2aa:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    a2ae:	04 49       	mov	r9,	r4	;
    a2b0:	34 50 20 81 	add	#33056,	r4	;#0x8120
    a2b4:	5a 44 02 00 	mov.b	2(r4),	r10	;
    a2b8:	0d 93       	cmp	#0,	r13	;r3 As==00
    a2ba:	02 25       	jz	$+518    	;abs 0xa4c0
    a2bc:	0c 93       	cmp	#0,	r12	;r3 As==00
    a2be:	00 25       	jz	$+514    	;abs 0xa4c0
    a2c0:	05 4d       	mov	r13,	r5	;
    a2c2:	81 4c 06 00 	mov	r12,	6(r1)	;
    a2c6:	4c 4a       	mov.b	r10,	r12	;
    a2c8:	b0 12 30 9c 	call	#39984		;#0x9c30
    a2cc:	06 4c       	mov	r12,	r6	;
    a2ce:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    a2d2:	03 20       	jnz	$+8      	;abs 0xa2da
    a2d4:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    a2d8:	05 24       	jz	$+12     	;abs 0xa2e4
    a2da:	0c 46       	mov	r6,	r12	;
    a2dc:	b0 12 4a 9c 	call	#40010		;#0x9c4a
    a2e0:	3c 42       	mov	#8,	r12	;r2 As==11
    a2e2:	f0 3c       	jmp	$+482    	;abs 0xa4c4
    a2e4:	07 49       	mov	r9,	r7	;
    a2e6:	37 50 2a 25 	add	#9514,	r7	;#0x252a
    a2ea:	87 93 00 00 	cmp	#0,	0(r7)	;r3 As==00
    a2ee:	05 24       	jz	$+12     	;abs 0xa2fa
    a2f0:	b0 12 4a 9c 	call	#40010		;#0x9c4a
    a2f4:	3c 40 03 00 	mov	#3,	r12	;
    a2f8:	e5 3c       	jmp	$+460    	;abs 0xa4c4
    a2fa:	87 45 04 00 	mov	r5,	4(r7)	;
    a2fe:	0c 47       	mov	r7,	r12	;
    a300:	3c 50 06 00 	add	#6,	r12	;
    a304:	81 4c 04 00 	mov	r12,	4(r1)	;
    a308:	8c 45 00 00 	mov	r5,	0(r12)	;
    a30c:	97 41 06 00 	mov	6(r1),	0(r7)	;
    a310:	00 00 
    a312:	c7 93 0e 00 	cmp.b	#0,	14(r7)	;r3 As==00, 0x000e
    a316:	54 24       	jz	$+170    	;abs 0xa3c0
    a318:	0b 47       	mov	r7,	r11	;
    a31a:	2b 53       	incd	r11		;
    a31c:	0f 47       	mov	r7,	r15	;
    a31e:	3f 52       	add	#8,	r15	;r2 As==11
    a320:	35 40 32 a2 	mov	#41522,	r5	;#0xa232
    a324:	2c 4b       	mov	@r11,	r12	;
    a326:	2d 4f       	mov	@r15,	r13	;
    a328:	4e 48       	mov.b	r8,	r14	;
    a32a:	81 4b 02 00 	mov	r11,	2(r1)	;
    a32e:	81 4f 00 00 	mov	r15,	0(r1)	;
    a332:	85 12       	call	r5		;
    a334:	1b 41 02 00 	mov	2(r1),	r11	;
    a338:	2f 41       	mov	@r1,	r15	;
    a33a:	1c 41 04 00 	mov	4(r1),	r12	;
    a33e:	8c 93 00 00 	cmp	#0,	0(r12)	;r3 As==00
    a342:	03 20       	jnz	$+8      	;abs 0xa34a
    a344:	87 43 00 00 	mov	#0,	0(r7)	;r3 As==00
    a348:	31 3c       	jmp	$+100    	;abs 0xa3ac
    a34a:	0d 4a       	mov	r10,	r13	;
    a34c:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    a350:	0c 4d       	mov	r13,	r12	;
    a352:	2c 53       	incd	r12		;
    a354:	3c 50 88 23 	add	#9096,	r12	;#0x2388
    a358:	8f 9c 00 00 	cmp	r12,	0(r15)	;
    a35c:	0a 20       	jnz	$+22     	;abs 0xa372
    a35e:	3d 50 06 00 	add	#6,	r13	;
    a362:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    a366:	8f 4d 00 00 	mov	r13,	0(r15)	;
    a36a:	9b 44 0a 00 	mov	10(r4),	0(r11)	;0x0000a
    a36e:	00 00 
    a370:	05 3c       	jmp	$+12     	;abs 0xa37c
    a372:	8f 4c 00 00 	mov	r12,	0(r15)	;
    a376:	9b 44 08 00 	mov	8(r4),	0(r11)	;
    a37a:	00 00 
    a37c:	0c 49       	mov	r9,	r12	;
    a37e:	3c 50 2a 25 	add	#9514,	r12	;#0x252a
    a382:	1d 4c 08 00 	mov	8(r12),	r13	;
    a386:	6e 4d       	mov.b	@r13,	r14	;
    a388:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    a38a:	08 34       	jge	$+18     	;abs 0xa39c
    a38c:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    a390:	cc 4e 0e 00 	mov.b	r14,	14(r12)	; 0x000e
    a394:	1c 4c 02 00 	mov	2(r12),	r12	;
    a398:	4e 48       	mov.b	r8,	r14	;
    a39a:	85 12       	call	r5		;
    a39c:	0c 49       	mov	r9,	r12	;
    a39e:	3c 50 2a 25 	add	#9514,	r12	;#0x252a
    a3a2:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    a3a6:	0c 20       	jnz	$+26     	;abs 0xa3c0
    a3a8:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    a3ac:	d2 b3 7f 25 	bit.b	#1,	&0x257f	;r3 As==01
    a3b0:	03 24       	jz	$+8      	;abs 0xa3b8
    a3b2:	4c 48       	mov.b	r8,	r12	;
    a3b4:	b0 12 6c a9 	call	#43372		;#0xa96c
    a3b8:	0c 46       	mov	r6,	r12	;
    a3ba:	b0 12 4a 9c 	call	#40010		;#0x9c4a
    a3be:	79 3c       	jmp	$+244    	;abs 0xa4b2
    a3c0:	0c 49       	mov	r9,	r12	;
    a3c2:	3c 50 2a 25 	add	#9514,	r12	;#0x252a
    a3c6:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a3ca:	0d 4a       	mov	r10,	r13	;
    a3cc:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    a3d0:	cc 93 0f 00 	cmp.b	#0,	15(r12)	;r3 As==00, 0x000f
    a3d4:	15 20       	jnz	$+44     	;abs 0xa400
    a3d6:	cd 93 02 00 	cmp.b	#0,	2(r13)	;r3 As==00
    a3da:	5a 34       	jge	$+182    	;abs 0xa490
    a3dc:	0d 49       	mov	r9,	r13	;
    a3de:	3d 50 20 81 	add	#33056,	r13	;#0x8120
    a3e2:	9c 4d 08 00 	mov	8(r13),	2(r12)	;
    a3e6:	02 00 
    a3e8:	0e 4a       	mov	r10,	r14	;
    a3ea:	2e 53       	incd	r14		;
    a3ec:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    a3f0:	8c 4e 08 00 	mov	r14,	8(r12)	;
    a3f4:	9c 4d 0a 00 	mov	10(r13),12(r12)	;0x0000a, 0x000c
    a3f8:	0c 00 
    a3fa:	3a 50 06 00 	add	#6,	r10	;
    a3fe:	14 3c       	jmp	$+42     	;abs 0xa428
    a400:	cd 93 06 00 	cmp.b	#0,	6(r13)	;r3 As==00
    a404:	45 34       	jge	$+140    	;abs 0xa490
    a406:	0d 49       	mov	r9,	r13	;
    a408:	3d 50 20 81 	add	#33056,	r13	;#0x8120
    a40c:	9c 4d 0a 00 	mov	10(r13),2(r12)	;0x0000a
    a410:	02 00 
    a412:	0e 4a       	mov	r10,	r14	;
    a414:	3e 50 06 00 	add	#6,	r14	;
    a418:	3e 50 88 23 	add	#9096,	r14	;#0x2388
    a41c:	8c 4e 08 00 	mov	r14,	8(r12)	;
    a420:	9c 4d 08 00 	mov	8(r13),	12(r12)	; 0x000c
    a424:	0c 00 
    a426:	2a 53       	incd	r10		;
    a428:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    a42c:	8c 4a 0a 00 	mov	r10,	10(r12)	; 0x000a
    a430:	0a 49       	mov	r9,	r10	;
    a432:	3a 50 2a 25 	add	#9514,	r10	;#0x252a
    a436:	07 4a       	mov	r10,	r7	;
    a438:	37 52       	add	#8,	r7	;r2 As==11
    a43a:	2d 47       	mov	@r7,	r13	;
    a43c:	6c 4d       	mov.b	@r13,	r12	;
    a43e:	0c 93       	cmp	#0,	r12	;r3 As==00
    a440:	01 20       	jnz	$+4      	;abs 0xa444
    a442:	ff 3f       	jmp	$+0      	;abs 0xa442
    a444:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a446:	24 34       	jge	$+74     	;abs 0xa490
    a448:	04 4a       	mov	r10,	r4	;
    a44a:	34 50 0e 00 	add	#14,	r4	;#0x000e
    a44e:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    a452:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    a456:	3f 40 32 a2 	mov	#41522,	r15	;#0xa232
    a45a:	1c 4a 02 00 	mov	2(r10),	r12	;
    a45e:	4e 48       	mov.b	r8,	r14	;
    a460:	81 4f 00 00 	mov	r15,	0(r1)	;
    a464:	8f 12       	call	r15		;
    a466:	05 4a       	mov	r10,	r5	;
    a468:	35 50 0a 00 	add	#10,	r5	;#0x000a
    a46c:	2d 45       	mov	@r5,	r13	;
    a46e:	6c 4d       	mov.b	@r13,	r12	;
    a470:	2f 41       	mov	@r1,	r15	;
    a472:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    a476:	0c 24       	jz	$+26     	;abs 0xa490
    a478:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a47a:	0a 34       	jge	$+22     	;abs 0xa490
    a47c:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    a480:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    a484:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    a488:	4e 48       	mov.b	r8,	r14	;
    a48a:	8f 12       	call	r15		;
    a48c:	a7 45 00 00 	mov	@r5,	0(r7)	;
    a490:	39 50 2a 25 	add	#9514,	r9	;#0x252a
    a494:	3a 40 4a 9c 	mov	#40010,	r10	;#0x9c4a
    a498:	89 93 06 00 	cmp	#0,	6(r9)	;r3 As==00
    a49c:	0d 20       	jnz	$+28     	;abs 0xa4b8
    a49e:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    a4a2:	d2 b3 7f 25 	bit.b	#1,	&0x257f	;r3 As==01
    a4a6:	03 24       	jz	$+8      	;abs 0xa4ae
    a4a8:	4c 48       	mov.b	r8,	r12	;
    a4aa:	b0 12 6c a9 	call	#43372		;#0xa96c
    a4ae:	0c 46       	mov	r6,	r12	;
    a4b0:	8a 12       	call	r10		;
    a4b2:	3c 40 05 00 	mov	#5,	r12	;
    a4b6:	06 3c       	jmp	$+14     	;abs 0xa4c4
    a4b8:	0c 46       	mov	r6,	r12	;
    a4ba:	8a 12       	call	r10		;
    a4bc:	2c 42       	mov	#4,	r12	;r2 As==10
    a4be:	02 3c       	jmp	$+6      	;abs 0xa4c4
    a4c0:	3c 40 07 00 	mov	#7,	r12	;
    a4c4:	31 52       	add	#8,	r1	;r2 As==11
    a4c6:	64 17       	popm	#7,	r10	;16-bit words
    a4c8:	30 41       	ret			

0000a4ca <CdcToBufferFromHost>:
    a4ca:	6a 15       	pushm	#7,	r10	;16-bit words
    a4cc:	48 4c       	mov.b	r12,	r8	;
    a4ce:	09 48       	mov	r8,	r9	;
    a4d0:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    a4d4:	0c 49       	mov	r9,	r12	;
    a4d6:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a4da:	5d 4c 02 00 	mov.b	2(r12),	r13	;
    a4de:	0f 49       	mov	r9,	r15	;
    a4e0:	3f 50 2a 25 	add	#9514,	r15	;#0x252a
    a4e4:	8f 93 06 00 	cmp	#0,	6(r15)	;r3 As==00
    a4e8:	03 20       	jnz	$+8      	;abs 0xa4f0
    a4ea:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    a4ee:	7f 3c       	jmp	$+256    	;abs 0xa5ee
    a4f0:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    a4f4:	5e 4d 8e 23 	mov.b	9102(r13),r14	;0x0238e
    a4f8:	5e dd 8a 23 	bis.b	9098(r13),r14	;0x0238a
    a4fc:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    a4fe:	77 34       	jge	$+240    	;abs 0xa5ee
    a500:	06 4c       	mov	r12,	r6	;
    a502:	36 52       	add	#8,	r6	;r2 As==11
    a504:	05 4f       	mov	r15,	r5	;
    a506:	35 52       	add	#8,	r5	;r2 As==11
    a508:	0a 4d       	mov	r13,	r10	;
    a50a:	2a 53       	incd	r10		;
    a50c:	07 4f       	mov	r15,	r7	;
    a50e:	37 50 0c 00 	add	#12,	r7	;#0x000c
    a512:	0e 4c       	mov	r12,	r14	;
    a514:	3e 50 0a 00 	add	#10,	r14	;#0x000a
    a518:	04 4f       	mov	r15,	r4	;
    a51a:	34 50 0a 00 	add	#10,	r4	;#0x000a
    a51e:	3d 50 06 00 	add	#6,	r13	;
    a522:	cf 93 0f 00 	cmp.b	#0,	15(r15)	;r3 As==00, 0x000f
    a526:	0c 20       	jnz	$+26     	;abs 0xa540
    a528:	2c 46       	mov	@r6,	r12	;
    a52a:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    a52e:	85 4a 00 00 	mov	r10,	0(r5)	;
    a532:	a7 4e 00 00 	mov	@r14,	0(r7)	;
    a536:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    a53a:	84 4d 00 00 	mov	r13,	0(r4)	;
    a53e:	0b 3c       	jmp	$+24     	;abs 0xa556
    a540:	2c 4e       	mov	@r14,	r12	;
    a542:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    a546:	85 4d 00 00 	mov	r13,	0(r5)	;
    a54a:	a7 46 00 00 	mov	@r6,	0(r7)	;
    a54e:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    a552:	84 4a 00 00 	mov	r10,	0(r4)	;
    a556:	0a 49       	mov	r9,	r10	;
    a558:	3a 50 2a 25 	add	#9514,	r10	;#0x252a
    a55c:	07 4a       	mov	r10,	r7	;
    a55e:	37 52       	add	#8,	r7	;r2 As==11
    a560:	2d 47       	mov	@r7,	r13	;
    a562:	6e 4d       	mov.b	@r13,	r14	;
    a564:	4e 93       	cmp.b	#0,	r14	;r3 As==00
    a566:	1f 34       	jge	$+64     	;abs 0xa5a6
    a568:	04 4a       	mov	r10,	r4	;
    a56a:	34 50 0e 00 	add	#14,	r4	;#0x000e
    a56e:	7e f0 7f 00 	and.b	#127,	r14	;#0x007f
    a572:	c4 4e 00 00 	mov.b	r14,	0(r4)	;
    a576:	35 40 32 a2 	mov	#41522,	r5	;#0xa232
    a57a:	4e 48       	mov.b	r8,	r14	;
    a57c:	85 12       	call	r5		;
    a57e:	06 4a       	mov	r10,	r6	;
    a580:	36 50 0a 00 	add	#10,	r6	;#0x000a
    a584:	2d 46       	mov	@r6,	r13	;
    a586:	6c 4d       	mov.b	@r13,	r12	;
    a588:	8a 93 06 00 	cmp	#0,	6(r10)	;r3 As==00
    a58c:	0c 24       	jz	$+26     	;abs 0xa5a6
    a58e:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a590:	0a 34       	jge	$+22     	;abs 0xa5a6
    a592:	7c f0 7f 00 	and.b	#127,	r12	;#0x007f
    a596:	c4 4c 00 00 	mov.b	r12,	0(r4)	;
    a59a:	1c 4a 0c 00 	mov	12(r10),r12	;0x0000c
    a59e:	4e 48       	mov.b	r8,	r14	;
    a5a0:	85 12       	call	r5		;
    a5a2:	a7 46 00 00 	mov	@r6,	0(r7)	;
    a5a6:	0c 49       	mov	r9,	r12	;
    a5a8:	3c 50 2a 25 	add	#9514,	r12	;#0x252a
    a5ac:	8c 93 06 00 	cmp	#0,	6(r12)	;r3 As==00
    a5b0:	1b 20       	jnz	$+56     	;abs 0xa5e8
    a5b2:	8c 43 00 00 	mov	#0,	0(r12)	;r3 As==00
    a5b6:	1a 42 7e 25 	mov	&0x257e,r10	;0x257e
    a5ba:	3a f0 00 01 	and	#256,	r10	;#0x0100
    a5be:	0a 93       	cmp	#0,	r10	;r3 As==00
    a5c0:	04 24       	jz	$+10     	;abs 0xa5ca
    a5c2:	4c 48       	mov.b	r8,	r12	;
    a5c4:	b0 12 6c a9 	call	#43372		;#0xa96c
    a5c8:	4a 4c       	mov.b	r12,	r10	;
    a5ca:	39 50 2a 25 	add	#9514,	r9	;#0x252a
    a5ce:	c9 93 0e 00 	cmp.b	#0,	14(r9)	;r3 As==00, 0x000e
    a5d2:	0b 24       	jz	$+24     	;abs 0xa5ea
    a5d4:	f2 b0 40 00 	bit.b	#64,	&0x257e	;#0x0040
    a5d8:	7e 25 
    a5da:	07 24       	jz	$+16     	;abs 0xa5ea
    a5dc:	4c 48       	mov.b	r8,	r12	;
    a5de:	b0 12 60 a9 	call	#43360		;#0xa960
    a5e2:	4c da       	bis.b	r10,	r12	;
    a5e4:	4a 4c       	mov.b	r12,	r10	;
    a5e6:	01 3c       	jmp	$+4      	;abs 0xa5ea
    a5e8:	0a 43       	clr	r10		;
    a5ea:	0c 4a       	mov	r10,	r12	;
    a5ec:	01 3c       	jmp	$+4      	;abs 0xa5f0
    a5ee:	0c 43       	clr	r12		;
    a5f0:	64 17       	popm	#7,	r10	;16-bit words
    a5f2:	30 41       	ret			

0000a5f4 <CdcIsReceiveInProgress>:
    a5f4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a5f8:	0d 4c       	mov	r12,	r13	;
    a5fa:	43 18 0d 5d 	rpt #4 { rlax.w	r13		;
    a5fe:	3d 50 2a 25 	add	#9514,	r13	;#0x252a
    a602:	0c 43       	clr	r12		;
    a604:	2c 8d       	sub	@r13,	r12	;
    a606:	2c dd       	bis	@r13,	r12	;
    a608:	5c 03       	rrum	#1,	r12	;
    a60a:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;
    a60e:	30 41       	ret			

0000a610 <USBCDC_abortReceive>:
    a610:	1a 15       	pushm	#2,	r10	;16-bit words
    a612:	09 4c       	mov	r12,	r9	;
    a614:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a618:	0a 4d       	mov	r13,	r10	;
    a61a:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    a61e:	0c 4a       	mov	r10,	r12	;
    a620:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a624:	5c 4c 02 00 	mov.b	2(r12),	r12	;
    a628:	b0 12 30 9c 	call	#39984		;#0x9c30
    a62c:	89 43 00 00 	mov	#0,	0(r9)	;r3 As==00
    a630:	0d 4a       	mov	r10,	r13	;
    a632:	3d 50 2a 25 	add	#9514,	r13	;#0x252a
    a636:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    a63a:	0e 24       	jz	$+30     	;abs 0xa658
    a63c:	0e 4d       	mov	r13,	r14	;
    a63e:	3e 50 06 00 	add	#6,	r14	;
    a642:	1f 4d 04 00 	mov	4(r13),	r15	;
    a646:	2f 8e       	sub	@r14,	r15	;
    a648:	89 4f 00 00 	mov	r15,	0(r9)	;
    a64c:	cd 43 0e 00 	mov.b	#0,	14(r13)	;r3 As==00, 0x000e
    a650:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    a654:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    a658:	b0 12 4a 9c 	call	#40010		;#0x9c4a
    a65c:	4c 43       	clr.b	r12		;
    a65e:	19 17       	popm	#2,	r10	;16-bit words
    a660:	30 41       	ret			

0000a662 <USBCDC_rejectData>:
    a662:	3a 15       	pushm	#4,	r10	;16-bit words
    a664:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a668:	09 4c       	mov	r12,	r9	;
    a66a:	43 18 09 59 	rpt #4 { rlax.w	r9		;
    a66e:	0c 49       	mov	r9,	r12	;
    a670:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a674:	5a 4c 02 00 	mov.b	2(r12),	r10	;
    a678:	4c 4a       	mov.b	r10,	r12	;
    a67a:	b0 12 30 9c 	call	#39984		;#0x9c30
    a67e:	0b 4c       	mov	r12,	r11	;
    a680:	58 42 22 25 	mov.b	&0x2522,r8	;0x2522
    a684:	3e 40 4a 9c 	mov	#40010,	r14	;#0x9c4a
    a688:	08 93       	cmp	#0,	r8	;r3 As==00
    a68a:	03 24       	jz	$+8      	;abs 0xa692
    a68c:	8e 12       	call	r14		;
    a68e:	38 42       	mov	#8,	r8	;r2 As==11
    a690:	25 3c       	jmp	$+76     	;abs 0xa6dc
    a692:	0d 49       	mov	r9,	r13	;
    a694:	3d 50 2a 25 	add	#9514,	r13	;#0x252a
    a698:	8d 93 00 00 	cmp	#0,	0(r13)	;r3 As==00
    a69c:	1d 20       	jnz	$+60     	;abs 0xa6d8
    a69e:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a6a2:	0f 4a       	mov	r10,	r15	;
    a6a4:	3f 50 88 23 	add	#9096,	r15	;#0x2388
    a6a8:	57 4f 02 00 	mov.b	2(r15),	r7	;
    a6ac:	77 f0 80 ff 	and.b	#65408,	r7	;#0xff80
    a6b0:	5c 4f 06 00 	mov.b	6(r15),	r12	;
    a6b4:	7c f0 80 ff 	and.b	#65408,	r12	;#0xff80
    a6b8:	47 9c       	cmp.b	r12,	r7	;
    a6ba:	06 24       	jz	$+14     	;abs 0xa6c8
    a6bc:	5c 4d 0f 00 	mov.b	15(r13),r12	;0x0000f
    a6c0:	5c 53       	inc.b	r12		;
    a6c2:	5c f3       	and.b	#1,	r12	;r3 As==01
    a6c4:	cd 4c 0f 00 	mov.b	r12,	15(r13)	; 0x000f
    a6c8:	3a 50 88 23 	add	#9096,	r10	;#0x2388
    a6cc:	ca 43 02 00 	mov.b	#0,	2(r10)	;r3 As==00
    a6d0:	ca 43 06 00 	mov.b	#0,	6(r10)	;r3 As==00
    a6d4:	c9 43 38 25 	mov.b	#0,	9528(r9);r3 As==00, 0x2538
    a6d8:	0c 4b       	mov	r11,	r12	;
    a6da:	8e 12       	call	r14		;
    a6dc:	4c 48       	mov.b	r8,	r12	;
    a6de:	37 17       	popm	#4,	r10	;16-bit words
    a6e0:	30 41       	ret			

0000a6e2 <USBCDC_getInterfaceStatus>:
    a6e2:	6a 15       	pushm	#7,	r10	;16-bit words
    a6e4:	4a 4c       	mov.b	r12,	r10	;
    a6e6:	04 4d       	mov	r13,	r4	;
    a6e8:	05 4e       	mov	r14,	r5	;
    a6ea:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00
    a6ee:	8e 43 00 00 	mov	#0,	0(r14)	;r3 As==00
    a6f2:	06 4a       	mov	r10,	r6	;
    a6f4:	43 18 06 56 	rpt #4 { rlax.w	r6		;
    a6f8:	0c 46       	mov	r6,	r12	;
    a6fa:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a6fe:	57 4c 02 00 	mov.b	2(r12),	r7	;
    a702:	4c 47       	mov.b	r7,	r12	;
    a704:	b0 12 10 9c 	call	#39952		;#0x9c10
    a708:	08 4c       	mov	r12,	r8	;
    a70a:	4c 47       	mov.b	r7,	r12	;
    a70c:	b0 12 30 9c 	call	#39984		;#0x9c30
    a710:	09 4c       	mov	r12,	r9	;
    a712:	0c 4a       	mov	r10,	r12	;
    a714:	0c 5a       	add	r10,	r12	;
    a716:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a71a:	0c 5a       	add	r10,	r12	;
    a71c:	3c 50 3a 25 	add	#9530,	r12	;#0x253a
    a720:	1a 4c 02 00 	mov	2(r12),	r10	;
    a724:	0a 93       	cmp	#0,	r10	;r3 As==00
    a726:	05 24       	jz	$+12     	;abs 0xa732
    a728:	2c 4c       	mov	@r12,	r12	;
    a72a:	0c 8a       	sub	r10,	r12	;
    a72c:	84 4c 00 00 	mov	r12,	0(r4)	;
    a730:	1a 43       	mov	#1,	r10	;r3 As==01
    a732:	36 50 2a 25 	add	#9514,	r6	;#0x252a
    a736:	86 93 00 00 	cmp	#0,	0(r6)	;r3 As==00
    a73a:	0a 24       	jz	$+22     	;abs 0xa750
    a73c:	6a d3       	bis.b	#2,	r10	;r3 As==10
    a73e:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a742:	1c 46 04 00 	mov	4(r6),	r12	;
    a746:	1c 86 06 00 	sub	6(r6),	r12	;
    a74a:	85 4c 00 00 	mov	r12,	0(r5)	;
    a74e:	10 3c       	jmp	$+34     	;abs 0xa770
    a750:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    a754:	13 20       	jnz	$+40     	;abs 0xa77c
    a756:	42 18 07 57 	rpt #3 { rlax.w	r7		;
    a75a:	37 50 88 23 	add	#9096,	r7	;#0x2388
    a75e:	5c 47 06 00 	mov.b	6(r7),	r12	;
    a762:	5c d7 02 00 	bis.b	2(r7),	r12	;
    a766:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a768:	03 34       	jge	$+8      	;abs 0xa770
    a76a:	6a d2       	bis.b	#4,	r10	;r2 As==10
    a76c:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a770:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    a774:	03 20       	jnz	$+8      	;abs 0xa77c
    a776:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    a77a:	01 24       	jz	$+4      	;abs 0xa77e
    a77c:	3a 42       	mov	#8,	r10	;r2 As==11
    a77e:	0c 48       	mov	r8,	r12	;
    a780:	b0 12 2a 9c 	call	#39978		;#0x9c2a
    a784:	0c 49       	mov	r9,	r12	;
    a786:	b0 12 4a 9c 	call	#40010		;#0x9c4a
    a78a:	03 43       	nop			
    a78c:	4c 4a       	mov.b	r10,	r12	;
    a78e:	64 17       	popm	#7,	r10	;16-bit words
    a790:	30 41       	ret			

0000a792 <USBCDC_getBytesInUSBBuffer>:
    a792:	1a 15       	pushm	#2,	r10	;16-bit words
    a794:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a798:	0a 4c       	mov	r12,	r10	;
    a79a:	43 18 0a 5a 	rpt #4 { rlax.w	r10		;
    a79e:	0c 4a       	mov	r10,	r12	;
    a7a0:	3c 50 20 81 	add	#33056,	r12	;#0x8120
    a7a4:	59 4c 02 00 	mov.b	2(r12),	r9	;
    a7a8:	4c 49       	mov.b	r9,	r12	;
    a7aa:	b0 12 30 9c 	call	#39984		;#0x9c30
    a7ae:	3e 40 4a 9c 	mov	#40010,	r14	;#0x9c4a
    a7b2:	c2 93 22 25 	cmp.b	#0,	&0x2522	;r3 As==00
    a7b6:	03 20       	jnz	$+8      	;abs 0xa7be
    a7b8:	d2 93 21 25 	cmp.b	#1,	&0x2521	;r3 As==01
    a7bc:	03 24       	jz	$+8      	;abs 0xa7c4
    a7be:	8e 12       	call	r14		;
    a7c0:	0c 43       	clr	r12		;
    a7c2:	24 3c       	jmp	$+74     	;abs 0xa80c
    a7c4:	0d 4a       	mov	r10,	r13	;
    a7c6:	3d 50 2a 25 	add	#9514,	r13	;#0x252a
    a7ca:	5a 4d 0e 00 	mov.b	14(r13),r10	;0x0000e
    a7ce:	0a 93       	cmp	#0,	r10	;r3 As==00
    a7d0:	04 24       	jz	$+10     	;abs 0xa7da
    a7d2:	1d 4d 0a 00 	mov	10(r13),r13	;0x0000a
    a7d6:	6d 4d       	mov.b	@r13,	r13	;
    a7d8:	10 3c       	jmp	$+34     	;abs 0xa7fa
    a7da:	42 18 09 59 	rpt #3 { rlax.w	r9		;
    a7de:	0d 49       	mov	r9,	r13	;
    a7e0:	3d 50 88 23 	add	#9096,	r13	;#0x2388
    a7e4:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    a7e8:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    a7ea:	03 34       	jge	$+8      	;abs 0xa7f2
    a7ec:	0a 4d       	mov	r13,	r10	;
    a7ee:	3a f0 7f 00 	and	#127,	r10	;#0x007f
    a7f2:	39 50 88 23 	add	#9096,	r9	;#0x2388
    a7f6:	5d 49 06 00 	mov.b	6(r9),	r13	;
    a7fa:	4d 93       	cmp.b	#0,	r13	;r3 As==00
    a7fc:	05 34       	jge	$+12     	;abs 0xa808
    a7fe:	7d f0 7f 00 	and.b	#127,	r13	;#0x007f
    a802:	4a 5d       	add.b	r13,	r10	;
    a804:	3a f0 ff 00 	and	#255,	r10	;#0x00ff
    a808:	8e 12       	call	r14		;
    a80a:	0c 4a       	mov	r10,	r12	;
    a80c:	19 17       	popm	#2,	r10	;16-bit words
    a80e:	30 41       	ret			

0000a810 <usbGetLineCoding>:
    a810:	1a 15       	pushm	#2,	r10	;16-bit words
    a812:	1d 42 84 23 	mov	&0x2384,r13	;0x2384
    a816:	1d b3       	bit	#1,	r13	;r3 As==01
    a818:	01 24       	jz	$+4      	;abs 0xa81c
    a81a:	3d 53       	add	#-1,	r13	;r3 As==11
    a81c:	12 c3       	clrc			
    a81e:	0d 10       	rrc	r13		;
    a820:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a824:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    a828:	3d 50 44 25 	add	#9540,	r13	;#0x2544
    a82c:	0c 4d       	mov	r13,	r12	;
    a82e:	2c 52       	add	#4,	r12	;r2 As==10
    a830:	e2 4c 5a 25 	mov.b	@r12,	&0x255a	;
    a834:	d2 4d 06 00 	mov.b	6(r13),	&0x2559	;
    a838:	59 25 
    a83a:	d2 4c 01 00 	mov.b	1(r12),	&0x2558	;
    a83e:	58 25 
    a840:	2a 4d       	mov	@r13,	r10	;
    a842:	19 4d 02 00 	mov	2(r13),	r9	;
    a846:	0c 4a       	mov	r10,	r12	;
    a848:	0d 49       	mov	r9,	r13	;
    a84a:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    a84e:	b0 12 ee ae 	call	#44782		;#0xaeee
    a852:	c2 4c 57 25 	mov.b	r12,	&0x2557	;
    a856:	0c 4a       	mov	r10,	r12	;
    a858:	0d 49       	mov	r9,	r13	;
    a85a:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    a85e:	b0 12 ee ae 	call	#44782		;#0xaeee
    a862:	c2 4c 56 25 	mov.b	r12,	&0x2556	;
    a866:	0c 4a       	mov	r10,	r12	;
    a868:	0d 49       	mov	r9,	r13	;
    a86a:	b0 12 b4 ae 	call	#44724		;#0xaeb4
    a86e:	c2 4c 55 25 	mov.b	r12,	&0x2555	;
    a872:	c2 4a 54 25 	mov.b	r10,	&0x2554	;
    a876:	b2 40 07 00 	mov	#7,	&0x2580	;
    a87a:	80 25 
    a87c:	3c 40 54 25 	mov	#9556,	r12	;#0x2554
    a880:	b0 12 6e 98 	call	#39022		;#0x986e
    a884:	4c 43       	clr.b	r12		;
    a886:	19 17       	popm	#2,	r10	;16-bit words
    a888:	30 41       	ret			

0000a88a <usbSetLineCoding>:
    a88a:	3c 40 4c 25 	mov	#9548,	r12	;#0x254c
    a88e:	b0 12 de 98 	call	#39134		;#0x98de
    a892:	4c 43       	clr.b	r12		;
    a894:	30 41       	ret			

0000a896 <usbSetControlLineState>:
    a896:	3d 40 80 23 	mov	#9088,	r13	;#0x2380
    a89a:	5c 4d 04 00 	mov.b	4(r13),	r12	;
    a89e:	5d 4d 02 00 	mov.b	2(r13),	r13	;
    a8a2:	b0 12 74 a9 	call	#43380		;#0xa974
    a8a6:	b0 12 f2 98 	call	#39154		;#0x98f2
    a8aa:	4c 43       	clr.b	r12		;
    a8ac:	30 41       	ret			

0000a8ae <Handler_SetLineCoding>:
    a8ae:	3a 15       	pushm	#4,	r10	;16-bit words
    a8b0:	21 83       	decd	r1		;
    a8b2:	19 42 84 23 	mov	&0x2384,r9	;0x2384
    a8b6:	0c 49       	mov	r9,	r12	;
    a8b8:	19 b3       	bit	#1,	r9	;r3 As==01
    a8ba:	01 24       	jz	$+4      	;abs 0xa8be
    a8bc:	3c 53       	add	#-1,	r12	;r3 As==11
    a8be:	12 c3       	clrc			
    a8c0:	0c 10       	rrc	r12		;
    a8c2:	c1 4c 01 00 	mov.b	r12,	1(r1)	;
    a8c6:	5a 41 01 00 	mov.b	1(r1),	r10	;
    a8ca:	42 18 0a 5a 	rpt #3 { rlax.w	r10		;
    a8ce:	3a 50 44 25 	add	#9540,	r10	;#0x2544
    a8d2:	5c 42 4f 25 	mov.b	&0x254f,r12	;0x254f
    a8d6:	0d 43       	clr	r13		;
    a8d8:	3e 40 18 00 	mov	#24,	r14	;#0x0018
    a8dc:	b0 12 3a ae 	call	#44602		;#0xae3a
    a8e0:	07 4c       	mov	r12,	r7	;
    a8e2:	08 4d       	mov	r13,	r8	;
    a8e4:	5c 42 4e 25 	mov.b	&0x254e,r12	;0x254e
    a8e8:	0d 43       	clr	r13		;
    a8ea:	3e 40 10 00 	mov	#16,	r14	;#0x0010
    a8ee:	b0 12 3a ae 	call	#44602		;#0xae3a
    a8f2:	0c d7       	bis	r7,	r12	;
    a8f4:	08 dd       	bis	r13,	r8	;
    a8f6:	5d 42 4c 25 	mov.b	&0x254c,r13	;0x254c
    a8fa:	07 4c       	mov	r12,	r7	;
    a8fc:	07 dd       	bis	r13,	r7	;
    a8fe:	5c 42 4d 25 	mov.b	&0x254d,r12	;0x254d
    a902:	0d 43       	clr	r13		;
    a904:	b0 12 12 ae 	call	#44562		;#0xae12
    a908:	07 dc       	bis	r12,	r7	;
    a90a:	8a 47 00 00 	mov	r7,	0(r10)	;
    a90e:	08 dd       	bis	r13,	r8	;
    a910:	8a 48 02 00 	mov	r8,	2(r10)	;
    a914:	5d 41 01 00 	mov.b	1(r1),	r13	;
    a918:	42 18 0d 5d 	rpt #3 { rlax.w	r13		;
    a91c:	4c 49       	mov.b	r9,	r12	;
    a91e:	1e 4d 46 25 	mov	9542(r13),r14	;0x02546
    a922:	1d 4d 44 25 	mov	9540(r13),r13	;0x02544
    a926:	b0 12 70 a9 	call	#43376		;#0xa970
    a92a:	21 53       	incd	r1		;
    a92c:	37 17       	popm	#4,	r10	;16-bit words
    a92e:	30 41       	ret			

0000a930 <USB_handleClockEvent>:
    a930:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a932:	30 41       	ret			

0000a934 <USB_handleVbusOnEvent>:
    a934:	b0 12 9e 9d 	call	#40350		;#0x9d9e
    a938:	4c 93       	cmp.b	#0,	r12	;r3 As==00
    a93a:	04 20       	jnz	$+10     	;abs 0xa944
    a93c:	b0 12 56 95 	call	#38230		;#0x9556
    a940:	b0 12 8e 96 	call	#38542		;#0x968e
    a944:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a946:	30 41       	ret			

0000a948 <USB_handleVbusOffEvent>:
    a948:	b0 12 b0 8c 	call	#36016		;#0x8cb0
    a94c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a94e:	30 41       	ret			

0000a950 <USB_handleResetEvent>:
    a950:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a952:	30 41       	ret			

0000a954 <USB_handleSuspendEvent>:
    a954:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a956:	30 41       	ret			

0000a958 <USB_handleResumeEvent>:
    a958:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a95a:	30 41       	ret			

0000a95c <USB_handleEnumerationCompleteEvent>:
    a95c:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a95e:	30 41       	ret			

0000a960 <USBCDC_handleDataReceived>:
    a960:	d2 43 16 25 	mov.b	#1,	&0x2516	;r3 As==01
    a964:	5c 43       	mov.b	#1,	r12	;r3 As==01
    a966:	30 41       	ret			

0000a968 <USBCDC_handleSendCompleted>:
    a968:	4c 43       	clr.b	r12		;
    a96a:	30 41       	ret			

0000a96c <USBCDC_handleReceiveCompleted>:
    a96c:	4c 43       	clr.b	r12		;
    a96e:	30 41       	ret			

0000a970 <USBCDC_handleSetLineCoding>:
    a970:	4c 43       	clr.b	r12		;
    a972:	30 41       	ret			

0000a974 <USBCDC_handleSetControlLineState>:
    a974:	4c 43       	clr.b	r12		;
    a976:	30 41       	ret			

0000a978 <TLV_getInfo>:
    a978:	0a 15       	pushm	#1,	r10	;16-bit words
    a97a:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    a97e:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a982:	3b 40 08 1a 	mov	#6664,	r11	;#0x1a08
    a986:	6a 4b       	mov.b	@r11,	r10	;
    a988:	4a 9c       	cmp.b	r12,	r10	;
    a98a:	1f 20       	jnz	$+64     	;abs 0xa9ca
    a98c:	0d 93       	cmp	#0,	r13	;r3 As==00
    a98e:	0f 20       	jnz	$+32     	;abs 0xa9ae
    a990:	cb 9c 00 00 	cmp.b	r12,	0(r11)	;
    a994:	07 20       	jnz	$+16     	;abs 0xa9a4
    a996:	de 4b 01 00 	mov.b	1(r11),	0(r14)	;
    a99a:	00 00 
    a99c:	2b 53       	incd	r11		;
    a99e:	8f 4b 00 00 	mov	r11,	0(r15)	;
    a9a2:	16 3c       	jmp	$+46     	;abs 0xa9d0
    a9a4:	ce 43 00 00 	mov.b	#0,	0(r14)	;r3 As==00
    a9a8:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00
    a9ac:	11 3c       	jmp	$+36     	;abs 0xa9d0
    a9ae:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    a9b0:	ef 27       	jz	$-32     	;abs 0xa990
    a9b2:	7d 53       	add.b	#-1,	r13	;r3 As==11
    a9b4:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    a9b8:	5a 4b 01 00 	mov.b	1(r11),	r10	;
    a9bc:	2a 53       	incd	r10		;
    a9be:	0b 5a       	add	r10,	r11	;
    a9c0:	3a 40 fe 1a 	mov	#6910,	r10	;#0x1afe
    a9c4:	0a 9b       	cmp	r11,	r10	;
    a9c6:	df 2f       	jc	$-64     	;abs 0xa986
    a9c8:	e3 3f       	jmp	$-56     	;abs 0xa990
    a9ca:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
    a9cc:	f5 23       	jnz	$-20     	;abs 0xa9b8
    a9ce:	e0 3f       	jmp	$-62     	;abs 0xa990
    a9d0:	0a 17       	popm	#1,	r10	;16-bit words
    a9d2:	30 41       	ret			

0000a9d4 <TLV_getDeviceType>:
    a9d4:	1c 42 04 1a 	mov	&0x1a04,r12	;0x1a04
    a9d8:	30 41       	ret			

0000a9da <TLV_getMemory>:
    a9da:	0a 15       	pushm	#1,	r10	;16-bit words
    a9dc:	21 82       	sub	#4,	r1	;r2 As==10
    a9de:	0c 5c       	rla	r12		;
    a9e0:	4a 4c       	mov.b	r12,	r10	;
    a9e2:	6c 43       	mov.b	#2,	r12	;r3 As==10
    a9e4:	4d 43       	clr.b	r13		;
    a9e6:	0e 41       	mov	r1,	r14	;
    a9e8:	1e 53       	inc	r14		;
    a9ea:	0f 41       	mov	r1,	r15	;
    a9ec:	2f 53       	incd	r15		;
    a9ee:	b0 12 78 a9 	call	#43384		;#0xa978
    a9f2:	1f 41 02 00 	mov	2(r1),	r15	;
    a9f6:	0d 43       	clr	r13		;
    a9f8:	0a 9d       	cmp	r13,	r10	;
    a9fa:	0f 28       	jnc	$+32     	;abs 0xaa1a
    a9fc:	0e 4f       	mov	r15,	r14	;
    a9fe:	0e 5d       	add	r13,	r14	;
    aa00:	6c 4e       	mov.b	@r14,	r12	;
    aa02:	0c 93       	cmp	#0,	r12	;r3 As==00
    aa04:	0b 24       	jz	$+24     	;abs 0xaa1c
    aa06:	0d 9a       	cmp	r10,	r13	;
    aa08:	06 20       	jnz	$+14     	;abs 0xaa16
    aa0a:	5d 4e 01 00 	mov.b	1(r14),	r13	;
    aa0e:	47 18 0d 5d 	rpt #8 { rlax.w	r13		;
    aa12:	0c dd       	bis	r13,	r12	;
    aa14:	03 3c       	jmp	$+8      	;abs 0xaa1c
    aa16:	2d 53       	incd	r13		;
    aa18:	ef 3f       	jmp	$-32     	;abs 0xa9f8
    aa1a:	0c 43       	clr	r12		;
    aa1c:	21 52       	add	#4,	r1	;r2 As==10
    aa1e:	0a 17       	popm	#1,	r10	;16-bit words
    aa20:	30 41       	ret			

0000aa22 <TLV_getPeripheral>:
    aa22:	3a 15       	pushm	#4,	r10	;16-bit words
    aa24:	21 82       	sub	#4,	r1	;r2 As==10
    aa26:	48 4c       	mov.b	r12,	r8	;
    aa28:	49 4d       	mov.b	r13,	r9	;
    aa2a:	6c 43       	mov.b	#2,	r12	;r3 As==10
    aa2c:	4d 43       	clr.b	r13		;
    aa2e:	0e 41       	mov	r1,	r14	;
    aa30:	1e 53       	inc	r14		;
    aa32:	0f 41       	mov	r1,	r15	;
    aa34:	2f 53       	incd	r15		;
    aa36:	b0 12 78 a9 	call	#43384		;#0xa978
    aa3a:	0a 43       	clr	r10		;
    aa3c:	37 40 da a9 	mov	#43482,	r7	;#0xa9da
    aa40:	4c 4a       	mov.b	r10,	r12	;
    aa42:	87 12       	call	r7		;
    aa44:	0c 93       	cmp	#0,	r12	;r3 As==00
    aa46:	02 24       	jz	$+6      	;abs 0xaa4c
    aa48:	1a 53       	inc	r10		;
    aa4a:	fa 3f       	jmp	$-10     	;abs 0xaa40
    aa4c:	1e 41 02 00 	mov	2(r1),	r14	;
    aa50:	0a 5a       	rla	r10		;
    aa52:	0d 4e       	mov	r14,	r13	;
    aa54:	0d 5a       	add	r10,	r13	;
    aa56:	5d 4d 01 00 	mov.b	1(r13),	r13	;
    aa5a:	2a 53       	incd	r10		;
    aa5c:	0a 5e       	add	r14,	r10	;
    aa5e:	81 4a 02 00 	mov	r10,	2(r1)	;
    aa62:	0e 4d       	mov	r13,	r14	;
    aa64:	0e 5d       	add	r13,	r14	;
    aa66:	0f 4a       	mov	r10,	r15	;
    aa68:	1f 53       	inc	r15		;
    aa6a:	0d 4c       	mov	r12,	r13	;
    aa6c:	cf 98 00 00 	cmp.b	r8,	0(r15)	;
    aa70:	0c 20       	jnz	$+26     	;abs 0xaa8a
    aa72:	09 93       	cmp	#0,	r9	;r3 As==00
    aa74:	04 24       	jz	$+10     	;abs 0xaa7e
    aa76:	79 53       	add.b	#-1,	r9	;r3 As==11
    aa78:	39 f0 ff 00 	and	#255,	r9	;#0x00ff
    aa7c:	06 3c       	jmp	$+14     	;abs 0xaa8a
    aa7e:	0a 5d       	add	r13,	r10	;
    aa80:	6c 4a       	mov.b	@r10,	r12	;
    aa82:	47 18 08 58 	rpt #8 { rlax.w	r8		;
    aa86:	0c d8       	bis	r8,	r12	;
    aa88:	04 3c       	jmp	$+10     	;abs 0xaa92
    aa8a:	2d 53       	incd	r13		;
    aa8c:	2f 53       	incd	r15		;
    aa8e:	0e 9d       	cmp	r13,	r14	;
    aa90:	ed 2f       	jc	$-36     	;abs 0xaa6c
    aa92:	21 52       	add	#4,	r1	;r2 As==10
    aa94:	37 17       	popm	#4,	r10	;16-bit words
    aa96:	30 41       	ret			

0000aa98 <TLV_getInterrupt>:
    aa98:	2a 15       	pushm	#3,	r10	;16-bit words
    aa9a:	21 82       	sub	#4,	r1	;r2 As==10
    aa9c:	49 4c       	mov.b	r12,	r9	;
    aa9e:	6c 43       	mov.b	#2,	r12	;r3 As==10
    aaa0:	4d 43       	clr.b	r13		;
    aaa2:	0e 41       	mov	r1,	r14	;
    aaa4:	1e 53       	inc	r14		;
    aaa6:	0f 41       	mov	r1,	r15	;
    aaa8:	2f 53       	incd	r15		;
    aaaa:	b0 12 78 a9 	call	#43384		;#0xa978
    aaae:	0a 43       	clr	r10		;
    aab0:	38 40 da a9 	mov	#43482,	r8	;#0xa9da
    aab4:	4c 4a       	mov.b	r10,	r12	;
    aab6:	88 12       	call	r8		;
    aab8:	0f 4a       	mov	r10,	r15	;
    aaba:	1f 53       	inc	r15		;
    aabc:	0c 93       	cmp	#0,	r12	;r3 As==00
    aabe:	02 24       	jz	$+6      	;abs 0xaac4
    aac0:	0a 4f       	mov	r15,	r10	;
    aac2:	f8 3f       	jmp	$-14     	;abs 0xaab4
    aac4:	1d 41 02 00 	mov	2(r1),	r13	;
    aac8:	0a 5a       	rla	r10		;
    aaca:	0a 5d       	add	r13,	r10	;
    aacc:	5e 4a 01 00 	mov.b	1(r10),	r14	;
    aad0:	0e 5f       	add	r15,	r14	;
    aad2:	0e 5e       	rla	r14		;
    aad4:	0d 5e       	add	r14,	r13	;
    aad6:	81 4d 02 00 	mov	r13,	2(r1)	;
    aada:	0e 4c       	mov	r12,	r14	;
    aadc:	09 9e       	cmp	r14,	r9	;
    aade:	09 28       	jnc	$+20     	;abs 0xaaf2
    aae0:	0c 4d       	mov	r13,	r12	;
    aae2:	0c 5e       	add	r14,	r12	;
    aae4:	6c 4c       	mov.b	@r12,	r12	;
    aae6:	0c 93       	cmp	#0,	r12	;r3 As==00
    aae8:	05 24       	jz	$+12     	;abs 0xaaf4
    aaea:	0e 99       	cmp	r9,	r14	;
    aaec:	03 24       	jz	$+8      	;abs 0xaaf4
    aaee:	2e 53       	incd	r14		;
    aaf0:	f5 3f       	jmp	$-20     	;abs 0xaadc
    aaf2:	0c 43       	clr	r12		;
    aaf4:	21 52       	add	#4,	r1	;r2 As==10
    aaf6:	28 17       	popm	#3,	r10	;16-bit words
    aaf8:	30 41       	ret			

0000aafa <DMA_init>:
    aafa:	6f 4c       	mov.b	@r12,	r15	;
    aafc:	0e 4f       	mov	r15,	r14	;
    aafe:	5e 0f       	rrum	#4,	r14	;
    ab00:	5b 4c 07 00 	mov.b	7(r12),	r11	;
    ab04:	5d 4c 08 00 	mov.b	8(r12),	r13	;
    ab08:	0d 5b       	add	r11,	r13	;
    ab0a:	1d 5c 02 00 	add	2(r12),	r13	;
    ab0e:	8f 4d 10 05 	mov	r13,	1296(r15); 0x0510
    ab12:	6d 4c       	mov.b	@r12,	r13	;
    ab14:	9d 4c 04 00 	mov	4(r12),	1306(r13); 0x051a
    ab18:	1a 05 
    ab1a:	4d 4e       	mov.b	r14,	r13	;
    ab1c:	7d f0 0e 00 	and.b	#14,	r13	;#0x000e
    ab20:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    ab24:	3d 50 00 05 	add	#1280,	r13	;#0x0500
    ab28:	1e b3       	bit	#1,	r14	;r3 As==01
    ab2a:	08 24       	jz	$+18     	;abs 0xab3c
    ab2c:	bd f0 ff 00 	and	#255,	0(r13)	;#0x00ff
    ab30:	00 00 
    ab32:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    ab36:	47 18 0c 5c 	rpt #8 { rlax.w	r12		;
    ab3a:	05 3c       	jmp	$+12     	;abs 0xab46
    ab3c:	bd f0 00 ff 	and	#65280,	0(r13)	;#0xff00
    ab40:	00 00 
    ab42:	5c 4c 06 00 	mov.b	6(r12),	r12	;
    ab46:	8d dc 00 00 	bis	r12,	0(r13)	;
    ab4a:	30 41       	ret			

0000ab4c <DMA_setTransferSize>:
    ab4c:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ab50:	8c 4d 1a 05 	mov	r13,	1306(r12); 0x051a
    ab54:	30 41       	ret			

0000ab56 <DMA_getTransferSize>:
    ab56:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ab5a:	1c 4c 1a 05 	mov	1306(r12),r12	;0x0051a
    ab5e:	30 41       	ret			

0000ab60 <DMA_setSrcAddress>:
    ab60:	21 82       	sub	#4,	r1	;r2 As==10
    ab62:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ab66:	81 4d 00 00 	mov	r13,	0(r1)	;
    ab6a:	81 4e 02 00 	mov	r14,	2(r1)	;
    ab6e:	0d 4c       	mov	r12,	r13	;
    ab70:	3d 50 12 05 	add	#1298,	r13	;#0x0512
    ab74:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    ab78:	00 00 
    ab7a:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    ab7e:	bc f0 ff fc 	and	#64767,	0(r12)	;#0xfcff
    ab82:	00 00 
    ab84:	8c df 00 00 	bis	r15,	0(r12)	;
    ab88:	21 52       	add	#4,	r1	;r2 As==10
    ab8a:	30 41       	ret			

0000ab8c <DMA_setDstAddress>:
    ab8c:	21 82       	sub	#4,	r1	;r2 As==10
    ab8e:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ab92:	81 4d 00 00 	mov	r13,	0(r1)	;
    ab96:	81 4e 02 00 	mov	r14,	2(r1)	;
    ab9a:	0d 4c       	mov	r12,	r13	;
    ab9c:	3d 50 16 05 	add	#1302,	r13	;#0x0516
    aba0:	00 18 ed 41 	movx.a	@r1,	0(r13)	;
    aba4:	00 00 
    aba6:	3c 50 10 05 	add	#1296,	r12	;#0x0510
    abaa:	bc f0 ff f3 	and	#62463,	0(r12)	;#0xf3ff
    abae:	00 00 
    abb0:	41 18 0f 5f 	rpt #2 { rlax.w	r15		;
    abb4:	8c df 00 00 	bis	r15,	0(r12)	;
    abb8:	21 52       	add	#4,	r1	;r2 As==10
    abba:	30 41       	ret			

0000abbc <DMA_enableTransfers>:
    abbc:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abc0:	bc d0 10 00 	bis	#16,	1296(r12);#0x0010, 0x0510
    abc4:	10 05 
    abc6:	30 41       	ret			

0000abc8 <DMA_disableTransfers>:
    abc8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abcc:	bc f0 ef ff 	and	#65519,	1296(r12);#0xffef, 0x0510
    abd0:	10 05 
    abd2:	30 41       	ret			

0000abd4 <DMA_startTransfer>:
    abd4:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abd8:	9c d3 10 05 	bis	#1,	1296(r12);r3 As==01, 0x0510
    abdc:	30 41       	ret			

0000abde <DMA_enableInterrupt>:
    abde:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abe2:	ac d2 10 05 	bis	#4,	1296(r12);r2 As==10, 0x0510
    abe6:	30 41       	ret			

0000abe8 <DMA_disableInterrupt>:
    abe8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abec:	ac c2 10 05 	bic	#4,	1296(r12);r2 As==10, 0x0510
    abf0:	30 41       	ret			

0000abf2 <DMA_getInterruptStatus>:
    abf2:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    abf6:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    abfa:	3c f2       	and	#8,	r12	;r2 As==11
    abfc:	30 41       	ret			

0000abfe <DMA_clearInterrupt>:
    abfe:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ac02:	bc c2 10 05 	bic	#8,	1296(r12);r2 As==11, 0x0510
    ac06:	30 41       	ret			

0000ac08 <DMA_getNMIAbortStatus>:
    ac08:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ac0c:	1c 4c 10 05 	mov	1296(r12),r12	;0x00510
    ac10:	2c f3       	and	#2,	r12	;r3 As==10
    ac12:	30 41       	ret			

0000ac14 <DMA_clearNMIAbort>:
    ac14:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
    ac18:	ac c3 10 05 	bic	#2,	1296(r12);r3 As==10, 0x0510
    ac1c:	30 41       	ret			

0000ac1e <DMA_disableTransferDuringReadModifyWrite>:
    ac1e:	a2 d2 08 05 	bis	#4,	&0x0508	;r2 As==10
    ac22:	30 41       	ret			

0000ac24 <DMA_enableTransferDuringReadModifyWrite>:
    ac24:	a2 c2 08 05 	bic	#4,	&0x0508	;r2 As==10
    ac28:	30 41       	ret			

0000ac2a <DMA_enableRoundRobinPriority>:
    ac2a:	a2 d3 08 05 	bis	#2,	&0x0508	;r3 As==10
    ac2e:	30 41       	ret			

0000ac30 <DMA_disableRoundRobinPriority>:
    ac30:	a2 c3 08 05 	bic	#2,	&0x0508	;r3 As==10
    ac34:	30 41       	ret			

0000ac36 <DMA_enableNMIAbort>:
    ac36:	92 d3 08 05 	bis	#1,	&0x0508	;r3 As==01
    ac3a:	30 41       	ret			

0000ac3c <DMA_disableNMIAbort>:
    ac3c:	92 c3 08 05 	bic	#1,	&0x0508	;r3 As==01
    ac40:	30 41       	ret			

0000ac42 <udivmodhi4>:
    ac42:	3b 40 11 00 	mov	#17,	r11	;#0x0011
    ac46:	1f 43       	mov	#1,	r15	;r3 As==01
    ac48:	0d 9c       	cmp	r12,	r13	;
    ac4a:	09 2c       	jc	$+20     	;abs 0xac5e
    ac4c:	3b 53       	add	#-1,	r11	;r3 As==11
    ac4e:	0b 93       	cmp	#0,	r11	;r3 As==00
    ac50:	05 24       	jz	$+12     	;abs 0xac5c
    ac52:	0d 93       	cmp	#0,	r13	;r3 As==00
    ac54:	04 38       	jl	$+10     	;abs 0xac5e
    ac56:	0d 5d       	rla	r13		;
    ac58:	0f 5f       	rla	r15		;
    ac5a:	f6 3f       	jmp	$-18     	;abs 0xac48
    ac5c:	0f 4b       	mov	r11,	r15	;
    ac5e:	0b 43       	clr	r11		;
    ac60:	0f 93       	cmp	#0,	r15	;r3 As==00
    ac62:	09 24       	jz	$+20     	;abs 0xac76
    ac64:	0c 9d       	cmp	r13,	r12	;
    ac66:	02 28       	jnc	$+6      	;abs 0xac6c
    ac68:	0c 8d       	sub	r13,	r12	;
    ac6a:	0b df       	bis	r15,	r11	;
    ac6c:	12 c3       	clrc			
    ac6e:	0f 10       	rrc	r15		;
    ac70:	12 c3       	clrc			
    ac72:	0d 10       	rrc	r13		;
    ac74:	f5 3f       	jmp	$-20     	;abs 0xac60
    ac76:	0e 93       	cmp	#0,	r14	;r3 As==00
    ac78:	01 20       	jnz	$+4      	;abs 0xac7c
    ac7a:	0c 4b       	mov	r11,	r12	;
    ac7c:	30 41       	ret			

0000ac7e <__mspabi_divi>:
    ac7e:	0a 15       	pushm	#1,	r10	;16-bit words
    ac80:	0e 4c       	mov	r12,	r14	;
    ac82:	0f 4d       	mov	r13,	r15	;
    ac84:	3b 40 42 ac 	mov	#44098,	r11	;#0xac42
    ac88:	0c 93       	cmp	#0,	r12	;r3 As==00
    ac8a:	07 34       	jge	$+16     	;abs 0xac9a
    ac8c:	0c 43       	clr	r12		;
    ac8e:	0c 8e       	sub	r14,	r12	;
    ac90:	0e 4c       	mov	r12,	r14	;
    ac92:	0d 93       	cmp	#0,	r13	;r3 As==00
    ac94:	10 34       	jge	$+34     	;abs 0xacb6
    ac96:	1a 43       	mov	#1,	r10	;r3 As==01
    ac98:	03 3c       	jmp	$+8      	;abs 0xaca0
    ac9a:	0d 93       	cmp	#0,	r13	;r3 As==00
    ac9c:	0f 34       	jge	$+32     	;abs 0xacbc
    ac9e:	0a 43       	clr	r10		;
    aca0:	0d 43       	clr	r13		;
    aca2:	0d 8f       	sub	r15,	r13	;
    aca4:	0c 4e       	mov	r14,	r12	;
    aca6:	0e 43       	clr	r14		;
    aca8:	8b 12       	call	r11		;
    acaa:	1a 93       	cmp	#1,	r10	;r3 As==01
    acac:	09 24       	jz	$+20     	;abs 0xacc0
    acae:	0d 43       	clr	r13		;
    acb0:	0d 8c       	sub	r12,	r13	;
    acb2:	0c 4d       	mov	r13,	r12	;
    acb4:	05 3c       	jmp	$+12     	;abs 0xacc0
    acb6:	0e 43       	clr	r14		;
    acb8:	8b 12       	call	r11		;
    acba:	f9 3f       	jmp	$-12     	;abs 0xacae
    acbc:	0e 43       	clr	r14		;
    acbe:	8b 12       	call	r11		;
    acc0:	0a 17       	popm	#1,	r10	;16-bit words
    acc2:	30 41       	ret			

0000acc4 <__mspabi_divu>:
    acc4:	0e 43       	clr	r14		;
    acc6:	b0 12 42 ac 	call	#44098		;#0xac42
    acca:	30 41       	ret			

0000accc <udivmodsi4>:
    accc:	4a 15       	pushm	#5,	r10	;16-bit words
    acce:	0a 4c       	mov	r12,	r10	;
    acd0:	0b 4d       	mov	r13,	r11	;
    acd2:	3c 40 21 00 	mov	#33,	r12	;#0x0021
    acd6:	18 43       	mov	#1,	r8	;r3 As==01
    acd8:	09 43       	clr	r9		;
    acda:	0f 9b       	cmp	r11,	r15	;
    acdc:	04 28       	jnc	$+10     	;abs 0xace6
    acde:	0d 9f       	cmp	r15,	r13	;
    ace0:	16 20       	jnz	$+46     	;abs 0xad0e
    ace2:	0e 9a       	cmp	r10,	r14	;
    ace4:	14 2c       	jc	$+42     	;abs 0xad0e
    ace6:	3c 53       	add	#-1,	r12	;r3 As==11
    ace8:	0c 93       	cmp	#0,	r12	;r3 As==00
    acea:	0f 24       	jz	$+32     	;abs 0xad0a
    acec:	0f 93       	cmp	#0,	r15	;r3 As==00
    acee:	0f 38       	jl	$+32     	;abs 0xad0e
    acf0:	06 4e       	mov	r14,	r6	;
    acf2:	07 4f       	mov	r15,	r7	;
    acf4:	06 5e       	add	r14,	r6	;
    acf6:	07 6f       	addc	r15,	r7	;
    acf8:	0e 46       	mov	r6,	r14	;
    acfa:	0f 47       	mov	r7,	r15	;
    acfc:	06 48       	mov	r8,	r6	;
    acfe:	07 49       	mov	r9,	r7	;
    ad00:	06 58       	add	r8,	r6	;
    ad02:	07 69       	addc	r9,	r7	;
    ad04:	08 46       	mov	r6,	r8	;
    ad06:	09 47       	mov	r7,	r9	;
    ad08:	e8 3f       	jmp	$-46     	;abs 0xacda
    ad0a:	08 43       	clr	r8		;
    ad0c:	09 43       	clr	r9		;
    ad0e:	0c 43       	clr	r12		;
    ad10:	0d 4c       	mov	r12,	r13	;
    ad12:	07 48       	mov	r8,	r7	;
    ad14:	07 d9       	bis	r9,	r7	;
    ad16:	07 93       	cmp	#0,	r7	;r3 As==00
    ad18:	11 24       	jz	$+36     	;abs 0xad3c
    ad1a:	0b 9f       	cmp	r15,	r11	;
    ad1c:	08 28       	jnc	$+18     	;abs 0xad2e
    ad1e:	0f 9b       	cmp	r11,	r15	;
    ad20:	02 20       	jnz	$+6      	;abs 0xad26
    ad22:	0a 9e       	cmp	r14,	r10	;
    ad24:	04 28       	jnc	$+10     	;abs 0xad2e
    ad26:	0a 8e       	sub	r14,	r10	;
    ad28:	0b 7f       	subc	r15,	r11	;
    ad2a:	0c d8       	bis	r8,	r12	;
    ad2c:	0d d9       	bis	r9,	r13	;
    ad2e:	12 c3       	clrc			
    ad30:	09 10       	rrc	r9		;
    ad32:	08 10       	rrc	r8		;
    ad34:	12 c3       	clrc			
    ad36:	0f 10       	rrc	r15		;
    ad38:	0e 10       	rrc	r14		;
    ad3a:	eb 3f       	jmp	$-40     	;abs 0xad12
    ad3c:	81 93 0c 00 	cmp	#0,	12(r1)	;r3 As==00, 0x000c
    ad40:	02 24       	jz	$+6      	;abs 0xad46
    ad42:	0c 4a       	mov	r10,	r12	;
    ad44:	0d 4b       	mov	r11,	r13	;
    ad46:	46 17       	popm	#5,	r10	;16-bit words
    ad48:	30 41       	ret			

0000ad4a <__mspabi_divli>:
    ad4a:	5a 15       	pushm	#6,	r10	;16-bit words
    ad4c:	21 83       	decd	r1		;
    ad4e:	0a 4c       	mov	r12,	r10	;
    ad50:	0b 4d       	mov	r13,	r11	;
    ad52:	08 4e       	mov	r14,	r8	;
    ad54:	09 4f       	mov	r15,	r9	;
    ad56:	37 40 cc ac 	mov	#44236,	r7	;#0xaccc
    ad5a:	0d 93       	cmp	#0,	r13	;r3 As==00
    ad5c:	0c 34       	jge	$+26     	;abs 0xad76
    ad5e:	0c 43       	clr	r12		;
    ad60:	0d 43       	clr	r13		;
    ad62:	05 4c       	mov	r12,	r5	;
    ad64:	06 4d       	mov	r13,	r6	;
    ad66:	05 8a       	sub	r10,	r5	;
    ad68:	06 7b       	subc	r11,	r6	;
    ad6a:	0a 45       	mov	r5,	r10	;
    ad6c:	0b 46       	mov	r6,	r11	;
    ad6e:	0f 93       	cmp	#0,	r15	;r3 As==00
    ad70:	1a 34       	jge	$+54     	;abs 0xada6
    ad72:	16 43       	mov	#1,	r6	;r3 As==01
    ad74:	04 3c       	jmp	$+10     	;abs 0xad7e
    ad76:	06 4f       	mov	r15,	r6	;
    ad78:	0f 93       	cmp	#0,	r15	;r3 As==00
    ad7a:	1b 34       	jge	$+56     	;abs 0xadb2
    ad7c:	06 43       	clr	r6		;
    ad7e:	0e 43       	clr	r14		;
    ad80:	0f 43       	clr	r15		;
    ad82:	0e 88       	sub	r8,	r14	;
    ad84:	0f 79       	subc	r9,	r15	;
    ad86:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    ad8a:	0c 4a       	mov	r10,	r12	;
    ad8c:	0d 4b       	mov	r11,	r13	;
    ad8e:	87 12       	call	r7		;
    ad90:	16 93       	cmp	#1,	r6	;r3 As==01
    ad92:	12 24       	jz	$+38     	;abs 0xadb8
    ad94:	0e 43       	clr	r14		;
    ad96:	0f 43       	clr	r15		;
    ad98:	0a 4e       	mov	r14,	r10	;
    ad9a:	0b 4f       	mov	r15,	r11	;
    ad9c:	0a 8c       	sub	r12,	r10	;
    ad9e:	0b 7d       	subc	r13,	r11	;
    ada0:	0c 4a       	mov	r10,	r12	;
    ada2:	0d 4b       	mov	r11,	r13	;
    ada4:	09 3c       	jmp	$+20     	;abs 0xadb8
    ada6:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    adaa:	0c 45       	mov	r5,	r12	;
    adac:	0d 46       	mov	r6,	r13	;
    adae:	87 12       	call	r7		;
    adb0:	f1 3f       	jmp	$-28     	;abs 0xad94
    adb2:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    adb6:	87 12       	call	r7		;
    adb8:	21 53       	incd	r1		;
    adba:	55 17       	popm	#6,	r10	;16-bit words
    adbc:	30 41       	ret			

0000adbe <__mspabi_divlu>:
    adbe:	21 83       	decd	r1		;
    adc0:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00
    adc4:	b0 12 cc ac 	call	#44236		;#0xaccc
    adc8:	21 53       	incd	r1		;
    adca:	30 41       	ret			

0000adcc <__mspabi_slli_15>:
    adcc:	0c 5c       	rla	r12		;

0000adce <__mspabi_slli_14>:
    adce:	0c 5c       	rla	r12		;

0000add0 <__mspabi_slli_13>:
    add0:	0c 5c       	rla	r12		;

0000add2 <__mspabi_slli_12>:
    add2:	0c 5c       	rla	r12		;

0000add4 <__mspabi_slli_11>:
    add4:	0c 5c       	rla	r12		;

0000add6 <__mspabi_slli_10>:
    add6:	0c 5c       	rla	r12		;

0000add8 <__mspabi_slli_9>:
    add8:	0c 5c       	rla	r12		;

0000adda <__mspabi_slli_8>:
    adda:	0c 5c       	rla	r12		;

0000addc <__mspabi_slli_7>:
    addc:	0c 5c       	rla	r12		;

0000adde <__mspabi_slli_6>:
    adde:	0c 5c       	rla	r12		;

0000ade0 <__mspabi_slli_5>:
    ade0:	0c 5c       	rla	r12		;

0000ade2 <__mspabi_slli_4>:
    ade2:	0c 5c       	rla	r12		;

0000ade4 <__mspabi_slli_3>:
    ade4:	0c 5c       	rla	r12		;

0000ade6 <__mspabi_slli_2>:
    ade6:	0c 5c       	rla	r12		;

0000ade8 <__mspabi_slli_1>:
    ade8:	0c 5c       	rla	r12		;
    adea:	30 41       	ret			
    adec:	3d 53       	add	#-1,	r13	;r3 As==11
    adee:	0c 5c       	rla	r12		;

0000adf0 <__mspabi_slli>:
    adf0:	0d 93       	cmp	#0,	r13	;r3 As==00
    adf2:	fc 23       	jnz	$-6      	;abs 0xadec
    adf4:	30 41       	ret			

0000adf6 <__mspabi_slll_15>:
    adf6:	0c 5c       	rla	r12		;
    adf8:	0d 6d       	rlc	r13		;

0000adfa <__mspabi_slll_14>:
    adfa:	0c 5c       	rla	r12		;
    adfc:	0d 6d       	rlc	r13		;

0000adfe <__mspabi_slll_13>:
    adfe:	0c 5c       	rla	r12		;
    ae00:	0d 6d       	rlc	r13		;

0000ae02 <__mspabi_slll_12>:
    ae02:	0c 5c       	rla	r12		;
    ae04:	0d 6d       	rlc	r13		;

0000ae06 <__mspabi_slll_11>:
    ae06:	0c 5c       	rla	r12		;
    ae08:	0d 6d       	rlc	r13		;

0000ae0a <__mspabi_slll_10>:
    ae0a:	0c 5c       	rla	r12		;
    ae0c:	0d 6d       	rlc	r13		;

0000ae0e <__mspabi_slll_9>:
    ae0e:	0c 5c       	rla	r12		;
    ae10:	0d 6d       	rlc	r13		;

0000ae12 <__mspabi_slll_8>:
    ae12:	0c 5c       	rla	r12		;
    ae14:	0d 6d       	rlc	r13		;

0000ae16 <__mspabi_slll_7>:
    ae16:	0c 5c       	rla	r12		;
    ae18:	0d 6d       	rlc	r13		;

0000ae1a <__mspabi_slll_6>:
    ae1a:	0c 5c       	rla	r12		;
    ae1c:	0d 6d       	rlc	r13		;

0000ae1e <__mspabi_slll_5>:
    ae1e:	0c 5c       	rla	r12		;
    ae20:	0d 6d       	rlc	r13		;

0000ae22 <__mspabi_slll_4>:
    ae22:	0c 5c       	rla	r12		;
    ae24:	0d 6d       	rlc	r13		;

0000ae26 <__mspabi_slll_3>:
    ae26:	0c 5c       	rla	r12		;
    ae28:	0d 6d       	rlc	r13		;

0000ae2a <__mspabi_slll_2>:
    ae2a:	0c 5c       	rla	r12		;
    ae2c:	0d 6d       	rlc	r13		;

0000ae2e <__mspabi_slll_1>:
    ae2e:	0c 5c       	rla	r12		;
    ae30:	0d 6d       	rlc	r13		;
    ae32:	30 41       	ret			
    ae34:	3e 53       	add	#-1,	r14	;r3 As==11
    ae36:	0c 5c       	rla	r12		;
    ae38:	0d 6d       	rlc	r13		;

0000ae3a <__mspabi_slll>:
    ae3a:	0e 93       	cmp	#0,	r14	;r3 As==00
    ae3c:	fb 23       	jnz	$-8      	;abs 0xae34
    ae3e:	30 41       	ret			

0000ae40 <__mspabi_srli_15>:
    ae40:	12 c3       	clrc			
    ae42:	0c 10       	rrc	r12		;

0000ae44 <__mspabi_srli_14>:
    ae44:	12 c3       	clrc			
    ae46:	0c 10       	rrc	r12		;

0000ae48 <__mspabi_srli_13>:
    ae48:	12 c3       	clrc			
    ae4a:	0c 10       	rrc	r12		;

0000ae4c <__mspabi_srli_12>:
    ae4c:	12 c3       	clrc			
    ae4e:	0c 10       	rrc	r12		;

0000ae50 <__mspabi_srli_11>:
    ae50:	12 c3       	clrc			
    ae52:	0c 10       	rrc	r12		;

0000ae54 <__mspabi_srli_10>:
    ae54:	12 c3       	clrc			
    ae56:	0c 10       	rrc	r12		;

0000ae58 <__mspabi_srli_9>:
    ae58:	12 c3       	clrc			
    ae5a:	0c 10       	rrc	r12		;

0000ae5c <__mspabi_srli_8>:
    ae5c:	12 c3       	clrc			
    ae5e:	0c 10       	rrc	r12		;

0000ae60 <__mspabi_srli_7>:
    ae60:	12 c3       	clrc			
    ae62:	0c 10       	rrc	r12		;

0000ae64 <__mspabi_srli_6>:
    ae64:	12 c3       	clrc			
    ae66:	0c 10       	rrc	r12		;

0000ae68 <__mspabi_srli_5>:
    ae68:	12 c3       	clrc			
    ae6a:	0c 10       	rrc	r12		;

0000ae6c <__mspabi_srli_4>:
    ae6c:	12 c3       	clrc			
    ae6e:	0c 10       	rrc	r12		;

0000ae70 <__mspabi_srli_3>:
    ae70:	12 c3       	clrc			
    ae72:	0c 10       	rrc	r12		;

0000ae74 <__mspabi_srli_2>:
    ae74:	12 c3       	clrc			
    ae76:	0c 10       	rrc	r12		;

0000ae78 <__mspabi_srli_1>:
    ae78:	12 c3       	clrc			
    ae7a:	0c 10       	rrc	r12		;
    ae7c:	30 41       	ret			
    ae7e:	3d 53       	add	#-1,	r13	;r3 As==11
    ae80:	12 c3       	clrc			
    ae82:	0c 10       	rrc	r12		;

0000ae84 <__mspabi_srli>:
    ae84:	0d 93       	cmp	#0,	r13	;r3 As==00
    ae86:	fb 23       	jnz	$-8      	;abs 0xae7e
    ae88:	30 41       	ret			

0000ae8a <__mspabi_srll_15>:
    ae8a:	12 c3       	clrc			
    ae8c:	0d 10       	rrc	r13		;
    ae8e:	0c 10       	rrc	r12		;

0000ae90 <__mspabi_srll_14>:
    ae90:	12 c3       	clrc			
    ae92:	0d 10       	rrc	r13		;
    ae94:	0c 10       	rrc	r12		;

0000ae96 <__mspabi_srll_13>:
    ae96:	12 c3       	clrc			
    ae98:	0d 10       	rrc	r13		;
    ae9a:	0c 10       	rrc	r12		;

0000ae9c <__mspabi_srll_12>:
    ae9c:	12 c3       	clrc			
    ae9e:	0d 10       	rrc	r13		;
    aea0:	0c 10       	rrc	r12		;

0000aea2 <__mspabi_srll_11>:
    aea2:	12 c3       	clrc			
    aea4:	0d 10       	rrc	r13		;
    aea6:	0c 10       	rrc	r12		;

0000aea8 <__mspabi_srll_10>:
    aea8:	12 c3       	clrc			
    aeaa:	0d 10       	rrc	r13		;
    aeac:	0c 10       	rrc	r12		;

0000aeae <__mspabi_srll_9>:
    aeae:	12 c3       	clrc			
    aeb0:	0d 10       	rrc	r13		;
    aeb2:	0c 10       	rrc	r12		;

0000aeb4 <__mspabi_srll_8>:
    aeb4:	12 c3       	clrc			
    aeb6:	0d 10       	rrc	r13		;
    aeb8:	0c 10       	rrc	r12		;

0000aeba <__mspabi_srll_7>:
    aeba:	12 c3       	clrc			
    aebc:	0d 10       	rrc	r13		;
    aebe:	0c 10       	rrc	r12		;

0000aec0 <__mspabi_srll_6>:
    aec0:	12 c3       	clrc			
    aec2:	0d 10       	rrc	r13		;
    aec4:	0c 10       	rrc	r12		;

0000aec6 <__mspabi_srll_5>:
    aec6:	12 c3       	clrc			
    aec8:	0d 10       	rrc	r13		;
    aeca:	0c 10       	rrc	r12		;

0000aecc <__mspabi_srll_4>:
    aecc:	12 c3       	clrc			
    aece:	0d 10       	rrc	r13		;
    aed0:	0c 10       	rrc	r12		;

0000aed2 <__mspabi_srll_3>:
    aed2:	12 c3       	clrc			
    aed4:	0d 10       	rrc	r13		;
    aed6:	0c 10       	rrc	r12		;

0000aed8 <__mspabi_srll_2>:
    aed8:	12 c3       	clrc			
    aeda:	0d 10       	rrc	r13		;
    aedc:	0c 10       	rrc	r12		;

0000aede <__mspabi_srll_1>:
    aede:	12 c3       	clrc			
    aee0:	0d 10       	rrc	r13		;
    aee2:	0c 10       	rrc	r12		;
    aee4:	30 41       	ret			
    aee6:	3e 53       	add	#-1,	r14	;r3 As==11
    aee8:	12 c3       	clrc			
    aeea:	0d 10       	rrc	r13		;
    aeec:	0c 10       	rrc	r12		;

0000aeee <__mspabi_srll>:
    aeee:	0e 93       	cmp	#0,	r14	;r3 As==00
    aef0:	fa 23       	jnz	$-10     	;abs 0xaee6
    aef2:	30 41       	ret			

0000aef4 <__mulhi2_f5>:
    aef4:	02 12       	push	r2		;
    aef6:	32 c2       	dint			
    aef8:	03 43       	nop			
    aefa:	82 4c c0 04 	mov	r12,	&0x04c0	;
    aefe:	82 4d c8 04 	mov	r13,	&0x04c8	;
    af02:	1c 42 ca 04 	mov	&0x04ca,r12	;0x04ca
    af06:	00 13       	reti			

0000af08 <__mulsi2_f5>:
    af08:	02 12       	push	r2		;
    af0a:	32 c2       	dint			
    af0c:	03 43       	nop			
    af0e:	82 4c d0 04 	mov	r12,	&0x04d0	;
    af12:	82 4d d2 04 	mov	r13,	&0x04d2	;
    af16:	82 4e e0 04 	mov	r14,	&0x04e0	;
    af1a:	82 4f e2 04 	mov	r15,	&0x04e2	;
    af1e:	1c 42 e4 04 	mov	&0x04e4,r12	;0x04e4
    af22:	1d 42 e6 04 	mov	&0x04e6,r13	;0x04e6
    af26:	00 13       	reti			

0000af28 <memset>:
    af28:	0f 4c       	mov	r12,	r15	;
    af2a:	0e 5c       	add	r12,	r14	;
    af2c:	0f 9e       	cmp	r14,	r15	;
    af2e:	04 24       	jz	$+10     	;abs 0xaf38
    af30:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    af34:	1f 53       	inc	r15		;
    af36:	fa 3f       	jmp	$-10     	;abs 0xaf2c
    af38:	30 41       	ret			

0000af3a <memmove>:
    af3a:	0a 15       	pushm	#1,	r10	;16-bit words
    af3c:	0d 9c       	cmp	r12,	r13	;
    af3e:	10 2c       	jc	$+34     	;abs 0xaf60
    af40:	0b 4d       	mov	r13,	r11	;
    af42:	0b 5e       	add	r14,	r11	;
    af44:	0c 9b       	cmp	r11,	r12	;
    af46:	0c 2c       	jc	$+26     	;abs 0xaf60
    af48:	0d 4e       	mov	r14,	r13	;
    af4a:	3d 53       	add	#-1,	r13	;r3 As==11
    af4c:	3d 93       	cmp	#-1,	r13	;r3 As==11
    af4e:	13 24       	jz	$+40     	;abs 0xaf76
    af50:	0f 4d       	mov	r13,	r15	;
    af52:	0f 8e       	sub	r14,	r15	;
    af54:	0f 5b       	add	r11,	r15	;
    af56:	0a 4c       	mov	r12,	r10	;
    af58:	0a 5d       	add	r13,	r10	;
    af5a:	ea 4f 00 00 	mov.b	@r15,	0(r10)	;
    af5e:	f5 3f       	jmp	$-20     	;abs 0xaf4a
    af60:	0f 43       	clr	r15		;
    af62:	0f 9e       	cmp	r14,	r15	;
    af64:	08 24       	jz	$+18     	;abs 0xaf76
    af66:	0a 4d       	mov	r13,	r10	;
    af68:	0a 5f       	add	r15,	r10	;
    af6a:	0b 4c       	mov	r12,	r11	;
    af6c:	0b 5f       	add	r15,	r11	;
    af6e:	eb 4a 00 00 	mov.b	@r10,	0(r11)	;
    af72:	1f 53       	inc	r15		;
    af74:	f6 3f       	jmp	$-18     	;abs 0xaf62
    af76:	0a 17       	popm	#1,	r10	;16-bit words
    af78:	30 41       	ret			

0000af7a <__do_global_ctors_aux>:
    af7a:	0a 15       	pushm	#1,	r10	;16-bit words
    af7c:	1c 42 18 82 	mov	&0x8218,r12	;0x8218
    af80:	3c 93       	cmp	#-1,	r12	;r3 As==11
    af82:	08 24       	jz	$+18     	;abs 0xaf94
    af84:	3a 40 18 82 	mov	#33304,	r10	;#0x8218
    af88:	8c 12       	call	r12		;
    af8a:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    af8e:	2c 4a       	mov	@r10,	r12	;
    af90:	3c 93       	cmp	#-1,	r12	;r3 As==11
    af92:	fa 23       	jnz	$-10     	;abs 0xaf88
    af94:	0a 17       	popm	#1,	r10	;16-bit words
    af96:	30 41       	ret			

0000af98 <call___do_global_ctors_aux>:
    af98:	30 41       	ret			

0000af9a <__msp430_init>:
    af9a:	b0 12 1c 83 	call	#33564		;#0x831c
    af9e:	b0 12 7a af 	call	#44922		;#0xaf7a
    afa2:	b0 12 5c 82 	call	#33372		;#0x825c
    afa6:	b0 12 50 82 	call	#33360		;#0x8250
    afaa:	30 41       	ret			

0000afac <__msp430_fini>:
    afac:	b0 12 68 82 	call	#33384		;#0x8268
    afb0:	b0 12 ce 82 	call	#33486		;#0x82ce
    afb4:	30 41       	ret			
